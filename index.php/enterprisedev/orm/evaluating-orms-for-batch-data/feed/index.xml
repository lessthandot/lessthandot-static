<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Evaluating ORMs for Batch Data Performance</title>
	<atom:link href="/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5386</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Tue, 17 Jul 2012 21:25:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5386</guid>
		<description><![CDATA[kermit: it&#039;s on github and VS 2012 RC and SQL Express are both free, let me know when you have it added in ;)&lt;br /&gt;
&lt;br /&gt;
I&#039;m currently integrating in Simple.Data, PetaPoco, and NHibernate. Have some assertions failing that I have to knock out. If I manage to get all of those working i may take a look at OpenAccess next, will depend (have a couple other things cooking too and something I started and need to return too soon).]]></description>
		<content:encoded><![CDATA[<p>kermit: it&#8217;s on github and VS 2012 RC and SQL Express are both free, let me know when you have it added in ðŸ˜‰</p>
<p>I&#8217;m currently integrating in Simple.Data, PetaPoco, and NHibernate. Have some assertions failing that I have to knock out. If I manage to get all of those working i may take a look at OpenAccess next, will depend (have a couple other things cooking too and something I started and need to return too soon).</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Tahir Khalid</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5385</link>
		<dc:creator><![CDATA[Tahir Khalid]]></dc:creator>
		<pubDate>Sun, 15 Jul 2012 00:34:45 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5385</guid>
		<description><![CDATA[Checkout OpenAccess ORM by Telerik, not biased because I am using it now :D&lt;br /&gt;
&lt;br /&gt;
http://www.telerik.com/products/orm.aspx&lt;br /&gt;
&lt;br /&gt;
Using ADO.NET does affect it&#039;s performance, I still believe there are uses for it and something I intend to share with the good folks of LTD soon is a (very) light weight framework built around providers, data connectors and factories working on domain entities...]]></description>
		<content:encoded><![CDATA[<p>Checkout OpenAccess ORM by Telerik, not biased because I am using it now ðŸ˜€</p>
<p><a href="http://www.telerik.com/products/orm.aspx" rel="nofollow">http://www.telerik.com/products/orm.aspx</a></p>
<p>Using ADO.NET does affect it&#8217;s performance, I still believe there are uses for it and something I intend to share with the good folks of LTD soon is a (very) light weight framework built around providers, data connectors and factories working on domain entities&#8230;</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5384</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Fri, 13 Jul 2012 20:56:43 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5384</guid>
		<description><![CDATA[Shane: &lt;br /&gt;
I can&#039;t really speak to the implementation details of those tests, Luke did the hard work on them and I just reused his code (I haven&#039;t done anything serious with EF since v1). If you are familiar with EF, the relevant code is here: &lt;a href=&quot;https://github.com/lukemcgregor/StaticVoid.OrmPerformance/blob/master/Harness.EntityFramework4-1/TunedConfiguration.cs&quot;&gt;Harness.EntityFramework4-1/TunedConfiguration.cs on github&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
In the setup he has turned off the options for AutoDetect changes, lazy loading, proxy creation, and validate on save. Several of the individual tests show the performance of turning off one of these at a time, the tuned option has all of them. The biggest performance delta seems to be change detection, so if you&#039;re interested I would definitely suggest reading his in-depth post on EF + AutoDetectChanges here: &lt;a href=&quot;http://blog.staticvoid.co.nz/2012/05/entityframework-performance-and.html&quot; title=&quot;Luke&#039;s post on EF and Autodetect change performance&quot;&gt;EntityFramework Performance and AutoDetectChanges&lt;/a&gt;]]></description>
		<content:encoded><![CDATA[<p>Shane: <br />
I can&#8217;t really speak to the implementation details of those tests, Luke did the hard work on them and I just reused his code (I haven&#8217;t done anything serious with EF since v1). If you are familiar with EF, the relevant code is here: <a href="https://github.com/lukemcgregor/StaticVoid.OrmPerformance/blob/master/Harness.EntityFramework4-1/TunedConfiguration.cs">Harness.EntityFramework4-1/TunedConfiguration.cs on github</a></p>
<p>In the setup he has turned off the options for AutoDetect changes, lazy loading, proxy creation, and validate on save. Several of the individual tests show the performance of turning off one of these at a time, the tuned option has all of them. The biggest performance delta seems to be change detection, so if you&#8217;re interested I would definitely suggest reading his in-depth post on EF + AutoDetectChanges here: <a href="http://blog.staticvoid.co.nz/2012/05/entityframework-performance-and.html" title="Luke's post on EF and Autodetect change performance">EntityFramework Performance and AutoDetectChanges</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Shane</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5383</link>
		<dc:creator><![CDATA[Shane]]></dc:creator>
		<pubDate>Fri, 13 Jul 2012 18:02:24 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5383</guid>
		<description><![CDATA[What do you mean by EF-Tuned?  Did you do something manually to tune it?  If so what things did you do?]]></description>
		<content:encoded><![CDATA[<p>What do you mean by EF-Tuned?  Did you do something manually to tune it?  If so what things did you do?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5382</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Wed, 11 Jul 2012 10:38:01 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5382</guid>
		<description><![CDATA[Moses: I was thinking about that this morning myself, since it looks like I&#039;ll be either adding Simple.Data or conning Chrissie into writing some C# somehow (which means I&#039;ll probably be writing it). Alex offered to do the nHibernate tests when I first started playing with Luke&#039;s project, so I may circle back around and see if he is still willing. I personally have 0 experience with nHibernate, so wouldn&#039;t be a good candidate for writing even basic tests with it.]]></description>
		<content:encoded><![CDATA[<p>Moses: I was thinking about that this morning myself, since it looks like I&#8217;ll be either adding Simple.Data or conning Chrissie into writing some C# somehow (which means I&#8217;ll probably be writing it). Alex offered to do the nHibernate tests when I first started playing with Luke&#8217;s project, so I may circle back around and see if he is still willing. I personally have 0 experience with nHibernate, so wouldn&#8217;t be a good candidate for writing even basic tests with it.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Moses</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5381</link>
		<dc:creator><![CDATA[Moses]]></dc:creator>
		<pubDate>Wed, 11 Jul 2012 09:56:14 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5381</guid>
		<description><![CDATA[It would be interesting to see how nHibernate compares to the above.]]></description>
		<content:encoded><![CDATA[<p>It would be interesting to see how nHibernate compares to the above.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5380</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Wed, 11 Jul 2012 08:53:53 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5380</guid>
		<description><![CDATA[Mark: Oddly enough I had considered adding it after Chrissie and I went back and forth with Simple.Data and PetaPoco a couple months ago. I added PetaPoco and was getting ready to add Simple.Data, but thought I had enough examples (I used results prior to adding PetaPoco for tis chart). Knowing Simple.Data uses SqlBulkCopy I think I have to find some time to go back now and include it, I&#039;ll try to do an additional follow-up with that method.]]></description>
		<content:encoded><![CDATA[<p>Mark: Oddly enough I had considered adding it after Chrissie and I went back and forth with Simple.Data and PetaPoco a couple months ago. I added PetaPoco and was getting ready to add Simple.Data, but thought I had enough examples (I used results prior to adding PetaPoco for tis chart). Knowing Simple.Data uses SqlBulkCopy I think I have to find some time to go back now and include it, I&#8217;ll try to do an additional follow-up with that method.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mark Rendle</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5379</link>
		<dc:creator><![CDATA[Mark Rendle]]></dc:creator>
		<pubDate>Wed, 11 Jul 2012 08:41:28 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5379</guid>
		<description><![CDATA[Hi Eli,&lt;br /&gt;
&lt;br /&gt;
You might want to take a look at Simple.Data, which provides ORM-like syntax but is intelligent about batch operations and will actually use SqlBulkCopy behind the scenes when running against SQL Server.&lt;br /&gt;
&lt;br /&gt;
http://github.com/markrendle/Simple.Data]]></description>
		<content:encoded><![CDATA[<p>Hi Eli,</p>
<p>You might want to take a look at Simple.Data, which provides ORM-like syntax but is intelligent about batch operations and will actually use SqlBulkCopy behind the scenes when running against SQL Server.</p>
<p><a href="http://github.com/markrendle/Simple.Data" rel="nofollow">http://github.com/markrendle/Simple.Data</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5378</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Wed, 11 Jul 2012 08:28:56 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5378</guid>
		<description><![CDATA[Tudor: I have to disagree. I would take hard data over an assumption or an &quot;everyone knows&quot; situation any time. The fact that these tests do show that the ORM methods are slower than 1 of the 3 methods for batching data in directly via ADO.Net may back up the hypothesis I had going in, but that doesn&#039;t make the tests a waste of time or effort. &lt;br /&gt;
&lt;br /&gt;
Your point about using a Stored Procedure or ADO.Net is incorrect. The SqlCommand results displayed above are SqlBulkCopy, the charts show only the best entry from each category. The SqlAdapter Insert and basic SqlCommand insert method were about the same speed as many of the tuned ORM methods. SqlCommand in a transaction was a good bit faster, but Dapper matched it. I&#039;ll add a graph with these details shortly.]]></description>
		<content:encoded><![CDATA[<p>Tudor: I have to disagree. I would take hard data over an assumption or an &#8220;everyone knows&#8221; situation any time. The fact that these tests do show that the ORM methods are slower than 1 of the 3 methods for batching data in directly via ADO.Net may back up the hypothesis I had going in, but that doesn&#8217;t make the tests a waste of time or effort. </p>
<p>Your point about using a Stored Procedure or ADO.Net is incorrect. The SqlCommand results displayed above are SqlBulkCopy, the charts show only the best entry from each category. The SqlAdapter Insert and basic SqlCommand insert method were about the same speed as many of the tuned ORM methods. SqlCommand in a transaction was a good bit faster, but Dapper matched it. I&#8217;ll add a graph with these details shortly.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Tudor</title>
		<link>/index.php/enterprisedev/orm/evaluating-orms-for-batch-data/#comment-5377</link>
		<dc:creator><![CDATA[Tudor]]></dc:creator>
		<pubDate>Wed, 11 Jul 2012 07:38:16 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/07/evaluating-orms-for-batch-data/#comment-5377</guid>
		<description><![CDATA[I would say that such a test is not so relevant - most O/RMs were not designed for batch operations with large sets of data - for such cases it&#039;s much better to do a custom implementation that uses stored procedures or ADO.NET..&lt;br /&gt;
Batch operations is the classical example when an O/RM is not the appropriate tool, so any perf tests are useless.]]></description>
		<content:encoded><![CDATA[<p>I would say that such a test is not so relevant &#8211; most O/RMs were not designed for batch operations with large sets of data &#8211; for such cases it&#8217;s much better to do a custom implementation that uses stored procedures or ADO.NET..<br />
Batch operations is the classical example when an O/RM is not the appropriate tool, so any perf tests are useless.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
