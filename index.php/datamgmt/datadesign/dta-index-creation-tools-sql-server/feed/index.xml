<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Trusting Database Engine Tuning Advisor for Query Tuning</title>
	<atom:link href="/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: yoelhalb</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2738</link>
		<dc:creator><![CDATA[yoelhalb]]></dc:creator>
		<pubDate>Thu, 24 Nov 2011 16:17:16 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2738</guid>
		<description><![CDATA[There are many and many benefits of having an index on WO_ID column, something that you can check yourself by creating the index and comparing the IO and time statistics as well as the CPU and IO cost.&lt;br /&gt;
Farther more SQL Server will most of the time use a nonclustered index not just if the WO_ID column s the first or any column in the index but also if it is the second column! sometimes even when there is a nonclustered index with WO_ID as its primary column.&lt;br /&gt;
This also has major implications, consider a query &quot;SELECP TOP 1 WO_ID FROM WHDR&quot; while one might expect that it will return the actual first entry, it is not the case because it might turn out to use an index which WO_ID is the secondary column (based on the internal cost staistics), and to get correct results one must add &quot;ORDER BY WO_ID&quot; or use an index hint to force the desired index.]]></description>
		<content:encoded><![CDATA[<p>There are many and many benefits of having an index on WO_ID column, something that you can check yourself by creating the index and comparing the IO and time statistics as well as the CPU and IO cost.<br />
Farther more SQL Server will most of the time use a nonclustered index not just if the WO_ID column s the first or any column in the index but also if it is the second column! sometimes even when there is a nonclustered index with WO_ID as its primary column.<br />
This also has major implications, consider a query &#8220;SELECP TOP 1 WO_ID FROM WHDR&#8221; while one might expect that it will return the actual first entry, it is not the case because it might turn out to use an index which WO_ID is the secondary column (based on the internal cost staistics), and to get correct results one must add &#8220;ORDER BY WO_ID&#8221; or use an index hint to force the desired index.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Roofing Cincinnati</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2740</link>
		<dc:creator><![CDATA[Roofing Cincinnati]]></dc:creator>
		<pubDate>Thu, 02 Dec 2010 05:23:41 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2740</guid>
		<description><![CDATA[An informative article keep it up!]]></description>
		<content:encoded><![CDATA[<p>An informative article keep it up!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Ted Krueger (onpnt)</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2739</link>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
		<pubDate>Sat, 15 May 2010 23:59:01 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2739</guid>
		<description><![CDATA[Thanks for the comments everyone.  Good stuff!  &lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Thanks for the comments everyone.  Good stuff!  </p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Kevin Boles</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2737</link>
		<dc:creator><![CDATA[Kevin Boles]]></dc:creator>
		<pubDate>Sat, 15 May 2010 11:30:57 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2737</guid>
		<description><![CDATA[As an independent consultant I have made a LOT of money over the past 5 years cleaning up the messes that clients have created for themselves by using the DTA to perform their indexing strategy.  It is truly HORRID in sooo many ways.  I do appreciate the fact that it is out there and provides me with lots of work though!]]></description>
		<content:encoded><![CDATA[<p>As an independent consultant I have made a LOT of money over the past 5 years cleaning up the messes that clients have created for themselves by using the DTA to perform their indexing strategy.  It is truly HORRID in sooo many ways.  I do appreciate the fact that it is out there and provides me with lots of work though!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Paul White NZ</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2736</link>
		<dc:creator><![CDATA[Paul White NZ]]></dc:creator>
		<pubDate>Sat, 15 May 2010 08:39:04 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2736</guid>
		<description><![CDATA[Hey Ted,&lt;br /&gt;
&lt;br /&gt;
I agree with niikola.  The DTA appears to be correctly considering the density of the index when making its recommendation (the clustered index is the least dense index possible).&lt;br /&gt;
&lt;br /&gt;
See &lt;a href=&quot;http://www.sqlservercentral.com/articles/paging/69892/&quot;&gt;this link&lt;/a&gt; for an example, and an analysis of the performance implications.&lt;br /&gt;
&lt;br /&gt;
Paul]]></description>
		<content:encoded><![CDATA[<p>Hey Ted,</p>
<p>I agree with niikola.  The DTA appears to be correctly considering the density of the index when making its recommendation (the clustered index is the least dense index possible).</p>
<p>See <a href="http://www.sqlservercentral.com/articles/paging/69892/">this link</a> for an example, and an analysis of the performance implications.</p>
<p>Paul</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: niikola</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2735</link>
		<dc:creator><![CDATA[niikola]]></dc:creator>
		<pubDate>Thu, 13 May 2010 15:19:55 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2735</guid>
		<description><![CDATA[There are queries that could benefit from additional index, same as clustered one.&lt;br /&gt;
&lt;br /&gt;
Simplest one would be Select WO_ID from WHDR or Select WO_ID from WHDR where WO_ID between @p1 and @p2&lt;br /&gt;
&lt;br /&gt;
In most cases you don&#039;t need something like that, except if you have really a lot of those queries and your row size is much bigger than WO_ID size.]]></description>
		<content:encoded><![CDATA[<p>There are queries that could benefit from additional index, same as clustered one.</p>
<p>Simplest one would be Select WO_ID from WHDR or Select WO_ID from WHDR where WO_ID between @p1 and @p2</p>
<p>In most cases you don&#8217;t need something like that, except if you have really a lot of those queries and your row size is much bigger than WO_ID size.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/datadesign/dta-index-creation-tools-sql-server/#comment-2741</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Tue, 11 May 2010 14:03:11 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/05/dta-index-creation-tools-sql-server/#comment-2741</guid>
		<description><![CDATA[You know what...I have never use DTA and I believe I have used the Index Tuning Wizard in SQL Server 2000 only once or twice. Maybe it is because I am a developer and I know when looking at a query what I should have in terms of indexes.&lt;br /&gt;
&lt;br /&gt;
The Dynamic Management Views are also a great help to discover unused indexes...because you know sometimes people get &#039;creative&#039; and &#039;excited&#039; when adding indexes, they see the performance improvement when adding an index on a column and then think if one index is good then many must be better. So before you know if you have more indexes than columns  :-)]]></description>
		<content:encoded><![CDATA[<p>You know what&#8230;I have never use DTA and I believe I have used the Index Tuning Wizard in SQL Server 2000 only once or twice. Maybe it is because I am a developer and I know when looking at a query what I should have in terms of indexes.</p>
<p>The Dynamic Management Views are also a great help to discover unused indexes&#8230;because you know sometimes people get &#8216;creative&#8217; and &#8216;excited&#8217; when adding indexes, they see the performance improvement when adding an index on a column and then think if one index is good then many must be better. So before you know if you have more indexes than columns  ðŸ™‚</p>
]]></content:encoded>
	</item>
</channel>
</rss>
