<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Shrink log in all your user databases</title>
	<atom:link href="/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1566</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 05 May 2010 13:45:02 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1566</guid>
		<description><![CDATA[Duncan,&lt;br /&gt;
&lt;br /&gt;
Thanks a lot for your comment - very valid points. I&#039;m also thinking, that using undocumented stored procedure could have been a wrong idea to begin with.&lt;br /&gt;
&lt;br /&gt;
Take a look here for a similar problem of looping through all databases&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/414973eb-a84b-40c4-8a21-919d92947ed0/#4c9c3420-495c-4e0f-ad94-6fbb4b7c44fb&quot;&gt;Relevant MSDN thread&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
Please take a look at last comment by Adam Haines in the mentioned thread - very important!]]></description>
		<content:encoded><![CDATA[<p>Duncan,</p>
<p>Thanks a lot for your comment &#8211; very valid points. I&#8217;m also thinking, that using undocumented stored procedure could have been a wrong idea to begin with.</p>
<p>Take a look here for a similar problem of looping through all databases</p>
<p><a href="http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/414973eb-a84b-40c4-8a21-919d92947ed0/#4c9c3420-495c-4e0f-ad94-6fbb4b7c44fb">Relevant MSDN thread</a></p>
<p>Please take a look at last comment by Adam Haines in the mentioned thread &#8211; very important!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Duncan Dubick</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1565</link>
		<dc:creator><![CDATA[Duncan Dubick]]></dc:creator>
		<pubDate>Wed, 05 May 2010 13:33:42 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1565</guid>
		<description><![CDATA[I needed a script like this and came across this one.  Had to modify it a bit since the first script listed is shrinking file_id 1 (which is the primary data file).  I changed this so it is looking at the type field (=1) in master.sys.databases. Also, this script doesn&#039;t check to see if the database was in simple recovery model to start with!  Changed all of my simple databases to Full.  Lastly, the &#039;tempdb error&#039; is caused by sql validating the generated code for each iteration.  Since you can&#039;t change the recovery model on tempdb it is spitting out the message.  I hid those lines in exec statements.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
sp_MSForEachDb &#039;IF &#039;&#039;?&#039;&#039; NOT IN (&#039;&#039;master&#039;&#039;, &#039;&#039;tempdb&#039;&#039;, &#039;&#039;tempdev&#039;&#039;, &#039;&#039;model&#039;&#039;, &#039;&#039;msdb&#039;&#039;)&lt;br /&gt;
					AND (SELECT recovery_model FROM master.sys.databases WHERE name = &#039;&#039;?&#039;&#039;) = 1&lt;br /&gt;
					AND (SELECT is_read_only FROM master.sys.databases WHERE name = &#039;&#039;?&#039;&#039;) = 0&lt;br /&gt;
                BEGIN&lt;br /&gt;
                    declare @LogFile nvarchar(2000)&lt;br /&gt;
                    USE [?]&lt;br /&gt;
                    SELECT @LogFile = sys.database_files.name&lt;br /&gt;
                           FROM sys.database_files&lt;br /&gt;
                    WHERE (sys.database_files.type = 1)&lt;br /&gt;
                    PRINT @LogFile&lt;br /&gt;
                    EXEC(&#039;&#039;ALTER DATABASE [?] SET RECOVERY SIMPLE&#039;&#039;)&lt;br /&gt;
                    DBCC SHRINKFILE (@LogFile, 1)&lt;br /&gt;
                    EXEC(&#039;&#039;ALTER DATABASE [?] SET RECOVERY FULL&#039;&#039;)&lt;br /&gt;
                END&#039;]]></description>
		<content:encoded><![CDATA[<p>I needed a script like this and came across this one.  Had to modify it a bit since the first script listed is shrinking file_id 1 (which is the primary data file).  I changed this so it is looking at the type field (=1) in master.sys.databases. Also, this script doesn&#8217;t check to see if the database was in simple recovery model to start with!  Changed all of my simple databases to Full.  Lastly, the &#8216;tempdb error&#8217; is caused by sql validating the generated code for each iteration.  Since you can&#8217;t change the recovery model on tempdb it is spitting out the message.  I hid those lines in exec statements.</p>
<p>
sp_MSForEachDb &#8216;IF &#8221;?&#8221; NOT IN (&#8221;master&#8221;, &#8221;tempdb&#8221;, &#8221;tempdev&#8221;, &#8221;model&#8221;, &#8221;msdb&#8221;)<br />
					AND (SELECT recovery_model FROM master.sys.databases WHERE name = &#8221;?&#8221;) = 1<br />
					AND (SELECT is_read_only FROM master.sys.databases WHERE name = &#8221;?&#8221;) = 0<br />
                BEGIN<br />
                    declare @LogFile nvarchar(2000)<br />
                    USE [?]<br />
                    SELECT @LogFile = sys.database_files.name<br />
                           FROM sys.database_files<br />
                    WHERE (sys.database_files.type = 1)<br />
                    PRINT @LogFile<br />
                    EXEC(&#8221;ALTER DATABASE [?] SET RECOVERY SIMPLE&#8221;)<br />
                    DBCC SHRINKFILE (@LogFile, 1)<br />
                    EXEC(&#8221;ALTER DATABASE [?] SET RECOVERY FULL&#8221;)<br />
                END&#8217;</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: The Review Site</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1564</link>
		<dc:creator><![CDATA[The Review Site]]></dc:creator>
		<pubDate>Thu, 12 Nov 2009 10:52:40 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1564</guid>
		<description><![CDATA[Good post congratulations.]]></description>
		<content:encoded><![CDATA[<p>Good post congratulations.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Ted Krueger (onpnt)</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1563</link>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
		<pubDate>Mon, 13 Jul 2009 23:21:41 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1563</guid>
		<description><![CDATA[On the blog, the procedure has some concerns with it. Not really the procedure but the concept of what it is doing is a problem.  Setting the recovery to simple really doesn&#039;t solve the problem at hand.  Log backups and proper log maintenance will.  The largest problem that is faced in doing the steps of altering the recovery mode however, is the state you put the db in.  Basically you are putting yourself in a critical state that you cannot recover from and could very well lose your db if this goes bad.  I would recommend not going in this route and treating every log (single or groups) for each db uniquely and set the growth and size depending on the type and level of transactions coming into the db.  given some time you can keep logs well in check and not a problem that you come back from vacations to :-)]]></description>
		<content:encoded><![CDATA[<p>On the blog, the procedure has some concerns with it. Not really the procedure but the concept of what it is doing is a problem.  Setting the recovery to simple really doesn&#8217;t solve the problem at hand.  Log backups and proper log maintenance will.  The largest problem that is faced in doing the steps of altering the recovery mode however, is the state you put the db in.  Basically you are putting yourself in a critical state that you cannot recover from and could very well lose your db if this goes bad.  I would recommend not going in this route and treating every log (single or groups) for each db uniquely and set the growth and size depending on the type and level of transactions coming into the db.  given some time you can keep logs well in check and not a problem that you come back from vacations to ðŸ™‚</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Ted Krueger (onpnt)</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1562</link>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
		<pubDate>Mon, 13 Jul 2009 23:15:49 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1562</guid>
		<description><![CDATA[shrinkfile still causes fragmentation on disk and countless shrinkfiles can become an issue.  It is of course the best course if you have a file growth issue and you need to do something about it.  I thought of throwing a party when I saw truncate removed in 2008.  ;-)  Just last week I had to do a shrinkfile on a log that went out there due to a index maintenance and backup issue that made the log go to around 70GB.  It&#039;s not really a problem but did cause a problem with my mirror and it was a mistake on my part and should have been avoided.  &lt;br /&gt;
&lt;br /&gt;
I highly recommend reading a few things and concerns on anything that goes with shrink though so understand what you really are doing to things and performance.  &lt;br /&gt;
&lt;br /&gt;
8 Steps to better Transaction Log throughput&lt;br /&gt;
&lt;a href=&quot;http://www.sqlskills.com/blogs/kimberly/post/8-Steps-to-better-Transaction-Log-throughput.aspx&quot;&gt;http://www.sqlskills.com/blogs/kimberly/post/8-Steps-to-better-Transaction-Log-throughput.aspx&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
Transaction Log VLFs - too many or too few?&lt;br /&gt;
&lt;a href=&quot;http://www.sqlskills.com/BLOGS/KIMBERLY/post/Transaction-Log-VLFs-too-many-or-too-few.aspx&quot;&gt;http://www.sqlskills.com/BLOGS/KIMBERLY/post/Transaction-Log-VLFs-too-many-or-too-few.aspx&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>shrinkfile still causes fragmentation on disk and countless shrinkfiles can become an issue.  It is of course the best course if you have a file growth issue and you need to do something about it.  I thought of throwing a party when I saw truncate removed in 2008.  ðŸ˜‰  Just last week I had to do a shrinkfile on a log that went out there due to a index maintenance and backup issue that made the log go to around 70GB.  It&#8217;s not really a problem but did cause a problem with my mirror and it was a mistake on my part and should have been avoided.  </p>
<p>I highly recommend reading a few things and concerns on anything that goes with shrink though so understand what you really are doing to things and performance.  </p>
<p>8 Steps to better Transaction Log throughput<br />
<a href="http://www.sqlskills.com/blogs/kimberly/post/8-Steps-to-better-Transaction-Log-throughput.aspx">http://www.sqlskills.com/blogs/kimberly/post/8-Steps-to-better-Transaction-Log-throughput.aspx</a></p>
<p>Transaction Log VLFs &#8211; too many or too few?<br />
<a href="http://www.sqlskills.com/BLOGS/KIMBERLY/post/Transaction-Log-VLFs-too-many-or-too-few.aspx">http://www.sqlskills.com/BLOGS/KIMBERLY/post/Transaction-Log-VLFs-too-many-or-too-few.aspx</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1561</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Sun, 12 Jul 2009 10:39:25 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1561</guid>
		<description><![CDATA[I believe onpnt said that Shrinkfile is OK. :)&lt;br /&gt;
&lt;br /&gt;
Thanks for the feedback.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;
BTW, I changed the blog&#039;s title now.]]></description>
		<content:encoded><![CDATA[<p>I believe onpnt said that Shrinkfile is OK. ðŸ™‚</p>
<p>Thanks for the feedback.</p>
<p>BTW, I changed the blog&#8217;s title now.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/datadesign/truncate-log-in-all-your-user-databases/#comment-1560</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Sun, 12 Jul 2009 08:33:13 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/truncate-log-in-all-your-user-databases/#comment-1560</guid>
		<description><![CDATA[Can&#039;t wait for onpnt&#039;s reply  :-)&lt;br /&gt;
&lt;br /&gt;
I understand this is what someone asked for but you should NOT shrink your files&lt;br /&gt;
&lt;br /&gt;
onpnt explains why here: &lt;a href=&quot;/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-truncate-your-ldf-files&quot;&gt;http:///index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-truncate-your-ldf-files&lt;/a&gt;]]></description>
		<content:encoded><![CDATA[<p>Can&#8217;t wait for onpnt&#8217;s reply  ðŸ™‚</p>
<p>I understand this is what someone asked for but you should NOT shrink your files</p>
<p>onpnt explains why here: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-truncate-your-ldf-files">/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-truncate-your-ldf-files</a></p>
]]></content:encoded>
	</item>
</channel>
</rss>
