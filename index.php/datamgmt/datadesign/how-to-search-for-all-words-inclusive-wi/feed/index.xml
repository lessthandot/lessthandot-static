<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: How to search for all words inclusive without using Full Text search</title>
	<atom:link href="/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Ansary</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1523</link>
		<dc:creator><![CDATA[Ansary]]></dc:creator>
		<pubDate>Fri, 22 Feb 2013 03:20:40 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1523</guid>
		<description><![CDATA[Very  good solution pals..happy coding.]]></description>
		<content:encoded><![CDATA[<p>Very  good solution pals..happy coding.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Venkatesh</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1543</link>
		<dc:creator><![CDATA[Venkatesh]]></dc:creator>
		<pubDate>Mon, 19 Dec 2011 09:08:43 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1543</guid>
		<description><![CDATA[You provide very good solution....I am a great fan of your solutions...thank you for all the contributions you make.]]></description>
		<content:encoded><![CDATA[<p>You provide very good solution&#8230;.I am a great fan of your solutions&#8230;thank you for all the contributions you make.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Sheree</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1535</link>
		<dc:creator><![CDATA[Sheree]]></dc:creator>
		<pubDate>Wed, 26 May 2010 11:51:29 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1535</guid>
		<description><![CDATA[Thank for the info, i visit daily actually mainly for articles like this.  Thank again]]></description>
		<content:encoded><![CDATA[<p>Thank for the info, i visit daily actually mainly for articles like this.  Thank again</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1547</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Fri, 19 Mar 2010 17:42:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1547</guid>
		<description><![CDATA[If your requirement is just to get the records containing the keywords and you have the keywords as a table, then you can use this query&lt;br /&gt;
&lt;br /&gt;
select T.* from myTable T INNER JOIN KeyWords W on &#039; &#039; + T.Phrase + &#039; &#039; like &#039;% &#039; + KeyWord + &#039; %&#039;&lt;br /&gt;
&lt;br /&gt;
The only problem is that this is not optimized solution. If your phrases are not very long and you know the maximum number of words they can contain, then you can also try to use CROSS APPLY idea to split the phrases into words as shown here&lt;br /&gt;
&lt;br /&gt;
http://bradsruminations.blogspot.com/2009/07/cool-cross-apply-tricks-part-2.html]]></description>
		<content:encoded><![CDATA[<p>If your requirement is just to get the records containing the keywords and you have the keywords as a table, then you can use this query</p>
<p>select T.* from myTable T INNER JOIN KeyWords W on &#8216; &#8216; + T.Phrase + &#8216; &#8216; like &#8216;% &#8216; + KeyWord + &#8216; %&#8217;</p>
<p>The only problem is that this is not optimized solution. If your phrases are not very long and you know the maximum number of words they can contain, then you can also try to use CROSS APPLY idea to split the phrases into words as shown here</p>
<p><a href="http://bradsruminations.blogspot.com/2009/07/cool-cross-apply-tricks-part-2.html" rel="nofollow">http://bradsruminations.blogspot.com/2009/07/cool-cross-apply-tricks-part-2.html</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Jason Rosensweig</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1546</link>
		<dc:creator><![CDATA[Jason Rosensweig]]></dc:creator>
		<pubDate>Fri, 19 Mar 2010 16:42:53 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1546</guid>
		<description><![CDATA[Love the article. I was wondering if you could guide me in implementing something similar, but without the requirement to match all keywords. I need a query that will take a list of keywords and return results that contain one or more of those keywords. Thanks.]]></description>
		<content:encoded><![CDATA[<p>Love the article. I was wondering if you could guide me in implementing something similar, but without the requirement to match all keywords. I need a query that will take a list of keywords and return results that contain one or more of those keywords. Thanks.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Ben</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1544</link>
		<dc:creator><![CDATA[Ben]]></dc:creator>
		<pubDate>Sun, 13 Sep 2009 00:51:59 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1544</guid>
		<description><![CDATA[Thanks for this!  This absolutely saved my bacon, and provided an awesome solution where I could not use Full Text Indexing.  Thanks again!]]></description>
		<content:encoded><![CDATA[<p>Thanks for this!  This absolutely saved my bacon, and provided an awesome solution where I could not use Full Text Indexing.  Thanks again!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1541</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 19 Aug 2009 23:10:06 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1541</guid>
		<description><![CDATA[I&#039;ve updated the blog with your comments - thanks again.]]></description>
		<content:encoded><![CDATA[<p>I&#8217;ve updated the blog with your comments &#8211; thanks again.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1538</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 19 Aug 2009 14:31:34 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1538</guid>
		<description><![CDATA[Hi Niikola,&lt;br /&gt;
&lt;br /&gt;
Thanks again and keep them coming - I&#039;m sorry I didn&#039;t have a chance to play with it yesterday and not sure would have time this week, but I plan to test and update the blog - thanks again.]]></description>
		<content:encoded><![CDATA[<p>Hi Niikola,</p>
<p>Thanks again and keep them coming &#8211; I&#8217;m sorry I didn&#8217;t have a chance to play with it yesterday and not sure would have time this week, but I plan to test and update the blog &#8211; thanks again.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: niikola</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1537</link>
		<dc:creator><![CDATA[niikola]]></dc:creator>
		<pubDate>Wed, 19 Aug 2009 12:57:02 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1537</guid>
		<description><![CDATA[This is the last one, I promise :-)&lt;br /&gt;
&lt;br /&gt;
Results with real tables (not the table variables) on both, SQL Server 2005 and 2008 makes difference between original and modified queries much smaller. It seems that joins with table variables are very costly (especially in 2008). Adding PKs and indexes makes differences even smaller, but still visible. &lt;br /&gt;
&lt;br /&gt;
The best one is the last one (with 1=ALL()), followed by UnwantedWords in Where clause as second, 2 subqueries in select 3rd and JOIN 4th.&lt;br /&gt;
&lt;br /&gt;
Another interesting fact is that comparing Execution Plans and estimated cost for each of the queries shows completely opposite order of efficiency. &lt;br /&gt;
&lt;br /&gt;
Further improvement (not a big one, but affects all solutions) would be &lt;br /&gt;
&lt;br /&gt;
Update @Keys Set Word = &#039;% &#039;+word+&#039; %&#039;&lt;br /&gt;
Update @WordsToExclude Set Word = &#039;% &#039;+word+&#039; %&#039;&lt;br /&gt;
&lt;br /&gt;
In that case LIKE comparisons would be&lt;br /&gt;
&#039; &#039; + M.Searched + &#039; &#039; LIKE Word&lt;br /&gt;
without unnecessary concatenation in every step&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>This is the last one, I promise ðŸ™‚</p>
<p>Results with real tables (not the table variables) on both, SQL Server 2005 and 2008 makes difference between original and modified queries much smaller. It seems that joins with table variables are very costly (especially in 2008). Adding PKs and indexes makes differences even smaller, but still visible. </p>
<p>The best one is the last one (with 1=ALL()), followed by UnwantedWords in Where clause as second, 2 subqueries in select 3rd and JOIN 4th.</p>
<p>Another interesting fact is that comparing Execution Plans and estimated cost for each of the queries shows completely opposite order of efficiency. </p>
<p>Further improvement (not a big one, but affects all solutions) would be </p>
<p>Update @Keys Set Word = &#8216;% &#8216;+word+&#8217; %&#8217;<br />
Update @WordsToExclude Set Word = &#8216;% &#8216;+word+&#8217; %&#8217;</p>
<p>In that case LIKE comparisons would be<br />
&#8216; &#8216; + M.Searched + &#8216; &#8216; LIKE Word<br />
without unnecessary concatenation in every step</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-all-words-inclusive-wi/#comment-1536</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Tue, 18 Aug 2009 19:37:05 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/how-to-search-for-all-words-inclusive-wi/#comment-1536</guid>
		<description><![CDATA[Niikola - thanks a lot for your comments, I&#039;ll try different variations at the first opportunity.]]></description>
		<content:encoded><![CDATA[<p>Niikola &#8211; thanks a lot for your comments, I&#8217;ll try different variations at the first opportunity.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
