<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Displaying missing dates by utilizing a calendar table</title>
	<atom:link href="/index.php/datamgmt/datadesign/displaying-missing-dates-by-utilizing/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/displaying-missing-dates-by-utilizing/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Christoph Tilley</title>
		<link>/index.php/datamgmt/datadesign/displaying-missing-dates-by-utilizing/#comment-4067507</link>
		<dc:creator><![CDATA[Christoph Tilley]]></dc:creator>
		<pubDate>Mon, 30 Mar 2015 16:31:04 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2013/01/displaying-missing-dates-by-utilizing/#comment-4067507</guid>
		<description><![CDATA[I tried to adopt your code to my current situation without luck. Here is what I got:
&lt;code&gt;SELECT
    DATE(time_entries.start) AS date,
    COUNT(time_entries.id) AS entries,
    SUM(CASE WHEN user_id = 4 THEN TIMESTAMPDIFF(MINUTE, start, end) ELSE 0 END) AS me,
    SUM(CASE WHEN user_id = 3 THEN TIMESTAMPDIFF(MINUTE, start, end) ELSE 0 END) AS ph
	FROM time_entries
	LEFT JOIN calendar_table
	ON time_entries.start=calendar_table.dt
	WHERE start BETWEEN CURRENT_DATE - INTERVAL 1 MONTH AND CURDATE()
	GROUP BY date
	ORDER BY date&lt;/code&gt;]]></description>
		<content:encoded><![CDATA[<p>I tried to adopt your code to my current situation without luck. Here is what I got:<br />
<code>SELECT&lt;br /&gt;
    DATE(time_entries.start) AS date,&lt;br /&gt;
    COUNT(time_entries.id) AS entries,&lt;br /&gt;
    SUM(CASE WHEN user_id = 4 THEN TIMESTAMPDIFF(MINUTE, start, end) ELSE 0 END) AS me,&lt;br /&gt;
    SUM(CASE WHEN user_id = 3 THEN TIMESTAMPDIFF(MINUTE, start, end) ELSE 0 END) AS ph&lt;br /&gt;
	FROM time_entries&lt;br /&gt;
	LEFT JOIN calendar_table&lt;br /&gt;
	ON time_entries.start=calendar_table.dt&lt;br /&gt;
	WHERE start BETWEEN CURRENT_DATE - INTERVAL 1 MONTH AND CURDATE()&lt;br /&gt;
	GROUP BY date&lt;br /&gt;
	ORDER BY date</code></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: itoctopus blog</title>
		<link>/index.php/datamgmt/datadesign/displaying-missing-dates-by-utilizing/#comment-5806</link>
		<dc:creator><![CDATA[itoctopus blog]]></dc:creator>
		<pubDate>Sun, 20 Jan 2013 14:10:42 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2013/01/displaying-missing-dates-by-utilizing/#comment-5806</guid>
		<description><![CDATA[The way I would solve this problem is differently. I would insert explicitly in the table rows with 0 values for those dates that don&#039;t exist. For example:&lt;br /&gt;
&lt;br /&gt;
insert SomeData values(&#039;2013-01-06&#039;,1)&lt;br /&gt;
&lt;br /&gt;
This will create some unneeded data, this is true. But on the other hand, it makes getting the results easier and, in my opinion (I didn&#039;t do any benchmarks, but just by looking at your code), faster.&lt;br /&gt;
&lt;br /&gt;
Thanks for sharing.&lt;br /&gt;
&lt;br /&gt;
Fadi]]></description>
		<content:encoded><![CDATA[<p>The way I would solve this problem is differently. I would insert explicitly in the table rows with 0 values for those dates that don&#8217;t exist. For example:</p>
<p>insert SomeData values(&#8216;2013-01-06&#8217;,1)</p>
<p>This will create some unneeded data, this is true. But on the other hand, it makes getting the results easier and, in my opinion (I didn&#8217;t do any benchmarks, but just by looking at your code), faster.</p>
<p>Thanks for sharing.</p>
<p>Fadi</p>
]]></content:encoded>
	</item>
</channel>
</rss>
