<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Changing exec to sp_executesql doesn&#8217;t provide any benefit if you are not using parameters correctly</title>
	<atom:link href="/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Santosh Mishra</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1417</link>
		<dc:creator><![CDATA[Santosh Mishra]]></dc:creator>
		<pubDate>Mon, 20 Aug 2012 17:56:13 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1417</guid>
		<description><![CDATA[Hi,&lt;br /&gt;
 You really have explained the usage of parameterized dynamic query very well. But I have scenario where I am unanble to use this parameterized query. What I want is like I am passing few input parameters that can be null. If the input parameter&#039;s value is NULL, then this filter should not be applied. somethink like below:&lt;br /&gt;
&lt;br /&gt;
declare @a varchar(10), @b int&lt;br /&gt;
set @a=null&lt;br /&gt;
set @b=null&lt;br /&gt;
&lt;br /&gt;
declare @qry nvarchar(1000)&lt;br /&gt;
set @qry=N&#039;select * from dbo.Table1 where 1=1 &#039;&lt;br /&gt;
&lt;br /&gt;
if @a is  not null&lt;br /&gt;
set @qry= @qry + N&#039; and col1=&#039;&#039;&#039; + @a + &#039;&#039;&#039;&#039;&lt;br /&gt;
&lt;br /&gt;
if @b is not null&lt;br /&gt;
set @qry = @qry + N&#039; and col2=&#039; &#038; cast(@b as varchar)&lt;br /&gt;
&lt;br /&gt;
exec sp_executesql @qry&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
How can I use parameterized dynamic query in this case?]]></description>
		<content:encoded><![CDATA[<p>Hi,<br />
 You really have explained the usage of parameterized dynamic query very well. But I have scenario where I am unanble to use this parameterized query. What I want is like I am passing few input parameters that can be null. If the input parameter&#8217;s value is NULL, then this filter should not be applied. somethink like below:</p>
<p>declare @a varchar(10), @b int<br />
set @a=null<br />
set @b=null</p>
<p>declare @qry nvarchar(1000)<br />
set @qry=N&#8217;select * from dbo.Table1 where 1=1 &#8216;</p>
<p>if @a is  not null<br />
set @qry= @qry + N&#8217; and col1=&#8221;&#8217; + @a + &#8221;&#8221;</p>
<p>if @b is not null<br />
set @qry = @qry + N&#8217; and col2=&#8217; &amp; cast(@b as varchar)</p>
<p>exec sp_executesql @qry</p>
<p>
How can I use parameterized dynamic query in this case?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Igor</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1420</link>
		<dc:creator><![CDATA[Igor]]></dc:creator>
		<pubDate>Wed, 08 Feb 2012 08:13:28 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1420</guid>
		<description><![CDATA[SQLDenis, I was mistaken because my query is INSERT and therefore I can use @@ROWCOUNT.&lt;br /&gt;
&lt;br /&gt;
Sorry for my closed-mind comment :)]]></description>
		<content:encoded><![CDATA[<p>SQLDenis, I was mistaken because my query is INSERT and therefore I can use @@ROWCOUNT.</p>
<p>Sorry for my closed-mind comment ðŸ™‚</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1419</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Wed, 08 Feb 2012 07:41:50 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1419</guid>
		<description><![CDATA[Igor,&lt;br /&gt;
&lt;br /&gt;
@@rowcount only works if you are actually returning all the rows from the table, so for a table with 10 million rows you would return all rows to get a count? Seems very expensive to me&lt;br /&gt;
&lt;br /&gt;
In this example @@rowcount is one&lt;br /&gt;
&lt;br /&gt;
select count(*) from sys.objects&lt;br /&gt;
&lt;br /&gt;
select @@rowcount&lt;br /&gt;
&lt;br /&gt;
so the only way to make it work is&lt;br /&gt;
&lt;br /&gt;
select object_id from sys.objects&lt;br /&gt;
&lt;br /&gt;
select @@rowcount&lt;br /&gt;
&lt;br /&gt;
But now you have an extra result set]]></description>
		<content:encoded><![CDATA[<p>Igor,</p>
<p>@@rowcount only works if you are actually returning all the rows from the table, so for a table with 10 million rows you would return all rows to get a count? Seems very expensive to me</p>
<p>In this example @@rowcount is one</p>
<p>select count(*) from sys.objects</p>
<p>select @@rowcount</p>
<p>so the only way to make it work is</p>
<p>select object_id from sys.objects</p>
<p>select @@rowcount</p>
<p>But now you have an extra result set</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Igor</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1418</link>
		<dc:creator><![CDATA[Igor]]></dc:creator>
		<pubDate>Wed, 08 Feb 2012 07:33:32 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1418</guid>
		<description><![CDATA[Thank you very much for this article!!&lt;br /&gt;
&lt;br /&gt;
P.S.&lt;br /&gt;
&quot;How would you get a count of rows in a table? with EXEC you need to use a temp table and populate that&quot; - when use EXEC it&#039;s very simple with @@ROWCOUNT =))]]></description>
		<content:encoded><![CDATA[<p>Thank you very much for this article!!</p>
<p>P.S.<br />
&#8220;How would you get a count of rows in a table? with EXEC you need to use a temp table and populate that&#8221; &#8211; when use EXEC it&#8217;s very simple with @@ROWCOUNT =))</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Andrew Eisenberg</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1423</link>
		<dc:creator><![CDATA[Andrew Eisenberg]]></dc:creator>
		<pubDate>Tue, 11 May 2010 21:35:14 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1423</guid>
		<description><![CDATA[real power of sp_executesql lies not only in the aformentioned re-use &lt;br /&gt;
of cached plans while changing param values passed, but the output &lt;br /&gt;
param returned can be a variable of type XML, thus you get back a &lt;br /&gt;
@var XML that can then be + create a function returning a table (reads contents of said&lt;br /&gt;
@var and returns contents) magical ?!&lt;br /&gt;
&lt;br /&gt;
declare @Paged XML&lt;br /&gt;
declare @spe varchar(max)&lt;br /&gt;
set @Paged = (&lt;br /&gt;
select Case_ID, Created_By, Date_Approved,&lt;br /&gt;
  from ( select cs.* &lt;br /&gt;
           from   #CaseCollection cs,&lt;br /&gt;
                  #Case           c&lt;br /&gt;
          where cs.case_id  = c.Case_ID&lt;br /&gt;
       ) x&lt;br /&gt;
   for XML RAW(&#039;PagedCases&#039;))&lt;br /&gt;
&lt;br /&gt;
EXEC sp_executesql&lt;br /&gt;
       @spe&lt;br /&gt;
   , N&#039;@Paged    XML output&#039;&lt;br /&gt;
   ,   @Paged=@Paged output &lt;br /&gt;
&lt;br /&gt;
   select a.*, b.*&lt;br /&gt;
     from     a&lt;br /&gt;
        , dbo.function (@Paged) b -- of course create the func mentioned above&lt;br /&gt;
    where   a.case_id = a.case_id &lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>real power of sp_executesql lies not only in the aformentioned re-use <br />
of cached plans while changing param values passed, but the output <br />
param returned can be a variable of type XML, thus you get back a <br />
@var XML that can then be + create a function returning a table (reads contents of said<br />
@var and returns contents) magical ?!</p>
<p>declare @Paged XML<br />
declare @spe varchar(max)<br />
set @Paged = (<br />
select Case_ID, Created_By, Date_Approved,<br />
  from ( select cs.* <br />
           from   #CaseCollection cs,<br />
                  #Case           c<br />
          where cs.case_id  = c.Case_ID<br />
       ) x<br />
   for XML RAW(&#8216;PagedCases&#8217;))</p>
<p>EXEC sp_executesql<br />
       @spe<br />
   , N&#8217;@Paged    XML output&#8217;<br />
   ,   @Paged=@Paged output </p>
<p>   select a.*, b.*<br />
     from     a<br />
        , dbo.function (@Paged) b &#8212; of course create the func mentioned above<br />
    where   a.case_id = a.case_id </p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Matthew</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1414</link>
		<dc:creator><![CDATA[Matthew]]></dc:creator>
		<pubDate>Mon, 23 Nov 2009 01:40:22 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1414</guid>
		<description><![CDATA[Excellent post. I was not aware of these subtle differences. The MSDN article on this topic could do with an update by you!]]></description>
		<content:encoded><![CDATA[<p>Excellent post. I was not aware of these subtle differences. The MSDN article on this topic could do with an update by you!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: NikX</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1415</link>
		<dc:creator><![CDATA[NikX]]></dc:creator>
		<pubDate>Mon, 05 Oct 2009 09:51:55 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1415</guid>
		<description><![CDATA[Excellent step by step process..]]></description>
		<content:encoded><![CDATA[<p>Excellent step by step process..</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1416</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Fri, 21 Aug 2009 14:59:52 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1416</guid>
		<description><![CDATA[Excellent]]></description>
		<content:encoded><![CDATA[<p>Excellent</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Impal3r</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1422</link>
		<dc:creator><![CDATA[Impal3r]]></dc:creator>
		<pubDate>Wed, 10 Jun 2009 11:35:09 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1422</guid>
		<description><![CDATA[This is very interesting, I never knew that sp_executesql could use output parameters, this will make my life soooo much easier]]></description>
		<content:encoded><![CDATA[<p>This is very interesting, I never knew that sp_executesql could use output parameters, this will make my life soooo much easier</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Natas</title>
		<link>/index.php/datamgmt/datadesign/changing-exec-to-sp_executesql-doesn-t-p/#comment-1421</link>
		<dc:creator><![CDATA[Natas]]></dc:creator>
		<pubDate>Wed, 10 Jun 2009 10:36:27 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/06/changing-exec-to-sp_executesql-doesn-t-p/#comment-1421</guid>
		<description><![CDATA[Wow, I didn&#039;t know that. Will have to revisit some procs that run dynamic SQL&lt;br /&gt;
&lt;br /&gt;
thanks]]></description>
		<content:encoded><![CDATA[<p>Wow, I didn&#8217;t know that. Will have to revisit some procs that run dynamic SQL</p>
<p>thanks</p>
]]></content:encoded>
	</item>
</channel>
</rss>
