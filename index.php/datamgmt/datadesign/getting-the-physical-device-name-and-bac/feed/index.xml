<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Getting the physical device name and backup time for a SQL Server database</title>
	<atom:link href="/index.php/datamgmt/datadesign/getting-the-physical-device-name-and-bac/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/getting-the-physical-device-name-and-bac/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/datamgmt/datadesign/getting-the-physical-device-name-and-bac/#comment-2587</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Sun, 04 Apr 2010 11:11:11 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/getting-the-physical-device-name-and-bac/#comment-2587</guid>
		<description><![CDATA[Yep, and I can use SQLMail to send messages as part of those tasks. This environment was using an external backup solution that incorporated system backups as well as database backups and managed the tapes, etc. It didn&#039;t pick up new databases automatically and for a while we were transitioning from that tool to built-in SQL backups, so monitoring the backupset table was the cleanest single-source monitoring trick. After we moved completely to built-in backups I probably could have done that, but I had several backup profiles and preferred to add the DBs to the correct one in the beginning (because I knew I would never get back to correcting it if I didn&#039;t do it right the first time).]]></description>
		<content:encoded><![CDATA[<p>Yep, and I can use SQLMail to send messages as part of those tasks. This environment was using an external backup solution that incorporated system backups as well as database backups and managed the tapes, etc. It didn&#8217;t pick up new databases automatically and for a while we were transitioning from that tool to built-in SQL backups, so monitoring the backupset table was the cleanest single-source monitoring trick. After we moved completely to built-in backups I probably could have done that, but I had several backup profiles and preferred to add the DBs to the correct one in the beginning (because I knew I would never get back to correcting it if I didn&#8217;t do it right the first time).</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/datadesign/getting-the-physical-device-name-and-bac/#comment-2586</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Sat, 03 Apr 2010 20:23:41 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/getting-the-physical-device-name-and-bac/#comment-2586</guid>
		<description><![CDATA[&gt;&gt;if a database was created without a backup plan.......&lt;br /&gt;
&lt;br /&gt;
you know that you can setup maintenance plans that will backup every user database,  this way if someone creates a new database it will be backed up]]></description>
		<content:encoded><![CDATA[<p>>>if a database was created without a backup plan&#8230;&#8230;.</p>
<p>you know that you can setup maintenance plans that will backup every user database,  this way if someone creates a new database it will be backed up</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/datadesign/getting-the-physical-device-name-and-bac/#comment-2585</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Sat, 03 Apr 2010 20:22:46 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/getting-the-physical-device-name-and-bac/#comment-2585</guid>
		<description><![CDATA[it is pretty simple, it is I believe a 9 step process&lt;br /&gt;
&lt;br /&gt;
on orig server&lt;br /&gt;
step 1 (SSIS package) get filename and copy backup to other server (script task)&lt;br /&gt;
&lt;br /&gt;
on destination server&lt;br /&gt;
step 2 Stop 5 jobs and disable them that hit this DB&lt;br /&gt;
&lt;br /&gt;
Step 3 make DB single user and do restore &lt;br /&gt;
&lt;br /&gt;
Step 4 recreate users and grant permissions from orig server and apply permissions here&lt;br /&gt;
&lt;br /&gt;
Step 5 make DB multi user&lt;br /&gt;
&lt;br /&gt;
Step 6 update some tables with current time stamp&lt;br /&gt;
&lt;br /&gt;
step 7 enable jobs that were disabled before&lt;br /&gt;
&lt;br /&gt;
Step 8 alter 2 tables&lt;br /&gt;
&lt;br /&gt;
there is another step where I do something but don&#039;t quite remember what I do, will check when I VPN in or when I get to the office]]></description>
		<content:encoded><![CDATA[<p>it is pretty simple, it is I believe a 9 step process</p>
<p>on orig server<br />
step 1 (SSIS package) get filename and copy backup to other server (script task)</p>
<p>on destination server<br />
step 2 Stop 5 jobs and disable them that hit this DB</p>
<p>Step 3 make DB single user and do restore </p>
<p>Step 4 recreate users and grant permissions from orig server and apply permissions here</p>
<p>Step 5 make DB multi user</p>
<p>Step 6 update some tables with current time stamp</p>
<p>step 7 enable jobs that were disabled before</p>
<p>Step 8 alter 2 tables</p>
<p>there is another step where I do something but don&#8217;t quite remember what I do, will check when I VPN in or when I get to the office</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/datamgmt/datadesign/getting-the-physical-device-name-and-bac/#comment-2584</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Sat, 03 Apr 2010 20:06:37 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/getting-the-physical-device-name-and-bac/#comment-2584</guid>
		<description><![CDATA[Interesting, I used something similar to help me monitor backups at my previous employer. I queried for any databases that did not have backups of a specific type (full for instance) within a specific period. I plugged that query into our network monitoring software for each server and had a handy mechanism that would alert me if a database was created without a backup plan, if a database backup had not occurred, etc. This helped on several occasions with new databases, once when the backup software didn&#039;t report failures (brightstore?), and once when we turned the backup jobs off to perform maintenance and forgot to turn them back on (oops).&lt;br /&gt;
&lt;br /&gt;
I&#039;m curious how you wrote the rest of the restore as well. I could see where being able to schedule a restore on a schedule (for instance, from our production down to beta and dev servers) would be extremely helpful.]]></description>
		<content:encoded><![CDATA[<p>Interesting, I used something similar to help me monitor backups at my previous employer. I queried for any databases that did not have backups of a specific type (full for instance) within a specific period. I plugged that query into our network monitoring software for each server and had a handy mechanism that would alert me if a database was created without a backup plan, if a database backup had not occurred, etc. This helped on several occasions with new databases, once when the backup software didn&#8217;t report failures (brightstore?), and once when we turned the backup jobs off to perform maintenance and forgot to turn them back on (oops).</p>
<p>I&#8217;m curious how you wrote the rest of the restore as well. I could see where being able to schedule a restore on a schedule (for instance, from our production down to beta and dev servers) would be extremely helpful.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
