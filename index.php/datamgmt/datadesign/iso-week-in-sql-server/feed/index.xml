<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: ISO Week In SQL Server</title>
	<atom:link href="/index.php/datamgmt/datadesign/iso-week-in-sql-server/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: ISO Week vs SQL Server Week &#124; XL-UAT</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-3938650</link>
		<dc:creator><![CDATA[ISO Week vs SQL Server Week &#124; XL-UAT]]></dc:creator>
		<pubDate>Wed, 11 Mar 2015 18:26:46 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-3938650</guid>
		<description><![CDATA[[&#8230;] /index.php/DataMgmt/DataDesign/iso-week-in-sql-server [&#8230;]]]></description>
		<content:encoded><![CDATA[<p>[&#8230;] <a href="/index.php/DataMgmt/DataDesign/iso-week-in-sql-server" rel="nofollow">/index.php/DataMgmt/DataDesign/iso-week-in-sql-server</a> [&#8230;]</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Flugs</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-276</link>
		<dc:creator><![CDATA[Flugs]]></dc:creator>
		<pubDate>Fri, 10 Dec 2010 08:22:02 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-276</guid>
		<description><![CDATA[Mir hat ISOWeek nicht viel geholfen, da Sie falsche KW liefert (Bsp. 31.12.2009 und 1.1.2010 beide KW 53 ISOWeek liefert 52 und 53).&lt;br /&gt;
Nach langem Suchen habe ich eine Funktion gefunden, welche die richtige KW zurÃ¼ckgibt. Ich habe sie um das Jahr ergÃ¤nzt (Ausgabe z.B. &#039;53/2009&#039;):&lt;br /&gt;
&lt;br /&gt;
Create FUNCTION [dbo].[ISOWeek](@dtDate as DATETIME) RETURNS nvarchar(7) WITH RETURNS NULL ON NULL INPUT&lt;br /&gt;
/*&lt;br /&gt;
** Return the ISO week of the year regardless of the DATEFIRST session setting.&lt;br /&gt;
*/&lt;br /&gt;
AS&lt;br /&gt;
BEGIN&lt;br /&gt;
&lt;br /&gt;
DECLARE @intISOWeekdayNumber INT&lt;br /&gt;
DECLARE @dtThisThursday DATETIME&lt;br /&gt;
DECLARE @dtFirstOfThisThursdaysYear DATETIME&lt;br /&gt;
DECLARE @intISOWeekdayNumberOfFirstOfThisThursdaysYear INT&lt;br /&gt;
DECLARE @dtFirstThursdayOfYear DATETIME&lt;br /&gt;
DECLARE @intISOWeekNumber INT&lt;br /&gt;
Declare @intYear Int&lt;br /&gt;
&lt;br /&gt;
   -- Get the ISO week day number (Monday = 1) for our date.&lt;br /&gt;
   SET @intISOWeekdayNumber = (((DATEPART(dw, @dtDate) - 1) + (@@DATEFIRST - 1)) % 7) + 1&lt;br /&gt;
&lt;br /&gt;
   -- Get the date of the Thursday in this ISO week.&lt;br /&gt;
   SET @dtThisThursday = DATEADD(d,(4 - @intISOWeekdayNumber),@dtDate)&lt;br /&gt;
&lt;br /&gt;
   -- Get the date of the 1st January for &#039;this Thursdays&#039; year.&lt;br /&gt;
   SET @dtFirstOfThisThursdaysYear = CAST(CAST(YEAR(@dtThisThursday) AS CHAR(4)) + &#039;-01-01&#039; AS DATETIME)&lt;br /&gt;
&lt;br /&gt;
   SET @intISOWeekdayNumberOfFirstOfThisThursdaysYear = (((DATEPART(dw, @dtFirstOfThisThursdaysYear) - 1) + (@@DATEFIRST - 1)) % 7) + 1&lt;br /&gt;
&lt;br /&gt;
   -- Get the date of the first Thursday in &#039;this Thursdays&#039; year.&lt;br /&gt;
   -- The year of which the ISO week is a part is the year of this date.     &lt;br /&gt;
   IF (@intISOWeekdayNumberOfFirstOfThisThursdaysYear in (1,2,3,4))&lt;br /&gt;
      SET @dtFirstThursdayOfYear = DATEADD(d,(4 - @intISOWeekdayNumberOfFirstOfThisThursdaysYear),@dtFirstOfThisThursdaysYear)&lt;br /&gt;
   ELSE&lt;br /&gt;
      SET @dtFirstThursdayOfYear = DATEADD(d,(4 - @intISOWeekdayNumberOfFirstOfThisThursdaysYear + 7),@dtFirstOfThisThursdaysYear)&lt;br /&gt;
&lt;br /&gt;
   -- Work out how many weeks from the first Thursday to this Thursday.&lt;br /&gt;
   SET @intISOWeekNumber = DATEDIFF(d,@dtFirstThursdayOfYear,@dtThisThursday)/7+1&lt;br /&gt;
   if (Datepart(mm,@dtDate)=1 and @intISOWeekNumber &gt; 50)&lt;br /&gt;
		Set @intYear = Datepart(yyyy,@dtDate)-1&lt;br /&gt;
   else if	(Datepart(mm,@dtDate)=12 and @intISOWeekNumber = 1)	    &lt;br /&gt;
		Set @intYear = Datepart(yyyy,@dtDate)+1&lt;br /&gt;
   else	&lt;br /&gt;
		set @intYear = Datepart(yyyy,@dtDate)&lt;br /&gt;
&lt;br /&gt;
RETURN (cast(@intISOWeekNumber as nvarchar) + &#039;/&#039; + cast(@intYear as nvarchar))&lt;br /&gt;
&lt;br /&gt;
END]]></description>
		<content:encoded><![CDATA[<p>Mir hat ISOWeek nicht viel geholfen, da Sie falsche KW liefert (Bsp. 31.12.2009 und 1.1.2010 beide KW 53 ISOWeek liefert 52 und 53).<br />
Nach langem Suchen habe ich eine Funktion gefunden, welche die richtige KW zurÃ¼ckgibt. Ich habe sie um das Jahr ergÃ¤nzt (Ausgabe z.B. &#8217;53/2009&#8242;):</p>
<p>Create FUNCTION [dbo].[ISOWeek](@dtDate as DATETIME) RETURNS nvarchar(7) WITH RETURNS NULL ON NULL INPUT<br />
/*<br />
** Return the ISO week of the year regardless of the DATEFIRST session setting.<br />
*/<br />
AS<br />
BEGIN</p>
<p>DECLARE @intISOWeekdayNumber INT<br />
DECLARE @dtThisThursday DATETIME<br />
DECLARE @dtFirstOfThisThursdaysYear DATETIME<br />
DECLARE @intISOWeekdayNumberOfFirstOfThisThursdaysYear INT<br />
DECLARE @dtFirstThursdayOfYear DATETIME<br />
DECLARE @intISOWeekNumber INT<br />
Declare @intYear Int</p>
<p>   &#8212; Get the ISO week day number (Monday = 1) for our date.<br />
   SET @intISOWeekdayNumber = (((DATEPART(dw, @dtDate) &#8211; 1) + (@@DATEFIRST &#8211; 1)) % 7) + 1</p>
<p>   &#8212; Get the date of the Thursday in this ISO week.<br />
   SET @dtThisThursday = DATEADD(d,(4 &#8211; @intISOWeekdayNumber),@dtDate)</p>
<p>   &#8212; Get the date of the 1st January for &#8216;this Thursdays&#8217; year.<br />
   SET @dtFirstOfThisThursdaysYear = CAST(CAST(YEAR(@dtThisThursday) AS CHAR(4)) + &#8216;-01-01&#8217; AS DATETIME)</p>
<p>   SET @intISOWeekdayNumberOfFirstOfThisThursdaysYear = (((DATEPART(dw, @dtFirstOfThisThursdaysYear) &#8211; 1) + (@@DATEFIRST &#8211; 1)) % 7) + 1</p>
<p>   &#8212; Get the date of the first Thursday in &#8216;this Thursdays&#8217; year.<br />
   &#8212; The year of which the ISO week is a part is the year of this date.     <br />
   IF (@intISOWeekdayNumberOfFirstOfThisThursdaysYear in (1,2,3,4))<br />
      SET @dtFirstThursdayOfYear = DATEADD(d,(4 &#8211; @intISOWeekdayNumberOfFirstOfThisThursdaysYear),@dtFirstOfThisThursdaysYear)<br />
   ELSE<br />
      SET @dtFirstThursdayOfYear = DATEADD(d,(4 &#8211; @intISOWeekdayNumberOfFirstOfThisThursdaysYear + 7),@dtFirstOfThisThursdaysYear)</p>
<p>   &#8212; Work out how many weeks from the first Thursday to this Thursday.<br />
   SET @intISOWeekNumber = DATEDIFF(d,@dtFirstThursdayOfYear,@dtThisThursday)/7+1<br />
   if (Datepart(mm,@dtDate)=1 and @intISOWeekNumber > 50)<br />
		Set @intYear = Datepart(yyyy,@dtDate)-1<br />
   else if	(Datepart(mm,@dtDate)=12 and @intISOWeekNumber = 1)	    <br />
		Set @intYear = Datepart(yyyy,@dtDate)+1<br />
   else	<br />
		set @intYear = Datepart(yyyy,@dtDate)</p>
<p>RETURN (cast(@intISOWeekNumber as nvarchar) + &#8216;/&#8217; + cast(@intYear as nvarchar))</p>
<p>END</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eric</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-275</link>
		<dc:creator><![CDATA[Eric]]></dc:creator>
		<pubDate>Tue, 09 Feb 2010 20:30:58 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-275</guid>
		<description><![CDATA[For purposes of showing a solution, yes; but way over simplified.&lt;br /&gt;
If MS is going to go as far as creating an ISO Week function (SQL 2008) I find it hard to believe that they wouldn&#039;t include one for the ISO Year.&lt;br /&gt;
It doesn&#039;t make much sense to have one without the other.&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>For purposes of showing a solution, yes; but way over simplified.<br />
If MS is going to go as far as creating an ISO Week function (SQL 2008) I find it hard to believe that they wouldn&#8217;t include one for the ISO Year.<br />
It doesn&#8217;t make much sense to have one without the other.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: TriggerHappy</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-274</link>
		<dc:creator><![CDATA[TriggerHappy]]></dc:creator>
		<pubDate>Thu, 04 Feb 2010 04:36:30 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-274</guid>
		<description><![CDATA[CASE WHEN dbo.ISOWeek(&#039;2010-01-01&#039;) &gt; 52 THEN DATEPART(year, &#039;2010-01-01&#039;) - 1 ELSE DATEPART(year, &#039;2010-01-01&#039;) END [ISOYear]]]></description>
		<content:encoded><![CDATA[<p>CASE WHEN dbo.ISOWeek(&#8216;2010-01-01&#8217;) > 52 THEN DATEPART(year, &#8216;2010-01-01&#8217;) &#8211; 1 ELSE DATEPART(year, &#8216;2010-01-01&#8217;) END [ISOYear]</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eric</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-273</link>
		<dc:creator><![CDATA[Eric]]></dc:creator>
		<pubDate>Wed, 27 Jan 2010 21:41:23 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-273</guid>
		<description><![CDATA[But what about the YYYY portion of the week?&lt;br /&gt;
the first 3 days of 2010 are considered week 53 for 2009.&lt;br /&gt;
In Oracle I can use the &#039;IYYY&#039; (vs. YYYY) argument to return&lt;br /&gt;
the ISO Year to go with the ISO Week.&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>But what about the YYYY portion of the week?<br />
the first 3 days of 2010 are considered week 53 for 2009.<br />
In Oracle I can use the &#8216;IYYY&#8217; (vs. YYYY) argument to return<br />
the ISO Year to go with the ISO Week.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mikey</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-279</link>
		<dc:creator><![CDATA[Mikey]]></dc:creator>
		<pubDate>Tue, 12 Jan 2010 12:36:18 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-279</guid>
		<description><![CDATA[Very nice Rhys - thanks!]]></description>
		<content:encoded><![CDATA[<p>Very nice Rhys &#8211; thanks!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rogue</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-278</link>
		<dc:creator><![CDATA[Rogue]]></dc:creator>
		<pubDate>Fri, 08 Jan 2010 06:06:16 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-278</guid>
		<description><![CDATA[Rhys definitely score! thanks!]]></description>
		<content:encoded><![CDATA[<p>Rhys definitely score! thanks!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rhys</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-277</link>
		<dc:creator><![CDATA[Rhys]]></dc:creator>
		<pubDate>Tue, 05 Jan 2010 20:03:57 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-277</guid>
		<description><![CDATA[Prior to SQL Server 2008, getting the ISO week number, regardless of the DATEFIRST session setting, required a little more effort. See my ISO Week Number page at http://www.rmjcs.com/SQLServer/TSQLFunctions/ISOWeekNumber/tabid/207/Default.aspx for a widely used T/SQL function to do the job.&lt;br /&gt;
&lt;br /&gt;
Regards,&lt;br /&gt;
Rhys]]></description>
		<content:encoded><![CDATA[<p>Prior to SQL Server 2008, getting the ISO week number, regardless of the DATEFIRST session setting, required a little more effort. See my ISO Week Number page at <a href="http://www.rmjcs.com/SQLServer/TSQLFunctions/ISOWeekNumber/tabid/207/Default.aspx" rel="nofollow">http://www.rmjcs.com/SQLServer/TSQLFunctions/ISOWeekNumber/tabid/207/Default.aspx</a> for a widely used T/SQL function to do the job.</p>
<p>Regards,<br />
Rhys</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Kenta</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-283</link>
		<dc:creator><![CDATA[Kenta]]></dc:creator>
		<pubDate>Mon, 13 Oct 2008 05:08:14 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-283</guid>
		<description><![CDATA[The function relies on the first day of week being monday.&lt;br /&gt;
&lt;br /&gt;
Try this:&lt;br /&gt;
SET DATEFIRST 1 -- Set the first day of the week to Monday  &lt;br /&gt;
SELECT dbo.ISOweek(&#039;20080831&#039;)]]></description>
		<content:encoded><![CDATA[<p>The function relies on the first day of week being monday.</p>
<p>Try this:<br />
SET DATEFIRST 1 &#8212; Set the first day of the week to Monday  <br />
SELECT dbo.ISOweek(&#8216;20080831&#8217;)</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Everybody</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comment-282</link>
		<dc:creator><![CDATA[Everybody]]></dc:creator>
		<pubDate>Thu, 09 Oct 2008 11:16:53 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/#comment-282</guid>
		<description><![CDATA[Yes, but I have SQL 2005 Server. I can not use the isowk parameter.... That is why I am searching a right function...]]></description>
		<content:encoded><![CDATA[<p>Yes, but I have SQL 2005 Server. I can not use the isowk parameter&#8230;. That is why I am searching a right function&#8230;</p>
]]></content:encoded>
	</item>
</channel>
</rss>
