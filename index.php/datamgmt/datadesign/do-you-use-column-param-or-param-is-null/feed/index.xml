<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Do you use  Column=@Param OR @Param IS NULL in your WHERE clause? Don&#8217;t, it doesn&#8217;t perform</title>
	<atom:link href="/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-58754</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 19:54:42 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-58754</guid>
		<description><![CDATA[In SQL Server 2008 R2 and up add OPTION (RECOMPILE) to the query.]]></description>
		<content:encoded><![CDATA[<p>In SQL Server 2008 R2 and up add OPTION (RECOMPILE) to the query.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-58741</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 19:51:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-58741</guid>
		<description><![CDATA[Matt,

This will not work correctly if the DynamicTestField allows NULL.]]></description>
		<content:encoded><![CDATA[<p>Matt,</p>
<p>This will not work correctly if the DynamicTestField allows NULL.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Matt</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-52965</link>
		<dc:creator><![CDATA[Matt]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 00:12:41 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-52965</guid>
		<description><![CDATA[I know this is old, but found this via the google.

Is there any difference to use a CASE statement instead of ISNULL?  ie:

Declare @col1 int;
set @col1 = NULL;

select * 
from myTable
where 
    fixedTestField is not null
    and dynamicTestField = 
      case
         when @col1 is not null then @col1
         else dynamicTestField
      end

from my simple test, both ISNULL and the CASE use clustered index scans.  the column in my dynamicTestField happens to be a Foreign Key, so I thought i&#039;d see here what y&#039;all thought.]]></description>
		<content:encoded><![CDATA[<p>I know this is old, but found this via the google.</p>
<p>Is there any difference to use a CASE statement instead of ISNULL?  ie:</p>
<p>Declare @col1 int;<br />
set @col1 = NULL;</p>
<p>select *<br />
from myTable<br />
where<br />
    fixedTestField is not null<br />
    and dynamicTestField =<br />
      case<br />
         when @col1 is not null then @col1<br />
         else dynamicTestField<br />
      end</p>
<p>from my simple test, both ISNULL and the CASE use clustered index scans.  the column in my dynamicTestField happens to be a Foreign Key, so I thought i&#8217;d see here what y&#8217;all thought.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rishabh K</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2510</link>
		<dc:creator><![CDATA[Rishabh K]]></dc:creator>
		<pubDate>Thu, 15 Mar 2012 10:59:37 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2510</guid>
		<description><![CDATA[I think optimizer going for index scan is due to the fact that it doesn&#039;t know about the parameters at the query compilation so it is guessing(may be 30 % in this case).&lt;br /&gt;
Option Recompile will work here and using dynamic sql is like using force optimization ON.&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>I think optimizer going for index scan is due to the fact that it doesn&#8217;t know about the parameters at the query compilation so it is guessing(may be 30 % in this case).<br />
Option Recompile will work here and using dynamic sql is like using force optimization ON.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Brad Schulz</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2507</link>
		<dc:creator><![CDATA[Brad Schulz]]></dc:creator>
		<pubDate>Thu, 09 Jun 2011 17:34:29 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2507</guid>
		<description><![CDATA[Just a followup...&lt;br /&gt;
&lt;br /&gt;
Ivan already mentioned this in his comment over a year ago in April2010, but I&#039;m surprised nobody remarked on it, because it is important:&lt;br /&gt;
&lt;br /&gt;
Starting with SQL2008 SP1 CU5 (10.0.2746) or SQL2008R2 CU1 (10.50.1702), this kind of query IS optimizable, provided you have an OPTION (RECOMPILE) in the query.&lt;br /&gt;
&lt;br /&gt;
So, for example, in using NorthWind...&lt;br /&gt;
&lt;br /&gt;
DECLARE @customerid nchar(5)&lt;br /&gt;
       ,@orderdate datetime&lt;br /&gt;
       ,@employeeid int&lt;br /&gt;
       ,@orderid int&lt;br /&gt;
SET @customerid=N&#039;CENTC&#039;&lt;br /&gt;
&lt;br /&gt;
SELECT OrderID,OrderDate,CustomerID,EmployeeID&lt;br /&gt;
FROM Orders&lt;br /&gt;
WHERE (CustomerID=@customerid or @customerid IS NULL)&lt;br /&gt;
  AND (OrderID=@orderid or @orderid IS NULL)&lt;br /&gt;
  AND (EmployeeID=@employeeid or @employeeid IS NULL)&lt;br /&gt;
  AND (OrderDate=@orderdate or @orderdate IS NULL)&lt;br /&gt;
OPTION (RECOMPILE)&lt;br /&gt;
&lt;br /&gt;
If you execute this (in the appropriate SQL2008 Version) and show the Actual Execution Plan, you will see that it DOES use the CustomerID nonclustered index to directly SEEK for the CustomerID in question... the other predicates on OrderID, EmployeeID, and OrderDate are thrown out the window by the Query Optimizer.&lt;br /&gt;
&lt;br /&gt;
If you execute the same query in SQL2005, it will SCAN the index and perform a filter on the other predicates.&lt;br /&gt;
&lt;br /&gt;
--Brad]]></description>
		<content:encoded><![CDATA[<p>Just a followup&#8230;</p>
<p>Ivan already mentioned this in his comment over a year ago in April2010, but I&#8217;m surprised nobody remarked on it, because it is important:</p>
<p>Starting with SQL2008 SP1 CU5 (10.0.2746) or SQL2008R2 CU1 (10.50.1702), this kind of query IS optimizable, provided you have an OPTION (RECOMPILE) in the query.</p>
<p>So, for example, in using NorthWind&#8230;</p>
<p>DECLARE @customerid nchar(5)<br />
       ,@orderdate datetime<br />
       ,@employeeid int<br />
       ,@orderid int<br />
SET @customerid=N&#8217;CENTC&#8217;</p>
<p>SELECT OrderID,OrderDate,CustomerID,EmployeeID<br />
FROM Orders<br />
WHERE (CustomerID=@customerid or @customerid IS NULL)<br />
  AND (OrderID=@orderid or @orderid IS NULL)<br />
  AND (EmployeeID=@employeeid or @employeeid IS NULL)<br />
  AND (OrderDate=@orderdate or @orderdate IS NULL)<br />
OPTION (RECOMPILE)</p>
<p>If you execute this (in the appropriate SQL2008 Version) and show the Actual Execution Plan, you will see that it DOES use the CustomerID nonclustered index to directly SEEK for the CustomerID in question&#8230; the other predicates on OrderID, EmployeeID, and OrderDate are thrown out the window by the Query Optimizer.</p>
<p>If you execute the same query in SQL2005, it will SCAN the index and perform a filter on the other predicates.</p>
<p>&#8211;Brad</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2509</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Fri, 05 Nov 2010 16:29:59 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2509</guid>
		<description><![CDATA[For integer columns it&#039;s good (and recommended approach - see, for example, &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en/databasedesign/thread/2c991301-5b80-454a-80d8-090a5a475643&quot;&gt;Relevant MSDN forum&#039;s thread&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
but I don&#039;t think you can do a-z for characters. What if you store ** or something else there?&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>For integer columns it&#8217;s good (and recommended approach &#8211; see, for example, <a href="http://social.msdn.microsoft.com/Forums/en/databasedesign/thread/2c991301-5b80-454a-80d8-090a5a475643">Relevant MSDN forum&#8217;s thread</a></p>
<p>but I don&#8217;t think you can do a-z for characters. What if you store ** or something else there?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Erik</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2508</link>
		<dc:creator><![CDATA[Erik]]></dc:creator>
		<pubDate>Mon, 18 Oct 2010 14:19:14 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2508</guid>
		<description><![CDATA[Ooohhhh... I just thought up an interesting possibility for how to handle this:&lt;br /&gt;
&lt;br /&gt;
SELECT *&lt;br /&gt;
FROM SomeTable&lt;br /&gt;
WHERE&lt;br /&gt;
   SomeCol BETWEEN Coalesce(@somecol, &#039;a&#039;) AND Coalesce(@somecol, &#039;zzzzzzzz&#039;)&lt;br /&gt;
   AND AnotherCol BETWEEN Coalesce(@anothercol, 0) AND Coalesce(@anothercol, 2147483647)&lt;br /&gt;
&lt;br /&gt;
What do you think?&lt;br /&gt;
&lt;br /&gt;
I just realized this is only viable for columns that have an index and that index is used. Otherwise it probably will force a scan...]]></description>
		<content:encoded><![CDATA[<p>Ooohhhh&#8230; I just thought up an interesting possibility for how to handle this:</p>
<p>SELECT *<br />
FROM SomeTable<br />
WHERE<br />
   SomeCol BETWEEN Coalesce(@somecol, &#8216;a&#8217;) AND Coalesce(@somecol, &#8216;zzzzzzzz&#8217;)<br />
   AND AnotherCol BETWEEN Coalesce(@anothercol, 0) AND Coalesce(@anothercol, 2147483647)</p>
<p>What do you think?</p>
<p>I just realized this is only viable for columns that have an index and that index is used. Otherwise it probably will force a scan&#8230;</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2530</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Mon, 07 Jun 2010 11:05:30 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2530</guid>
		<description><![CDATA[How about&lt;br /&gt;
&lt;br /&gt;
where Field = case when @Param IS NULL then Field else @Param end&lt;br /&gt;
&lt;br /&gt;
in terms of performance (it will not work for Field IS NULL).]]></description>
		<content:encoded><![CDATA[<p>How about</p>
<p>where Field = case when @Param IS NULL then Field else @Param end</p>
<p>in terms of performance (it will not work for Field IS NULL).</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Andy</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2528</link>
		<dc:creator><![CDATA[Andy]]></dc:creator>
		<pubDate>Wed, 02 Jun 2010 00:39:15 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2528</guid>
		<description><![CDATA[When you parameter is Null, but the param value is still passed to the SP_EXECUTESQL, it says tehre are too many arguments specified. &lt;br /&gt;
&lt;br /&gt;
In the dynamicly built sql with parameter , how can the value list also be dynamically built?&lt;br /&gt;
&lt;br /&gt;
For exameple if I have multiple parameter built in the following way. &lt;br /&gt;
IF @CC IS NOT NULL AND NOT @CC = 3&lt;br /&gt;
BEGIN&lt;br /&gt;
SET @SQL = @SQL + &#039;AND &lt;br /&gt;
	-- Look for parameter value 1 on ReportLink table&lt;br /&gt;
	( @CC1 = 1 AND (ReportLink.OrderingProvider IS NULL OR ReportLink.OrderingProvider =1 ))&lt;br /&gt;
	-- Look for parameter value 2 on ReportLink table&lt;br /&gt;
	OR( @CC1 = 2 AND ReportLink.OrderingProvider = 0)&#039;&lt;br /&gt;
SET @PARAMS = @PARAMS + &#039;,&#039; + N&#039;@CC1 INT&#039;&lt;br /&gt;
SET @VALUES = @VALUES + &#039;,&#039; + N&#039;@CC&#039;&lt;br /&gt;
END]]></description>
		<content:encoded><![CDATA[<p>When you parameter is Null, but the param value is still passed to the SP_EXECUTESQL, it says tehre are too many arguments specified. </p>
<p>In the dynamicly built sql with parameter , how can the value list also be dynamically built?</p>
<p>For exameple if I have multiple parameter built in the following way. <br />
IF @CC IS NOT NULL AND NOT @CC = 3<br />
BEGIN<br />
SET @SQL = @SQL + &#8216;AND <br />
	&#8212; Look for parameter value 1 on ReportLink table<br />
	( @CC1 = 1 AND (ReportLink.OrderingProvider IS NULL OR ReportLink.OrderingProvider =1 ))<br />
	&#8212; Look for parameter value 2 on ReportLink table<br />
	OR( @CC1 = 2 AND ReportLink.OrderingProvider = 0)&#8217;<br />
SET @PARAMS = @PARAMS + &#8216;,&#8217; + N&#8217;@CC1 INT&#8217;<br />
SET @VALUES = @VALUES + &#8216;,&#8217; + N&#8217;@CC&#8217;<br />
END</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comment-2529</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Sun, 25 Apr 2010 04:56:49 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/#comment-2529</guid>
		<description><![CDATA[See also this thread &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/e80f2bae-76ee-4a41-ad32-57f18e0fd8e1&quot;&gt;MSDN Thread&lt;/a&gt; on the same topic.&lt;br /&gt;
&lt;br /&gt;
Here is another blog on this topic &lt;a href=&quot;http://www.sqlservercentral.com/articles/Dynamic+SQL/70109/&quot;&gt;Dynamic SQL&lt;/a&gt;]]></description>
		<content:encoded><![CDATA[<p>See also this thread <a href="http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/e80f2bae-76ee-4a41-ad32-57f18e0fd8e1">MSDN Thread</a> on the same topic.</p>
<p>Here is another blog on this topic <a href="http://www.sqlservercentral.com/articles/Dynamic+SQL/70109/">Dynamic SQL</a></p>
]]></content:encoded>
	</item>
</channel>
</rss>
