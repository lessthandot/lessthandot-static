<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: SQL Server Developer Tips and Tricks</title>
	<atom:link href="/index.php/datamgmt/datadesign/sql-server-developer-tips-and/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: fullstackdeveloper</title>
		<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/#comment-5799837</link>
		<dc:creator><![CDATA[fullstackdeveloper]]></dc:creator>
		<pubDate>Tue, 29 Aug 2017 13:04:02 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/04/sql-server-developer-tips-and/#comment-5799837</guid>
		<description><![CDATA[nice tips .....]]></description>
		<content:encoded><![CDATA[<p>nice tips &#8230;..</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Kasper Bell</title>
		<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/#comment-5267</link>
		<dc:creator><![CDATA[Kasper Bell]]></dc:creator>
		<pubDate>Mon, 24 Dec 2012 09:19:53 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/04/sql-server-developer-tips-and/#comment-5267</guid>
		<description><![CDATA[To turn into an effective .NET programmer, one really should remember that she or he really should have the ability to create all communication determined by the requirements of your sector and make certain the code is depending on a framework that may be incorporated with other codes.&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>To turn into an effective .NET programmer, one really should remember that she or he really should have the ability to create all communication determined by the requirements of your sector and make certain the code is depending on a framework that may be incorporated with other codes.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Sergey Zenzinov</title>
		<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/#comment-5271</link>
		<dc:creator><![CDATA[Sergey Zenzinov]]></dc:creator>
		<pubDate>Wed, 25 Apr 2012 06:33:51 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/04/sql-server-developer-tips-and/#comment-5271</guid>
		<description><![CDATA[1. I use sp_help to get the columns. Just press Alt+F1 in SSMS on the table, copy and paste the columns, comment them out (Ctrl+K+C) and replace dashes with commas. This trick also works for ands and ors&lt;br /&gt;
&lt;br /&gt;
Two more useful things here:&lt;br /&gt;
Regular expressions to replace the text. &lt;br /&gt;
To convert the list of the columns to comparison like isnull(t1.column, 0) = isnull(t2.column, 0) you can highlight the column list, open Replace options, tick Use regexp box and replace {[a-z_0-9]+} with isnull(t1.1, 0) = isnull(t2.1, 0)&lt;br /&gt;
&lt;br /&gt;
Highlight blocks!&lt;br /&gt;
When you hold the Alt button and highlight the text, it is highlighted as block. It has lots of appliances like running commented query (say, the text script to exec a procedure in the header of it), but more interesting here is that it can be pasted as a block as well! Find and replace options also work with block selection.&lt;br /&gt;
&lt;br /&gt;
2. Try SSMS Tools - http://ssmstoolspack.com/&lt;br /&gt;
&lt;br /&gt;
3. Keyboard shortcuts are your friends! You have some predefined shortcuts (sp_help Alt+F1, sp_who Ctrl+1 and sp_lock Ctrl+2). You can also specify your own! The highlighted text would be added in the end of the shortcut command. Say, to see the sample data from the table, bind &quot;select top (100) * from &quot; to the Ctrl+digit and thats it.]]></description>
		<content:encoded><![CDATA[<p>1. I use sp_help to get the columns. Just press Alt+F1 in SSMS on the table, copy and paste the columns, comment them out (Ctrl+K+C) and replace dashes with commas. This trick also works for ands and ors</p>
<p>Two more useful things here:<br />
Regular expressions to replace the text. <br />
To convert the list of the columns to comparison like isnull(t1.column, 0) = isnull(t2.column, 0) you can highlight the column list, open Replace options, tick Use regexp box and replace {[a-z_0-9]+} with isnull(t1.1, 0) = isnull(t2.1, 0)</p>
<p>Highlight blocks!<br />
When you hold the Alt button and highlight the text, it is highlighted as block. It has lots of appliances like running commented query (say, the text script to exec a procedure in the header of it), but more interesting here is that it can be pasted as a block as well! Find and replace options also work with block selection.</p>
<p>2. Try SSMS Tools &#8211; <a href="http://ssmstoolspack.com/" rel="nofollow">http://ssmstoolspack.com/</a></p>
<p>3. Keyboard shortcuts are your friends! You have some predefined shortcuts (sp_help Alt+F1, sp_who Ctrl+1 and sp_lock Ctrl+2). You can also specify your own! The highlighted text would be added in the end of the shortcut command. Say, to see the sample data from the table, bind &#8220;select top (100) * from &#8221; to the Ctrl+digit and thats it.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/#comment-5270</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Mon, 23 Apr 2012 14:30:39 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/04/sql-server-developer-tips-and/#comment-5270</guid>
		<description><![CDATA[Nice post&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Here is also a way to do this in T-SQL if you don&#039;t have Excel or don&#039;t want to be bothered with Excel&lt;br /&gt;
I use code generation like this quite a lot actually&lt;br /&gt;
&lt;br /&gt;
This is just a simple example, a nicer one would be to take care of all data types and to format the output well, getting rid of the extra comma and the extra OR as well&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Anyway here it is, I picked the spt_values in the master database so that you can run it to see it in action&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
SELECT &#039;UPDATE t1&#039;&lt;br /&gt;
UNION all&lt;br /&gt;
SELECT &#039;SET&#039;&lt;br /&gt;
UNION all&lt;br /&gt;
SELECT &#039;t1.&#039; + column_name + &#039; = t2.&#039; + column_name +&#039;,&#039; FROM information_schema.COLUMNS&lt;br /&gt;
WHERE table_name = &#039;spt_values&#039;&lt;br /&gt;
UNION all&lt;br /&gt;
SELECT &#039;FROM Table1 t1  &lt;br /&gt;
JOIN Table2 t2 on t1.ID = t2.ID &lt;br /&gt;
WHERE &#039;   &lt;br /&gt;
UNION ALL&lt;br /&gt;
SELECT &#039;ISNULL(t1.&#039; + column_name + &#039;,&#039; + CASE WHEN DATA_TYPE LIKE &#039;%char%&#039; THEN &#039;&#039;&#039;&#039;&#039;&#039; ELSE &#039;0&#039; END &lt;br /&gt;
+ &#039;) &lt;&gt; ISNULL(t2.&#039; + column_name + &#039;,&#039; + CASE WHEN DATA_TYPE LIKE &#039;%char%&#039; THEN &#039;&#039;&#039;&#039;&#039;&#039; ELSE &#039;0&#039; END + &#039;) OR&#039;&lt;br /&gt;
 FROM information_schema.COLUMNS&lt;br /&gt;
WHERE table_name = &#039;spt_values&#039;&lt;br /&gt;
&lt;br /&gt;
produces the following output&lt;br /&gt;
&lt;br /&gt;
UPDATE t1&lt;br /&gt;
SET&lt;br /&gt;
t1.name = t2.name,&lt;br /&gt;
t1.number = t2.number,&lt;br /&gt;
t1.type = t2.type,&lt;br /&gt;
t1.low = t2.low,&lt;br /&gt;
t1.high = t2.high,&lt;br /&gt;
t1.status = t2.status,&lt;br /&gt;
FROM Table1 t1    JOIN Table2 t2 on t1.ID = t2.ID   WHERE &lt;br /&gt;
ISNULL(t1.name,&#039;&#039;) &lt;&gt; ISNULL(t2.name,&#039;&#039;) OR&lt;br /&gt;
ISNULL(t1.number,0) &lt;&gt; ISNULL(t2.number,0) OR&lt;br /&gt;
ISNULL(t1.type,&#039;&#039;) &lt;&gt; ISNULL(t2.type,&#039;&#039;) OR&lt;br /&gt;
ISNULL(t1.low,0) &lt;&gt; ISNULL(t2.low,0) OR&lt;br /&gt;
ISNULL(t1.high,0) &lt;&gt; ISNULL(t2.high,0) OR&lt;br /&gt;
ISNULL(t1.status,0) &lt;&gt; ISNULL(t2.status,0) OR&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Nice post</p>
<p>
Here is also a way to do this in T-SQL if you don&#8217;t have Excel or don&#8217;t want to be bothered with Excel<br />
I use code generation like this quite a lot actually</p>
<p>This is just a simple example, a nicer one would be to take care of all data types and to format the output well, getting rid of the extra comma and the extra OR as well</p>
<p>
Anyway here it is, I picked the spt_values in the master database so that you can run it to see it in action</p>
<p>
SELECT &#8216;UPDATE t1&#8217;<br />
UNION all<br />
SELECT &#8216;SET&#8217;<br />
UNION all<br />
SELECT &#8216;t1.&#8217; + column_name + &#8216; = t2.&#8217; + column_name +&#8217;,&#8217; FROM information_schema.COLUMNS<br />
WHERE table_name = &#8216;spt_values&#8217;<br />
UNION all<br />
SELECT &#8216;FROM Table1 t1  <br />
JOIN Table2 t2 on t1.ID = t2.ID <br />
WHERE &#8216;   <br />
UNION ALL<br />
SELECT &#8216;ISNULL(t1.&#8217; + column_name + &#8216;,&#8217; + CASE WHEN DATA_TYPE LIKE &#8216;%char%&#8217; THEN &#8221;&#8221;&#8221; ELSE &#8216;0&#8217; END <br />
+ &#8216;) <> ISNULL(t2.&#8217; + column_name + &#8216;,&#8217; + CASE WHEN DATA_TYPE LIKE &#8216;%char%&#8217; THEN &#8221;&#8221;&#8221; ELSE &#8216;0&#8217; END + &#8216;) OR&#8217;<br />
 FROM information_schema.COLUMNS<br />
WHERE table_name = &#8216;spt_values&#8217;</p>
<p>produces the following output</p>
<p>UPDATE t1<br />
SET<br />
t1.name = t2.name,<br />
t1.number = t2.number,<br />
t1.type = t2.type,<br />
t1.low = t2.low,<br />
t1.high = t2.high,<br />
t1.status = t2.status,<br />
FROM Table1 t1    JOIN Table2 t2 on t1.ID = t2.ID   WHERE <br />
ISNULL(t1.name,&#8221;) <> ISNULL(t2.name,&#8221;) OR<br />
ISNULL(t1.number,0) <> ISNULL(t2.number,0) OR<br />
ISNULL(t1.type,&#8221;) <> ISNULL(t2.type,&#8221;) OR<br />
ISNULL(t1.low,0) <> ISNULL(t2.low,0) OR<br />
ISNULL(t1.high,0) <> ISNULL(t2.high,0) OR<br />
ISNULL(t1.status,0) <> ISNULL(t2.status,0) OR</p>
<p></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: David Forck (thirster42)</title>
		<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/#comment-5269</link>
		<dc:creator><![CDATA[David Forck (thirster42)]]></dc:creator>
		<pubDate>Mon, 23 Apr 2012 12:59:37 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/04/sql-server-developer-tips-and/#comment-5269</guid>
		<description><![CDATA[@Rob Volk thank you!&lt;br /&gt;
&lt;br /&gt;
Yes it does, but it&#039;s all on one line.  If you script it out my way then it leads you nicely into the next section of pasting those columns into excel to build queries if you need to.  Using your way you&#039;d have to break them out either in sql server or in excel.]]></description>
		<content:encoded><![CDATA[<p>@Rob Volk thank you!</p>
<p>Yes it does, but it&#8217;s all on one line.  If you script it out my way then it leads you nicely into the next section of pasting those columns into excel to build queries if you need to.  Using your way you&#8217;d have to break them out either in sql server or in excel.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rob Volk</title>
		<link>/index.php/datamgmt/datadesign/sql-server-developer-tips-and/#comment-5268</link>
		<dc:creator><![CDATA[Rob Volk]]></dc:creator>
		<pubDate>Mon, 23 Apr 2012 12:37:11 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/04/sql-server-developer-tips-and/#comment-5268</guid>
		<description><![CDATA[Great list!&lt;br /&gt;
&lt;br /&gt;
Another quick way to get all the columns from a table is to click and drag the Columns folder from Object Explorer for the table you want.  It doesn&#039;t include brackets, but gives you a comma-separated list of all the columns in the table or view.]]></description>
		<content:encoded><![CDATA[<p>Great list!</p>
<p>Another quick way to get all the columns from a table is to click and drag the Columns folder from Object Explorer for the table you want.  It doesn&#8217;t include brackets, but gives you a comma-separated list of all the columns in the table or view.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
