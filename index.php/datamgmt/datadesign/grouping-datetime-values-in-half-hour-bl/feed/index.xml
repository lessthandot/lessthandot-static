<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Grouping datetime values in half hour blocks in SQL Server</title>
	<atom:link href="/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Diego B.</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-4953743</link>
		<dc:creator><![CDATA[Diego B.]]></dc:creator>
		<pubDate>Tue, 15 Mar 2016 19:02:32 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-4953743</guid>
		<description><![CDATA[Perfect!]]></description>
		<content:encoded><![CDATA[<p>Perfect!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Manohar</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-4803761</link>
		<dc:creator><![CDATA[Manohar]]></dc:creator>
		<pubDate>Wed, 02 Dec 2015 11:32:05 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-4803761</guid>
		<description><![CDATA[Owsm its works :) thank you so much]]></description>
		<content:encoded><![CDATA[<p>Owsm its works ðŸ™‚ thank you so much</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: sushil Jadhav</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-4254874</link>
		<dc:creator><![CDATA[sushil Jadhav]]></dc:creator>
		<pubDate>Tue, 12 May 2015 08:18:01 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-4254874</guid>
		<description><![CDATA[Perfect... Thanks George...]]></description>
		<content:encoded><![CDATA[<p>Perfect&#8230; Thanks George&#8230;</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: faraz</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-1026254</link>
		<dc:creator><![CDATA[faraz]]></dc:creator>
		<pubDate>Tue, 03 Jun 2014 08:08:48 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-1026254</guid>
		<description><![CDATA[that was great solved my problem also got the result I wanted.]]></description>
		<content:encoded><![CDATA[<p>that was great solved my problem also got the result I wanted.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Erik</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-1383</link>
		<dc:creator><![CDATA[Erik]]></dc:creator>
		<pubDate>Mon, 01 Jun 2009 14:37:52 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-1383</guid>
		<description><![CDATA[I prefer George&#039;s way, as well... I came to comment that exact thing.&lt;br /&gt;
&lt;br /&gt;
Just be careful of overflowing a long. This method fails some time in 5983. But in the year 5000, we can all switch to using an initial stamp date of, say &#039;40000101&#039; and we&#039;re good all the way until year 10000.&lt;br /&gt;
&lt;br /&gt;
Select dateadd(minute, 2147483647, 0)&lt;br /&gt;
5983-01-24 02:07:00.000&lt;br /&gt;
&lt;br /&gt;
While this may sound silly, it does become an issue for millisecond calculations:&lt;br /&gt;
&lt;br /&gt;
select dateadd(ms, 2147483647, 0)&lt;br /&gt;
1900-01-25 20:31:23.647&lt;br /&gt;
&lt;br /&gt;
And I&#039;ve run into this before... so pick your expressions wisely.]]></description>
		<content:encoded><![CDATA[<p>I prefer George&#8217;s way, as well&#8230; I came to comment that exact thing.</p>
<p>Just be careful of overflowing a long. This method fails some time in 5983. But in the year 5000, we can all switch to using an initial stamp date of, say &#8216;40000101&#8217; and we&#8217;re good all the way until year 10000.</p>
<p>Select dateadd(minute, 2147483647, 0)<br />
5983-01-24 02:07:00.000</p>
<p>While this may sound silly, it does become an issue for millisecond calculations:</p>
<p>select dateadd(ms, 2147483647, 0)<br />
1900-01-25 20:31:23.647</p>
<p>And I&#8217;ve run into this before&#8230; so pick your expressions wisely.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: George Mastros (gmmastros)</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-1382</link>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
		<pubDate>Sat, 30 May 2009 12:15:14 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-1382</guid>
		<description><![CDATA[Like you said, there are multiple ways to get the same results.  I think it&#039;s easier to do this:&lt;br /&gt;
&lt;br /&gt;
Select Count(*), DateAdd(Minute, 30 * (DateDiff(Minute, 0, SomeDate) / 30), 0)&lt;br /&gt;
From   #Temp&lt;br /&gt;
Group By DateAdd(Minute, 30 * (DateDiff(Minute, 0, SomeDate) / 30), 0)&lt;br /&gt;
&lt;br /&gt;
Basically, I calculate the number of minutes that have elapsed since Jan 1, 1900.  I first divide by 30 (using integer division) and then multiply by 30 and convert back to a date.&lt;br /&gt;
&lt;br /&gt;
If you want 15 minute intervals, simply change all the 30&#039;s to 15&#039;s.&lt;br /&gt;
&lt;br /&gt;
In my opinion, this is easier to understand, easier to implement, and easier to maintain.&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Like you said, there are multiple ways to get the same results.  I think it&#8217;s easier to do this:</p>
<p>Select Count(*), DateAdd(Minute, 30 * (DateDiff(Minute, 0, SomeDate) / 30), 0)<br />
From   #Temp<br />
Group By DateAdd(Minute, 30 * (DateDiff(Minute, 0, SomeDate) / 30), 0)</p>
<p>Basically, I calculate the number of minutes that have elapsed since Jan 1, 1900.  I first divide by 30 (using integer division) and then multiply by 30 and convert back to a date.</p>
<p>If you want 15 minute intervals, simply change all the 30&#8217;s to 15&#8217;s.</p>
<p>In my opinion, this is easier to understand, easier to implement, and easier to maintain.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mike Adams</title>
		<link>/index.php/datamgmt/datadesign/grouping-datetime-values-in-half-hour-bl/#comment-1381</link>
		<dc:creator><![CDATA[Mike Adams]]></dc:creator>
		<pubDate>Fri, 29 May 2009 18:36:54 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/05/grouping-datetime-values-in-half-hour-bl/#comment-1381</guid>
		<description><![CDATA[This is a great example. Thanks for sharing it.]]></description>
		<content:encoded><![CDATA[<p>This is a great example. Thanks for sharing it.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
