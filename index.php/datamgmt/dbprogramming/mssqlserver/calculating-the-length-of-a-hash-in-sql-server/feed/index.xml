<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Calculating the length of a hash in SQL Server</title>
	<atom:link href="/index.php/datamgmt/dbprogramming/mssqlserver/calculating-the-length-of-a-hash-in-sql-server/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/dbprogramming/mssqlserver/calculating-the-length-of-a-hash-in-sql-server/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Koen Verbeeck</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/calculating-the-length-of-a-hash-in-sql-server/#comment-153179</link>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
		<pubDate>Sat, 15 Feb 2014 13:14:51 +0000</pubDate>
		<guid isPermaLink="false">/?p=2343#comment-153179</guid>
		<description><![CDATA[I don&#039;t mention it here (I have an article coming out on the topic), but I use this technique in SSIS packages to detect changes and for this I use a conditional split. However, SSIS expression can&#039;t compare binary, you need to use strings (boohoo SSIS).]]></description>
		<content:encoded><![CDATA[<p>I don&#8217;t mention it here (I have an article coming out on the topic), but I use this technique in SSIS packages to detect changes and for this I use a conditional split. However, SSIS expression can&#8217;t compare binary, you need to use strings (boohoo SSIS).</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: George Mastros (gmmastros)</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/calculating-the-length-of-a-hash-in-sql-server/#comment-131592</link>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
		<pubDate>Tue, 11 Feb 2014 13:46:01 +0000</pubDate>
		<guid isPermaLink="false">/?p=2343#comment-131592</guid>
		<description><![CDATA[I&#039;m curious.  Why didn&#039;t you store the data as binary(32).  According to the documentation, HasyBytes returns a varbinary and SHA2_256 returns 256 bits which is 32 bytes.

This would save you the loop in the c# code and 34 bytes per row in the SQL table.

You could also use varbinary to store the data, but varbinary requires 36 bytes to store 32 bytes of data.  The extra 4 bytes are meta data (to the store actual length).  Since SHA2_256 always returns 32 bytes, a binary(32) would make sense.]]></description>
		<content:encoded><![CDATA[<p>I&#8217;m curious.  Why didn&#8217;t you store the data as binary(32).  According to the documentation, HasyBytes returns a varbinary and SHA2_256 returns 256 bits which is 32 bytes.</p>
<p>This would save you the loop in the c# code and 34 bytes per row in the SQL table.</p>
<p>You could also use varbinary to store the data, but varbinary requires 36 bytes to store 32 bytes of data.  The extra 4 bytes are meta data (to the store actual length).  Since SHA2_256 always returns 32 bytes, a binary(32) would make sense.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
