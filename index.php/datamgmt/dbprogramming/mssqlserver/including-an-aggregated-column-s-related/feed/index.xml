<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Including an Aggregated Column&#8217;s Related Values</title>
	<atom:link href="/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: sql server只使用最近的值选择不同的行 &#8211; CodingBlog</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-5681514</link>
		<dc:creator><![CDATA[sql server只使用最近的值选择不同的行 &#8211; CodingBlog]]></dc:creator>
		<pubDate>Thu, 08 Jun 2017 19:59:16 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-5681514</guid>
		<description><![CDATA[[&#8230;] also Including an Aggregated Column&#8217;s Related Values for 5 different ways to do this kind of [&#8230;]]]></description>
		<content:encoded><![CDATA[<p>[&#8230;] also Including an Aggregated Column&#8217;s Related Values for 5 different ways to do this kind of [&#8230;]</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Samuel Lilleker</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1568</link>
		<dc:creator><![CDATA[Samuel Lilleker]]></dc:creator>
		<pubDate>Tue, 02 Oct 2012 11:47:12 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1568</guid>
		<description><![CDATA[Thanks for this post helped me loads!&lt;br /&gt;
&lt;br /&gt;
I am using this as part of a script to grab unique email addresses attached to user accounts as part of migrating to a new website. The new site has different user account restraints ie unique emails. old site many user account could have the same email addresses so had to find the usernames with most recent activity. Thanks again!]]></description>
		<content:encoded><![CDATA[<p>Thanks for this post helped me loads!</p>
<p>I am using this as part of a script to grab unique email addresses attached to user accounts as part of migrating to a new website. The new site has different user account restraints ie unique emails. old site many user account could have the same email addresses so had to find the usernames with most recent activity. Thanks again!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1582</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Fri, 24 Feb 2012 19:32:56 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1582</guid>
		<description><![CDATA[Did you see this blog post&lt;br /&gt;
&lt;a href=&quot;/index.php/DataMgmt/DataDesign/including-an-aggregated-column-s-related-2&quot;&gt;Including aggregated column&#039;s related values - part 2&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
The reference is at the bottom of this blog post]]></description>
		<content:encoded><![CDATA[<p>Did you see this blog post<br />
<a href="/index.php/DataMgmt/DataDesign/including-an-aggregated-column-s-related-2">Including aggregated column&#8217;s related values &#8211; part 2</a></p>
<p>The reference is at the bottom of this blog post</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: bob</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1581</link>
		<dc:creator><![CDATA[bob]]></dc:creator>
		<pubDate>Fri, 24 Feb 2012 16:02:12 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1581</guid>
		<description><![CDATA[This is a great summay of different approaches.  It would be really helpful if it could be supplemented by some example performance data.]]></description>
		<content:encoded><![CDATA[<p>This is a great summay of different approaches.  It would be really helpful if it could be supplemented by some example performance data.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Erik</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1578</link>
		<dc:creator><![CDATA[Erik]]></dc:creator>
		<pubDate>Wed, 02 Nov 2011 14:39:30 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1578</guid>
		<description><![CDATA[@Paul,&lt;br /&gt;
&lt;br /&gt;
As long as the max value is unique per parent scope you are in good shape with that method. Saving values temporarily to a table is often a good way to increase performance as this uses a smaller resource footprint and guarantees the engine&#039;s fast choice of correct execution plan for each individual step.&lt;br /&gt;
&lt;br /&gt;
I would, however, caution against storing temporary Max values in parent tables. If the column is intended to be permanent, then your table is badly denormalized and the value can become out of synch. If the column is intended to be temporary, then one shouldn&#039;t be mucking up the transaction log with spurious updates to a table that hasn&#039;t actually changed. Instead, I would use a temp table, which will only affect tempdb and for any appreciable number of rows could be superior to a table variable as it will have statistics aiding in execution plan choice.]]></description>
		<content:encoded><![CDATA[<p>@Paul,</p>
<p>As long as the max value is unique per parent scope you are in good shape with that method. Saving values temporarily to a table is often a good way to increase performance as this uses a smaller resource footprint and guarantees the engine&#8217;s fast choice of correct execution plan for each individual step.</p>
<p>I would, however, caution against storing temporary Max values in parent tables. If the column is intended to be permanent, then your table is badly denormalized and the value can become out of synch. If the column is intended to be temporary, then one shouldn&#8217;t be mucking up the transaction log with spurious updates to a table that hasn&#8217;t actually changed. Instead, I would use a temp table, which will only affect tempdb and for any appreciable number of rows could be superior to a table variable as it will have statistics aiding in execution plan choice.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Paul</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1577</link>
		<dc:creator><![CDATA[Paul]]></dc:creator>
		<pubDate>Wed, 02 Nov 2011 10:20:12 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1577</guid>
		<description><![CDATA[Very useful post. I only use SQL2000 and had come up with method 1 from my own first principles. &lt;br /&gt;
&lt;br /&gt;
Method 2 was very ineresting and for my complex piece of work was more efficient.&lt;br /&gt;
&lt;br /&gt;
I did however eventually use a method not listed here. I precalculated the value I needed and stored that max value on the parent table (couldn&#039;t use a #temp). The execution time pre-calculation plus the actual query together was less than either method 1 or 2.&lt;br /&gt;
&lt;br /&gt;
Perhaps not elegant or normalised but it was faster.]]></description>
		<content:encoded><![CDATA[<p>Very useful post. I only use SQL2000 and had come up with method 1 from my own first principles. </p>
<p>Method 2 was very ineresting and for my complex piece of work was more efficient.</p>
<p>I did however eventually use a method not listed here. I precalculated the value I needed and stored that max value on the parent table (couldn&#8217;t use a #temp). The execution time pre-calculation plus the actual query together was less than either method 1 or 2.</p>
<p>Perhaps not elegant or normalised but it was faster.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1576</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Fri, 30 Apr 2010 02:09:59 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1576</guid>
		<description><![CDATA[I made some changes today based on &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/0217ddf4-bcab-4f2b-a81c-70841753cb23&quot;&gt;this thread&lt;/a&gt;.]]></description>
		<content:encoded><![CDATA[<p>I made some changes today based on <a href="http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/0217ddf4-bcab-4f2b-a81c-70841753cb23">this thread</a>.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1579</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 10 Mar 2010 13:53:10 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1579</guid>
		<description><![CDATA[Please see this thread &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/36fa158c-184a-45fa-8875-9a4ffff33c3b&quot;&gt; for an interesting discussion&lt;/a&gt; - looks like we may want to perform more tests.]]></description>
		<content:encoded><![CDATA[<p>Please see this thread <a href="http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/36fa158c-184a-45fa-8875-9a4ffff33c3b"> for an interesting discussion</a> &#8211; looks like we may want to perform more tests.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Erik</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1574</link>
		<dc:creator><![CDATA[Erik]]></dc:creator>
		<pubDate>Wed, 11 Nov 2009 21:43:52 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1574</guid>
		<description><![CDATA[Thank you, Mark! You are correct. I will fix the blog post. For style 126, the milliseconds portion of the date is left off when it is zero. This is very disappointing because in Books Online it says:&lt;br /&gt;
&lt;br /&gt;
CAST and CONVERT (Transact-SQL) &lt;br /&gt;
Style 126&lt;br /&gt;
Standard ISO8601&lt;br /&gt;
Input/Output yyyy-mm-ddThh:mm:ss.mmm (no spaces)&lt;br /&gt;
&lt;br /&gt;
This led me to believe that it would always display mmm. There is no notation about mmm being suppressed when milliseconds are 0.&lt;br /&gt;
&lt;br /&gt;
It looks like style 121 (ODBC canonical with milliseconds) is now demonstrably superior to style 127, no thanks to Microsoft.]]></description>
		<content:encoded><![CDATA[<p>Thank you, Mark! You are correct. I will fix the blog post. For style 126, the milliseconds portion of the date is left off when it is zero. This is very disappointing because in Books Online it says:</p>
<p>CAST and CONVERT (Transact-SQL) <br />
Style 126<br />
Standard ISO8601<br />
Input/Output yyyy-mm-ddThh:mm:ss.mmm (no spaces)</p>
<p>This led me to believe that it would always display mmm. There is no notation about mmm being suppressed when milliseconds are 0.</p>
<p>It looks like style 121 (ODBC canonical with milliseconds) is now demonstrably superior to style 127, no thanks to Microsoft.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mark</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/including-an-aggregated-column-s-related/#comment-1573</link>
		<dc:creator><![CDATA[Mark]]></dc:creator>
		<pubDate>Wed, 11 Nov 2009 20:50:49 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/07/including-an-aggregated-column-s-related/#comment-1573</guid>
		<description><![CDATA[Hi Emtucifor&lt;br /&gt;
&lt;br /&gt;
Please look at these dates&lt;br /&gt;
&lt;br /&gt;
2009-07-27 12:22:44.537      datetime     &lt;br /&gt;
2009-07-27T12:22:44.537      Style 126&lt;br /&gt;
&lt;br /&gt;
2005-11-21 00:00:00.000      datetime    &lt;br /&gt;
2005-11-21T00:00:00          Style 126&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
When the time portion of the datetime is zero it will have a smaller length.&lt;br /&gt;
&lt;br /&gt;
Zero Time is very common in migrated dates from a database with dates only.&lt;br /&gt;
&lt;br /&gt;
Please advise if you get the same results or if I have made a mistake&lt;br /&gt;
&lt;br /&gt;
regards&lt;br /&gt;
Mark&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Hi Emtucifor</p>
<p>Please look at these dates</p>
<p>2009-07-27 12:22:44.537      datetime     <br />
2009-07-27T12:22:44.537      Style 126</p>
<p>2005-11-21 00:00:00.000      datetime    <br />
2005-11-21T00:00:00          Style 126</p>
<p>
When the time portion of the datetime is zero it will have a smaller length.</p>
<p>Zero Time is very common in migrated dates from a database with dates only.</p>
<p>Please advise if you get the same results or if I have made a mistake</p>
<p>regards<br />
Mark</p>
]]></content:encoded>
	</item>
</channel>
</rss>
