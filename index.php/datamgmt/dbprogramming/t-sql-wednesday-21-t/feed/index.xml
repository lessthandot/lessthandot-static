<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: T-SQL Wednesday #21 â€“ T-SQL That Should Have Been Flushed Down the Toilet</title>
	<atom:link href="/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Yaroslav</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4607</link>
		<dc:creator><![CDATA[Yaroslav]]></dc:creator>
		<pubDate>Wed, 22 Feb 2012 14:18:39 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4607</guid>
		<description><![CDATA[Right now this is the problem I&#039;m facing. Started with a really slow query, then began to go deeper and deeper and for the moment I&#039;ve found at least 6 nested views...ouch! I&#039;m trying to find out how to improve the performance. Can anyone show an example or paste a link to a usefull page? I&#039;ve already found some articles on the subject but still struggling to find the best way to do this...thanks!]]></description>
		<content:encoded><![CDATA[<p>Right now this is the problem I&#8217;m facing. Started with a really slow query, then began to go deeper and deeper and for the moment I&#8217;ve found at least 6 nested views&#8230;ouch! I&#8217;m trying to find out how to improve the performance. Can anyone show an example or paste a link to a usefull page? I&#8217;ve already found some articles on the subject but still struggling to find the best way to do this&#8230;thanks!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mike Irwin</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4606</link>
		<dc:creator><![CDATA[Mike Irwin]]></dc:creator>
		<pubDate>Sat, 13 Aug 2011 00:25:11 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4606</guid>
		<description><![CDATA[Thanks, Jes. All too uncomfortably accurate!]]></description>
		<content:encoded><![CDATA[<p>Thanks, Jes. All too uncomfortably accurate!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Matt Velic</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4605</link>
		<dc:creator><![CDATA[Matt Velic]]></dc:creator>
		<pubDate>Thu, 11 Aug 2011 17:00:28 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4605</guid>
		<description><![CDATA[Yep, Jes, great minds do indeed think alike. :)]]></description>
		<content:encoded><![CDATA[<p>Yep, Jes, great minds do indeed think alike. ðŸ™‚</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: sqlsister</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4604</link>
		<dc:creator><![CDATA[sqlsister]]></dc:creator>
		<pubDate>Thu, 11 Aug 2011 16:51:38 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4604</guid>
		<description><![CDATA[Yes yes a million times yes. I have worked with one database where the appliation developers thought abstraction was critical and so did everything in views. Views that called views that called other views down so many levels they actually hit the SQL Server limit (and inreality were only hitting the same 9-10 tables). They didn&#039;t understand that when you do that SQL server has no choice but to completely generate the recordset for all those subordinate views and so for a query that might return 3 records at the end, they had to generate millions and in some cases even billions of rows first. We almost lost the client over the bad performance. Over abstraction in the database is often the worst choice. There&#039;s a reason why the designers of the database software chose to make those kinds of views un-updateable and unindexable (at the view level, the underlying tables can still have indexes).  It should have been a clue that they didn&#039;t want to encourage you to do such a thing.&lt;br /&gt;
&lt;br /&gt;
Plus try needing to change these monsters to change how something is calculated and the calcluation is down inthe 12th view down. Not an experience I would ever choose to repeat. &lt;br /&gt;
&lt;br /&gt;
Less maintainable and slower, good design choice.]]></description>
		<content:encoded><![CDATA[<p>Yes yes a million times yes. I have worked with one database where the appliation developers thought abstraction was critical and so did everything in views. Views that called views that called other views down so many levels they actually hit the SQL Server limit (and inreality were only hitting the same 9-10 tables). They didn&#8217;t understand that when you do that SQL server has no choice but to completely generate the recordset for all those subordinate views and so for a query that might return 3 records at the end, they had to generate millions and in some cases even billions of rows first. We almost lost the client over the bad performance. Over abstraction in the database is often the worst choice. There&#8217;s a reason why the designers of the database software chose to make those kinds of views un-updateable and unindexable (at the view level, the underlying tables can still have indexes).  It should have been a clue that they didn&#8217;t want to encourage you to do such a thing.</p>
<p>Plus try needing to change these monsters to change how something is calculated and the calcluation is down inthe 12th view down. Not an experience I would ever choose to repeat. </p>
<p>Less maintainable and slower, good design choice.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: LNBruno</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4603</link>
		<dc:creator><![CDATA[LNBruno]]></dc:creator>
		<pubDate>Wed, 10 Aug 2011 18:06:56 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4603</guid>
		<description><![CDATA[Best piece of advice I ever got:&lt;br /&gt;
&lt;br /&gt;
If you want to see some of the worst code in the world, take a look at what you wrote six months ago.&lt;br /&gt;
&lt;br /&gt;
(although that time I stumbled across a cursor inside a two-layer deep nested view... shudder)]]></description>
		<content:encoded><![CDATA[<p>Best piece of advice I ever got:</p>
<p>If you want to see some of the worst code in the world, take a look at what you wrote six months ago.</p>
<p>(although that time I stumbled across a cursor inside a two-layer deep nested view&#8230; shudder)</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4602</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 10 Aug 2011 15:34:28 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4602</guid>
		<description><![CDATA[I also learned a hard way that referencing the same complex CTE in one query is terrible for performance as well. In certain scenarios it&#039;s better to put results of the intermediate calculation into a temp table if that result needs to be referenced several times in one query.&lt;br /&gt;
&lt;br /&gt;
Also, although ROW_NUMBER() and the like functions can be very handy, but if for particular type of calculation they are not needed (needed for a different type), it&#039;s better to not stick them in just to use the generic SP, as they do also slow down the query performance.]]></description>
		<content:encoded><![CDATA[<p>I also learned a hard way that referencing the same complex CTE in one query is terrible for performance as well. In certain scenarios it&#8217;s better to put results of the intermediate calculation into a temp table if that result needs to be referenced several times in one query.</p>
<p>Also, although ROW_NUMBER() and the like functions can be very handy, but if for particular type of calculation they are not needed (needed for a different type), it&#8217;s better to not stick them in just to use the generic SP, as they do also slow down the query performance.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: David Forck (thirster42)</title>
		<link>/index.php/datamgmt/dbprogramming/t-sql-wednesday-21-t/#comment-4601</link>
		<dc:creator><![CDATA[David Forck (thirster42)]]></dc:creator>
		<pubDate>Wed, 10 Aug 2011 13:20:43 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/08/t-sql-wednesday-21-t/#comment-4601</guid>
		<description><![CDATA[yes, yes, and yes.  great blog!]]></description>
		<content:encoded><![CDATA[<p>yes, yes, and yes.  great blog!</p>
]]></content:encoded>
	</item>
</channel>
</rss>
