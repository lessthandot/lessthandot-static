<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Best Practice: Every table should have a primary key</title>
	<atom:link href="/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: George Mastros (gmmastros)</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2125</link>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
		<pubDate>Wed, 14 Mar 2012 18:30:16 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2125</guid>
		<description><![CDATA[You could argue that if the table doesn&#039;t need to be queried, then you don&#039;t need that table.&lt;br /&gt;
&lt;br /&gt;
Sounds like you just came up with a good blog post.  Test the table insertion with a heap table and then again with a non-heap table.  Compare the performance.  I suspect that a single clustered index on a table won&#039;t make a difference as long as you are using an identity for the primary key or a DateTime + Other column(s).  The difference in insert time will be minimal (almost non-existent) in my opinion.  The only way to know for sure would be to test it.]]></description>
		<content:encoded><![CDATA[<p>You could argue that if the table doesn&#8217;t need to be queried, then you don&#8217;t need that table.</p>
<p>Sounds like you just came up with a good blog post.  Test the table insertion with a heap table and then again with a non-heap table.  Compare the performance.  I suspect that a single clustered index on a table won&#8217;t make a difference as long as you are using an identity for the primary key or a DateTime + Other column(s).  The difference in insert time will be minimal (almost non-existent) in my opinion.  The only way to know for sure would be to test it.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2124</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 14 Mar 2012 18:14:11 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2124</guid>
		<description><![CDATA[Thanks. Assuming that table doesn&#039;t need to be queried, is having the table as a heap allow for faster insertion or not if the table has a clustered index?]]></description>
		<content:encoded><![CDATA[<p>Thanks. Assuming that table doesn&#8217;t need to be queried, is having the table as a heap allow for faster insertion or not if the table has a clustered index?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: George Mastros (gmmastros)</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2123</link>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
		<pubDate>Wed, 14 Mar 2012 13:34:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2123</guid>
		<description><![CDATA[I have plenty of auditing tables in my database.  None of them are heaps because at some point I want to do something with them.  My auditing tables have a column for AuditDateTime (plus other columns).  This works well for auditing tables because rows are never updated and inserted rows always go at the end of the table. This prevents fragmentation and also allows for fast looks on the auditing data.]]></description>
		<content:encoded><![CDATA[<p>I have plenty of auditing tables in my database.  None of them are heaps because at some point I want to do something with them.  My auditing tables have a column for AuditDateTime (plus other columns).  This works well for auditing tables because rows are never updated and inserted rows always go at the end of the table. This prevents fragmentation and also allows for fast looks on the auditing data.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2122</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Wed, 14 Mar 2012 13:17:04 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2122</guid>
		<description><![CDATA[When it&#039;s OK to have a heap table? Say, the table is used for auditing purposes - is it OK to leave it as a heap?]]></description>
		<content:encoded><![CDATA[<p>When it&#8217;s OK to have a heap table? Say, the table is used for auditing purposes &#8211; is it OK to leave it as a heap?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: George Mastros (gmmastros)</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2127</link>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
		<pubDate>Tue, 23 Aug 2011 15:27:12 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2127</guid>
		<description><![CDATA[Naomi,&lt;br /&gt;
&lt;br /&gt;
I&#039;m saying it is easy to detect which tables to not have primary keys, and relatively easy to add them.  All of the rules change when you are working with huge tables.  It&#039;s still relatively easy, but it could be costly in terms of time, log file usage and disk usage.]]></description>
		<content:encoded><![CDATA[<p>Naomi,</p>
<p>I&#8217;m saying it is easy to detect which tables to not have primary keys, and relatively easy to add them.  All of the rules change when you are working with huge tables.  It&#8217;s still relatively easy, but it could be costly in terms of time, log file usage and disk usage.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2126</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Tue, 23 Aug 2011 15:10:33 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2126</guid>
		<description><![CDATA[Are you saying it&#039;s easy to add a new clustered primary key on a huge table?]]></description>
		<content:encoded><![CDATA[<p>Are you saying it&#8217;s easy to add a new clustered primary key on a huge table?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2121</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Thu, 17 Feb 2011 18:12:46 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2121</guid>
		<description><![CDATA[Are there any exceptions to the rule? Say, when would you want to have a heap table?&lt;br /&gt;
And also, when would we have a PK, but no clustered key? What will happen in that situation?]]></description>
		<content:encoded><![CDATA[<p>Are there any exceptions to the rule? Say, when would you want to have a heap table?<br />
And also, when would we have a PK, but no clustered key? What will happen in that situation?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/dbprogramming/best-practice-every-table-should-have-a/#comment-2128</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Thu, 12 Nov 2009 00:41:39 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/11/best-practice-every-table-should-have-a/#comment-2128</guid>
		<description><![CDATA[I agree with this....can&#039;t remember how many times I had to clean up tables and even worse with child tables (but no pk --&gt; fk) running group by having count(*) &gt; 1&lt;br /&gt;
&lt;br /&gt;
figuring out how to merge the data  etc etc&lt;br /&gt;
&lt;br /&gt;
try deleting a row that has no PK with dups from the GUI]]></description>
		<content:encoded><![CDATA[<p>I agree with this&#8230;.can&#8217;t remember how many times I had to clean up tables and even worse with child tables (but no pk &#8211;> fk) running group by having count(*) > 1</p>
<p>figuring out how to merge the data  etc etc</p>
<p>try deleting a row that has no PK with dups from the GUI</p>
]]></content:encoded>
	</item>
</channel>
</rss>
