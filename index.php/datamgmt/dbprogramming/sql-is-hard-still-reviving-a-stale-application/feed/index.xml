<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: SQL is Hard (still): Reviving a stale application</title>
	<atom:link href="/index.php/datamgmt/dbprogramming/sql-is-hard-still-reviving-a-stale-application/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/dbprogramming/sql-is-hard-still-reviving-a-stale-application/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/datamgmt/dbprogramming/sql-is-hard-still-reviving-a-stale-application/#comment-6023727</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Sun, 25 Feb 2018 18:21:06 +0000</pubDate>
		<guid isPermaLink="false">/?p=8853#comment-6023727</guid>
		<description><![CDATA[Thanks! Like other aspects of this system, it seems a little out of date now, 5 years in the future. I&#039;ll dig in and see if I can document it (or maybe upgrade it with everything else I&#039;ve learned and document it).

At a high-level, it&#039;s using TeamCity as a build server, like many of my other side projects. The tricky part is that it&#039;s applying database updates to two different databases while dpeloying the updated website files. So after running a Continuous Integration step that includes Nunit unit tests (server-side C#) and Jasmine unit tests (client-side JS), it then runs 2 powershell scripts to compile update scripts and run them against 2 pre-production databases to make sure they work and apply correctly. It then deploys the website code to a local webserver configured against those two databases and runs 10 more UI tests, using Selenium and Headless Chrome, to make sure things are reasonably working all the way down. Only once all of these are successful, does it run the database migrations and website deploy against Azure, where the production databases and website lives.]]></description>
		<content:encoded><![CDATA[<p>Thanks! Like other aspects of this system, it seems a little out of date now, 5 years in the future. I&#8217;ll dig in and see if I can document it (or maybe upgrade it with everything else I&#8217;ve learned and document it).</p>
<p>At a high-level, it&#8217;s using TeamCity as a build server, like many of my other side projects. The tricky part is that it&#8217;s applying database updates to two different databases while dpeloying the updated website files. So after running a Continuous Integration step that includes Nunit unit tests (server-side C#) and Jasmine unit tests (client-side JS), it then runs 2 powershell scripts to compile update scripts and run them against 2 pre-production databases to make sure they work and apply correctly. It then deploys the website code to a local webserver configured against those two databases and runs 10 more UI tests, using Selenium and Headless Chrome, to make sure things are reasonably working all the way down. Only once all of these are successful, does it run the database migrations and website deploy against Azure, where the production databases and website lives.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: BVB</title>
		<link>/index.php/datamgmt/dbprogramming/sql-is-hard-still-reviving-a-stale-application/#comment-6018983</link>
		<dc:creator><![CDATA[BVB]]></dc:creator>
		<pubDate>Tue, 20 Feb 2018 22:00:55 +0000</pubDate>
		<guid isPermaLink="false">/?p=8853#comment-6018983</guid>
		<description><![CDATA[Thank you for providing this resources for free.  As a trainer, IMHO it is an excellent no-frills tool with enough flexibility in evaluating student answers to prevent the very common &quot;answer works but isn&#039;t accepted&quot; scenario.

Obviously at your discretion but it would be extremely beneficial to see the source for the update pipeline you describe.  Thank you, again.

-- Grateful Blog Subscriber]]></description>
		<content:encoded><![CDATA[<p>Thank you for providing this resources for free.  As a trainer, IMHO it is an excellent no-frills tool with enough flexibility in evaluating student answers to prevent the very common &#8220;answer works but isn&#8217;t accepted&#8221; scenario.</p>
<p>Obviously at your discretion but it would be extremely beneficial to see the source for the update pipeline you describe.  Thank you, again.</p>
<p>&#8212; Grateful Blog Subscriber</p>
]]></content:encoded>
	</item>
</channel>
</rss>
