<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Finding Out How Many Times A Table Is Being Used In Ad Hoc Or Procedure Calls In SQL Server 2005 And 2008</title>
	<atom:link href="/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Naomi Nosonovsky</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1641</link>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
		<pubDate>Thu, 15 Sep 2011 01:22:21 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1641</guid>
		<description><![CDATA[Great blog post, but I&#039;m getting the results I have no explanation for. Using this query&lt;br /&gt;
&lt;br /&gt;
SELECT * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid),&#039;Ad-Hoc&#039;) AS ProcName,execution_count,&lt;br /&gt;
    (SELECT TOP 1 SUBSTRING(s2.TEXT,statement_start_offset / 2+1 ,&lt;br /&gt;
      ( (CASE WHEN statement_end_offset = -1&lt;br /&gt;
         THEN (LEN(CONVERT(NVARCHAR(MAX),s2.TEXT)) * 2)&lt;br /&gt;
         ELSE statement_end_offset END)  - statement_start_offset) / 2+1))  AS sql_statement,&lt;br /&gt;
       last_execution_time&lt;br /&gt;
FROM sys.dm_exec_query_stats AS s1&lt;br /&gt;
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2 ) x&lt;br /&gt;
ORDER BY last_execution_time DESC&lt;br /&gt;
&lt;br /&gt;
I am seeing procedures every few seconds which I know I&#039;m definitely not running. I ran my own SP to test and it&#039;s not in the results, but two strange SPs are in the result.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;
I figured out the problem with the help of Tom Cooper&lt;br /&gt;
See the following thread in MSDN forum&lt;br /&gt;
&lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/ea0690eb-151c-4e67-b3f0-fb41fddfd845&quot;&gt;Weird results with DMV&lt;/a&gt;]]></description>
		<content:encoded><![CDATA[<p>Great blog post, but I&#8217;m getting the results I have no explanation for. Using this query</p>
<p>SELECT * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid),&#8217;Ad-Hoc&#8217;) AS ProcName,execution_count,<br />
    (SELECT TOP 1 SUBSTRING(s2.TEXT,statement_start_offset / 2+1 ,<br />
      ( (CASE WHEN statement_end_offset = -1<br />
         THEN (LEN(CONVERT(NVARCHAR(MAX),s2.TEXT)) * 2)<br />
         ELSE statement_end_offset END)  &#8211; statement_start_offset) / 2+1))  AS sql_statement,<br />
       last_execution_time<br />
FROM sys.dm_exec_query_stats AS s1<br />
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2 ) x<br />
ORDER BY last_execution_time DESC</p>
<p>I am seeing procedures every few seconds which I know I&#8217;m definitely not running. I ran my own SP to test and it&#8217;s not in the results, but two strange SPs are in the result.</p>
<p>I figured out the problem with the help of Tom Cooper<br />
See the following thread in MSDN forum<br />
<a href="http://social.msdn.microsoft.com/Forums/en-US/transactsql/thread/ea0690eb-151c-4e67-b3f0-fb41fddfd845">Weird results with DMV</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1640</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Mon, 10 Aug 2009 11:03:32 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1640</guid>
		<description><![CDATA[Kiran ,&lt;br /&gt;
&lt;br /&gt;
you are absolutely right about the underscore]]></description>
		<content:encoded><![CDATA[<p>Kiran ,</p>
<p>you are absolutely right about the underscore</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Kiran</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1639</link>
		<dc:creator><![CDATA[Kiran]]></dc:creator>
		<pubDate>Mon, 10 Aug 2009 11:00:57 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1639</guid>
		<description><![CDATA[Another thing to watch out for - the LIKE clause you&#039;re using has an underscore in it (&quot;WHERE sql_statement like &#039;%spt_values%&#039;&quot;)&lt;br /&gt;
&lt;br /&gt;
T-SQL interprets the underscore as basically meaning &quot;wildcard for one character&quot;. So, the search would find any string that had the words &quot;spt&quot;, followed by any character, followed by &quot;values&quot;. EG:&lt;br /&gt;
&lt;br /&gt;
IF &#039;ABCdEFG&#039; LIKE &#039;%c_e%&#039;&lt;br /&gt;
	PRINT &#039;YES&#039;&lt;br /&gt;
ELSE&lt;br /&gt;
	PRINT &#039;NO&#039;&lt;br /&gt;
&lt;br /&gt;
will print &quot;YES&quot;, because in the string &#039;ABCdEFG&#039;, &quot;c&quot; + any character + &quot;e&quot; does appear.&lt;br /&gt;
&lt;br /&gt;
So, what you actually want in there, is this:&lt;br /&gt;
&lt;br /&gt;
&quot;WHERE sql_statement like &#039;%spt[_]values%&#039;&quot;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Found your article very interesting though. I even adapted it as a stored proc, and set up another stored proc that would loop through all my tables in my database, and see which ones were seldomly used, so I could then investigate whether I wanted to delete those tables or not.]]></description>
		<content:encoded><![CDATA[<p>Another thing to watch out for &#8211; the LIKE clause you&#8217;re using has an underscore in it (&#8220;WHERE sql_statement like &#8216;%spt_values%'&#8221;)</p>
<p>T-SQL interprets the underscore as basically meaning &#8220;wildcard for one character&#8221;. So, the search would find any string that had the words &#8220;spt&#8221;, followed by any character, followed by &#8220;values&#8221;. EG:</p>
<p>IF &#8216;ABCdEFG&#8217; LIKE &#8216;%c_e%&#8217;<br />
	PRINT &#8216;YES&#8217;<br />
ELSE<br />
	PRINT &#8216;NO&#8217;</p>
<p>will print &#8220;YES&#8221;, because in the string &#8216;ABCdEFG&#8217;, &#8220;c&#8221; + any character + &#8220;e&#8221; does appear.</p>
<p>So, what you actually want in there, is this:</p>
<p>&#8220;WHERE sql_statement like &#8216;%spt[_]values%'&#8221;</p>
<p>
Found your article very interesting though. I even adapted it as a stored proc, and set up another stored proc that would loop through all my tables in my database, and see which ones were seldomly used, so I could then investigate whether I wanted to delete those tables or not.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Ted Krueger (onpnt)</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1645</link>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
		<pubDate>Mon, 03 Aug 2009 15:04:03 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1645</guid>
		<description><![CDATA[Good stuff Denis]]></description>
		<content:encoded><![CDATA[<p>Good stuff Denis</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1644</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Mon, 03 Aug 2009 13:37:33 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1644</guid>
		<description><![CDATA[Thanks Aaron, I guess I should have made LIKE check consistent to match at least the case of the query&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
I could have also done this of course&lt;br /&gt;
&lt;br /&gt;
AND sql_statement NOT like &#039;SELECT * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid)%&#039;  COLLATE SQL_Latin1_General_CP1_CI_AS&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Thanks Aaron, I guess I should have made LIKE check consistent to match at least the case of the query</p>
<p>
I could have also done this of course</p>
<p>AND sql_statement NOT like &#8216;SELECT * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid)%&#8217;  COLLATE SQL_Latin1_General_CP1_CI_AS</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Aaron Bertrand</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1643</link>
		<dc:creator><![CDATA[Aaron Bertrand]]></dc:creator>
		<pubDate>Mon, 03 Aug 2009 13:16:45 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1643</guid>
		<description><![CDATA[Careful about the LIKE check, on a case-sensitive collation it shouldn&#039;t filter out your stats query because the case does not match.]]></description>
		<content:encoded><![CDATA[<p>Careful about the LIKE check, on a case-sensitive collation it shouldn&#8217;t filter out your stats query because the case does not match.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Michelle Ufford</title>
		<link>/index.php/datamgmt/dbprogramming/finding-out-how-many-times-a-table-is-be-2008/#comment-1642</link>
		<dc:creator><![CDATA[Michelle Ufford]]></dc:creator>
		<pubDate>Mon, 03 Aug 2009 12:22:00 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/08/finding-out-how-many-times-a-table-is-be-2008/#comment-1642</guid>
		<description><![CDATA[Thanks, Denis!  This query was a big help for me.  :)]]></description>
		<content:encoded><![CDATA[<p>Thanks, Denis!  This query was a big help for me.  🙂</p>
]]></content:encoded>
	</item>
</channel>
</rss>
