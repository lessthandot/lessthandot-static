<?xml version="1.0" encoding="UTF-8" ?><feed
	xmlns="http://www.w3.org/2005/Atom"
	xml:lang="en-US"
	xmlns:thr="http://purl.org/syndication/thread/1.0"
	>
	<title type="text">Comments on Threadsafe Incrementing in C#</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-02-26T12:40:14Z</updated>

	<link rel="alternate" type="text/html" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comments" />
	<link rel="self" type="application/atom+xml" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/feed/atom/" />
	<id>/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/feed/atom/</id>
<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<title>By: Julio</title>
		<link rel="alternate" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1322759" type="text/html" />

		<author>
			<name>Julio</name>
			
		</author>

		<id>/?p=2799#comment-1322759</id>
		<updated>2014-07-04T12:57:59Z</updated>
		<published>2014-07-04T12:57:59Z</published>
		<content type="html" xml:base="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1322759"><![CDATA[<p>Thanks!</p>
]]></content>
		<thr:in-reply-to ref="/?p=2799" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/" type="text/html" />
	</entry>
	<entry>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link rel="alternate" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1317520" type="text/html" />

		<author>
			<name>Eli Weinstock-Herman (tarwn)</name>
			
		</author>

		<id>/?p=2799#comment-1317520</id>
		<updated>2014-07-03T22:42:17Z</updated>
		<published>2014-07-03T22:42:17Z</published>
		<content type="html" xml:base="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1317520"><![CDATA[<p>That&#8217;s correct. We&#8217;re updating the counter in a threadsafe manner, but we&#8217;re not capturing that incremented value, so even though we&#8217;re incrementing it safely, N threads are still reading it somewhat after several of them updated it and getting the same value that has been increment 3 times already. I didn&#8217;t notice that at time time because of the speed they were going by. A solution for that would have been to capture the return value if Interlocked.Increment method and print that (or do the Increment inside the String.Format call like I did with the ++ in the first example).</p>
]]></content>
		<thr:in-reply-to ref="/?p=2799#comment-1315417" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1315417" type="text/html" />
	</entry>
	<entry>
		<title>By: Julio</title>
		<link rel="alternate" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1315417" type="text/html" />

		<author>
			<name>Julio</name>
			
		</author>

		<id>/?p=2799#comment-1315417</id>
		<updated>2014-07-03T15:44:09Z</updated>
		<published>2014-07-03T15:44:09Z</published>
		<content type="html" xml:base="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/#comment-1315417"><![CDATA[<p>Hi, thanks for your article.<br />
I had some difficulty in understanding something:<br />
I see entries like  this in the output (using second approach, with Interlocked):<br />
Completed 3 of 1000  items on thread 4<br />
Completed 4 of 1000  items on thread 27<br />
Completed 3 of 1000  items on thread 17<br />
Completed 3 of 1000  items on thread 16<br />
Completed 6 of 1000  items on thread 4<br />
Completed 9 of 1000  items on thread 22<br />
I&#8217;d expect the output to be out of order but not repeated values of statusCounter. Could that be because when writing to the console the statusCounter is not locked when reading it?</p>
<p>Regards,</p>
<p>Julio</p>
]]></content>
		<thr:in-reply-to ref="/?p=2799" href="/index.php/desktopdev/mstech/csharp/threadsafe-incrementing-in-c/" type="text/html" />
	</entry>
</feed>
