<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: The WordPress Migration You Probably Didn&#8217;t Know About</title>
	<atom:link href="/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: terry</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-69734</link>
		<dc:creator><![CDATA[terry]]></dc:creator>
		<pubDate>Fri, 24 Jan 2014 19:24:26 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-69734</guid>
		<description><![CDATA[Thanks for the reply Eli. What I have heard about PHP&#039;s security track record and seen of its language design had me concerned. However, I&#039;m convinced that despite my misgivings I&#039;ll need to learn more about idiomatic PHP anyway due to how widely it is used and code reviews along with code reading are good places to start. The code sample and your review certainly help with this process.]]></description>
		<content:encoded><![CDATA[<p>Thanks for the reply Eli. What I have heard about PHP&#8217;s security track record and seen of its language design had me concerned. However, I&#8217;m convinced that despite my misgivings I&#8217;ll need to learn more about idiomatic PHP anyway due to how widely it is used and code reviews along with code reading are good places to start. The code sample and your review certainly help with this process.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-68730</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Fri, 24 Jan 2014 12:01:00 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-68730</guid>
		<description><![CDATA[So it appears something is inserting spaces after lessthan symbols, and that&#039;s probably what&#039;s screwed up the code block above. Not sure why someone would do that, other than to piss me off. Guess I need to figure out if it&#039;s a plugin issue or a built-in wordpress &quot;feature&quot;.]]></description>
		<content:encoded><![CDATA[<p>So it appears something is inserting spaces after lessthan symbols, and that&#8217;s probably what&#8217;s screwed up the code block above. Not sure why someone would do that, other than to piss me off. Guess I need to figure out if it&#8217;s a plugin issue or a built-in wordpress &#8220;feature&#8221;.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-68680</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Fri, 24 Jan 2014 11:48:46 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-68680</guid>
		<description><![CDATA[Hey Terry,

I haven&#039;t gone out of my way to ignore any language or technology, my assumption being that any of them that has garnered a huge following has to have some pluses, minuses, or things that would be worth learning :)

The issues I have with the PHP example I posted start with the fact that it&#039;s purpose is to communicate to others how something works (probably the loop, I don&#039;t recall now where I copied it from). The target audience is starter PHP experience on up. People are going to look at this example to make sense of the surrounding text and to use as an example.

This means that it has to be that much better than a random block of code buried in the codebase and that it will heavily influence how other people write their code.

Ok, so that wouldn&#039;t be a problem except the example above is really dirty looking:

- The unnecessary switching between HTML and PHP modes adds noise and a bunch of whitespace that users will be unaware of it until it bites them
- The getposts() call is nonstandard, it does not match the documented method for calling getposts()
- I can&#039;t stand the alternative foreach method that was used, it is supposed to include radability in heavy HTML templates but I find indentation to be a much better solution and this is not a heavy HTML solution
- Why is there a statement shoved on the same line as the foreach? Did we run out of enter keys?
- Why did we go out of our way to echo a break tag when we&#039;re already exiting out of the PHP block and could have just put a break tag outside the block?

- the last one is personal preference, I don&#039;t use the longer &lt;?php tag format anymore, I find it to be unnecessary noise

If I were to rewrite that example it would look like this:

&lt;pre lang=&quot;php&quot;&gt;
&lt;?
require(&#039;/the/path/to/your/wp-blog-header.php&#039;);

$posts = get_posts(array(
    &#039;posts_per_page&#039; =&gt; 10,
    &#039;orderby&#039;        =&gt; &#039;post_title&#039;,
    &#039;order&#039;          =&gt; &#039;ASC&#039;
));

foreach ($posts as $post){
   setup_postdata($post);

   the_date();
   
   the_title();
   the_excerpt();
}
?&gt;
&lt;/pre&gt;

or if I wanted a bunch of HTML in my loop as part of the example:

&lt;pre lang=&quot;php&quot;&gt;
&lt;?
require(&#039;/the/path/to/your/wp-blog-header.php&#039;);

$posts = get_posts(array(
    &#039;posts_per_page&#039; =&gt; 10,
    &#039;orderby&#039;        =&gt; &#039;post_title&#039;,
    &#039;order&#039;          =&gt; &#039;ASC&#039;
));

foreach ($posts as $post){
   setup_postdata($post);
   ?&gt;
   &lt;div class=&quot;post&quot;&gt;
      &lt;div class=&quot;date&quot;&gt;&lt;? the_date(); ?&gt;&lt;/div&gt;
      &lt;h1&gt;&lt;? the_title(); ?&gt;&lt;/h1&gt;

      &lt;div class=&quot;excerpt&quot;&gt;
          &lt;? the_excerpt(); ?&gt;
      &lt;/div&gt;
   &lt;/div&gt;
   &lt;?
}
?&gt;
&lt;/pre&gt;

(sorry for the extraneous pre tag in the middle, this was supposed to be two code blocks and the syntax highlighting isn&#039;t working properly, I need to look into that)

Both of these communicate more clearly (in my opinion) and would make me more comfortable for someone to copy and paste and start turning into their own.]]></description>
		<content:encoded><![CDATA[<p>Hey Terry,</p>
<p>I haven&#8217;t gone out of my way to ignore any language or technology, my assumption being that any of them that has garnered a huge following has to have some pluses, minuses, or things that would be worth learning ðŸ™‚</p>
<p>The issues I have with the PHP example I posted start with the fact that it&#8217;s purpose is to communicate to others how something works (probably the loop, I don&#8217;t recall now where I copied it from). The target audience is starter PHP experience on up. People are going to look at this example to make sense of the surrounding text and to use as an example.</p>
<p>This means that it has to be that much better than a random block of code buried in the codebase and that it will heavily influence how other people write their code.</p>
<p>Ok, so that wouldn&#8217;t be a problem except the example above is really dirty looking:</p>
<p>&#8211; The unnecessary switching between HTML and PHP modes adds noise and a bunch of whitespace that users will be unaware of it until it bites them<br />
&#8211; The getposts() call is nonstandard, it does not match the documented method for calling getposts()<br />
&#8211; I can&#8217;t stand the alternative foreach method that was used, it is supposed to include radability in heavy HTML templates but I find indentation to be a much better solution and this is not a heavy HTML solution<br />
&#8211; Why is there a statement shoved on the same line as the foreach? Did we run out of enter keys?<br />
&#8211; Why did we go out of our way to echo a break tag when we&#8217;re already exiting out of the PHP block and could have just put a break tag outside the block?</p>
<p>&#8211; the last one is personal preference, I don&#8217;t use the longer < ?php tag format anymore, I find it to be unnecessary noise

If I were to rewrite that example it would look like this:



<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="php"><thead><tr><td colspan="2"  class="head">PHP</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
</pre></td><td class="de1"><pre class="de1"><span class="sy0">&lt;</span> ?
<span class="kw1">require</span><span class="br0">&#40;</span><span class="st_h">'/the/path/to/your/wp-blog-header.php'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="re0">$posts</span> <span class="sy0">=</span> get_posts<span class="br0">&#40;</span><span class="kw3">array</span><span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="st_h">'posts_per_page'</span> <span class="sy0">=&gt;</span> <span class="nu0">10</span><span class="sy0">,</span>
&nbsp; &nbsp; â€˜orderbyâ€™ &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=&gt;</span> â€˜post_titleâ€™<span class="sy0">,</span>
&nbsp; &nbsp; â€˜orderâ€™ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=&gt;</span> â€˜ASCâ€™
<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$posts</span> <span class="kw1">as</span> <span class="re0">$post</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp; &nbsp;setup_postdata<span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp;the_date<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp;
&nbsp; &nbsp;the_title<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp;the_excerpt<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
<span class="sy1">?&gt;</span>
&nbsp;
&nbsp;
or <span class="kw1">if</span> I wanted a bunch of HTML in my loop <span class="kw1">as</span> part of the example<span class="sy0">:</span>
&nbsp;
<span class="sy0">&lt;</span>pre lang<span class="sy0">=</span><span class="st0">&quot;php&quot;</span><span class="sy0">&gt;</span>
<span class="sy0">&lt;</span> ?
<span class="kw1">require</span><span class="br0">&#40;</span><span class="st_h">'/the/path/to/your/wp-blog-header.php'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="re0">$posts</span> <span class="sy0">=</span> get_posts<span class="br0">&#40;</span><span class="kw3">array</span><span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="st_h">'posts_per_page'</span> <span class="sy0">=&gt;</span> <span class="nu0">10</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="st_h">'orderby'</span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=&gt;</span> <span class="st_h">'post_title'</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="st_h">'order'</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=&gt;</span> <span class="st_h">'ASC'</span>
<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$posts</span> <span class="kw1">as</span> <span class="re0">$post</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp; &nbsp;setup_postdata<span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp;<span class="sy1">?&gt;</span>
&nbsp; &nbsp;<span class="sy0">&lt;</span>div <span class="kw2">class</span><span class="sy0">=</span><span class="st0">&quot;post&quot;</span><span class="sy0">&gt;</span>
&nbsp; &nbsp; &nbsp; <span class="sy0">&lt;</span>div <span class="kw2">class</span><span class="sy0">=</span><span class="st0">&quot;date&quot;</span><span class="sy0">&gt;&lt;</span> ? the_date<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy1">?&gt;</span><span class="sy0">&lt;/</span>div<span class="sy0">&gt;</span>
&nbsp; &nbsp; &nbsp; <span class="sy0">&lt;</span>h1<span class="sy0">&gt;&lt;</span> ? the_title<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy1">?&gt;</span><span class="sy0">&lt;/</span>h1<span class="sy0">&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; <span class="sy0">&lt;</span>div <span class="kw2">class</span><span class="sy0">=</span><span class="st0">&quot;excerpt&quot;</span><span class="sy0">&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">&lt;</span> ? the_excerpt<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy1">?&gt;</span>
&nbsp; &nbsp; &nbsp; <span class="sy0">&lt;/</span>div<span class="sy0">&gt;</span>
&nbsp; &nbsp;<span class="sy0">&lt;/</span>div<span class="sy0">&gt;</span>
&nbsp; &nbsp;<span class="sy0">&lt;</span> ?
<span class="br0">&#125;</span>
<span class="sy1">?&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt; ?
require('/the/path/to/your/wp-blog-header.php');

$posts = get_posts(array(
    'posts_per_page' =&gt; 10,
    â€˜orderbyâ€™        =&gt; â€˜post_titleâ€™,
    â€˜orderâ€™          =&gt; â€˜ASCâ€™
));

foreach ($posts as $post){
   setup_postdata($post);

   the_date();
   
   the_title();
   the_excerpt();
}
?&gt;


or if I wanted a bunch of HTML in my loop as part of the example:

&lt;pre lang="php"&gt;
&lt; ?
require('/the/path/to/your/wp-blog-header.php');

$posts = get_posts(array(
    'posts_per_page' =&gt; 10,
    'orderby'        =&gt; 'post_title',
    'order'          =&gt; 'ASC'
));

foreach ($posts as $post){
   setup_postdata($post);
   ?&gt;
   &lt;div class="post"&gt;
      &lt;div class="date"&gt;&lt; ? the_date(); ?&gt;&lt;/div&gt;
      &lt;h1&gt;&lt; ? the_title(); ?&gt;&lt;/h1&gt;

      &lt;div class="excerpt"&gt;
          &lt; ? the_excerpt(); ?&gt;
      &lt;/div&gt;
   &lt;/div&gt;
   &lt; ?
}
?&gt;</pre></div></div>

<p>(sorry for the extraneous pre tag in the middle, this was supposed to be two code blocks and the syntax highlighting isn&#8217;t working properly, I need to look into that)</p>
<p>Both of these communicate more clearly (in my opinion) and would make me more comfortable for someone to copy and paste and start turning into their own.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: terry</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-65488</link>
		<dc:creator><![CDATA[terry]]></dc:creator>
		<pubDate>Thu, 23 Jan 2014 22:54:25 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-65488</guid>
		<description><![CDATA[Eli you didn&#039;t mention what sucked so bad about the php code in #3. I have avoided php like the plague my entire career so I was curious to hear what you specifically found so bad about the code.]]></description>
		<content:encoded><![CDATA[<p>Eli you didn&#8217;t mention what sucked so bad about the php code in #3. I have avoided php like the plague my entire career so I was curious to hear what you specifically found so bad about the code.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-63806</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Thu, 23 Jan 2014 16:19:43 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-63806</guid>
		<description><![CDATA[itoctopus: I suppose if one were managing a professional site/publication, with a budget and staff, that having a site w/ over 2000 posts, 1000&#039;s of comments, custom integration to several other PHP packages, and such would be considered &quot;pretty basic&quot;, but compared to most personal blogs and even many multi-author blogs, I wouldn&#039;t have considered this to be a &quot;basic&quot; migration.

Since I had full control over the import process, I was able to map all the categories structure from b2evo into wordpress and setup the permalink structure to match what we had in b2evo. This resolved a lot of traffic, but there was still a lot more going to slightly mangled versions of URLs, querystrings with id&#039;s, etc. I wrote logic in the 404 page to identify URLs that had worked for b2evo and 301 redirect them to the appropriate wordpress URL (this included detection for authors by name or id, posts by id or mangled name, tags, categories, and flavors of rss/atom feed URLs for categories, authors, and the main site). I have logic that tracks every 404 that occurs and as I see new ones come up that look reasonable, I add them to a node.js test script I run regularly to verify URL mappings and then add the necessary redirect logic. This way I can ensure I don&#039;t break any prior redirects as I continue to add more cases in.]]></description>
		<content:encoded><![CDATA[<p>itoctopus: I suppose if one were managing a professional site/publication, with a budget and staff, that having a site w/ over 2000 posts, 1000&#8217;s of comments, custom integration to several other PHP packages, and such would be considered &#8220;pretty basic&#8221;, but compared to most personal blogs and even many multi-author blogs, I wouldn&#8217;t have considered this to be a &#8220;basic&#8221; migration.</p>
<p>Since I had full control over the import process, I was able to map all the categories structure from b2evo into wordpress and setup the permalink structure to match what we had in b2evo. This resolved a lot of traffic, but there was still a lot more going to slightly mangled versions of URLs, querystrings with id&#8217;s, etc. I wrote logic in the 404 page to identify URLs that had worked for b2evo and 301 redirect them to the appropriate wordpress URL (this included detection for authors by name or id, posts by id or mangled name, tags, categories, and flavors of rss/atom feed URLs for categories, authors, and the main site). I have logic that tracks every 404 that occurs and as I see new ones come up that look reasonable, I add them to a node.js test script I run regularly to verify URL mappings and then add the necessary redirect logic. This way I can ensure I don&#8217;t break any prior redirects as I continue to add more cases in.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: itoctopus (@itoctopus)</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-63567</link>
		<dc:creator><![CDATA[itoctopus (@itoctopus)]]></dc:creator>
		<pubDate>Thu, 23 Jan 2014 15:23:09 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-63567</guid>
		<description><![CDATA[Hi Eli,

Your website is pretty basic and doesn&#039;t have a lot of content, so it shouldn&#039;t have been a very hard migration. But, there is one thing that you haven&#039;t mentioned. In most migrations from one CMS to another, the most annoying thing is preserving the link structure. I wonder how you did that, and whether your old links are all working at the moment.]]></description>
		<content:encoded><![CDATA[<p>Hi Eli,</p>
<p>Your website is pretty basic and doesn&#8217;t have a lot of content, so it shouldn&#8217;t have been a very hard migration. But, there is one thing that you haven&#8217;t mentioned. In most migrations from one CMS to another, the most annoying thing is preserving the link structure. I wonder how you did that, and whether your old links are all working at the moment.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-59903</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Thu, 23 Jan 2014 00:35:47 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-59903</guid>
		<description><![CDATA[Thanks for doing the migration]]></description>
		<content:encoded><![CDATA[<p>Thanks for doing the migration</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-59509</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 22:48:28 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-59509</guid>
		<description><![CDATA[I cleaned up some of the image stuff when I saw it in my post earlier, paste an example link or two in the forum post in the bloggers forum and I&#039;ll see if I need to handle some more cases for images. (Example: Adding media centered works now with and without captions, captions automatically get the nice border and slightly faded text).

There&#039;s going to be small things here and there that are off, don&#039;t assume I know about them, just bring them up there and I&#039;ll make it better :)]]></description>
		<content:encoded><![CDATA[<p>I cleaned up some of the image stuff when I saw it in my post earlier, paste an example link or two in the forum post in the bloggers forum and I&#8217;ll see if I need to handle some more cases for images. (Example: Adding media centered works now with and without captions, captions automatically get the nice border and slightly faded text).</p>
<p>There&#8217;s going to be small things here and there that are off, don&#8217;t assume I know about them, just bring them up there and I&#8217;ll make it better ðŸ™‚</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Koen Verbeeck</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-58942</link>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 20:44:15 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-58942</guid>
		<description><![CDATA[Appreciate the hard work.
One negative thing I experienced so far: images in new posts don&#039;t align well with text. In older posts this works just fine, and the HTML is the same.]]></description>
		<content:encoded><![CDATA[<p>Appreciate the hard work.<br />
One negative thing I experienced so far: images in new posts don&#8217;t align well with text. In older posts this works just fine, and the HTML is the same.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Brian Davis</title>
		<link>/index.php/webdev/the-wordpress-migration-you-probably-didnt-know-about/#comment-58930</link>
		<dc:creator><![CDATA[Brian Davis]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 20:40:32 +0000</pubDate>
		<guid isPermaLink="false">/?p=2271#comment-58930</guid>
		<description><![CDATA[Thanks Eli, we appreciate all your hard work!]]></description>
		<content:encoded><![CDATA[<p>Thanks Eli, we appreciate all your hard work!</p>
]]></content:encoded>
	</item>
</channel>
</rss>
