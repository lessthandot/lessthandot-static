<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Client-side vs Server-side Validation in Web Applications</title>
	<atom:link href="/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/#comment-4922265</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Thu, 18 Feb 2016 23:39:02 +0000</pubDate>
		<guid isPermaLink="false">/?p=2847#comment-4922265</guid>
		<description><![CDATA[I think it depends on the complexity of the logic you have in the front-end. If it&#039;s a relatively small application or set of forms, then I agree but also thikn it shoud be pretty easy to layer in some standard jQuery validation or something like that without having to worry about overhead, load times, managing a lot of validaiton rules in both places (you have to manage it in both, but it&#039;s not  alot). etc. If it&#039;s a Single Page Application or similarly complex applicaiton with a lof of front-end logic, then I think it&#039;s valuable to try and validate in both places.

I&#039;ve actually been meaning to write a post on a couple strategies around this. We&#039;ve evolved some interesting patterns for validation with a larger application that support things as simple as &quot;make sure it&#039;s a number between X and Y&quot; all the way up to &quot;and it&#039;s greater than this other field and doesn&#039;t create a divide by zero in this additional one&quot; and even &quot;and do they have the rights to even access this thing&quot;. Which runs straight into &quot;how do you ensure the client-side and server-side code is the same&quot;, which is another post around some cool patterns for writing the code in both places but being able to write a single set of common test cases that can be run by both client-side and server-side code to validate that even if you have to sets of code they obey/enforce the same set of business rules.]]></description>
		<content:encoded><![CDATA[<p>I think it depends on the complexity of the logic you have in the front-end. If it&#8217;s a relatively small application or set of forms, then I agree but also thikn it shoud be pretty easy to layer in some standard jQuery validation or something like that without having to worry about overhead, load times, managing a lot of validaiton rules in both places (you have to manage it in both, but it&#8217;s not  alot). etc. If it&#8217;s a Single Page Application or similarly complex applicaiton with a lof of front-end logic, then I think it&#8217;s valuable to try and validate in both places.</p>
<p>I&#8217;ve actually been meaning to write a post on a couple strategies around this. We&#8217;ve evolved some interesting patterns for validation with a larger application that support things as simple as &#8220;make sure it&#8217;s a number between X and Y&#8221; all the way up to &#8220;and it&#8217;s greater than this other field and doesn&#8217;t create a divide by zero in this additional one&#8221; and even &#8220;and do they have the rights to even access this thing&#8221;. Which runs straight into &#8220;how do you ensure the client-side and server-side code is the same&#8221;, which is another post around some cool patterns for writing the code in both places but being able to write a single set of common test cases that can be run by both client-side and server-side code to validate that even if you have to sets of code they obey/enforce the same set of business rules.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Dan Lorenz</title>
		<link>/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/#comment-4921797</link>
		<dc:creator><![CDATA[Dan Lorenz]]></dc:creator>
		<pubDate>Thu, 18 Feb 2016 14:45:10 +0000</pubDate>
		<guid isPermaLink="false">/?p=2847#comment-4921797</guid>
		<description><![CDATA[In my opinion, you should implement the easier client-side validation like required and max length since those are the biggest issues users will have.  Anything beyond that should be done server-side so you aren&#039;t duplicating your logic all over the place, causing maintenance nightmares.  With AJAX, you can easily check the object for errors at the start before getting into the heavy stuff later.  Plus, many validation checks require the server like Name is unique or something.  

Finally, everyone seems to assume that a user is going to enter invalid data all the time.  I would think this is more the exception than the rule so the extra server load would be negligible.]]></description>
		<content:encoded><![CDATA[<p>In my opinion, you should implement the easier client-side validation like required and max length since those are the biggest issues users will have.  Anything beyond that should be done server-side so you aren&#8217;t duplicating your logic all over the place, causing maintenance nightmares.  With AJAX, you can easily check the object for errors at the start before getting into the heavy stuff later.  Plus, many validation checks require the server like Name is unique or something.  </p>
<p>Finally, everyone seems to assume that a user is going to enter invalid data all the time.  I would think this is more the exception than the rule so the extra server load would be negligible.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Tung Nguyen</title>
		<link>/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/#comment-4300630</link>
		<dc:creator><![CDATA[Tung Nguyen]]></dc:creator>
		<pubDate>Mon, 25 May 2015 08:12:36 +0000</pubDate>
		<guid isPermaLink="false">/?p=2847#comment-4300630</guid>
		<description><![CDATA[Hi Eli,

I have the same question like Simon at the moment when we build a financial app. It&#039;s very difficult to prevent duplication code on both client and server side do my solution is accept it :)

Thanks for clarification concerns.]]></description>
		<content:encoded><![CDATA[<p>Hi Eli,</p>
<p>I have the same question like Simon at the moment when we build a financial app. It&#8217;s very difficult to prevent duplication code on both client and server side do my solution is accept it ðŸ™‚</p>
<p>Thanks for clarification concerns.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/#comment-2354237</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Thu, 30 Oct 2014 10:37:41 +0000</pubDate>
		<guid isPermaLink="false">/?p=2847#comment-2354237</guid>
		<description><![CDATA[Not offhand. I&#039;m not currently in a node environment, but I suspect this would be one of the easier ones to do some code sharing with. I have seen examples where people have taken models decorated with validation in backend .Net code and generated matching javascript validation code, so I suspect there some libraries or scripts available to do this for a number of backend libraries that would use reflection or a common definition file to apply rules and then generate the javascript logic from that.

I was thinking pretty heavily down this path 6-8 months ago and realized that a generated approach would resolve 95% of my validation needs, but leave the 5% that aren&#039;t simple &quot;is the field a number between 1 and 10&quot; validations and are instead something like &quot;is it a number in between these two other properties&quot; or even more complex validation where a value in one field indicates another value is required and must be between a set minimum and a simple calculation of 2 other fields.

The other issue with using someone elses generated approach is it assumes I want my validation at a certain object level, which forces a lot of shape onto my architecture that may not actually be valid for what I&#039;m doing and would make my life more difficult then duplicating the validation rules (or writing my own generation logic).

So more lately I&#039;ve also been thinking about whether I could generate unit tests to test the complex validation rules in two languages, enforcing consistency between the duplicate client and server-side logic. 

I don&#039;t have a perfect answer yet, the complexity of the app you&#039;re working on is definitely a factor and you may have other architectural demands that make it possible or impossible to use existing libraries or a generated approach.]]></description>
		<content:encoded><![CDATA[<p>Not offhand. I&#8217;m not currently in a node environment, but I suspect this would be one of the easier ones to do some code sharing with. I have seen examples where people have taken models decorated with validation in backend .Net code and generated matching javascript validation code, so I suspect there some libraries or scripts available to do this for a number of backend libraries that would use reflection or a common definition file to apply rules and then generate the javascript logic from that.</p>
<p>I was thinking pretty heavily down this path 6-8 months ago and realized that a generated approach would resolve 95% of my validation needs, but leave the 5% that aren&#8217;t simple &#8220;is the field a number between 1 and 10&#8221; validations and are instead something like &#8220;is it a number in between these two other properties&#8221; or even more complex validation where a value in one field indicates another value is required and must be between a set minimum and a simple calculation of 2 other fields.</p>
<p>The other issue with using someone elses generated approach is it assumes I want my validation at a certain object level, which forces a lot of shape onto my architecture that may not actually be valid for what I&#8217;m doing and would make my life more difficult then duplicating the validation rules (or writing my own generation logic).</p>
<p>So more lately I&#8217;ve also been thinking about whether I could generate unit tests to test the complex validation rules in two languages, enforcing consistency between the duplicate client and server-side logic. </p>
<p>I don&#8217;t have a perfect answer yet, the complexity of the app you&#8217;re working on is definitely a factor and you may have other architectural demands that make it possible or impossible to use existing libraries or a generated approach.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Simon Poltier</title>
		<link>/index.php/webdev/client-side-vs-server-side-validation-in-web-applications/#comment-2319220</link>
		<dc:creator><![CDATA[Simon Poltier]]></dc:creator>
		<pubDate>Tue, 28 Oct 2014 13:47:34 +0000</pubDate>
		<guid isPermaLink="false">/?p=2847#comment-2319220</guid>
		<description><![CDATA[Hi, 

An obvious follow up question to this is if you know of any approaches to reduce the duplication of implementing validation on both server and client sides. 
Asking as a complete js newbie: is it possible to re-use the front-end js validation code in a node.js backend implementation? What if your backbone is in another language (e.g. something that runs in the jvm)? 

Thanks and regards]]></description>
		<content:encoded><![CDATA[<p>Hi, </p>
<p>An obvious follow up question to this is if you know of any approaches to reduce the duplication of implementing validation on both server and client sides.<br />
Asking as a complete js newbie: is it possible to re-use the front-end js validation code in a node.js backend implementation? What if your backbone is in another language (e.g. something that runs in the jvm)? </p>
<p>Thanks and regards</p>
]]></content:encoded>
	</item>
</channel>
</rss>
