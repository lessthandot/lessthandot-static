<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Automated Web Testing with Selenium IDE</title>
	<atom:link href="/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Roman</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-5743657</link>
		<dc:creator><![CDATA[Roman]]></dc:creator>
		<pubDate>Fri, 21 Jul 2017 13:48:20 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-5743657</guid>
		<description><![CDATA[Are you limited to Selenium only? In case there is an option for you to try something else for this task, you could do that with a visual regression testing tool. Such as Screenster (http://screenster.io)/ which is actually an alternative to Selenium for visual/CSS testing tasks.

Screenster is a test automation tool which performs screenshot-based comparison of different versions of your web pages. First it creates a visual baseline for a page, taking a screenshot for each user action. During the next run it takes a new screenshot at each step, compares it with the one from baseline and highlights differences. It also has a number of features for easy maintenance of tests]]></description>
		<content:encoded><![CDATA[<p>Are you limited to Selenium only? In case there is an option for you to try something else for this task, you could do that with a visual regression testing tool. Such as Screenster (<a href="http://screenster.io/" rel="nofollow">http://screenster.io/</a>) which is actually an alternative to Selenium for visual/CSS testing tasks.</p>
<p>Screenster is a test automation tool which performs screenshot-based comparison of different versions of your web pages. First it creates a visual baseline for a page, taking a screenshot for each user action. During the next run it takes a new screenshot at each step, compares it with the one from baseline and highlights differences. It also has a number of features for easy maintenance of tests</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Martin</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4799</link>
		<dc:creator><![CDATA[Martin]]></dc:creator>
		<pubDate>Fri, 15 Nov 2013 11:11:51 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4799</guid>
		<description><![CDATA[I found few good examples of nearest all commands of selenium IDE http://software-testing-tutorials-automation.blogspot.in/]]></description>
		<content:encoded><![CDATA[<p>I found few good examples of nearest all commands of selenium IDE <a href="http://software-testing-tutorials-automation.blogspot.in/" rel="nofollow">http://software-testing-tutorials-automation.blogspot.in/</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4800</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Sun, 29 Apr 2012 12:57:19 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4800</guid>
		<description><![CDATA[Sorry it took a few days to follow back up Jon, I needed some time to sit down and try to remember. I honestly haven&#039;t used the IDE version since this post because the code version is just so much better once you get some basic structure in place (Look at the examples + sample code in the Next Post link above or this post: /index.php/EnterpriseDev/application-lifecycle-management/using-specflow-to). &lt;br /&gt;
&lt;br /&gt;
I have a notoriously bad memory, but if I recall what I did was create a test step for each site instance I wanted to test against, then created variables for each of the test values that could change between instances (like record IDs or names I was going to search for). I think I then created a case for each site and added the appropriate base URL and first step, then as I created real tests I added them to all the relevant site-specific cases.&lt;br /&gt;
&lt;br /&gt;
As a dev, I think you should definitely try the code route. Read the next post, I walk through generating Nunit tests automatically, then refactoring them, then creating a nice abstraction layer to make things even easier. And if you don&#039;t know a unit test framework yet, it will be an opportunity to learn one (all devs should learn one, but I know many don&#039;t, one day you&#039;ll look back and be amazed how handy it has been).]]></description>
		<content:encoded><![CDATA[<p>Sorry it took a few days to follow back up Jon, I needed some time to sit down and try to remember. I honestly haven&#8217;t used the IDE version since this post because the code version is just so much better once you get some basic structure in place (Look at the examples + sample code in the Next Post link above or this post: <a href="/index.php/EnterpriseDev/application-lifecycle-management/using-specflow-to" rel="nofollow">/index.php/EnterpriseDev/application-lifecycle-management/using-specflow-to</a>). </p>
<p>I have a notoriously bad memory, but if I recall what I did was create a test step for each site instance I wanted to test against, then created variables for each of the test values that could change between instances (like record IDs or names I was going to search for). I think I then created a case for each site and added the appropriate base URL and first step, then as I created real tests I added them to all the relevant site-specific cases.</p>
<p>As a dev, I think you should definitely try the code route. Read the next post, I walk through generating Nunit tests automatically, then refactoring them, then creating a nice abstraction layer to make things even easier. And if you don&#8217;t know a unit test framework yet, it will be an opportunity to learn one (all devs should learn one, but I know many don&#8217;t, one day you&#8217;ll look back and be amazed how handy it has been).</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Jon</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4798</link>
		<dc:creator><![CDATA[Jon]]></dc:creator>
		<pubDate>Thu, 26 Apr 2012 18:47:11 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4798</guid>
		<description><![CDATA[Well written, thanks!&lt;br /&gt;
&lt;br /&gt;
You said &quot;Using a Test Suite to test two separate base URLs (for instance a Dev and a QA version or local and production) is difficult and requires some trickery&quot;&lt;br /&gt;
&lt;br /&gt;
Can you provide some more details on how to do this?&lt;br /&gt;
&lt;br /&gt;
I&#039;m a dev not QA and finding IDE more valuable than Selenium 2 / webdriver, for the speed of generating tests and running them.]]></description>
		<content:encoded><![CDATA[<p>Well written, thanks!</p>
<p>You said &#8220;Using a Test Suite to test two separate base URLs (for instance a Dev and a QA version or local and production) is difficult and requires some trickery&#8221;</p>
<p>Can you provide some more details on how to do this?</p>
<p>I&#8217;m a dev not QA and finding IDE more valuable than Selenium 2 / webdriver, for the speed of generating tests and running them.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Lenard</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4797</link>
		<dc:creator><![CDATA[Lenard]]></dc:creator>
		<pubDate>Tue, 20 Dec 2011 23:26:49 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4797</guid>
		<description><![CDATA[nice intro but it needs a little more details..]]></description>
		<content:encoded><![CDATA[<p>nice intro but it needs a little more details..</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4796</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Thu, 27 Oct 2011 11:04:33 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4796</guid>
		<description><![CDATA[WebDriver does support Java, Python, and Ruby, though, so you could easily manage your test automation separately from your PHP code. I know of a couple LAMP companies that use a Ruby stack for acceptance and integration testing but PHP for their unit tests and product(s).]]></description>
		<content:encoded><![CDATA[<p>WebDriver does support Java, Python, and Ruby, though, so you could easily manage your test automation separately from your PHP code. I know of a couple LAMP companies that use a Ruby stack for acceptance and integration testing but PHP for their unit tests and product(s).</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mohammad</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4795</link>
		<dc:creator><![CDATA[Mohammad]]></dc:creator>
		<pubDate>Thu, 27 Oct 2011 09:10:06 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4795</guid>
		<description><![CDATA[Great intro - too bad the selenium WebDriver doesn&#039;t support PHP, it&#039;s a big issue specially for startups launch on LAMP stacks.&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Great intro &#8211; too bad the selenium WebDriver doesn&#8217;t support PHP, it&#8217;s a big issue specially for startups launch on LAMP stacks.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: George Mastros (gmmastros)</title>
		<link>/index.php/webdev/uidevelopment/automated-web-testing-with-selenium/#comment-4794</link>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
		<pubDate>Wed, 26 Oct 2011 12:50:52 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/10/automated-web-testing-with-selenium/#comment-4794</guid>
		<description><![CDATA[Awesome.  I wish I had known about this tool a long time ago.  Thanks for sharing.]]></description>
		<content:encoded><![CDATA[<p>Awesome.  I wish I had known about this tool a long time ago.  Thanks for sharing.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
