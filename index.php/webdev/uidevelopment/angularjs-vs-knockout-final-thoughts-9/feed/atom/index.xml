<?xml version="1.0" encoding="UTF-8" ?><feed
	xmlns="http://www.w3.org/2005/Atom"
	xml:lang="en-US"
	xmlns:thr="http://purl.org/syndication/thread/1.0"
	>
	<title type="text">Comments on AngularJS vs Knockout &#8211; Final Thoughts (9 of 9)</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-02-26T12:40:14Z</updated>

	<link rel="alternate" type="text/html" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comments" />
	<link rel="self" type="application/atom+xml" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/feed/atom/" />
	<id>/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/feed/atom/</id>
<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4957998" type="text/html" />

		<author>
			<name>Eli Weinstock-Herman (tarwn)</name>
			
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-4957998</id>
		<updated>2016-03-18T12:29:49Z</updated>
		<published>2016-03-18T12:29:49Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4957998"><![CDATA[<p>Angular is a good choice because it already has a lot of what you are going to need baked in, a lot of support information on stackoverflow and elsewhere, and large community of of developers you can hire from if you need to add more people to your team (or start looking for a new job yourself).</p>
<p>Knockout is a good choice if you don&#8217;t mind making your own framework or aren&#8217;t building an application that&#8217;s going to do routing in the front-end and other things that Angular brings to the table automatically.</p>
<p>I did end up choosing Knockout, and I&#8217;m starting to post up some of the things I learned along the way as I worked on a larger app (>100KLOC of front-end HTML, JS, + CSS and still going) as well as several smaller ones. After going through the process a couple times of picking additional libraries to create my own front-end framework, I found I preferred being able to swap out those components and build more tightly to what my application needed rather than using a more generic framework like Angular.</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-4956555" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4956555" type="text/html" />
	</entry>
	<entry>
		<title>By: Keith</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4956555" type="text/html" />

		<author>
			<name>Keith</name>
			
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-4956555</id>
		<updated>2016-03-17T16:07:24Z</updated>
		<published>2016-03-17T16:07:24Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4956555"><![CDATA[<p>That is one of the finest article about comparison between knockout and angular. I have started learning ASP.NET MVC and came across both of these framework. Now it is more than 2 year when you wrote this article. I would like to know your perception on both of these framework. I am developing a website that will have a lot of AJAX (I am from ASP.NET webform background) and I am not sure which one to choose to start building ajax enabled website. Also, I have one more question which may sound stupid but I&#8217;ll ask anyway &#8220;Why can&#8217;t ASP.NET MVC can do this job? Why do I need these framework anyway?&#8221; . I know you have also started as a novice and I would be interested to seek your opinion. Will wait for your reply before I begin coding in ASP.NET MVC.<br />
Nevertheless, it is a wonderful article. Thanks for sharing it.</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
	<entry>
		<title>By: Lixin</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4322965" type="text/html" />

		<author>
			<name>Lixin</name>
			
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-4322965</id>
		<updated>2015-06-01T13:37:06Z</updated>
		<published>2015-06-01T13:37:06Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-4322965"><![CDATA[<p>Just let you guys know results from one of our real production projects. When dealing with big and complex collections and high frequency re-rendering, Angular (we used v1.4) with ngRepeat is significantly slower than Knockout&#8217;s foreach binding. The page was blinking, struggling to finish the rendering in each refresh cycle, while another page with same data, same functions and same refresh frequency written in Knockout rendered fast and smoothly.</p>
<p>This caused big regrets in choosing Angular over Knockout when we started the project. To make our product acceptable by the client, finally we had to rewrite some of the big pages using Knockout, which made the source code sort of a funny mixture. We just started a new mobile web app and this time we&#8217;ve decided to stick to Knockout.</p>
<p>However, Angular looks to be much easier for learning for average developers, which is an advantage comparing to Knockout when organizing big projects.</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
	<entry>
		<title>By: Daniel Earwicker</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-3825131" type="text/html" />

		<author>
			<name>Daniel Earwicker</name>
			<uri>http://earwicker.com/</uri>
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-3825131</id>
		<updated>2015-02-23T19:59:52Z</updated>
		<published>2015-02-23T19:59:52Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-3825131"><![CDATA[<p>Very interesting and helpful series of posts.</p>
<p>From what I&#8217;ve read Angular 2.0 is going to basically start from scratch, with almost every detail of 1.0 thrown out. So ironically it seems the most damning criticism of Angular 1.0 in the end came from the Angular team themselves! ðŸ™‚</p>
<p>By contrast, Knockout is now at 3.3 and has retained broad backward compatibility, with each version adding interesting new features to a very stable core that has now already been around for 5 years. (For example the components feature that lets you create your own tags, and the neat stuff enabled by knockout.punches.)</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
	<entry>
		<title>By: Jason Jakob</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-2504298" type="text/html" />

		<author>
			<name>Jason Jakob</name>
			<uri>http://boominteractive.com/</uri>
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-2504298</id>
		<updated>2014-11-08T00:04:04Z</updated>
		<published>2014-11-08T00:04:04Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-2504298"><![CDATA[<p>as per Durandal&#8217;s site they are merging with Angular in angular2.0 so stick with google if you want your framework to be around in 5 years.</p>
<p>&#8220;We&#8217;re taking the best ideas of Angular 1.x and the best ideas of Durandal 2.x and converging them in Angular 2.0 to make a truly amazing developer experience. Our community stands to benefit greatly from this collaboration. It will result in expansion, stronger support, better tooling, faster releases and a sustained development effort, among other things&#8221;</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
	<entry>
		<title>By: Siavash</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-1275089" type="text/html" />

		<author>
			<name>Siavash</name>
			<uri>http://www.smortazavi.com/</uri>
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-1275089</id>
		<updated>2014-06-27T18:11:39Z</updated>
		<published>2014-06-27T18:11:39Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-1275089"><![CDATA[<p>Hi Eli,</p>
<p>Thank you very much for your full coverage of this topic. I have a question please:</p>
<p>In the company I work, we develop interactive presentation web apps using Html and JavaScript. Here are some features of our app:<br />
* our data-binding is only one-way from data source ( a JSON file) to view, and we never update data source in our apps.<br />
* users never add/update data in our apps. (after deploying the app, the data source is a fixed dataset that never changes).<br />
* we rarely use input elements, like textboxes and checkboxes, in our apps (except simple contact forms, that saves data locally)</p>
<p>so basically we want to switch to a simple framework of data-binding.<br />
Based on our requirements, which framework do you recommend? I would really appreciate it if you can give us a very brief explanation.</p>
<p>Regards,<br />
Sia</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
	<entry>
		<title>By: jaime</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-1137917" type="text/html" />

		<author>
			<name>jaime</name>
			<uri>http://www.jaimeweise.com/</uri>
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-1137917</id>
		<updated>2014-06-12T23:03:08Z</updated>
		<published>2014-06-12T23:03:08Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-1137917"><![CDATA[<p>Because even full frameworks have limitations that can be overcome by lighter-weight solutions. Also, many applications have been written without the use of the so-called complete framework. </p>
<p>That said, I am preferring AngularJs&#8217; style over KnockoutJs&#8217; conventions.</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-6304" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-6304" type="text/html" />
	</entry>
	<entry>
		<title>By: Lajos Marton</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-171041" type="text/html" />

		<author>
			<name>Lajos Marton</name>
			
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-171041</id>
		<updated>2014-02-19T10:51:34Z</updated>
		<published>2014-02-19T10:51:34Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-171041"><![CDATA[<p>For Hybrid app, I suggest Knockout. It seems more light weight, and a little more performant then AngularJs.<br />
And on mobile these are key features.<br />
Knockout in pair with plain js, could be extremly fast in a few Kb of downloading. Almost as a natural mobile application.</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-6297" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-6297" type="text/html" />
	</entry>
	<entry>
		<title>By: Antonios Liakakis</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-6297" type="text/html" />

		<author>
			<name>Antonios Liakakis</name>
			
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-6297</id>
		<updated>2014-01-03T15:10:52Z</updated>
		<published>2014-01-03T15:10:52Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-6297"><![CDATA[<p>Great post and very informative. We are currently in the process on choosing a framework as well and are looking for 3 important factors:<br />
1) Ease of learning<br />
2) Support of the framework in the long run e.g. 5 years from now.<br />
3) Hybrid app support.<br />
We have tried both but still haven&#8217;t decided yet. I liked Angular a lot but I did see some performance issues when dealing with a lot of data and it seems to become more complex as the projects advances. Knockout seems easier but lacks certain features. Nevertheless, which is better when talking about hybrid apps?</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
	<entry>
		<title>By: Cuneyt</title>
		<link rel="alternate" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-6308" type="text/html" />

		<author>
			<name>Cuneyt</name>
			
		</author>

		<id>/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/#comment-6308</id>
		<updated>2013-11-19T10:19:57Z</updated>
		<published>2013-11-19T10:19:57Z</published>
		<content type="html" xml:base="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/#comment-6308"><![CDATA[<p>Great Post! <br />
I am sure many people looking forward to see you comparing angular vs ember</p>
]]></content>
		<thr:in-reply-to ref="/index.php/2013/10/angularjs-vs-knockout-final-thoughts-9/" href="/index.php/webdev/uidevelopment/angularjs-vs-knockout-final-thoughts-9/" type="text/html" />
	</entry>
</feed>
