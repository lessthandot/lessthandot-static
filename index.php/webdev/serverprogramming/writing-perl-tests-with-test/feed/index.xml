<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Writing Perl Tests with Test::More</title>
	<atom:link href="/index.php/webdev/serverprogramming/writing-perl-tests-with-test/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Naveed Massjouni</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3515</link>
		<dc:creator><![CDATA[Naveed Massjouni]]></dc:creator>
		<pubDate>Mon, 17 Jan 2011 00:13:13 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3515</guid>
		<description><![CDATA[Great article, thanks. It shows how easy it is to write tests with perl. I wish instead of showing the tests.pl with the Test::Harness stuff, you showed that you can just run:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
prove -v mymaths.t
&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
Or even just:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
perl mymaths.t
&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
Also, I enjoy writing tests in this &quot;DSL&quot; style:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
is $mymaths-&gt;add(1,2) =&gt; 3, &quot;1 + 2 = 3&quot;;
&lt;/code&gt;&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Great article, thanks. It shows how easy it is to write tests with perl. I wish instead of showing the tests.pl with the Test::Harness stuff, you showed that you can just run:</p>
<p><code>&lt;br /&gt;
prove -v mymaths.t&lt;br /&gt;</code></p>
<p>Or even just:</p>
<p><code>&lt;br /&gt;
perl mymaths.t&lt;br /&gt;</code></p>
<p>Also, I enjoy writing tests in this &#8220;DSL&#8221; style:</p>
<p><code>&lt;br /&gt;
is $mymaths-&gt;add(1,2) =&gt; 3, "1 + 2 = 3";&lt;br /&gt;</code></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: kk</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3514</link>
		<dc:creator><![CDATA[kk]]></dc:creator>
		<pubDate>Sun, 16 Jan 2011 14:31:26 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3514</guid>
		<description><![CDATA[A couple of things I noticed&lt;br /&gt;
1. Is there any reason to use ref($proto) &#124;&#124; $proto, it is not required&lt;br /&gt;
&lt;br /&gt;
2. There is a Core module called List::Util that has a sum method , you can use that.]]></description>
		<content:encoded><![CDATA[<p>A couple of things I noticed<br />
1. Is there any reason to use ref($proto) || $proto, it is not required</p>
<p>2. There is a Core module called List::Util that has a sum method , you can use that.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Kyle</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3513</link>
		<dc:creator><![CDATA[Kyle]]></dc:creator>
		<pubDate>Sun, 16 Jan 2011 13:01:31 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3513</guid>
		<description><![CDATA[wow this is pretty epic. I don&#039;t really know that there&#039;s a module for testing perl scripts. don&#039;t really know TTD as I hack all the way to get my work than. But this might be a good introductory read to get an overview of how things work&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>wow this is pretty epic. I don&#8217;t really know that there&#8217;s a module for testing perl scripts. don&#8217;t really know TTD as I hack all the way to get my work than. But this might be a good introductory read to get an overview of how things work</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rob Earl</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3512</link>
		<dc:creator><![CDATA[Rob Earl]]></dc:creator>
		<pubDate>Sun, 16 Jan 2011 10:57:14 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3512</guid>
		<description><![CDATA[@Tom: Constructive negative feedback is the best kind! My main focus was on the mechanic for writing and running the tests themselves but you&#039;re right, I should put a little more effort into making sensible examples if I&#039;m going to blog about it.]]></description>
		<content:encoded><![CDATA[<p>@Tom: Constructive negative feedback is the best kind! My main focus was on the mechanic for writing and running the tests themselves but you&#8217;re right, I should put a little more effort into making sensible examples if I&#8217;m going to blog about it.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Gabor Szabo</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3511</link>
		<dc:creator><![CDATA[Gabor Szabo]]></dc:creator>
		<pubDate>Sun, 16 Jan 2011 05:25:38 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3511</guid>
		<description><![CDATA[I am happy to see people outside the Ironman bloggers ( http://ironman.enlightenedperl.org/ ) write about Perl and about testing Perl.&lt;br /&gt;
&lt;br /&gt;
Unfortunately the color scheme is a bit hard on my eyes (I can hardly see the curly braces and the &quot;my&quot; keywords) but I love the fact that the keywords are linked to their respective documentation.]]></description>
		<content:encoded><![CDATA[<p>I am happy to see people outside the Ironman bloggers ( <a href="http://ironman.enlightenedperl.org/" rel="nofollow">http://ironman.enlightenedperl.org/</a> ) write about Perl and about testing Perl.</p>
<p>Unfortunately the color scheme is a bit hard on my eyes (I can hardly see the curly braces and the &#8220;my&#8221; keywords) but I love the fact that the keywords are linked to their respective documentation.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Tom Legrady</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3510</link>
		<dc:creator><![CDATA[Tom Legrady]]></dc:creator>
		<pubDate>Sun, 16 Jan 2011 01:01:04 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3510</guid>
		<description><![CDATA[By the way, the Perl tradition is to have a sub-directory &#039;t&#039; in a program source directory, containing tests xyz.t.&lt;br /&gt;
&lt;br /&gt;
I use a numeric prefix, to control the order they are run in, combined with a descriptive word: 00-Constructor.t, 10-Methods.t, 20-Options.t. &lt;br /&gt;
&lt;br /&gt;
Then I have a &#039;tests&#039; target in the Makefile, so I can run &#039;make tests&#039;.]]></description>
		<content:encoded><![CDATA[<p>By the way, the Perl tradition is to have a sub-directory &#8216;t&#8217; in a program source directory, containing tests xyz.t.</p>
<p>I use a numeric prefix, to control the order they are run in, combined with a descriptive word: 00-Constructor.t, 10-Methods.t, 20-Options.t. </p>
<p>Then I have a &#8216;tests&#8217; target in the Makefile, so I can run &#8216;make tests&#8217;.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Tom Legrady</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3509</link>
		<dc:creator><![CDATA[Tom Legrady]]></dc:creator>
		<pubDate>Sun, 16 Jan 2011 00:53:46 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3509</guid>
		<description><![CDATA[I don&#039;t want to be negative, it&#039;s wonderful that you&#039;re introducing Test::More to people who may not have come across it before.&lt;br /&gt;
&lt;br /&gt;
I know the actual code being tested is not relevant, but why do you create a class which doesn&#039;t do anything class-like. If you want a subroutine which adds together all the numbers it receives, you could have a subroutine that, well, adds together all the arguments it receives. If you want it to be a class, then do something class-like, like add the arguments to an internal &#039;sum&#039; attribute. You could have an add() method, a print() method, and a reset() method ... or maybe add() returns the sum.&lt;br /&gt;
&lt;br /&gt;
Also, adding (6, 2) and (1, 2) cover more or less the same ground. There &lt;em&gt;is&lt;/em&gt; validity to running add() with zero arguments, with 1, 2, 3 arguments, running it with a negative argument, 2 negatives, with a zero value,  with floats, with non-numerics.&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>I don&#8217;t want to be negative, it&#8217;s wonderful that you&#8217;re introducing Test::More to people who may not have come across it before.</p>
<p>I know the actual code being tested is not relevant, but why do you create a class which doesn&#8217;t do anything class-like. If you want a subroutine which adds together all the numbers it receives, you could have a subroutine that, well, adds together all the arguments it receives. If you want it to be a class, then do something class-like, like add the arguments to an internal &#8216;sum&#8217; attribute. You could have an add() method, a print() method, and a reset() method &#8230; or maybe add() returns the sum.</p>
<p>Also, adding (6, 2) and (1, 2) cover more or less the same ground. There <em>is</em> validity to running add() with zero arguments, with 1, 2, 3 arguments, running it with a negative argument, 2 negatives, with a zero value,  with floats, with non-numerics.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rob Earl</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3508</link>
		<dc:creator><![CDATA[Rob Earl]]></dc:creator>
		<pubDate>Sat, 15 Jan 2011 21:19:55 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3508</guid>
		<description><![CDATA[Very nice, thank you for bringing that to my attention!]]></description>
		<content:encoded><![CDATA[<p>Very nice, thank you for bringing that to my attention!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Andrew Parker</title>
		<link>/index.php/webdev/serverprogramming/writing-perl-tests-with-test/#comment-3507</link>
		<dc:creator><![CDATA[Andrew Parker]]></dc:creator>
		<pubDate>Sat, 15 Jan 2011 21:13:00 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2011/01/writing-perl-tests-with-test/#comment-3507</guid>
		<description><![CDATA[Nice article about the basics of using the perl testing modules. You can get away, however, without writing your own test.pl to run the tests by using the prove app instead, which is included in modern perls.  It provides a lot of nice features for running the tests such as simple verbose mode and outputting the results with color.&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Nice article about the basics of using the perl testing modules. You can get away, however, without writing your own test.pl to run the tests by using the prove app instead, which is included in modern perls.  It provides a lot of nice features for running the tests such as simple verbose mode and outputting the results with color.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
