<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: SquishIt Integration with Amazon S3 / Cloudfront</title>
	<atom:link href="/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Alex Ullrich</title>
		<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/#comment-956419</link>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
		<pubDate>Wed, 28 May 2014 14:15:40 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/making-squishit-work-with-amazon/#comment-956419</guid>
		<description><![CDATA[No, SquishIt does not have any support for image spriting.  I think Cassette does, and RequestReduce might.

If you are just looking to upload s3 assets from .net code then the method shown for setting cache control headers should work.]]></description>
		<content:encoded><![CDATA[<p>No, SquishIt does not have any support for image spriting.  I think Cassette does, and RequestReduce might.</p>
<p>If you are just looking to upload s3 assets from .net code then the method shown for setting cache control headers should work.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: amogh</title>
		<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/#comment-953204</link>
		<dc:creator><![CDATA[amogh]]></dc:creator>
		<pubDate>Wed, 28 May 2014 07:54:07 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/making-squishit-work-with-amazon/#comment-953204</guid>
		<description><![CDATA[hi Alex,

i used SquishIt for Bundle the js / css 
i want to ask you that,
i have amazon s3 bucket which contain image and Google speed suggest me to 
Leverage browser caching for those image.
so can we used SquishIt  to make bundle all images in sprite and used it.
can we used the method what you wrote upside to set &quot; Cache Control Header&quot;

thank you 

Amogh]]></description>
		<content:encoded><![CDATA[<p>hi Alex,</p>
<p>i used SquishIt for Bundle the js / css<br />
i want to ask you that,<br />
i have amazon s3 bucket which contain image and Google speed suggest me to<br />
Leverage browser caching for those image.<br />
so can we used SquishIt  to make bundle all images in sprite and used it.<br />
can we used the method what you wrote upside to set &#8221; Cache Control Header&#8221;</p>
<p>thank you </p>
<p>Amogh</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Alex Ullrich</title>
		<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/#comment-5361</link>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
		<pubDate>Fri, 23 Nov 2012 23:51:12 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/making-squishit-work-with-amazon/#comment-5361</guid>
		<description><![CDATA[Glad to hear its working well for you!  I didn&#039;t even think about the region thing, but the problem you ran into makes me happy that I didn&#039;t make any assumptions about how people are using the amazon services.&lt;br /&gt;
&lt;br /&gt;
Thanks for sharing your experience - this post has basically become the readme for the library so it will probably save someone from running into the same issue you encountered :)]]></description>
		<content:encoded><![CDATA[<p>Glad to hear its working well for you!  I didn&#8217;t even think about the region thing, but the problem you ran into makes me happy that I didn&#8217;t make any assumptions about how people are using the amazon services.</p>
<p>Thanks for sharing your experience &#8211; this post has basically become the readme for the library so it will probably save someone from running into the same issue you encountered üôÇ</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Daz Bradbury</title>
		<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/#comment-5360</link>
		<dc:creator><![CDATA[Daz Bradbury]]></dc:creator>
		<pubDate>Thu, 22 Nov 2012 12:09:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/making-squishit-work-with-amazon/#comment-5360</guid>
		<description><![CDATA[Absolutely awesome.&lt;br /&gt;
&lt;br /&gt;
I was hosting on Appharbor, and had a world of pain with RequestReduce, so switched to Squishit as the architecture is a lot more straight forward.&lt;br /&gt;
&lt;br /&gt;
Initially, there were a few problems, as with multiple workers, I had the choice of putting things in the cache, or creating each bundle on application startup such that each worker would know how to process it.&lt;br /&gt;
&lt;br /&gt;
Then I saw this article, and I have to say, it was a breeze to implement - I forked the repo thinking I would need to make some changes, but that worry was ill-placed.&lt;br /&gt;
&lt;br /&gt;
I made a few modificiations to your initial config which were needed, namely:&lt;br /&gt;
&lt;br /&gt;
a) When creating an s3client, if you&#039;re using a different region to the default US, you&#039;ll need to specify it as such (in this case, EUWest):&lt;br /&gt;
&lt;br /&gt;
var s3client = new AmazonS3Client(&quot;accessKey&quot;, &quot;secretKey&quot;, Amazon.RegionEndpoint.EUWest1);&lt;br /&gt;
&lt;br /&gt;
Otherwise, Amazon will throw: &lt;br /&gt;
&lt;br /&gt;
‚ÄúMaximum number of retry attempts reached‚Äù&lt;br /&gt;
&lt;br /&gt;
b) Part of the point in doing this, for me at least, was so static code is easily cacheable in production. As such, most users will probably want to add the following line to the renderer creation:&lt;br /&gt;
&lt;br /&gt;
.WithHeaders(Amazon.S3.Util.AmazonS3Util.CreateHeaderEntry(&quot;Cache-Control&quot;, &quot;public, max-age=3153600&quot;))&lt;br /&gt;
&lt;br /&gt;
Otherwise, this worked perfectly, injected my cloudfront url, and was a breeze!&lt;br /&gt;
&lt;br /&gt;
Thanks for sharing!&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>Absolutely awesome.</p>
<p>I was hosting on Appharbor, and had a world of pain with RequestReduce, so switched to Squishit as the architecture is a lot more straight forward.</p>
<p>Initially, there were a few problems, as with multiple workers, I had the choice of putting things in the cache, or creating each bundle on application startup such that each worker would know how to process it.</p>
<p>Then I saw this article, and I have to say, it was a breeze to implement &#8211; I forked the repo thinking I would need to make some changes, but that worry was ill-placed.</p>
<p>I made a few modificiations to your initial config which were needed, namely:</p>
<p>a) When creating an s3client, if you&#8217;re using a different region to the default US, you&#8217;ll need to specify it as such (in this case, EUWest):</p>
<p>var s3client = new AmazonS3Client(&#8220;accessKey&#8221;, &#8220;secretKey&#8221;, Amazon.RegionEndpoint.EUWest1);</p>
<p>Otherwise, Amazon will throw: </p>
<p>‚ÄúMaximum number of retry attempts reached‚Äù</p>
<p>b) Part of the point in doing this, for me at least, was so static code is easily cacheable in production. As such, most users will probably want to add the following line to the renderer creation:</p>
<p>.WithHeaders(Amazon.S3.Util.AmazonS3Util.CreateHeaderEntry(&#8220;Cache-Control&#8221;, &#8220;public, max-age=3153600&#8221;))</p>
<p>Otherwise, this worked perfectly, injected my cloudfront url, and was a breeze!</p>
<p>Thanks for sharing!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Alex Ullrich</title>
		<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/#comment-5363</link>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
		<pubDate>Wed, 05 Sep 2012 10:28:29 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/making-squishit-work-with-amazon/#comment-5363</guid>
		<description><![CDATA[1. I would suggest using relative paths, and putting your images onto the CDN also, mimicking the folder structure you keep locally for development.  Relative paths are resolved relative to the CSS file, so if all your content is hosted on the CDN you shouldn&#039;t have any problem.&lt;br /&gt;
&lt;br /&gt;
2. Honestly the code is pretty simple - the only thing I want to confirm is that I can get querystring hashes down in the renderer now that cloudfront supports querystring invalidation.  If you use the &quot;HashInFilename&quot; option (by rendering to filename_#.css etc...) it should definitely be fine.  I really just wanted some other people to test it before taking it out of pre-release, so if you don&#039;t mind being the guinea pig go for it.  I will do my best to resolve any issues you encounter quickly (this is just coming back on my radar as SquishIt 0.9 settles in).  I feel pretty confident we can have an official release ready in a week or two if you help with the testing.&lt;br /&gt;
&lt;br /&gt;
3. I&#039;ve never used a protocol-relative URL for the default output href but don&#039;t see why it wouldn&#039;t work.  If it doesn&#039;t work for you, post an issue to the SquishIt core on github, because it definitely should :)]]></description>
		<content:encoded><![CDATA[<p>1. I would suggest using relative paths, and putting your images onto the CDN also, mimicking the folder structure you keep locally for development.  Relative paths are resolved relative to the CSS file, so if all your content is hosted on the CDN you shouldn&#8217;t have any problem.</p>
<p>2. Honestly the code is pretty simple &#8211; the only thing I want to confirm is that I can get querystring hashes down in the renderer now that cloudfront supports querystring invalidation.  If you use the &#8220;HashInFilename&#8221; option (by rendering to filename_#.css etc&#8230;) it should definitely be fine.  I really just wanted some other people to test it before taking it out of pre-release, so if you don&#8217;t mind being the guinea pig go for it.  I will do my best to resolve any issues you encounter quickly (this is just coming back on my radar as SquishIt 0.9 settles in).  I feel pretty confident we can have an official release ready in a week or two if you help with the testing.</p>
<p>3. I&#8217;ve never used a protocol-relative URL for the default output href but don&#8217;t see why it wouldn&#8217;t work.  If it doesn&#8217;t work for you, post an issue to the SquishIt core on github, because it definitely should üôÇ</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Jason</title>
		<link>/index.php/webdev/serverprogramming/making-squishit-work-with-amazon/#comment-5362</link>
		<dc:creator><![CDATA[Jason]]></dc:creator>
		<pubDate>Wed, 05 Sep 2012 02:46:59 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/making-squishit-work-with-amazon/#comment-5362</guid>
		<description><![CDATA[Great post and great work - this is exactly what I was looking for. Thanks for the hard work.&lt;br /&gt;
&lt;br /&gt;
I have three questions if you wouldn&#039;t mind clarifying a few things:&lt;br /&gt;
&lt;br /&gt;
1. Do you have any suggestions for urls embedded in CSS files? For instance if I have a css file containing a background-url attribute that points to an &#039;images&#039; folder on my web server and that file is bundled and the resulting file moved to the CDN the link to that background image is broken. I don&#039;t know if squishit supports that kind of scenario. The only thing i can think of is fully qualifying the url (pointing it to my CDN) - but that is something that I&#039;d like to avoid as I would like to keep the files local and unbundled during development.&lt;br /&gt;
2. Do you have any idea when this will exit the pre-release phase? I&#039;m planning on starting to use it soon and was wondering if it is still a work in progress&lt;br /&gt;
3. Can the UseDefaultOutputBaseHref be used without a specific protocol (i.e. using // instead of https://)/ or  is there a reason why the protocol is required here. I&#039;m just wondering.&lt;br /&gt;
&lt;br /&gt;
Again, thanks for the great work!&lt;br /&gt;
Jason]]></description>
		<content:encoded><![CDATA[<p>Great post and great work &#8211; this is exactly what I was looking for. Thanks for the hard work.</p>
<p>I have three questions if you wouldn&#8217;t mind clarifying a few things:</p>
<p>1. Do you have any suggestions for urls embedded in CSS files? For instance if I have a css file containing a background-url attribute that points to an &#8216;images&#8217; folder on my web server and that file is bundled and the resulting file moved to the CDN the link to that background image is broken. I don&#8217;t know if squishit supports that kind of scenario. The only thing i can think of is fully qualifying the url (pointing it to my CDN) &#8211; but that is something that I&#8217;d like to avoid as I would like to keep the files local and unbundled during development.<br />
2. Do you have any idea when this will exit the pre-release phase? I&#8217;m planning on starting to use it soon and was wondering if it is still a work in progress<br />
3. Can the UseDefaultOutputBaseHref be used without a specific protocol (i.e. using // instead of <a href="https://" rel="nofollow">https://</a>) or  is there a reason why the protocol is required here. I&#8217;m just wondering.</p>
<p>Again, thanks for the great work!<br />
Jason</p>
]]></content:encoded>
	</item>
</channel>
</rss>
