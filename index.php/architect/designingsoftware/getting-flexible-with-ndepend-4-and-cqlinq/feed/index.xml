<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Getting Flexible With NDepend 4 and CQLinq</title>
	<atom:link href="/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Alex Ullrich</title>
		<link>/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/#comment-5355</link>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
		<pubDate>Wed, 06 Jun 2012 13:03:29 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/getting-flexible-with-ndepend-4-and-cqlinq/#comment-5355</guid>
		<description><![CDATA[I can&#039;t say it was trivial (though our full build was pretty involved, took ~25 minutes if we were generating an MSI) but it was *much* faster than the visual studio architecture analysis (and provided much more information).  We used a separate build configuration for architecture validation that ran around 2am, mostly because we first tried using the tremendously slow visual studio tool and didn&#039;t want each build taking 45 minutes.&lt;br /&gt;
&lt;br /&gt;
The codebase in question was probably between half and three-quarters of a million lines split into 30+ projects.  I never saw an ad-hoc analysis take more than 2-2 1/2 minutes and this was running on our spare machines that were *very* underpowered.  I would expect it ran much faster than that on our build server, and that NDepend 4 would be at least incrementally faster than 3.]]></description>
		<content:encoded><![CDATA[<p>I can&#8217;t say it was trivial (though our full build was pretty involved, took ~25 minutes if we were generating an MSI) but it was *much* faster than the visual studio architecture analysis (and provided much more information).  We used a separate build configuration for architecture validation that ran around 2am, mostly because we first tried using the tremendously slow visual studio tool and didn&#8217;t want each build taking 45 minutes.</p>
<p>The codebase in question was probably between half and three-quarters of a million lines split into 30+ projects.  I never saw an ad-hoc analysis take more than 2-2 1/2 minutes and this was running on our spare machines that were *very* underpowered.  I would expect it ran much faster than that on our build server, and that NDepend 4 would be at least incrementally faster than 3.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Eli Weinstock-Herman (tarwn)</title>
		<link>/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/#comment-5354</link>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
		<pubDate>Wed, 06 Jun 2012 12:36:05 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2012/06/getting-flexible-with-ndepend-4-and-cqlinq/#comment-5354</guid>
		<description><![CDATA[How much of an impact did running NDepend have on your overall build time? I&#039;ve played with it in the past, but only as manual runs.]]></description>
		<content:encoded><![CDATA[<p>How much of an impact did running NDepend have on your overall build time? I&#8217;ve played with it in the past, but only as manual runs.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
