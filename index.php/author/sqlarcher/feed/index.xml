<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>SQLArcher &#8211; LessthanDot</title>
	<atom:link href="/index.php/author/sqlarcher/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>The 5 minute guide to get started with Windows 8</title>
		<link>/index.php/sysadmins/os/the-5-minute-guide-to/</link>
		<comments>/index.php/sysadmins/os/the-5-minute-guide-to/#comments</comments>
		<pubDate>Mon, 10 Sep 2012 06:35:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Operating Systems]]></category>
		<category><![CDATA[Windows 8]]></category>

		<guid isPermaLink="false">/index.php/2012/09/the-5-minute-guide-to/</guid>
		<description><![CDATA[Windows 8 has been a hot topic of late - especially getting started with it. We already had a post from our very own Denis Gobo (@denisgobo) in how to shut down Windows 8. This led me to write a quick post on some features you may or may not know of.

Wi&#8230;]]></description>
				<content:encoded><![CDATA[<p>Windows 8 has been a hot topic of late &#8211; especially getting started with it. We already had a post from our very own Denis Gobo (<a href="http://www.twitter.com/denisgobo">@denisgobo</a>) in <a href="/index.php/SysAdmins/windows-8/how-to-shutdown-windows-8">how to shut down Windows 8</a>. This led me to write a quick post on some features you may or may not know of.</p>
<p>Windows 8 has a great design for touch screens, and some great shortcuts for the PC User as well. I&#8217;ve been using it since Consumer Preview and to be honest &#8211; it did take a week or so to get used to the new interface. There are one or two tricks, that when you know them, make it a lot easier to work with as a PC User.</p>
<p>To start of with, I am going to talk a bit about charms. Charms is the new &#8220;navigation&#8221; for Windows 8 &#8211; it appears on the right hand side whenever you move your mouse to either the top right, or bottom right corners of the screen.</p>
<p>This will bring up the following:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Windows8Guide/Charms_Menu.jpg?mtime=1347266235"><img alt="" src="/wp-content/uploads/users/sqlarcher/Windows8Guide/Charms_Menu.jpg?mtime=1347266235" width="270" height="1079" /></a></div>
<p>In order they are:</p>
<p>1. Search<br />
2. Share<br />
3. Windows 8 UI<br />
4. Devices<br />
5. Settings</p>
<p>There is one thing about charms which is a very subtle yet powerful feature&#8230; it is context sensitive! Depending which application is active, will depend what charms enables you to do. Some of you might have downloaded the Wikipedia app (for example) from the store; good looking, side scrolling; so how do you search? With the charms menu, just open it up and search whatever you&#8217;re looking for. For those of you which lives in a suffocated broadband area like me &#8211; this is also where you go to limit the amount of data which live tiles uses in the Win8UI (this however is only from RTM onwards).</p>
<p>Another handy feature is Flip-2D &#8211; better known as the 3D Aero flip in Windows Vista/7. This is done by moving your mouse to the top left corner of the screen, or pressing WIN + Tab.</p>
<p>It looks similar to this:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Windows8Guide/QuickView.jpg?mtime=1347266256"><img alt="" src="/wp-content/uploads/users/sqlarcher/Windows8Guide/QuickView.jpg?mtime=1347266256" width="441" height="524" /></a></div>
<p>When it is fully expanded it will look like this (this one is cropped, at the bottom you will have the link to the Win8UI):</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Windows8Guide/QuickView_2.jpg?mtime=1347267039"><img alt="" src="/wp-content/uploads/users/sqlarcher/Windows8Guide/QuickView_2.jpg?mtime=1347267039" width="187" height="374" /></a></div>
<p>A big question would be why to use this one instead of ALT + Tab? While ALT + Tab cycles through both the desktop apps and your Win8 apps, the WIN + Tab allows you to select an individual application and pin it either side of your screen directly if you do not want to close your active application. Apart from this, the only other difference is that it does not cycle through desktop applications.</p>
<p>The last quick feature is the poweruser menu, which is accessible by right clicking on the Win8UI shortcut on the bottom left of the screen:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Windows8Guide/PowerUser.jpg?mtime=1347266245"><img alt="" src="/wp-content/uploads/users/sqlarcher/Windows8Guide/PowerUser.jpg?mtime=1347266245" width="351" height="395" /></a></div>
<p>This gives you quick access to control panel, command line, etc. which is very useful.</p>
<p>The last most notable feature is Hyper-V which is available in Windows 8 Pro and Enterprise editions, with the limit being an x64 edition with a SLAT capable CPU. This is very handy especially when you build and destroy multiple virtual machines and do not want to install a Server edition on your Computer/Laptop or if you do not have access to a separate virtual environment. This is enabled via the add/program features.</p>
<p>One last shortcut that I find extremely useful when working with SQL Server Data Tools, Management Studio, etc. is CTRL + Shift. When holding these two keys and launching an application from Win8UI, this immediately launches the application in Administrator Mode.</p>
<p>If there is any features you find handy, feel free to leave a comment.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/sysadmins/os/the-5-minute-guide-to/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Moving On, Getting Converted&#8230;</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/moving-on-getting-converted/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/moving-on-getting-converted/#comments</comments>
		<pubDate>Tue, 13 Mar 2012 07:56:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2012/03/moving-on-getting-converted/</guid>
		<description><![CDATA[After a great many years (3 to be exact) I'm moving on from my current position into new exciting challenges. I have learned a lot in working in a big environment like this and swimming in the deep waters of SQL Server, but a huge thanks goes to my grea&#8230;]]></description>
				<content:encoded><![CDATA[<p>After a great many years (3 to be exact) I&#8217;m moving on from my current position into new exciting challenges. I have learned a lot in working in a big environment like this and swimming in the deep waters of SQL Server, but a huge thanks goes to my great colleagues and manager were able to keep up with my ramblings and (sometimes intolerable) drive for innovation and restraining me from torturing developers who have not yet learned the way of SQL Server.</p>
<p>As of the 1st of April ( and no, it is not an April fools joke, I confirmed with HR ) I will be joining Microsoft South Africa as one of the Premier Field Engineers for SQL Server. This will be a very exciting challenge and great position for learning more about SQL Server in its various ways of implementation, and looking forward to work with my new team.</p>
<p>But, moving to this position I&#8217;m actually curious to know how many IT Professionals actually know about PFE&#8217;s and the Premier Agreement for EA customers as a few of my friends down in South Africa wasn&#8217;t aware of PA&#8217;s which can contribute to special training called WorkshopPLUS. Feel free to comment if you don&#8217;t know about this, or if you do have an agreement if you are making use of the various benefits and resources.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/moving-on-getting-converted/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>RedGate SQL Tab Magic</title>
		<link>/index.php/datamgmt/dbadmin/redgate-sql-tab-magic/</link>
		<comments>/index.php/datamgmt/dbadmin/redgate-sql-tab-magic/#comments</comments>
		<pubDate>Thu, 16 Feb 2012 10:10:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2012/02/redgate-sql-tab-magic/</guid>
		<description><![CDATA[After upgrading my SQL Toolbelt installation recently, I came across a new entry in the SQL Prompt menu that is integrated into SQL Server Management Studio. So I have decided to put out a quick post on one of the features which I find is handy.

With&#8230;]]></description>
				<content:encoded><![CDATA[<p>After upgrading my SQL Toolbelt installation recently, I came across a new entry in the SQL Prompt menu that is integrated into SQL Server Management Studio. So I have decided to put out a quick post on one of the features which I find is handy.</p>
<p>With the new SQL Toolbelt, I&#8217;ve also installed the Redgate integration which integrates all the tools for you into Management Studio. On my way to make some changes to my configuration for SQL Prompt, I noticed the Experimental Features&#8230; portion which altered my curiosity setting to a full 100%.</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/Menu.jpg?mtime=1329394384"><img alt="" src="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/Menu.jpg?mtime=1329394384" width="282" height="472" /></a></div>
<p>This results into the following screen with all its interesting beta programs,features,etc.</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/redgate_labs.jpg?mtime=1329394405"><img alt="" src="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/redgate_labs.jpg?mtime=1329394405" width="762" height="633" /></a></div>
<p>After reading through the descriptions, SQL Tab Magic caught my attention the most as I regularly have multiple query tabs open within SSMS. After downloading and installing it, you will see the following toolbar set appear:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/toolbar.jpg?mtime=1329394414"><img alt="" src="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/toolbar.jpg?mtime=1329394414" width="281" height="26" /></a></div>
<p>This will show you(after the installation) all the closed or open query tabs with a portion of the query. For example:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/OpenTabs.jpg?mtime=1329394394"><img alt="" src="/wp-content/uploads/users/sqlarcher/Redgate_SQLTabMagic/OpenTabs.jpg?mtime=1329394394" width="773" height="361" /></a></div>
<p>You can also through the toolbar, set it to look for new tabs and configure it to open any tabs on start up that you had open in a previous session.</p>
<p>There are a few other labs as well which you can find at <a href="http://labs.red-gate.com/">RedGate Labs</a> all though they don&#8217;t feature SQL Tab Magic there.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/redgate-sql-tab-magic/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>SQL Server Auditing: Looking Back</title>
		<link>/index.php/datamgmt/dbadmin/sql-server-auditing-looking-back/</link>
		<comments>/index.php/datamgmt/dbadmin/sql-server-auditing-looking-back/#respond</comments>
		<pubDate>Mon, 09 Jan 2012 08:00:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2012/01/sql-server-auditing-looking-back/</guid>
		<description><![CDATA[Over the past couple of weeks, we have looked at the new auditing feature introduced in SQL Server 2008. This post will finish up with the series and will cover the remaining subjects:
 
1.SQL Server 2008 vs. SQL Server 2012,
2.PBM - Last take on aud&#8230;]]></description>
				<content:encoded><![CDATA[<p>Over the past couple of weeks, we have looked at the new auditing feature introduced in SQL Server 2008. This post will finish up with the series and will cover the remaining subjects:</p>
<p>1.SQL Server 2008 vs. SQL Server 2012,<br />
2.PBM &#8211; Last take on auditing your audits,<br />
3.The Auditing Repository.</p>
<h3>SQL Server 2008 vs. SQL Server 2012</h3>
<p>The new release of SQL Server is around the corner, and with it there are numerous enhancements to the various components as well as new features. The auditing component is no different. There are a total of 507 audit actions in SQL Server 2012 compared to the 454 in SQL Server 2008 R2. Some of the new actions are more specifically geared to the new SQL Server 2012 Database Containment Feature.</p>
<p>In addition to this, it also introduces filtering to your audits. This is set up on your audit instead of the Server Audit Specification or Database Audit Specification. This will limited what is written to the audit file even more, however there will be the additional CPU overhead to pay for filtering the audits.</p>
<p>Let&#8217;s take a look how to set it up through the SSMS:</p>
<p>First of all, create the audit as previously and navigate as in the screenshot. Note that we will use testdb, check for dbo schema and only actions taking place by users which are defined as a DB_Owner:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/SQL2012_New/Filtered_Audit_GUI.jpg?mtime=1326103445"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/SQL2012_New/Filtered_Audit_GUI.jpg?mtime=1326103445" width="602" height="170" /></a></div>
<p>Next we define a Server Audit Specification to Capture Schema access:<br />
<em>Note. This is necessary to capture the events. Previously a Server Audit Specification captured ALL the events across ALL databases.</em></p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/SQL2012_New/Filtered_Audit_Spec_GUI.jpg?mtime=1326103453"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/SQL2012_New/Filtered_Audit_Spec_GUI.jpg?mtime=1326103453" width="457" height="135" /></a></div>
<p>To create the same audit using TSQL(which is easier) is as follows:</p>
<pre>USE [master]
GO

CREATE SERVER AUDIT [Filtered]
TO FILE 
(	FILEPATH = N'E:SQLAuditing'
	,MAXSIZE = 10 MB
	,MAX_FILES = 1
	,RESERVE_DISK_SPACE = OFF
)
WITH
(	QUEUE_DELAY = 1000
	,ON_FAILURE = CONTINUE
	
)
WHERE ([database_name]='testdb' AND [schema_name]='dbo' AND [object_name]='tab1' AND [database_principal_name]='dbo')
ALTER SERVER AUDIT [Filtered] WITH (STATE = ON)
GO

USE [master]
GO

CREATE SERVER AUDIT SPECIFICATION [Server_Spec_Filtering]
FOR SERVER AUDIT [Filtered]
ADD (SCHEMA_OBJECT_ACCESS_GROUP)
WITH (STATE = OFF)
GO</pre>
<p>Below is the results of querying an audit file with the filter:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/SQL2012_New/Filtered_Results.jpg?mtime=1326103463"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/SQL2012_New/Filtered_Results.jpg?mtime=1326103463" width="732" height="63" /></a></div>
<p>Other additional functionality is OnError:Fail Operation as well as maximum number of files. Maximum number of files indicates the number of files needed to be kept.</p>
<h3>PBM &#8211; Last Take On Auditing Your Audits</h3>
<p>Continuing from the last post, below is some policies which you can use with SQL Server 2008/R2/2012.</p>
<p>They are as follows:<br />
1. Audit files.<br />
2. Database Audits.<br />
3. Server Audits.</p>
<p><em>Note. I included a ServerVersion condition if you intend to use this with the Enterprise Policy Framework. This will only execute the policies against SQL Server 2008 upwards.</em></p>
<p>These policies will take a look at the naming convention for the policies as follows:</p>
<p>Database Audits:</p>
<p>1. Name starts with &#8216;DBAudit_%.<br />
2. Audit file name starts with &#8216;DBAudit_Spec_%&#8217;.<br />
3. Audit is enabled.</p>
<p>Server Audits:</p>
<p>1. Name starts with &#8216;SQLAudit_%&#8217;.<br />
2. Audit file name starts with &#8216;ServerAudit_%&#8217;.<br />
3. Audit is enabled.</p>
<p>Audit Files:</p>
<p>1. Audit file is enabled.<br />
2. Destination type is file.<br />
3. 100 Maximum files.<br />
4. 10 Roll over files<br />
5. File size is maximum 5GB.<br />
6. File size unit is GB.<br />
7. Reserve disk space true.</p>
<p>Below are the create conditions:</p>
<pre>--- Audit_Condition

Declare @condition_id int
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'Audit_Condition', @description=N'', @facet=N'Audit', @expression=N'&lt;Operator&gt;
  &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
  &lt;OpType&gt;AND&lt;/OpType&gt;
  &lt;Count&gt;2&lt;/Count&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;AND&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;AND&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Operator&gt;
        &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
        &lt;OpType&gt;AND&lt;/OpType&gt;
        &lt;Count&gt;2&lt;/Count&gt;
        &lt;Operator&gt;
          &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
          &lt;OpType&gt;AND&lt;/OpType&gt;
          &lt;Count&gt;2&lt;/Count&gt;
          &lt;Operator&gt;
            &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
            &lt;OpType&gt;AND&lt;/OpType&gt;
            &lt;Count&gt;2&lt;/Count&gt;
            &lt;Operator&gt;
              &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
              &lt;OpType&gt;EQ&lt;/OpType&gt;
              &lt;Count&gt;2&lt;/Count&gt;
              &lt;Attribute&gt;
                &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
                &lt;Name&gt;Enabled&lt;/Name&gt;
              &lt;/Attribute&gt;
              &lt;Function&gt;
                &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
                &lt;FunctionType&gt;True&lt;/FunctionType&gt;
                &lt;ReturnType&gt;Bool&lt;/ReturnType&gt;
                &lt;Count&gt;0&lt;/Count&gt;
              &lt;/Function&gt;
            &lt;/Operator&gt;
            &lt;Operator&gt;
              &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
              &lt;OpType&gt;EQ&lt;/OpType&gt;
              &lt;Count&gt;2&lt;/Count&gt;
              &lt;Attribute&gt;
                &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
                &lt;Name&gt;DestinationType&lt;/Name&gt;
              &lt;/Attribute&gt;
              &lt;Function&gt;
                &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
                &lt;FunctionType&gt;Enum&lt;/FunctionType&gt;
                &lt;ReturnType&gt;Numeric&lt;/ReturnType&gt;
                &lt;Count&gt;2&lt;/Count&gt;
                &lt;Constant&gt;
                  &lt;TypeClass&gt;String&lt;/TypeClass&gt;
                  &lt;ObjType&gt;System.String&lt;/ObjType&gt;
                  &lt;Value&gt;Microsoft.SqlServer.Management.Smo.AuditDestinationType&lt;/Value&gt;
                &lt;/Constant&gt;
                &lt;Constant&gt;
                  &lt;TypeClass&gt;String&lt;/TypeClass&gt;
                  &lt;ObjType&gt;System.String&lt;/ObjType&gt;
                  &lt;Value&gt;File&lt;/Value&gt;
                &lt;/Constant&gt;
              &lt;/Function&gt;
            &lt;/Operator&gt;
          &lt;/Operator&gt;
          &lt;Operator&gt;
            &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
            &lt;OpType&gt;EQ&lt;/OpType&gt;
            &lt;Count&gt;2&lt;/Count&gt;
            &lt;Attribute&gt;
              &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
              &lt;Name&gt;MaximumFiles&lt;/Name&gt;
            &lt;/Attribute&gt;
            &lt;Constant&gt;
              &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
              &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
              &lt;Value&gt;100&lt;/Value&gt;
            &lt;/Constant&gt;
          &lt;/Operator&gt;
        &lt;/Operator&gt;
        &lt;Operator&gt;
          &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
          &lt;OpType&gt;EQ&lt;/OpType&gt;
          &lt;Count&gt;2&lt;/Count&gt;
          &lt;Attribute&gt;
            &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
            &lt;Name&gt;MaximumRolloverFiles&lt;/Name&gt;
          &lt;/Attribute&gt;
          &lt;Constant&gt;
            &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
            &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
            &lt;Value&gt;10&lt;/Value&gt;
          &lt;/Constant&gt;
        &lt;/Operator&gt;
      &lt;/Operator&gt;
      &lt;Operator&gt;
        &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
        &lt;OpType&gt;EQ&lt;/OpType&gt;
        &lt;Count&gt;2&lt;/Count&gt;
        &lt;Attribute&gt;
          &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
          &lt;Name&gt;MaximumFileSize&lt;/Name&gt;
        &lt;/Attribute&gt;
        &lt;Constant&gt;
          &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
          &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
          &lt;Value&gt;5&lt;/Value&gt;
        &lt;/Constant&gt;
      &lt;/Operator&gt;
    &lt;/Operator&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;EQ&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Attribute&gt;
        &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
        &lt;Name&gt;MaximumFileSizeUnit&lt;/Name&gt;
      &lt;/Attribute&gt;
      &lt;Function&gt;
        &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
        &lt;FunctionType&gt;Enum&lt;/FunctionType&gt;
        &lt;ReturnType&gt;Numeric&lt;/ReturnType&gt;
        &lt;Count&gt;2&lt;/Count&gt;
        &lt;Constant&gt;
          &lt;TypeClass&gt;String&lt;/TypeClass&gt;
          &lt;ObjType&gt;System.String&lt;/ObjType&gt;
          &lt;Value&gt;Microsoft.SqlServer.Management.Smo.AuditFileSizeUnit&lt;/Value&gt;
        &lt;/Constant&gt;
        &lt;Constant&gt;
          &lt;TypeClass&gt;String&lt;/TypeClass&gt;
          &lt;ObjType&gt;System.String&lt;/ObjType&gt;
          &lt;Value&gt;Gb&lt;/Value&gt;
        &lt;/Constant&gt;
      &lt;/Function&gt;
    &lt;/Operator&gt;
  &lt;/Operator&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;EQ&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Attribute&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;Name&gt;ReserveDiskSpace&lt;/Name&gt;
    &lt;/Attribute&gt;
    &lt;Function&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;FunctionType&gt;True&lt;/FunctionType&gt;
      &lt;ReturnType&gt;Bool&lt;/ReturnType&gt;
      &lt;Count&gt;0&lt;/Count&gt;
    &lt;/Function&gt;
  &lt;/Operator&gt;
&lt;/Operator&gt;', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT
Select @condition_id

GO


--- DatabaseAudit_Condition

Declare @condition_id int
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'DatabaseAudit_Condition', @description=N'', @facet=N'DatabaseAuditSpecification', @expression=N'&lt;Operator&gt;
  &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
  &lt;OpType&gt;AND&lt;/OpType&gt;
  &lt;Count&gt;2&lt;/Count&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;AND&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;LIKE&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Attribute&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;Name&gt;AuditName&lt;/Name&gt;
      &lt;/Attribute&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.String&lt;/ObjType&gt;
        &lt;Value&gt;DBAudit_%&lt;/Value&gt;
      &lt;/Constant&gt;
    &lt;/Operator&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;LIKE&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Attribute&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;Name&gt;Name&lt;/Name&gt;
      &lt;/Attribute&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.String&lt;/ObjType&gt;
        &lt;Value&gt;DBAudit_Spec_%&lt;/Value&gt;
      &lt;/Constant&gt;
    &lt;/Operator&gt;
  &lt;/Operator&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;EQ&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Attribute&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;Name&gt;Enabled&lt;/Name&gt;
    &lt;/Attribute&gt;
    &lt;Function&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;FunctionType&gt;True&lt;/FunctionType&gt;
      &lt;ReturnType&gt;Bool&lt;/ReturnType&gt;
      &lt;Count&gt;0&lt;/Count&gt;
    &lt;/Function&gt;
  &lt;/Operator&gt;
&lt;/Operator&gt;', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT
Select @condition_id

GO



--- ServerAudit_Condition

Declare @condition_id int
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'ServerAudit_Condition', @description=N'', @facet=N'ServerAuditSpecification', @expression=N'&lt;Operator&gt;
  &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
  &lt;OpType&gt;AND&lt;/OpType&gt;
  &lt;Count&gt;2&lt;/Count&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;AND&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;LIKE&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Attribute&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;Name&gt;AuditName&lt;/Name&gt;
      &lt;/Attribute&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.String&lt;/ObjType&gt;
        &lt;Value&gt;SQLAudit_%&lt;/Value&gt;
      &lt;/Constant&gt;
    &lt;/Operator&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;LIKE&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Attribute&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;Name&gt;Name&lt;/Name&gt;
      &lt;/Attribute&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.String&lt;/ObjType&gt;
        &lt;Value&gt;ServerAudit_%&lt;/Value&gt;
      &lt;/Constant&gt;
    &lt;/Operator&gt;
  &lt;/Operator&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;EQ&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Attribute&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;Name&gt;Enabled&lt;/Name&gt;
    &lt;/Attribute&gt;
    &lt;Function&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;FunctionType&gt;True&lt;/FunctionType&gt;
      &lt;ReturnType&gt;Bool&lt;/ReturnType&gt;
      &lt;Count&gt;0&lt;/Count&gt;
    &lt;/Function&gt;
  &lt;/Operator&gt;
&lt;/Operator&gt;', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT
Select @condition_id

GO


---ServerVersion

Declare @condition_id int
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'ServerVersion', @description=N'', @facet=N'Server', @expression=N'&lt;Operator&gt;
  &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
  &lt;OpType&gt;OR&lt;/OpType&gt;
  &lt;Count&gt;2&lt;/Count&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;EQ&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Attribute&gt;
      &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
      &lt;Name&gt;VersionMajor&lt;/Name&gt;
    &lt;/Attribute&gt;
    &lt;Constant&gt;
      &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
      &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
      &lt;Value&gt;10&lt;/Value&gt;
    &lt;/Constant&gt;
  &lt;/Operator&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;EQ&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Attribute&gt;
      &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
      &lt;Name&gt;VersionMajor&lt;/Name&gt;
    &lt;/Attribute&gt;
    &lt;Constant&gt;
      &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
      &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
      &lt;Value&gt;11&lt;/Value&gt;
    &lt;/Constant&gt;
  &lt;/Operator&gt;
&lt;/Operator&gt;', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT
Select @condition_id

GO</pre>
<p>Next are the policies:</p>
<pre>Declare @object_set_id int
EXEC msdb.dbo.sp_syspolicy_add_object_set @object_set_name=N'Audit_Policy_ObjectSet', @facet=N'Audit', @object_set_id=@object_set_id OUTPUT
Select @object_set_id

Declare @target_set_id int
EXEC msdb.dbo.sp_syspolicy_add_target_set @object_set_name=N'Audit_Policy_ObjectSet', @type_skeleton=N'Server/Audit', @type=N'AUDIT', @enabled=True, @target_set_id=@target_set_id OUTPUT
Select @target_set_id

EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/Audit', @level_name=N'Audit', @condition_name=N'', @target_set_level_id=0
GO

Declare @policy_id int
EXEC msdb.dbo.sp_syspolicy_add_policy @name=N'Audit_Policy', @condition_name=N'Audit_Condition', @policy_category=N'', @description=N'', @help_text=N'', @help_link=N'', @schedule_uid=N'00000000-0000-0000-0000-000000000000', @execution_mode=0, @is_enabled=False, @policy_id=@policy_id OUTPUT, @root_condition_name=N'ServerVersion', @object_set=N'Audit_Policy_ObjectSet'
Select @policy_id
GO

Declare @object_set_id int
EXEC msdb.dbo.sp_syspolicy_add_object_set @object_set_name=N'DatabaseAudit_Policy_ObjectSet', @facet=N'DatabaseAuditSpecification', @object_set_id=@object_set_id OUTPUT
Select @object_set_id

Declare @target_set_id int
EXEC msdb.dbo.sp_syspolicy_add_target_set @object_set_name=N'DatabaseAudit_Policy_ObjectSet', @type_skeleton=N'Server/Database/DatabaseAuditSpecification', @type=N'DATABASEAUDITSPECIFICATION', @enabled=True, @target_set_id=@target_set_id OUTPUT
Select @target_set_id

EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/Database/DatabaseAuditSpecification', @level_name=N'DatabaseAuditSpecification', @condition_name=N'', @target_set_level_id=0
EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/Database', @level_name=N'Database', @condition_name=N'', @target_set_level_id=0
GO

Declare @policy_id int
EXEC msdb.dbo.sp_syspolicy_add_policy @name=N'DatabaseAudit_Policy', @condition_name=N'DatabaseAudit_Condition', @policy_category=N'', @description=N'', @help_text=N'', @help_link=N'', @schedule_uid=N'00000000-0000-0000-0000-000000000000', @execution_mode=0, @is_enabled=False, @policy_id=@policy_id OUTPUT, @root_condition_name=N'ServerVersion', @object_set=N'DatabaseAudit_Policy_ObjectSet'
Select @policy_id
GO

Declare @object_set_id int
EXEC msdb.dbo.sp_syspolicy_add_object_set @object_set_name=N'ServerAudit_Policy_ObjectSet', @facet=N'ServerAuditSpecification', @object_set_id=@object_set_id OUTPUT
Select @object_set_id

Declare @target_set_id int
EXEC msdb.dbo.sp_syspolicy_add_target_set @object_set_name=N'ServerAudit_Policy_ObjectSet', @type_skeleton=N'Server/ServerAuditSpecification', @type=N'SERVERAUDITSPECIFICATION', @enabled=True, @target_set_id=@target_set_id OUTPUT
Select @target_set_id

EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/ServerAuditSpecification', @level_name=N'ServerAuditSpecification', @condition_name=N'', @target_set_level_id=0
GO

Declare @policy_id int
EXEC msdb.dbo.sp_syspolicy_add_policy @name=N'ServerAudit_Policy', @condition_name=N'ServerAudit_Condition', @policy_category=N'', @description=N'', @help_text=N'', @help_link=N'', @schedule_uid=N'00000000-0000-0000-0000-000000000000', @execution_mode=0, @is_enabled=False, @policy_id=@policy_id OUTPUT, @root_condition_name=N'ServerVersion', @object_set=N'ServerAudit_Policy_ObjectSet'
Select @policy_id
GO</pre>
<p>This concludes the PBM monitoring for this series. the conditions can be changed as per your needs, and the name prefixes are only suggestions that will work well with a central repository.</p>
<h3>The Auditing Repository</h3>
<p>So you are capturing audits to a remote server, and they are all sitting there and getting backed up occasionally. Current value of the auditing? Zero, NULL.</p>
<p>In this form they&#8217;re not providing you with any insight. Let&#8217;s rather pull it into a database. First off we need one:</p>
<pre>/*
This is just a template to create a table that will host the audit information.
Personally I would recommend to use the following format to name the table especially if it gets centralized:

For database audits:
&lt;DBAudit&gt;_&lt;Action&gt;

For server audits:
&lt;SQLAudit&gt;_&lt;Action&gt;

Then personally I use the following for the specifications:

&lt;ServerAudit&gt;_&lt;Action&gt;
&lt;DBAudit&gt;_&lt;Spec&gt;_&lt;Action&gt;

This makes it easier for naming the tables where I would take the following approach:

&lt;SERVERNAME&gt;_&lt;AUDIT&gt;_&lt;ACTIONS&gt;_&lt;DATABASE_NAME&gt; (OPTIONAL for database audits)
*/

if exists(select name from sys.databases where name = '[AuditingLogs]')
drop database [AuditingLogs];
go

CREATE DATABASE [AuditingLogs];
go

USE [AuditingLogs];
GO;

CREATE TABLE [dbo].[AuditTable_Template](
	[event_time] [datetime2](7) NOT NULL,
	[sequence_number] [int] NULL,
	[action_id] [char](4) NULL,
	[succeeded] [bit] NULL,
	[permission_bitmask] [bigint] NULL,
	[is_column_permission] [bit] NULL,
	[session_id] [int] NULL,
	[server_principal_id] [int] NULL,
	[database_principal_id] [int] NULL,
	[target_server_principal_id] [int] NULL,
	[target_database_principal_id] [int] NULL,
	[object_id] [int] NULL,
	[class_type] [char](2) NULL,
	[session_server_principal_name] [nchar](30) NULL,
	[server_principal_name] [nchar](30) NULL,
	[server_principal_sid] [varbinary](50) NULL,
	[database_principal_name] [nchar](30) NULL,
	[target_server_principal_name] [nchar](30) NULL,
	[target_server_principal_sid] [varbinary](50) NULL,
	[target_database_principal_name] [nchar](30) NULL,
	[server_instance_name] [nvarchar](120) NULL,
	[database_name] [nvarchar](120) NULL,
	[schema_name] [nvarchar](120) NULL,
	[object_name] [nvarchar](120) NULL,
	[statement] [nvarchar](4000) NULL,
	[additional_information] [nvarchar](4000) NULL,
	[file_name] [varchar](260) NULL,
	[audit_file_offset] [bigint] NULL,
	[user_defined_event_id] [bit] NULL,
	[user_defined_information] [nvarchar](4000) NULL,
 CONSTRAINT [PK_AuditTable_Template] PRIMARY KEY CLUSTERED 
(
	[event_time] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO</pre>
<p>This gives us our database, you can just move you files to the correct directory as well as add all the secondary files and file groups you need to sustain this. There is also a table &#8220;template&#8221; with which to create your tables. Each table will be specific to an audit file.</p>
<p>Next we need to get the audit information into the database, below is the script I used and can be modified to fit into either a SQL Job or SSIS package.</p>
<pre>/*
This script contains some insert statements as to how you will go about inserting your captured audit events into a SQL database.
Note that I am using event_time as this is the most unique value that will be written down. I am also reading all the information
into the database as you may need this for regulatory requirements.
*/

USE AuditingLogs;
go


INSERT  INTO AuditingLogs.dbo.[Table]
        SELECT  *
        FROM    sys.fn_get_audit_file(file'*.sqlaudit',
                                      DEFAULT, DEFAULT) gaf
        WHERE   gaf.event_time NOT IN ( SELECT  event_time
                                        FROM    table )


INSERT  INTO AuditingLogs.dbo.[Table]
        SELECT  *
        FROM    sys.fn_get_audit_file('file*.sqlaudit',
                                      DEFAULT, DEFAULT) gaf
        WHERE   gaf.event_time NOT IN ( SELECT  event_time
                                        FROM    table  )


INSERT  INTO AuditingLogs.dbo.[Table]
        SELECT  *
        FROM    sys.fn_get_audit_file('file*.sqlaudit',
                                      DEFAULT, DEFAULT) gaf
        WHERE   gaf.event_time NOT IN ( SELECT  event_time
                                        FROM    table  )</pre>
<p>This is currently very basic, and I included some comments into the scripts to give you an overview of what is going on.</p>
<p>For one of the audits used in demoing the SQL Server Auditing feature, I pulled all the information into a table. As per the sys.fn_get_audit_file we can return the same results from the table. In the following example I&#8217;m using sys.dm_audit_actions to join to the table to make the information more clear:</p>
<pre>USE AuditingLogs ;
go

SELECT  del.[event_time] ,
        aa.name ,
        aa.action_in_log ,
        del.[session_id] ,
        del.[session_server_principal_name] ,
        del.[server_instance_name] ,
        del.[database_name] ,
        del.[object_name] ,
        del.[statement]
FROM    [dbo].[SQL2012_DBAudit_Deletes] del
        JOIN sys.dm_audit_actions aa ON aa.action_id = del.action_id
ORDER BY del.event_time ASC</pre>
<p>This is the result:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/query_exmaple_results.jpg?mtime=1326109318"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/LookingBack/query_exmaple_results.jpg?mtime=1326109318" width="1077" height="114" /></a></div>
<p>Currently the database is only hosting the information and it will be nice if Microsoft will add the ability to audit directly to a table in future versions of SQL Server.</p>
<h3>Closing the Chapter</h3>
<p>The auditing feature very useful, and is significantly more so than C2 auditing due to the level of granularity. This is also one of the drawbacks; if the auditing is not well planned out it can bring your database or even server to its knees. As with all auditing mechanisms this feature can chew it&#8217;s way through SAN and a lot of thought needs to go into planning this, and if done so, will pay off greatly in the end. With filtering included in SQL Server 2012 it relieves some of this drawbacks in terms of the impact across a SQL Server instance. Overall I think it&#8217;s a great feature, and it still has the ability to improve greatly.</p>
<p>Below are the links to the rest of the series:</p>
<p><a href="/index.php/DataMgmt/?p=1557">SQL Server Auditing: Introduction</a><br />
<a href="/index.php/DataMgmt/?p=1558">SQL Server Auditing: Creating a Server Specification</a><br />
<a href="/index.php/DataMgmt/?p=1568">SQL Server Auditing: Creating a Database Specification</a><br />
<a href="/index.php/DataMgmt/?p=1573">SQL Server Auditing: Managing Your Audits</a></p>
<p><em>Note. Keep an eye on LessThanDot.com to see some cool things happen to the audit repository!!!</em></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/sql-server-auditing-looking-back/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server Auditing: Managing Your Audits</title>
		<link>/index.php/datamgmt/dbadmin/sql-server-auditing-managing-your/</link>
		<comments>/index.php/datamgmt/dbadmin/sql-server-auditing-managing-your/#respond</comments>
		<pubDate>Mon, 02 Jan 2012 18:40:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2012/01/sql-server-auditing-managing-your/</guid>
		<description><![CDATA[So far in the SQL Server Audit series we've looked at the different components that make up the auditing feature as well as how to create the audits with specifications specific to databases as well as server level. 

Here is the links to the posts co&#8230;]]></description>
				<content:encoded><![CDATA[<p>So far in the SQL Server Audit series we&#8217;ve looked at the different components that make up the auditing feature as well as how to create the audits with specifications specific to databases as well as server level. </p>
<p>Here is the links to the posts covering the topics:</p>
<p><a href="/index.php/All/?p=1557">SQL Server Auditing: Introduction</a><br />
<a href="/index.php/All/?p=1558">SQL Server Auditing: Creating a Server Specification</a><br />
<a href="/index.php/All/?p=1568">SQL Server Auditing: Creating a Database Specification</a></p>
<p>Now that we have set up our audits covering failed logins on instance level and deletes on database level, let&#8217;s take a look at how we can see what audits are on a server as well as some views to make your life easier with reading the audit files.</p>
<h3>DMV&#8217;s and Views</h3>
<p>First off, let&#8217;s see what views are available at our disposal:</p>
<pre>USE master;
GO
SELECT name,[object_id] FROM [sys].[all_objects]
WHERE TYPE = 'v' AND NAME LIKE '%audit%';
GO</pre>
<p>This returns the following for us:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/Management/Results.jpg?mtime=1325273512"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/Management/Results.jpg?mtime=1325273512" width="307" height="192" /></a></div>
<h4>DMV&#8217;s</h4>
<p>So what does the audit DMV&#8217;s do? Let&#8217;s take a look:</p>
<p><em>sys.dm_audit_actions</em></p>
<p>This DMV contains friendlier names, as well as all the actions as well as which action groups they belong to across database and server level specifications.</p>
<p><em>sys.dm_audit_class_type_map</em></p>
<p>This contains all the audit classes and action groups available.</p>
<p><em>sys.dm_server_audit_status</em></p>
<p>This takes a specific look at the audits defined on the server and returns info such as what audits are enabled, statuses for the audits, event times, etc.</p>
<p><em>Sys.dm_audit_class_type_map and sys.dm_audit_actions are especially useful to join with the other views to get a more easily readable report on the audits, or to join it with the fn_get_audit_file function when reading audit files.</em></p>
<h4>Server Views</h4>
<p>The server views are split up into two &#8220;sections&#8221;, one for the audits, and the second for the server specification details.</p>
<p>Audits:<br />
<em>sys.server_audits</em><br />
<em>sys.server_file_audits</em></p>
<p>These views contain details about the server level audits defined on the server, This returns information such as audit names, file names and paths, audit id&#8217;s, statuses, etc.</p>
<p>Specification:<br />
sys.server_audit_specification_details<br />
sys.server_audit_specifications</p>
<p>These views are very helpful when you have multiple audits on a server, and matching the various defined audit actions as well as their groups to audits.</p>
<h4>Database Views</h4>
<p>The database views available are almost identical to the server level ones, except the fact that it&#8217;s specific to databases, and that there are no &#8220;audit&#8221; views; only for database specifications. Another thing to note is, that these views won&#8217;t return information across databases on an instance, this needs to be executed per database.</p>
<p><em>sys.database_audit_specification_details</em><br />
<em>sys.database_audit_specifications</em></p>
<p>The views return the specification names, enabled audit actions, audit results, etc.</p>
<p>Now that we&#8217;ve got the views covered, a question still lingers&#8230; &#8220;How do we manage audits across multiple servers?&#8221; Well the answer is quite simple, we make use of another new feature introduced in SQL Server 2008 which is Policy Based Management, otherwise known as PBM.</p>
<p>So PBM is a subject on it&#8217;s own, so I will not go in depth into this topic.</p>
<p>A key resource required for monitoring your environment is the <a href="http://epmframework.codeplex.com/">Enterprise Policy Framework</a>.</p>
<p>Below is a test policy I created for the post and will monitor the audits for the following:</p>
<p>1. Maximum File Size<br />
2. On Failure Action<br />
3. Reserve Disk Space<br />
4. Maximum Rollover Files<br />
5. Maximum File Size Unit ( MB, GB or TB )</p>
<pre>-- Creates the policy condition

Declare @condition_id int
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'Audit_Policy_Con', @description=N'', @facet=N'Audit', @expression=N'&lt;Operator&gt;
  &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
  &lt;OpType&gt;AND&lt;/OpType&gt;
  &lt;Count&gt;2&lt;/Count&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;AND&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;AND&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Operator&gt;
        &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
        &lt;OpType&gt;AND&lt;/OpType&gt;
        &lt;Count&gt;2&lt;/Count&gt;
        &lt;Operator&gt;
          &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
          &lt;OpType&gt;EQ&lt;/OpType&gt;
          &lt;Count&gt;2&lt;/Count&gt;
          &lt;Attribute&gt;
            &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
            &lt;Name&gt;MaximumFileSize&lt;/Name&gt;
          &lt;/Attribute&gt;
          &lt;Constant&gt;
            &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
            &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
            &lt;Value&gt;100&lt;/Value&gt;
          &lt;/Constant&gt;
        &lt;/Operator&gt;
        &lt;Operator&gt;
          &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
          &lt;OpType&gt;EQ&lt;/OpType&gt;
          &lt;Count&gt;2&lt;/Count&gt;
          &lt;Attribute&gt;
            &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
            &lt;Name&gt;OnFailure&lt;/Name&gt;
          &lt;/Attribute&gt;
          &lt;Function&gt;
            &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
            &lt;FunctionType&gt;Enum&lt;/FunctionType&gt;
            &lt;ReturnType&gt;Numeric&lt;/ReturnType&gt;
            &lt;Count&gt;2&lt;/Count&gt;
            &lt;Constant&gt;
              &lt;TypeClass&gt;String&lt;/TypeClass&gt;
              &lt;ObjType&gt;System.String&lt;/ObjType&gt;
              &lt;Value&gt;Microsoft.SqlServer.Management.Smo.OnFailureAction&lt;/Value&gt;
            &lt;/Constant&gt;
            &lt;Constant&gt;
              &lt;TypeClass&gt;String&lt;/TypeClass&gt;
              &lt;ObjType&gt;System.String&lt;/ObjType&gt;
              &lt;Value&gt;Continue&lt;/Value&gt;
            &lt;/Constant&gt;
          &lt;/Function&gt;
        &lt;/Operator&gt;
      &lt;/Operator&gt;
      &lt;Operator&gt;
        &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
        &lt;OpType&gt;EQ&lt;/OpType&gt;
        &lt;Count&gt;2&lt;/Count&gt;
        &lt;Attribute&gt;
          &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
          &lt;Name&gt;ReserveDiskSpace&lt;/Name&gt;
        &lt;/Attribute&gt;
        &lt;Function&gt;
          &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
          &lt;FunctionType&gt;False&lt;/FunctionType&gt;
          &lt;ReturnType&gt;Bool&lt;/ReturnType&gt;
          &lt;Count&gt;0&lt;/Count&gt;
        &lt;/Function&gt;
      &lt;/Operator&gt;
    &lt;/Operator&gt;
    &lt;Operator&gt;
      &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
      &lt;OpType&gt;EQ&lt;/OpType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Attribute&gt;
        &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
        &lt;Name&gt;MaximumRolloverFiles&lt;/Name&gt;
      &lt;/Attribute&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.Double&lt;/ObjType&gt;
        &lt;Value&gt;100&lt;/Value&gt;
      &lt;/Constant&gt;
    &lt;/Operator&gt;
  &lt;/Operator&gt;
  &lt;Operator&gt;
    &lt;TypeClass&gt;Bool&lt;/TypeClass&gt;
    &lt;OpType&gt;EQ&lt;/OpType&gt;
    &lt;Count&gt;2&lt;/Count&gt;
    &lt;Attribute&gt;
      &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
      &lt;Name&gt;MaximumFileSizeUnit&lt;/Name&gt;
    &lt;/Attribute&gt;
    &lt;Function&gt;
      &lt;TypeClass&gt;Numeric&lt;/TypeClass&gt;
      &lt;FunctionType&gt;Enum&lt;/FunctionType&gt;
      &lt;ReturnType&gt;Numeric&lt;/ReturnType&gt;
      &lt;Count&gt;2&lt;/Count&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.String&lt;/ObjType&gt;
        &lt;Value&gt;Microsoft.SqlServer.Management.Smo.AuditFileSizeUnit&lt;/Value&gt;
      &lt;/Constant&gt;
      &lt;Constant&gt;
        &lt;TypeClass&gt;String&lt;/TypeClass&gt;
        &lt;ObjType&gt;System.String&lt;/ObjType&gt;
        &lt;Value&gt;Mb&lt;/Value&gt;
      &lt;/Constant&gt;
    &lt;/Function&gt;
  &lt;/Operator&gt;
&lt;/Operator&gt;', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT
Select @condition_id

GO

-- Creates the Policy

Declare @object_set_id int
EXEC msdb.dbo.sp_syspolicy_add_object_set @object_set_name=N'Audit_Policy_ObjectSet', @facet=N'Audit', @object_set_id=@object_set_id OUTPUT
Select @object_set_id

Declare @target_set_id int
EXEC msdb.dbo.sp_syspolicy_add_target_set @object_set_name=N'Audit_Policy_ObjectSet', @type_skeleton=N'Server/Audit', @type=N'AUDIT', @enabled=True, @target_set_id=@target_set_id OUTPUT
Select @target_set_id

EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/Audit', @level_name=N'Audit', @condition_name=N'', @target_set_level_id=0
GO

Declare @policy_id int
EXEC msdb.dbo.sp_syspolicy_add_policy @name=N'Audit_Policy', @condition_name=N'Audit_Policy_Con', @policy_category=N'', @description=N'', @help_text=N'', @help_link=N'', @schedule_uid=N'00000000-0000-0000-0000-000000000000', @execution_mode=0, @is_enabled=False, @policy_id=@policy_id OUTPUT, @root_condition_name=N'', @object_set=N'Audit_Policy_ObjectSet'
Select @policy_id
GO</pre>
<p>This is just a basic policy using the &#8220;audit&#8221; facet. There are additional facets for Database Audit Specifications as well as Server Audit Specifications.</p>
<p>Additionally if you decide to use the Enterprise Policy Framework, it should be noted that you need an additional condition to be set up on the policy that will only evaluate the policy against SQL Server 2008+.</p>
<h3>Last Thoughts</h3>
<p>These are the views we can use to discover what audits are running across an instance or databases, which actions we are auditing for and a brief policy we can use when we have to manage the audit files specifically to ensure we have a set standard.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/sql-server-auditing-managing-your/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server Auditing: Creating a Database Specification</title>
		<link>/index.php/datamgmt/dbadmin/sql-server-auditing-creating-a-1/</link>
		<comments>/index.php/datamgmt/dbadmin/sql-server-auditing-creating-a-1/#respond</comments>
		<pubDate>Wed, 28 Dec 2011 05:02:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-server-auditing-creating-a-1/</guid>
		<description><![CDATA[Continuing onwards with the SQL Server auditing feature, let's start off by creating a simple audit that will capture some database level events.

Previously we looked at how to create a Server Audit Specification and creating a Database Specification&#8230;]]></description>
				<content:encoded><![CDATA[<p>Continuing onwards with the SQL Server auditing feature, let&#8217;s start off by creating a simple audit that will capture some database level events.</p>
<p>Previously we looked at how to create a Server Audit Specification and creating a Database Specification follows the same steps. The main difference is the location, as well as the objects to capture. In the following example we will look at capturing delete statements on a database.</p>
<p><em>It is also important to note, that you cannot audit across databases, you will need to set up a Database Specification and its corresponding Audit per database.</em></p>
<h3>Creating the Audit</h3>
<p>We follow the same steps as previously by creating the Audit file:</p>
<p>Expand your instance >> Security >> Right-Click the audit folder >> Select New Audit</p>
<p>This should bring up a new window similar to this:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/AuditFilejpg.jpg?mtime=1325055918"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/AuditFilejpg.jpg?mtime=1325055918" width="650" height="584" /></a></div>
<h3>Creating the Specification</h3>
<p>To Create a Database Specification you can find it under:</p>
<p>Database >> Security >> Database Audit Specification</p>
<p>The first configuration I have for the Database Specification, I am capturing on a database level, only deletes, and only when executed by user belonging to the db_datawriter role.</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/DBSpec_1.jpg?mtime=1325062219"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/DBSpec_1.jpg?mtime=1325062219" width="856" height="152" /></a></div>
<p>I executed the following query on my account which is sysadmin:</p>
<pre>USE testdb;
GO

DELETE FROM tab1 WHERE id BETWEEN 9990 AND 10000;
GO
DELETE FROM tab2 WHERE id BETWEEN 5000 AND 5100;
GO
DELETE FROM tab3 WHERE id BETWEEN 2000 AND 2002;
GO</pre>
<p>This resulted in no deletes being captured:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/result1.jpg?mtime=1325057639"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/result1.jpg?mtime=1325057639" width="902" height="171" /></a></div>
<p>When executed as test_writer, which belongs to the db_datawriter role and I execute the following:</p>
<pre>USE testdb;
GO

DELETE FROM tab1 WHERE id BETWEEN 9900 AND 9990;
GO
DELETE FROM tab2 WHERE id BETWEEN 4500 AND 4990;
GO
DELETE FROM tab3 WHERE id BETWEEN 2500 AND 2560;
GO</pre>
<p>I receive the following results:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/result2.jpg?mtime=1325057650"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/result2.jpg?mtime=1325057650" width="1099" height="130" /></a></div>
<p><em>One thing to note on the output is under &#8220;audit_file_offset&#8221;. All three values are 6144, which indicates that the three statements where executed in the same query.</em></p>
<p>As with the Server Audits, use the following query to retrieve the audit information as it is displayed above:</p>
<pre>SELECT  event_time ,
        action_id ,
        succeeded ,
        session_id ,
        server_principal_name ,
        server_instance_name ,
        database_name ,
        [statement] ,
        audit_file_offset
FROM    fn_get_audit_file('E:SQLAuditingDBAudit*.sqlaudit',
                          DEFAULT, DEFAULT)</pre>
<p>The second example is just to audit a specific table:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/DBSpec_2.jpg?mtime=1325062315"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/DBSpec_2.jpg?mtime=1325062315" width="853" height="154" /></a></div>
<p><em>Note the areas in the red squares, it changes to audit objects, then a specific table, and lastly to which principle it should be bound and again in this case it will be db_datawriter.</em></p>
<p>Again, I execute a delete statement:</p>
<pre>USE testdb;
GO

DELETE FROM tab1 WHERE id BETWEEN 1 AND 100;
GO
DELETE FROM tab2 WHERE id BETWEEN 400 AND 6000;
GO
DELETE FROM tab3 WHERE id BETWEEN 7000 AND 7050;
GO</pre>
<p>Inspecting the statement column, we can see that it only captured the delete statement that was executed against tab1:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/result3.jpg?mtime=1325062845"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/DatabaseSpec/result3.jpg?mtime=1325062845" width="1087" height="89" /></a></div>
<p>To create the users, database, and populate it with the data I used &#8211; run the following:</p>
<pre>/*Creates the database and the logins*/

USE [master]
GO

IF EXISTS(SELECT NAME FROM master.sys.server_principals WHERE name = 'testuser')
DROP LOGIN testuser;
IF EXISTS(SELECT NAME FROM master.sys.server_principals WHERE name = 'test_writer')
DROP LOGIN test_writer;
IF EXISTS(SELECT NAME FROM master.sys.databases WHERE name = 'testdb')
DROP DATABASE testdb;
GO

CREATE LOGIN [testuser] WITH PASSWORD=N'password', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english],
CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO

ALTER LOGIN [testuser] ENABLE
GO

CREATE LOGIN [test_writer] WITH PASSWORD=N'password', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english],
CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO

ALTER LOGIN [test_writer] ENABLE
GO

CREATE DATABASE [testdb] ;
GO

/* Grants the access for the logins */
USE [testdb] ;
GO

CREATE USER [testuser] FOR LOGIN [testuser] WITH DEFAULT_SCHEMA=[dbo]
GO
CREATE USER [test_writer] FOR LOGIN [test_writer] WITH DEFAULT_SCHEMA=[dbo]
GO
EXEC sp_addrolemember N'db_owner', N'testuser' ;
EXEC sp_addrolemember N'db_datawriter', N'test_writer' ;
GO

/*Creates the test tables */

CREATE TABLE [dbo].[tab1]
    (
      [id] [int] IDENTITY(1, 1)
                 NOT NULL ,
      [comment] [varchar](10) NULL ,
      [tabdate] [date] NULL
    )
ON  [PRIMARY]

GO
CREATE TABLE [dbo].[tab2]
    (
      [id] [int] IDENTITY(1, 1)
                 NOT NULL ,
      [comment] [varchar](10) NULL ,
      [tabdate] [date] NULL
    )
ON  [PRIMARY]

GO
CREATE TABLE [dbo].[tab3]
    (
      [id] [int] IDENTITY(1, 1)
                 NOT NULL ,
      [comment] [varchar](10) NULL ,
      [tabdate] [date] NULL
    )
ON  [PRIMARY]
GO

USE [master]
GO
ALTER DATABASE [testdb] SET  READ_WRITE 
GO


/* Random test data */
USE testdb ;
GO

INSERT  INTO tab1
        ( comment, tabdate )
VALUES  ( 'abcdefg', GETDATE() )

GO 10000

INSERT  INTO tab2
        SELECT  comment ,
                tabdate
        FROM    TAB1 ;
GO

INSERT  INTO tab3
        SELECT  comment ,
                tabdate
        FROM    TAB1 ;
GO</pre>
<h3>Final Thoughts</h3>
<p>Just based on auditing for delete statements on database can prove to be very dynamic when using the auditing feature. It doesn&#8217;t even stop here, as this was only a demo, there are a lot more you can audit like stored procedures, functions, views, etc. This is a powerful feature especially for monitoring critical and highly sensitive databases.</p>
<p>To see what else you can audit with the Database Specifications go <a href="http://msdn.microsoft.com/en-us/library/cc280663.aspx">here</a> and skip down to Database-Level Audit Action Groups.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/sql-server-auditing-creating-a-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server Auditing: Creating a Server Specification</title>
		<link>/index.php/datamgmt/dbadmin/sql-server-auditing-creating-a/</link>
		<comments>/index.php/datamgmt/dbadmin/sql-server-auditing-creating-a/#respond</comments>
		<pubDate>Wed, 21 Dec 2011 08:01:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-server-auditing-creating-a/</guid>
		<description><![CDATA[Continuing onwards with the SQL Server auditing feature, let's start off by creating a simple audit that will capture some server level events.

As a DBA one of the things to know is when login attempts are made, and which ones is failing as it could&#8230;]]></description>
				<content:encoded><![CDATA[<p>Continuing onwards with the SQL Server auditing feature, let&#8217;s start off by creating a simple audit that will capture some server level events.</p>
<p>As a DBA one of the things to know is when login attempts are made, and which ones is failing as it could be someone unauthorized trying to gain access . This can be easily retrieved from the SQL error log, however we want to keep track of these events over a period of time, there for the error log might not suffice.</p>
<p>In other circumstances, the system can be under certain policies and regulations which requires you to keep the data for a set amount of time, and we don&#8217;t want other data that is not as critical to be clutter the data we are actually looking to keep.</p>
<h3>Creating The Audit</h3>
<p>To start off with the auditing, we will first set up an audit file. The audit file contains the target destination, file size and max roll over files (only applicable to using a file target) as well as what actions to take when an event triggers.</p>
<p>Limitations on the auditing file is, that you can only have one audit file per specification. This will leave you with either capturing multiple actions or action groups to one file, or multiple specifications to multiple audit files. You can also not mix a database specification with a server specification to one audit file.</p>
<p>To create an audit file using SSMS do the following:</p>
<p>Expand your instance >> Security >> Right-Click the audit folder >> Select New Audit</p>
<p>This should bring up a new window similar to this:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/ServerSpec/Audit.jpg?mtime=1324455850"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/ServerSpec/Audit.jpg?mtime=1324455850" width="651" height="585" /></a></div>
<h5>On Audit Log Failure</h5>
<p>Here we can select between the different actions to take based upon what audit action is triggered. We might just want to log all the database option changes, and who made the change, then we will only use CONTINUE or if we don&#8217;t allow changes, then we can fail the operation. In more secure environments when we receive certain login failures, the audit mechanism can shut down SQL and prevent a possible security breach.</p>
<h5>Audit Destination</h5>
<p>We can choose between file, application, and the security log. The different options visible is only applicable to the file destination as where the application and security log destinations will make use of the settings applied within Windows Server.</p>
<p>For the file destination there are some handy features like choosing the different sizes and reserving that disk space upfront. In the case of using the audit log due to regulation, it is advised that you keep an eye on the files to ensure that back them up before they are recycled.</p>
<p>After creating the audit, under the same location &#8211; select your audit >> right-click  and select Enable Audit.</p>
<h3>Creating The Specification</h3>
<p>So we created our audit, which is now happily running in the background however no audit events are being captured. To capture the events we need to set up either a Server Audit Specification or a Database Audit Specification.</p>
<p>Now we will set up a Server Audit Specification, under the same security folder in SSMS,</p>
<p>Right-click Server Audit Specification >> New Server Audit Specification.</p>
<p>This will bring a window similar to this:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/ServerSpec/Specification.jpg?mtime=1324455868"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/ServerSpec/Specification.jpg?mtime=1324455868" width="844" height="299" /></a></div>
<p>Under Audit can select the audit you have just created. If you have multiple audits all of them will show up, however if you choose one with a specification already assigned, then it will throw an error and warn you.</p>
<p>You can assign multiple audit actions, or audit action groups to one specification however for this exercise we will only use database_change_group to track database changes.After creating the audit the same steps should be followed to enable the specification.</p>
<p><em>Note: It is the default behaviour of Management Studio to create the specifications as well as the audits in an offline state.</em></p>
<p>So now that both the audit and the specification is in place, I made a few changes to a database and now we can look into the file using the following code:</p>
<pre>--returns all the columns for the file
SELECT * FROM fn_get_audit_file ('E:SQLAuditingSQLAudit_DBChanges*.sqlaudit',DEFAULT,DEFAULT)

--Returns specific items to aid in analysing the audit file

SELECT  event_time ,
        action_id ,
        succeeded ,
        session_id ,
        server_principal_name ,
        server_instance_name ,
        database_name ,
        [statement] ,
        audit_file_offset
FROM    fn_get_audit_file('E:SQLAuditingSQLAudit_DBChanges*.sqlaudit',
                          DEFAULT, DEFAULT)</pre>
<p><em>Note: All the files will be appended with a guid, there for it is easier to use the name and then a wildcard which is * to make it easier to load the file and to read the code.</em></p>
<p>The output of my test looks like this:</p>
<div class="image_block"><a href="/wp-content/uploads/users/sqlarcher/AuditBlog/ServerSpec/FailedResults.jpg?mtime=1324455860"><img alt="" src="/wp-content/uploads/users/sqlarcher/AuditBlog/ServerSpec/FailedResults.jpg?mtime=1324455860" width="1081" height="117" /></a></div>
<p>This is a quick specification to monitor for failed logins using the Server Audit Specification and to demonstrate how to do it. There is more information for the different action groups to use with the server audit specification <a href="http://msdn.microsoft.com/en-us/library/cc280663.aspx">here</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/sql-server-auditing-creating-a/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server Audits: Introduction</title>
		<link>/index.php/datamgmt/dbadmin/sql-server-audits-introduction/</link>
		<comments>/index.php/datamgmt/dbadmin/sql-server-audits-introduction/#respond</comments>
		<pubDate>Wed, 21 Dec 2011 05:38:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-server-audits-introduction/</guid>
		<description><![CDATA[Previously DBA's and in some cases even developers had to write custom triggers or set up various profiler traces to monitor what was happening in their SQL Server instances. When measures like this were left to the junior staff joining the company, it&#8230;]]></description>
				<content:encoded><![CDATA[<p>Previously DBA&#8217;s and in some cases even developers had to write custom triggers or set up various profiler traces to monitor what was happening in their SQL Server instances. When measures like this were left to the junior staff joining the company, it held potential disastrous complications in various forms ranging from bad performance due to the overhead or storage issues when traces are not monitored and archived. Some of these issues could take hours to resolve when the steps taken to audit the system is not documented and the root cause obscured in the form of witty triggers firing relentlessly.</p>
<p>Then came SQL Server 2008&#8230; One of the numerous &#8220;enhancements&#8221; or features introduced in SQL Server 2008 are the Audit Specifications. The new component is built on top of the extended events feature, and there for provides a lightweight auditing mechanism.</p>
<p>In this series which will continue over the next few days, I will cover some of the basics to set up auditing such as requirements, use cases, and some general audits that will poke their heads out in the  environment. </p>
<p>To start the series off, let&#8217;s look at the components that makes up the auditing feature.</p>
<p>Both the target and server specification can be found under the instance security list, and the database level specification can be found under the security lists for the various individual databases.</p>
<p>The three main components that make up the auditing feature is;</p>
<h3>Server Audit Specification</h3>
<p>This specification is specifically aimed at events on an instance level which includes login attempts, DBCC commands, backup and restores, and other instance level events.</p>
<h3>Database Audit Specification</h3>
<p>This specification is aimed at events related to all database level actions, like T-SQL statements, stored procedure executions, object modifications in terms of schema changes, etc.</p>
<h3>Targets</h3>
<p>The new auditing mechanism supports three targets; file, security log, and application log. This determines where your audit records end up as well as some additional actions as to what SQL Server should do when certain conditions are met i.e. shut down SQL when a failed login attempt occurs.</p>
<p>When using a file target, the ACL should be set up to allow only the required accounts access, the SQL Service account, person or group that will act as the administrators which in both cases will require READ/WRITE to the directory.</p>
<p>The application log is less secure as it can be read by anyone who successfully authenticates on the server. There for it is recommended to use the security log when writing to the event log.</p>
<p>To log the events to the security log, the <span class="MT_under">generate security audits policy</span> needs to be granted to the SQL Server service account. A detailed process can be found <a href="http://msdn.microsoft.com/en-us/library/cc645889.aspx">here</a>.</p>
<p>In the following posts we will cover creating a basic audit specifications on both server and database levels. We will also look at how to manage the audits, as well as some additional analysis we can do with the information that is captured.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/sql-server-audits-introduction/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server Denali Feature Packs</title>
		<link>/index.php/datamgmt/datadesign/sql-server-denali-feature-packs/</link>
		<comments>/index.php/datamgmt/datadesign/sql-server-denali-feature-packs/#comments</comments>
		<pubDate>Thu, 21 Jul 2011 14:36:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2011/07/sql-server-denali-feature-packs/</guid>
		<description><![CDATA[So by this time all of you should know that SQL Server "Denali" CTP 3 is out and about.

For all of you(like me) that rushed to get it and installed, there is a little secret. There are a few feature packs as well available to accompany your new insta&#8230;]]></description>
				<content:encoded><![CDATA[<p>So by this time all of you should know that SQL Server &#8220;Denali&#8221; CTP 3 is out and about.</p>
<p>For all of you(like me) who rushed to download and install it, there is a little secret. There are a few feature packs as well available to accompany your new installation and Visual Studio 2010(with SP 1).</p>
<p>All the feature packs can be found <a href="http://www.microsoft.com/download/en/details.aspx?id=26726">here</a>, including the alluding Books On Line which doesn&#8217;t force you to connect to the internet version.</p>
<p>Happy exploring and testing the new features.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sql-server-denali-feature-packs/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Transaction Log: VLF&#8217;s, Auto Growth and Performance</title>
		<link>/index.php/datamgmt/datadesign/transaction-log-vlf-s-auto/</link>
		<comments>/index.php/datamgmt/datadesign/transaction-log-vlf-s-auto/#respond</comments>
		<pubDate>Wed, 11 May 2011 09:03:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLArcher]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>

		<guid isPermaLink="false">/index.php/2011/05/transaction-log-vlf-s-auto/</guid>
		<description><![CDATA[Recently I presented at SQLSat 83 about VLF's and their performance impact on our databases. I decided to write this post as well for everyone who couldn't make it all the way to Johannesburg, South Africa.
To provide a bit of history on the subject, I&#8230;]]></description>
				<content:encoded><![CDATA[<p>Recently I presented at SQLSat 83 about VLF&#8217;s and their performance impact on our databases. I decided to write this post as well for everyone who couldn&#8217;t make it all the way to Johannesburg, South Africa.</p>
<p>To provide a bit of history on the subject, I was tasked in March to evaluate a server which came under severe strain. After investigating the numerous issues from insufficient memory to slow internal disk space ( raised alerts in SQL log, and monitoring some of the buffer and memory counters in perfmon), I came to the intermediate solution to redo the log allocation.</p>
<p> </p>
<h2>T-Log Overview:</h2>
<p>Before we dive into the virtual log files, let&#8217;s take a quick recap on what the T-Log is and how it works.</p>
<h3>What is a Transaction Log and How Does it Work?</h3>
<p>A transaction log is a record of all modifications made to a database, including system stored proc&#8217;s, DDL statements, begin/end of a transaction, extent allocation/deallocations, etc. It is also the key roleplayer in restoring back ups, point-in-time recovery(FULL recovery model only) and transactional and merge replication. A log record for each modification is made in the log cache, and a LSN(log sequence number) is assigned to the modification.</p>
<p> </p>
<p>SQL Server uses a read-ahead log model; this means that any data modifications are not immediately made to the data directly, rather a copy of the data residing in memory. Let&#8217;s see how it works:</p>
<ol>
<li>SQL will first check the buffer cache if the required data page is there.</li>
<li>If the data page is not found, then it will make a copy to the buffer cache.</li>
<li>The data modification is applied to data page in the buffer cache.</li>
<li>When the data page is written to disk, it is called a <em>page flush</em>.</li>
<li>The log will write all of the modified data pages to disk via the lazy writer when;
<ol>
<li>A CHECKPOINT occurs.</li>
<li>A COMMIT TRAN occurs.</li>
<li>Transactional/Merge replicated transactions are transfered to the subscriber.</li>
<li>Space is required for new data pages.</li>
</ol>
</li>
<li><em>Note, when a modification is written directly to disk without a log record being created; that modification cannot be rolled back until the next FULL backup is made.</em></li>
</ol>
<p>The use of the read-ahead log model ensures that the ACID principals are not broken and to ensure redundancy, integrity as well as a recoverable database when you are using FULL recovery model.</p>
<h2>Virtual Log Files:</h2>
<p>VLF&#8217;s is what makes up the transaction log internally. We can see the VLF&#8217;s with the following command:</p>
<p>DBCC LOGINFO(DB_Name)</p>
<p>You should then see something similiar to this:</p>
<p><a href="/media/users/sqlarcher/vlf.jpg?mtime=1305048340"><img title="VLF Screen" src="/wp-content/uploads/users/sqlarcher/vlf.jpg?mtime=1305048340" alt="" width="593" height="368" /></a></p>
<p>Columns of note are:</p>
<p>FileSize &#8211; file size in bytes.</p>
<p>Status &#8211; 0 not in use, 2 in use.</p>
<p>CreateLSN &#8211; Log Sequence Number.</p>
<p>When looking to optimize the T-Log we are looking actually looking to allocate the right number, and correctly sized VLF&#8217;s. When VLF&#8217;s are created, either by autogrow or a manual grow; a certain number of VLF&#8217;s are allocated according to the size.</p>
<p>&lt; 64MB will create 4 VLF&#8217;s</p>
<p>&gt;= 64MB &lt; 1GB will create 8 VLF&#8217;s</p>
<p>and &gt; than 1GB will create 16 VLF&#8217;s.</p>
<p>This is by design due to the algorithms used within the SQL Engine. If you create a new database, and pre create the log file with 16GB, then you will have 16 VLF&#8217;s with a size of 1GB each.</p>
<p>In some cases you do not want to pre create the log file with a size that might make your VLF&#8217;s unmanageable like a 64GB log. A 64GB log will create 16 VLF&#8217;s with a size of 4GB. This can be problematic because a VLF is only cleared after it has been filled, but the same account to having VLF&#8217;s which is too small.</p>
<p>&#8220;Why don&#8217;t you create multiple log files to ensure that transactions are split?&#8221; is a popular question, with a simple answer. The T-Log works sequentially and in a round robin fashion. The only benefit in adding multiple log files is redundancy, in case the drive or RAID configuration fails for the particular log file.</p>
<p> </p>
<h3>The Test</h3>
<p>I created a 50,000 row data set, for two databases using Data Generator from Red-Gate Software.</p>
<p>Below is the schema for the table:</p>
<p> </p>
<pre>CREATE TABLE [dbo].[vlftab]( [ID] [int] IDENTITY(1,1) NOT NULL, [comment] [varchar](8000) NOT NULL, [Name] [varchar](20) NOT NULL, [surname] [varchar](40) NOT NULL, [DoB] [date] NOT NULL, [acc] [int] NOT NULL, [joindate] [datetime] NOT NULL)</pre>
<p>I then used three basic statements to test how long it takes to complete:</p>
<pre>update presentation_fast..vlftab set comment = upper(comment),
name = upper (name),
surname = upper(surname)
insert into Presentation_fast..vlftab select comment, Name, surname, DoB, acc, joindate from Presentation_Fast..vlftab_source;
delete from Presentation_slow..vlftab</pre>
<p>Following company policy, I created for the SlowDB a log file which is 30% of the data size. This resulted in a log file which is 75MB. I manually grew the log in increments of 15MB, this resulted in 20 VLF&#8217;s each with a size of 3.75MB. The second database, using the exact same data had a 8GB log with 16VLF&#8217;s each sized 512MB.</p>
<p>The results of the queries are as follows:</p>
<table style="border-color: #000000; border-width: 1px; width: 359px; height: 104px;" border="1">
<tbody>
<tr>
<td></td>
<td>SlowDB</td>
<td>FastDB</td>
<td>Improvement</td>
</tr>
<tr>
<td>Insert(ms)</td>
<td>13177</td>
<td>6431</td>
<td>205%</td>
</tr>
<tr>
<td>Update(ms)</td>
<td>42558</td>
<td>17837</td>
<td>239%</td>
</tr>
<tr>
<td>Delete(ms)</td>
<td>13380</td>
<td>6711</td>
<td>199%</td>
</tr>
</tbody>
</table>
<p>It&#8217;s quite shocking to see how something like this can affect a database, and the impact it can have on business. IF the log is allocated correctly, then it shouldn&#8217;t auto grow which in some cases can cause that incorrectly sized VLF&#8217;s are created, which could hamper performance.</p>
<h3>Conclusion</h3>
<p>Optimizing the transaction log escapes most of us when it goes further than the best RAID configs, or SSD&#8217;s. But on systems without these configurations this can often be the solution to poor performing databases when every other avenue have been explored.</p>
<p>For systems, to properly allocate the log file; is testing. A good tool I found for this is <a href="http://www.sqlstress.com/">SQLStress</a> as it can simulate different workloads and it&#8217;s flexible.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/transaction-log-vlf-s-auto/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
