<?xml version="1.0" encoding="UTF-8"?><feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en-US"
  xml:base="/wp-atom.php"
   >
	<title type="text">Application Server &#8211; LessthanDot</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-03-09T12:50:36Z</updated>

	<link rel="alternate" type="text/html" href="/" />
	<id>/index.php/feed/atom/</id>
	<link rel="self" type="application/atom+xml" href="/index.php/category/enterprisedev/appserver/feed/atom/" />

	<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Scala: The difference between val and var]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/jee/scala-the-difference-between-val/" />
		<id>/index.php/2013/01/scala-the-difference-between-val/</id>
		<updated>2013-01-12T10:25:00Z</updated>
		<published>2013-01-12T10:25:00Z</published>
		<category scheme="/" term="Application Lifecycle Management" /><category scheme="/" term="Java EE" /><category scheme="/" term="functional programming" /><category scheme="/" term="java" /><category scheme="/" term="jvm" /><category scheme="/" term="polyglot" /><category scheme="/" term="scala" />		<summary type="html"><![CDATA[This is a short Scala post to explain what the difference is between val and var. I was showing some Scala code to a co-worker this past week and he was asking what the difference was between val and var. It is quite simple:]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/jee/scala-the-difference-between-val/"><![CDATA[<p>This is a short Scala post to explain what the difference is between val and var. I was showing some Scala code to a co-worker this past week and he was asking what the difference was between val and var. It is quite simple:</p>
<p><strong>val</strong> defines a fixed value, it is a read only variable<br />
<strong>var</strong> defines a mutable variable, this variable can be modified</p>
<p>In Java you would use final to create a variable which would be read only, this is the same as val in Scala. </p>
<p>Let&#8217;s look at some very simple Scala code.</p>
<pre>object Test {

  def main(args: Array[String]) = println("done with main")
  
var Test1 =5
println("Test1 " + Test1)
  
Test1 = 6
println("Test1 " + Test1)

}</pre>
<p>Running the code above will give the following output<br />
Test1 5<br />
Test1 6<br />
done with main</p>
<p>If you are trying to use val, you will get an error, change var to val and see if you can compile the code</p>
<pre>object Test {

  def main(args: Array[String]) = println("done with main")
  
val Test1 =5
println("Test1 " + Test1)
  
Test1 = 6
println("Test1 " + Test1)

}</pre>
<p>Here is the error, the code won&#8217;t even compile</p>
<pre>Description		Resource	Path		Location	Type
reassignment to val	Test.scala	/ScalaTemp/src	line 8		Scala Problem</pre>
<p>So as you can see, val is read only, while with var you can modify the variable.</p>
<p>If you want to play around with Scala, take a look at <a href="/index.php/EnterpriseDev/AppServer/JEE/installing-scala-2-10-on">Installing Scala 2.10 on Eclipse Juno</a></p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/jee/scala-the-difference-between-val/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/jee/scala-the-difference-between-val/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Review of The Well-Grounded Java Developer]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/" />
		<id>/index.php/2013/01/review-of-the-well-grounded/</id>
		<updated>2013-01-09T15:12:00Z</updated>
		<published>2013-01-09T15:12:00Z</published>
		<category scheme="/" term="Application Lifecycle Management" /><category scheme="/" term="Java EE" /><category scheme="/" term="book" /><category scheme="/" term="book review" /><category scheme="/" term="groovy" /><category scheme="/" term="java functional programming" /><category scheme="/" term="jvm" /><category scheme="/" term="maven" /><category scheme="/" term="polyglot" /><category scheme="/" term="scala" />		<summary type="html"><![CDATA[This is a review of The Well-Grounded Java Developer, Vital techniques of Java 7 and polyglot programming. Written by Benjamin J. Evans and Martijn Verburg. The book was published in July, 2012 and it contains 496 pages

This is an excellent&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/"><![CDATA[<p>This is a review of <a href="http://www.amazon.com/gp/product/1617290068/ref=as_li_ss_tl?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1617290068">The Well-Grounded Java Developer, Vital techniques of Java 7 and polyglot programming</a>. Written by Benjamin J. Evans and Martijn Verburg. The book was published in July, 2012 and it contains 496 pages</p>
<p><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/evans_cover150.jpg?mtime=1357748948"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/evans_cover150.jpg?mtime=1357748948" width="150" height="188" style="float:left;margin:0 5px 0 0;" /></a>Right from the start I want to say that this is an excellent book and I highly recommend it. One thing you do need to be aware about is that in order to use this book you need to know Java. If you don&#8217;t know Java then this is not the book for you. This book is all about bringing you to the next level as a Java developer by showing you how to do continuous integration, dependency injection, testing, performance tuning, and more.<br />
This book even shows you how to use different languages that run on the JVM. The book is written in a easy and concise style, everything is very clear. I also love the annotations which are sprinkled throughout the book, they give some nice background information. While the chapters on Groovy, Scala and Clojure are not a complete reference for the language, they do provide enough material to form a nice foundation, now you can further explore the language on your own.</p>
<p>The book is split up in four parts, I will list each part with the chapters within that part and will give a brief summary what the part is about</p>
<p><strong>Part 1 Developing with Java 7</strong><br />
Chapter 1 Introducing Java 7<br />
Chapter 2 New I/O</p>
<p>This section shows you what was added in Java 7, for example you can now use strings in switch statements, try-with-resources(similar to a using statement in c#, it frees up the resources after it is done). The Java IO stuff has been rewritten and much easier to use, where you had to write a whole bunch of code before, you can now do the same in much less code. Some things that did not exist in Java in terms of IO but now does exist are explained as well.</p>
<p><strong>Part 2 Vital techniques</strong><br />
Chapter 3 Dependency Injection<br />
Chapter 4 Modern concurrency<br />
Chapter 5 Class files and bytecode<br />
Chapter 6 Understanding performance tuning</p>
<p>This part has a lot of stuff and as a Java developer you should really know how this stuff works if you want to get to the next level. Dependency Injection(DI) and inversion of control (IoC) are covered, Guice 3, the reference implementation for DI in Java is also covered. Concurrency before Java 5 and concurrency now is covered. Concurrency will be a must now that we have multi-CPU and multi-core everywhere, you better get your wits around it. There is a whole chapter on the class files itself and how they are loaded as well as what they compile into. These are fun details and will show you exactly what happens when you compile and execute a class. Evereybody&#8217;s favorite subject performance tuning is covered in this part of the book as well.</p>
<p><strong>Part 3 Polyglot programming on the JVM</strong><br />
Chapter 7 Alternative JVM languages<br />
Chapter 8 Groovy: Java’s dynamic friend<br />
Chapter 9 Scala: powerful and concise<br />
Chapter 10 Clojure: safer programming</p>
<p>This is a very interesting part of the book and I would suggest not to skip it. There are 3 type of languages covered in this part:<br />
Groovy, a dynamic language<br />
Scala, a functional language<br />
Clojure, a Lisp for functional programming</p>
<p>Take a look at these languages and you will be amazed how much Java boilerplate code you can eliminate by using these languages instead. Some of the functional is a little bit of a paradigm shift and you might need some time adjusting. You will also see how you can interoperate between these languages and Java.</p>
<p><strong>Part 4 Crafting the polyglot project</strong><br />
Chapter 11 Test-driven development<br />
Chapter 12 Build and continuous integration<br />
Chapter 13 Rapid web development<br />
Chapter 14 Staying well-grounded</p>
<p>The last part is all about automation and making your life easier. If you are a developer who still deploys stuff by using FTP to move JAR, EAR and WAR files, pay attention. Maven is covered as the build automation tool, Jenkins is the  continuous integration tool. In the Rapid web development chapter Grails is explored.</p>
<hr />
Let me just repeat again that I think this is an awesome book and as a Java developer you have to check it out. The one thing that is missing from the book is ORM, it is covered a little in the testing chapter but if you want to know about ORM, you will need to pick out some other book just for that.</p>
<p>You can download the following chapters to get a feel for the book</p>
<p><a href="http://www.manning.com/evans/TWGJD_sample_ch01.pdf">Sample chapter 1</a><br />
<a href="http://www.manning.com/evans/TWGJD_sample_ch04.pdf">Sample chapter 4</a></p>
<p>Head on over to Amazon for other reviews of <a href="http://www.amazon.com/gp/product/1617290068/ref=as_li_ss_tl?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1617290068">The Well-Grounded Java Developer, Vital techniques of Java 7 and polyglot programming</a><br />
The site for the book can be found here: http://www.manning.com/evans/ </p>
<hr />
Below is the complete table of contents so that you have a little more details about each chapter.</p>
<p><strong>Part 1 Developing with Java 7<br />
Chapter 1 Introducing Java 7<br />
</strong>The language and the platform<br />
Small is beautiful—Project Coin<br />
The changes in Project Coin<br />
Summary</p>
<p><strong>Chapter 2 New I/O</strong><br />
Java I/O—a history<br />
Path—a foundation of file-based I/O<br />
Dealing with directories and directory trees<br />
Filesystem I/O with NIO.2<br />
Asynchronous I/O operations<br />
Tidying up Socket-Channel functionality<br />
Summary</p>
<p><strong>Part 2 Vital techniques<br />
Chapter 3 Dependency Injection</strong><br />
Inject some knowledge—understanding IoC and DI<br />
Standardized DI in Java<br />
Guice 3—the reference implementation for DI in Java<br />
Summary</p>
<p><strong>Chapter 4 Modern concurrency</strong><br />
Concurrency theory—a primer<br />
Block-structured concurrency (pre-Java 5)<br />
Building blocks for modern concurrent applications<br />
Controlling execution<br />
The fork/join framework<br />
The Java Memory Model (JMM)<br />
Summary</p>
<p><strong>Chapter 5 Class files and bytecode</strong><br />
Classloading and class objects<br />
Using method handles<br />
Examining class files<br />
Bytecode<br />
Invokedynamic<br />
Summary</p>
<p><strong>Chapter 6 Understanding performance tuning</strong><br />
Performance terminology—some basic definitions<br />
A pragmatic approach to performance analysis<br />
What went wrong? Why we have to care<br />
A question of time—from the hardware up<br />
Garbage collection<br />
JIT compilation with HotSpot<br />
Summary</p>
<p><strong>Part 3 Polyglot programming on the JVM<br />
Chapter 7 Alternative JVM languages<br />
</strong>Java too clumsy? Them’s fighting words!<br />
Language zoology<br />
Polyglot programming on the JVM<br />
How to choose a non-Java language for your project<br />
How the JVM supports alternative languages<br />
Summary</p>
<p><strong>Chapter 8 Groovy: Java’s dynamic friend</strong><br />
Getting started with Groovy<br />
Groovy 101—syntax and semantics<br />
Differences from Java—traps for new players<br />
Groovy features not (yet) in Java<br />
Interoperating between Groovy and Java<br />
Summary</p>
<p><strong>Chapter 9 Scala: powerful and concise</strong><br />
A quick tour of Scala<br />
Is Scala right for my project?<br />
Making code beautiful again with Scala<br />
Scala’s object model—similar but different<br />
Data structures and collections<br />
Introduction to actors<br />
Summary</p>
<p><strong>Chapter 10 Clojure: safer programming</strong><br />
Introducing Clojure<br />
Looking for Clojure—syntax and semantics<br />
Working with functions and loops in Clojure<br />
Introducing Clojure sequences<br />
Interoperating between Clojure and Java<br />
Concurrent Clojure<br />
Summary</p>
<p><strong>Part 4 Crafting the polyglot project<br />
Chapter 11 Test-driven development<br />
</strong>TDD in a nutshell<br />
Test doubles<br />
Introducing ScalaTest<br />
Summary</p>
<p><strong>Chapter 12 Build and continuous integration</strong><br />
Getting started with Maven 3<br />
Maven 3—a quick-start project<br />
Maven 3—the Java7developer build<br />
Jenkins—serving your CI needs<br />
Code metrics with Maven and Jenkins<br />
Leiningen<br />
Summary</p>
<p><strong>Chapter 13 Rapid web development</strong><br />
The problem with Java-based web frameworks<br />
Criteria in selecting a web framework<br />
Getting started with Grails<br />
Grails quick-start project<br />
Further Grails exploration<br />
Getting started with Compojure<br />
A sample Compojure project—“Am I an Otter or Not?”<br />
Summary</p>
<p><strong>Chapter 14 Staying well-grounded</strong><br />
What to expect in Java 8<br />
Polyglot programming<br />
Future concurrency trends<br />
New directions in the JVM</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/#comments" thr:count="4"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/feed/atom/" thr:count="4"/>
		<thr:total>4</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Installing Scala 2.10 on Eclipse Juno]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/jee/installing-scala-2-10-on/" />
		<id>/index.php/2013/01/installing-scala-2-10-on/</id>
		<updated>2013-01-05T13:46:00Z</updated>
		<published>2013-01-05T13:46:00Z</published>
		<category scheme="/" term="Application Lifecycle Management" /><category scheme="/" term="Java EE" /><category scheme="/" term="functional programming" /><category scheme="/" term="java" /><category scheme="/" term="jvm" /><category scheme="/" term="polyglot" /><category scheme="/" term="scala" />		<summary type="html"><![CDATA[Scala 2.10 was released yesterday and I decided to take a look at it. But first what is Scala anyway? From the Scala site: 

Scala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and typ&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/jee/installing-scala-2-10-on/"><![CDATA[<p>As part of my <a href="/index.php/ITProfessionals/ProfessionalDevelopment/ah-yes-those-pesky-resolutions">resolutions for the year</a> I said I would write more blog posts and also get into different technology. I decided to take a look at Scala. Well it turns out Scala 2.10 was released yesterday. But first what is Scala anyway? From the Scala site:  </p>
<blockquote><p>Scala is a general purpose programming language designed to express common programming patterns in a concise, elegant, and type-safe way. It smoothly integrates features of object-oriented and functional languages, enabling Java and other programmers to be more productive. Code sizes are typically reduced by a factor of two to three when compared to an equivalent Java application.</p></blockquote>
<p>Scala is an object oriented, functional, statically typed language. You could probably compare it to F# if you are a .NET programmer.</p>
<p>The first thing you have to do is downloading version 2.10 of Scala, you can download that version here: http://www.scala-lang.org/downloads</p>
<p>After it is downloaded and installed, it is time to get the Eclipse plugin for Scala 2.10</p>
<p>The way you do this is you click on Help followed by Install New Software&#8230; from the menu in Eclipse</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno2.PNG?mtime=1357398056"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno2.PNG?mtime=1357398056" width="552" height="169" /></a></div>
<p>Click on the Add button</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno3.PNG?mtime=1357398065"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno3.PNG?mtime=1357398065" width="476" height="177" /></a></div>
<p>For Eclipse Juno you need to use the following URL in the location box http://download.scala-ide.org/sdk/e38/scala210/dev/site/<br />
For Eclipse Indigo use the following URL http://download.scala-ide.org/sdk/e37/scala210/dev/site/<br />
Give a name for the repository, I named mine Scala 10 for Eclipse Juno. Hit Ok</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno4.PNG?mtime=1357398076"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno4.PNG?mtime=1357398076" width="300" height="165" /></a></div>
<p>Hit next</p>
<p>On the Install Details form you will see Scala IDE for Eclipse<br />
You can expand it to reveal the following</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno5.PNG?mtime=1357398089"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno5.PNG?mtime=1357398089" width="352" height="152" /></a></div>
<p>Hit next to accept the license, hit finish.</p>
<p>Now Eclipse will ask you to restart. After Eclipse is restarted it is time to create our first Scala application<br />
From the menu go to File and then select New Project. Navigate to Scala Wizards and select Scala Project</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno6.PNG?mtime=1357398099"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno6.PNG?mtime=1357398099" width="562" height="361" /></a></div>
<p>Now that the project is created let&#8217;s create a simple object</p>
<p>Right click on the Scala Project from the package Explorer and select New&#8211;> Scala Object</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno7.PNG?mtime=1357398110"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno7.PNG?mtime=1357398110" width="510" height="573" /></a></div>
<p>Give it a name and check <em>public static void main</em></p>
<p>You should have something like this</p>
<pre>object Test2 {

  def main(args: Array[String]): Unit = {}

}</pre>
<p>Let&#8217;s make it more interesting by generating some output</p>
<pre>object Test2 {

  def main(args: Array[String]): Unit = {}

	val (name, site, role) = getSomeInfo()
	println("Name is " + name)
	println("Site is " + site)
	println("Role is " + role)

	def getSomeInfo() = {
    ("SQLDenis", "LessThanDot", "blogger")
	}
}</pre>
<p>Run it by selecting Run As&#8211;> Scala Application from the Run as button</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno10.PNG?mtime=1357399576"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno10.PNG?mtime=1357399576" width="455" height="48" /></a></div>
<p>Your output should be the following<br />
Name is SQLDenis<br />
Site is LessThanDot<br />
Role is blogger</p>
<p>Why don&#8217;t we add a simple loop to our code? Here is what needs to be added</p>
<pre>	for (i &lt;- 1 to 3) {
		print(i + ",")
	}
	println(" Testing 1,2,3.....")</pre>
<p>Here is the whole code</p>
<pre>object Test2 {

  def main(args: Array[String]): Unit = {}

	val (name, site, role) = getSomeInfo()
	println("Name is " + name)
	println("Site is " + site)
	println("Role is " + role)
	
	for (i &lt;- 1 to 3) {
		print(i + ",")
	}
	println(" Testing 1,2,3.....")

	def getSomeInfo() = {
    ("SQLDenis", "LessThanDot", "blogger")
	}
}</pre>
<p>Run it again, here is what the output should be</p>
<p>Name is SQLDenis<br />
Site is LessThanDot<br />
Role is blogger<br />
1,2,3, Testing 1,2,3&#8230;..<br />
Here is what my Eclipse window looks like</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno9.PNG?mtime=1357398314"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/juno9.PNG?mtime=1357398314" width="595" height="523" /></a></div>
<p>In case you are interested in all the new stuff in Scala 2.10, take a look at the stuff below.</p>
<hr />
<p>The Scala 2.10.0 codebase includes the following new features and changes:&nbsp;</p>
<ul>
<li>Value Classes
<ul>
<li>A class may now extend <code>AnyVal</code> to make it behave like a struct type (restrictions apply).</li>
<li><a href="http://docs.scala-lang.org/overviews/core/value-classes.html">http://docs.scala-lang.org/overviews/core/value-classes.html</a></li>
</ul>
</li>
<li>Implicit Classes
<ul>
<li>The implicit modifier now also applies to class definitions to reduce the boilerplate of implicit wrappers.</li>
<li><a href="http://docs.scala-lang.org/sips/pending/implicit-classes.html">http://docs.scala-lang.org/sips/pending/implicit-classes.html</a></li>
</ul>
</li>
<li>String Interpolation
<ul>
<li><code>val what = "awesome"; println(s"string interpolation is ${what.toUpperCase}!")</code></li>
<li><a href="http://docs.scala-lang.org/overviews/core/string-interpolation.html">http://docs.scala-lang.org/overviews/core/string-interpolation.html</a></li>
</ul>
</li>
<li>Futures and Promises
<ul>
<li>Asynchronously get some JSON: <code>for (req &lt;- WS.url(restApiUrl).get()) yield (req.json  "users").as[List[User]]</code> (uses play!)</li>
<li><a href="http://docs.scala-lang.org/overviews/core/futures.html">http://docs.scala-lang.org/overviews/core/futures.html</a></li>
</ul>
</li>
<li>Dynamic and applyDynamic
<ul>
<li><code>x.foo</code> becomes <code>x.applyDynamic("foo")</code> if <code>x</code>&#8216;s type does not define a <code>foo</code>, but is a subtype of <code>Dynamic</code></li>
<li><a href="http://docs.scala-lang.org/sips/pending/type-dynamic.html">http://docs.scala-lang.org/sips/pending/type-dynamic.html</a></li>
</ul>
</li>
<li>Dependent method types:
<ul>
<li><code>def identity(x: AnyRef): x.type = x</code> // the return type says we return exactly what we got</li>
</ul>
</li>
<li>New ByteCode emitter based on ASM
<ul>
<li>Can target JDK 1.5, 1.6 and 1.7</li>
<li>Emits 1.6 bytecode by default</li>
<li>Old 1.5 backend is deprecated</li>
</ul>
</li>
<li>A new Pattern Matcher
<ul>
<li>rewritten from scratch to generate more robust code (no more <a href="https://issues.scala-lang.org/browse/SI-1133">exponential blow-up</a>!)</li>
<li>code generation and analyses are now independent (the latter can be turned off with <code>-Xno-patmat-analysis</code>)</li>
</ul>
</li>
<li>Scaladoc Improvements
<ul>
<li>Implicits (-implicits flag)</li>
<li>Diagrams (-diagrams flag, requires graphviz)</li>
<li>Groups (-groups)</li>
</ul>
</li>
<li>Modularized Language features
<ul>
<li>Get on top of the advanced Scala features used in your codebase by explicitly importing them.</li>
<li><a href="http://docs.scala-lang.org/sips/pending/modularizing-language-features.html">http://docs.scala-lang.org/sips/pending/modularizing-language-features.html</a></li>
</ul>
</li>
<li>Parallel Collections are now configurable with custom thread pools
<ul>
<li><a href="http://docs.scala-lang.org/overviews/parallel-collections/overview.html">http://docs.scala-lang.org/overviews/parallel-collections/overview.html</a></li>
</ul>
</li>
<li>Akka Actors now part of the distribution
<ul>
<li>The original Scala actors are now deprecated.</li>
<li>See the <a href="http://docs.scala-lang.org/actors-migration/">actors migration project</a> for more information.</li>
</ul>
</li>
<li>Performance Improvements
<ul>
<li>Faster inliner</li>
<li>`Range#sum is now O(1)</li>
<li>Update of ForkJoin library</li>
<li>Fixes in immutable <code>TreeSet</code>/<code>TreeMap</code></li>
<li>Improvements to PartialFunctions</li>
</ul>
</li>
<li>Addition of <code>???</code> and <code>NotImplementedError</code></li>
<li>Addition of <code>IsTraversableOnce</code> + <code>IsTraversableLike</code> type classes for extension methods</li>
<li>Deprecations and cleanup
<ul>
<li>Floating point and octal literal syntax deprecation</li>
<li>Removed scala.dbc</li>
</ul>
</li>
</ul>
<h3 id="Experimentalfeatures">Experimental features</h3>
<p>The following exciting &#8212; experimental &#8212; features are part of 2.10.0:</p>
<ul>
<li>Scala Reflection
<ul>
<li><a href="https://docs.google.com/document/d/1Z1VhhNPplbUpaZPIYdc0_EUv5RiGQ2X4oqp0i-vz1qw/edit#heading=h.pqwdkl">https://docs.google.com/document/d/1Z1VhhNPplbUpaZPIYdc0_EUv5RiGQ2X4oqp0i-vz1qw/edit#heading=h.pqwdkl</a></li>
</ul>
</li>
<li>Macros
<ul>
<li><a href="http://docs.scala-lang.org/overviews/macros/overview.html">http://docs.scala-lang.org/overviews/macros/overview.html</a></li>
</ul>
</li>
</ul>
<p>
<hr />
That is all for this post, Scala is just one of the languages I will explore in my quest to be more of a polyglot this year. Have you looked at Scala or some other functional language like F#?</p>
<p>Edit&#8230;&#8230;.</p>
<p>And I played a little more with this and decided to do one of our <a href="http://forum.lessthandot.com/viewtopic.php?f=102&amp;t=1608">Friday the Thirteenths</a></p>
<p>Here is a solution that someone posted in Java</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="de1"><pre class="de1"><span class="kw1">import</span> <span class="co2">java.text.DateFormat</span><span class="sy0">;</span>
<span class="kw1">import</span> <span class="co2">java.text.SimpleDateFormat</span><span class="sy0">;</span>
<span class="kw1">import</span> <span class="co2">java.util.Calendar</span><span class="sy0">;</span>
<span class="kw1">import</span> <span class="co2">java.util.GregorianCalendar</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> Test
<span class="br0">&#123;</span>
&nbsp; &nbsp;<span class="kw1">private</span> <span class="kw1">static</span> <span class="kw1">final</span> <span class="kw3">DateFormat</span> format <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">SimpleDateFormat</span><span class="br0">&#40;</span><span class="st0">&quot;EEE MMM dd yyyy&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp;
&nbsp; &nbsp;<span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">void</span> main<span class="br0">&#40;</span><span class="kw3">String</span>... <span class="me1">args</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; <span class="kw3">GregorianCalendar</span> cal <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">GregorianCalendar</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; <span class="kw3">GregorianCalendar</span> stopDate <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">GregorianCalendar</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; stopDate.<span class="me1">add</span><span class="br0">&#40;</span><span class="kw3">Calendar</span>.<span class="me1">YEAR</span>, <span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class="co1">// Move ahead to the next Friday</span>
&nbsp; &nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span>cal.<span class="me1">get</span><span class="br0">&#40;</span><span class="kw3">Calendar</span>.<span class="me1">DAY_OF_WEEK</span><span class="br0">&#41;</span> <span class="sy0">!=</span> <span class="nu0">6</span><span class="br0">&#41;</span> cal.<span class="me1">add</span><span class="br0">&#40;</span><span class="kw3">Calendar</span>.<span class="me1">DATE</span>, <span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span>cal.<span class="me1">before</span><span class="br0">&#40;</span>stopDate<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span>cal.<span class="me1">get</span><span class="br0">&#40;</span><span class="kw3">Calendar</span>.<span class="me1">DAY_OF_MONTH</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="nu0">13</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>format.<span class="me1">format</span><span class="br0">&#40;</span>cal.<span class="me1">getTime</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cal.<span class="me1">add</span><span class="br0">&#40;</span><span class="kw3">Calendar</span>.<span class="me1">DATE</span>, <span class="nu0">7</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp;<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
 
public class Test
{
   private static final DateFormat format = new SimpleDateFormat("EEE MMM dd yyyy");
   
   public static void main(String... args) {
      GregorianCalendar cal = new GregorianCalendar();
      GregorianCalendar stopDate = new GregorianCalendar();
      stopDate.add(Calendar.YEAR, 10);
       
      // Move ahead to the next Friday
      while (cal.get(Calendar.DAY_OF_WEEK) != 6) cal.add(Calendar.DATE, 1);
       
      while (cal.before(stopDate)) {
         if (cal.get(Calendar.DAY_OF_MONTH) == 13)
            System.out.println(format.format(cal.getTime()));
           
            cal.add(Calendar.DATE, 7);
      }
   }
}</pre></div></div>

<p>In Scala you don&#8217;t have to change that much, you can leave or take out the semicolons, here is the code</p>
<pre>object Test2 {
  
import java.text.DateFormat
import java.text.SimpleDateFormat
import java.util.Calendar
import java.util.GregorianCalendar

  def main(args: Array[String]): Unit = {}
  val DateFormat  = new SimpleDateFormat("EEE MMM dd yyyy")
  
  val cal = new GregorianCalendar()
  val stopDate = new GregorianCalendar()
  stopDate.add(Calendar.YEAR, 10);
      
  while (cal.get(Calendar.DAY_OF_WEEK) != 6) cal.add(Calendar.DATE, 1)
	 
  while (cal.before(stopDate)) {
         if (cal.get(Calendar.DAY_OF_MONTH) == 13)
            println(DateFormat.format(cal.getTime()))
           cal.add(Calendar.DATE, 7);
      
   }
		
}</pre>
<p>And here is the output</p>
<p>Fri Sep 13 2013<br />
Fri Dec 13 2013<br />
Fri Jun 13 2014<br />
Fri Feb 13 2015<br />
Fri Mar 13 2015<br />
Fri Nov 13 2015<br />
Fri May 13 2016<br />
Fri Jan 13 2017<br />
Fri Oct 13 2017<br />
Fri Apr 13 2018<br />
Fri Jul 13 2018<br />
Fri Sep 13 2019<br />
Fri Dec 13 2019<br />
Fri Mar 13 2020<br />
Fri Nov 13 2020<br />
Fri Aug 13 2021<br />
Fri May 13 2022</p>
<p>With SQL Server, you can just use a number table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">DATEADD</span><span class="br0">&#40;</span>m, number,<span class="st0">'1998-01-13'</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">FROM</span> &nbsp;master..<span class="me1">spt_values</span> <span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'P'</span>
and <span class="kw2">DATENAME</span><span class="br0">&#40;</span>dw,<span class="kw2">DATEADD</span><span class="br0">&#40;</span>m, number,<span class="st0">'1998-01-13'</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'friday'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT DATEADD(m, number,'1998-01-13')
 FROM  master..spt_values WHERE type = 'P'
and DATENAME(dw,DATEADD(m, number,'1998-01-13')) = 'friday'</pre></div></div>

<p>That is really it for this post&#8230;</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/jee/installing-scala-2-10-on/#comments" thr:count="1"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/jee/installing-scala-2-10-on/feed/atom/" thr:count="1"/>
		<thr:total>1</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Java Training Day 4]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/java-training-day-4/" />
		<id>/index.php/2012/11/java-training-day-4/</id>
		<updated>2012-11-29T18:55:00Z</updated>
		<published>2012-11-29T18:55:00Z</published>
		<category scheme="/" term="Application Lifecycle Management" /><category scheme="/" term="Application Server" /><category scheme="/" term="Java EE" /><category scheme="/" term="encapsulation" /><category scheme="/" term="generics" /><category scheme="/" term="inheritance" /><category scheme="/" term="java" /><category scheme="/" term="jvm" /><category scheme="/" term="polymorphism" />		<summary type="html"><![CDATA[Java Day 4

The Collections Framework
Legacy Container Classes
A container is an object that holds a collection of other objects
An array is a simple container. Arrays have a couple of limitations
. The size is fixed
. All the members of the arra&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/java-training-day-4/"><![CDATA[<p>Today was day four of our Java training, we looked at generics, collection and IO today, here is what was covered</p>
<p><strong>The Collections Framework</strong><br />
Legacy Container Classes<br />
A container is an object that holds a collection of other objects<br />
An array is a simple container. Arrays have a couple of limitations<br />
. The size is fixed<br />
. All the members of the array must be of the same type<br />
. You can&#8217;t add methods and attributes to an array</p>
<p>The java.util package has two container classes as well as an supporting interface</p>
<p>Vector class<br />
Has add() and remove() methods, the elementAt() method let&#8217;s you retrieve an element at a specified index<br />
The Stack subclass provides the push() and pop() methods, this will support a LIFO stack</p>
<p>Hashtable class<br />
This is an expandable associative array<br />
The entries are stored as key/value pairs, no dups allowed<br />
The Properties subclass will hold the name/value pairs</p>
<p>The Enumeration interface can be used to traverse either the vector or the hashtable objects. Enumeration  has hasMoreElements() and nextElements() methods</p>
<p>Legacy Container Classes Disadvantages<br />
It is not type safe, the containers can hold any kind of objects<br />
The references must be downcast explicitly if you want to access the objects<br />
They are synchronized, performance hit<br />
Code needs to be rewritten if you want to replace one container with a container from another type</p>
<p>Vector,  Hashtable and the Enumeration interface in Java SE 5+<br />
Vector,  Hashtable and the Enumeration interface have been redefined as generics<br />
Vector is now Vector&lt;E&gt; and it implements the List&lt;E&gt;&gt; interface<br />
Hashtable  is now Hashtable &lt;K,V&gt; and implements the Map&lt;K ,V&gt; interface<br />
Enumeration  is now Enumeration &lt;E&gt;.<br />
Enumeration   has been superseded by the Iterator interface</p>
<p>The enhanced for loop (or for each loop) works automatically with the generic versions of the containers</p>
<p>Collections Framework<br />
The Collections Framework is a unified framework fo manipulating collections of objects<br />
Programmers can choose from a variety of structures</p>
<p>The collections framework consists of:</p>
<ul>
<li>Collection Interfaces &#8211; Represent different types of collections, such as sets, lists and maps. These interfaces form the basis of the framework.</li>
<li>General-purpose Implementations &#8211; Primary implementations of the collection interfaces.</li>
<li>Legacy Implementations &#8211; The collection classes from earlier releases, Vector and Hashtable, have been retrofitted to implement the collection interfaces.</li>
<li>Special-purpose Implementations &#8211; Implementations designed for use in special situations. These implementations display nonstandard performance characteristics, usage restrictions, or behavior.</li>
<li>Concurrent Implementations &#8211; Implementations designed for highly concurrent use.<br />
Wrapper Implementations &#8211; Add functionality, such as synchronization, to other implementations.</li>
<li>Convenience Implementations &#8211; High-performance &#8220;mini-implementations&#8221; of the collection interfaces.</li>
<li>Abstract Implementations &#8211; Partial implementations of the collection interfaces to facilitate custom implementations.</li>
<li>Algorithms &#8211; Static methods that perform useful functions on collections, such as sorting a list.</li>
<li>Infrastructure &#8211; Interfaces that provide essential support for the collection interfaces.</li>
<li>Array Utilities &#8211; Utility functions for arrays of primitives and reference objects. Not, strictly speaking, a part of the Collections Framework, this functionality was added to the Java platform at the same time and relies on some of the same infrastructure.</li>
</ul>
<p>Collection Implementations<br />
The general purpose implementations are summarized in the table below:</p>
<div class="tables">
<table border="0">
<thead>
<tr>
<th colspan="2" rowspan="2" align="center" border="0">&nbsp;</th>
<th colspan="5"><font size="+1">Implementations</font></th>
</tr>
<tr>
<th>Hash Table</th>
<th>Resizable Array</th>
<th>Balanced Tree</th>
<th>Linked List</th>
<th>Hash Table + Linked List</th>
</tr>
<tr>
<th rowspan="4"><font size="+1">Interfaces</font></th>
<th>Set</th>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html"><tt>HashSet</tt></a></td>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/TreeSet.html"><tt>TreeSet</tt></a></td>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashSet.html"><tt>LinkedHashSet</tt></a></td>
</tr>
<tr>
<th>List</th>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html"><tt>ArrayList</tt></a></td>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/LinkedList.html"><tt>LinkedList</tt></a></td>
<td>&nbsp;</td>
</tr>
<tr>
<th>Deque</th>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/ArrayDeque.html"><tt>ArrayDeque</tt></a></td>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/LinkedList.html"><tt>LinkedList</tt></a></td>
<td>&nbsp;</td>
</tr>
<tr>
<th>Map</th>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html"><tt>HashMap</tt></a></td>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/TreeMap.html"><tt>TreeMap</tt></a></td>
<td>&nbsp;</td>
<td><a href=
"http://docs.oracle.com/javase/6/docs/api/java/utilhttp://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashMap.html"><tt>LinkedHashMap</tt></a></td>
</tr>
</thead>
</table>
</div>
<p>Code to the interface, not to the class, you can now change the container without having to make code changes</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1">ArrayList<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span> &nbsp; list &nbsp;<span class="sy0">=</span> <span class="kw1">new</span> ArrayList<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
LinkedList<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span> &nbsp;list <span class="sy0">=</span> &nbsp;<span class="kw1">new</span> LinkedList<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ArrayList&lt;Integer&gt;   list  = new ArrayList&lt;Integer&gt;();
LinkedList&lt;Integer&gt;  list =  new LinkedList&lt;Integer&gt;();</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1">List<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span> list &nbsp;<span class="sy0">=</span> <span class="kw1">new</span> ArrayList<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
List<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span> list <span class="sy0">=</span> &nbsp;<span class="kw1">new</span> LinkedList<span class="sy0">&lt;</span>Integer<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">List&lt;Integer&gt; list  = new ArrayList&lt;Integer&gt;();
List&lt;Integer&gt; list =  new LinkedList&lt;Integer&gt;();</pre></div></div>

<p>There is a tutorial availabe on the Oracle website here: http://docs.oracle.com/javase/tutorial/collections/index.html</p>
<p><strong>Exceptions</strong></p>
<p>Traditional<br />
Inefficient, checks must be done even if stuff doesn&#8217;t blow up<br />
Difficult to maintain<br />
Using a return value as both an output value and an error status is confusing<br />
Compiler does not enforce error checking</p>
<p>Using Exceptions<br />
Compiler can enforce proper exception handling<br />
Exception is caught by a block designed to handle the exception<br />
Errors cause by constructors, initializers and other code that doesn&#8217;t return a return value</p>
<p>All exceptions objects are subclasses of java.lang.Throwable and they inherit its methods<br />
Error, Exception and RuntimeException are treated differently by the compiler<br />
Error, this mean as major system-level error occured<br />
RuntimeException , logic or data validateion error that should have been found and fixed during development<br />
Exception, run-time problems like a file that can&#8217;t be found or a network problem</p>
<p>A program can catch exceptions by using a combination of the try, catch, and finally blocks.</p>
<p>The try block identifies a block of code in which an exception can occur.<br />
The catch block identifies a block of code, known as an exception handler, that can handle a particular type of exception.<br />
The finally block identifies a block of code that is guaranteed to execute, and is the right place to close files, recover resources, and otherwise clean up after the code enclosed in the try block.</p>
<p><strong>Assert</strong><br />
This was added in Java 1.4, it is a simple way to check run-time conditions and throw exceptions when you are debugging code<br />
It can be enabled or disabled at runtime, by default they are disabled, use the -ea switch from the command line to enable it. Since Java doesn&#8217;t have a preprocessor this would be a way to do testing without having to modify the code</p>
<p><strong>Input/Output</strong><br />
We looked at IO and the different IO classes to work with files, streams sockets etc etc</p>
<p>Here is a list of the I/O Streams</p>
<p>Byte Streams<br />
handle I/O of raw binary data.</p>
<p>Character Streams<br />
handle I/O of character data, automatically handling translation to and from the local character set.</p>
<p>Buffered Streams<br />
optimize input and output by reducing the number of calls to the native API.</p>
<p>Scanning and Formatting<br />
allows a program to read and write formatted text.</p>
<p>I/O from the Command Line<br />
describes the Standard Streams and the Console object.</p>
<p>Data Streams<br />
handle binary I/O of primitive data type and String values.</p>
<p>Object Streams<br />
handle binary I/O of objects.</p>
<p>That is all for today</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/java-training-day-4/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/java-training-day-4/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Java Training Day 2]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/java-training-day-2/" />
		<id>/index.php/2012/11/java-training-day-2/</id>
		<updated>2012-11-28T00:05:00Z</updated>
		<published>2012-11-28T00:05:00Z</published>
		<category scheme="/" term="Application Lifecycle Management" /><category scheme="/" term="Application Server" /><category scheme="/" term="Java EE" /><category scheme="/" term="JBoss" /><category scheme="/" term="Websphere" />		<summary type="html"><![CDATA[Control statements

if

has to have parentheses and it has to be a boolean expressions  if (boolean-expression) {statement};
We also covered the while and do while loop followed by the for loop

Enhanced for loop aka foreach loop
The for loop lo&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/java-training-day-2/"><![CDATA[<p>This is day two of the Java training that our group is taking. Today nothing really complicated was covered, nobody looked like a zombie yet, I am sure by Friday, that will be different. Here is a quick rundown of what was covered</p>
<p><strong>Control statements</strong></p>
<p><strong>if</strong></p>
<p>The if has to have parentheses and it has to be a boolean expressions  if (boolean-expression) {statement};<br />
We also covered the while and do while loop followed by the for loop</p>
<p>Enhanced for loop aka foreach loop<br />
The for loop looks like this  for(1=0;i&lt;10;I++)<br />
The enhanced for loop looks like this:  <code>for(Number n : Numbers.getList())</code><br />
In C# the foreach loop looks like this: <code>foreach (Number n in Numbers.getList())</code></p>
<p>Java doesn&#8217;t have a goto statement but you can accomplish the same thing by using a label&#8230;see you can still write spaghetti code  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong>Switch statement</strong><br />
The switch statement works with byte,short, int, char and enum in Java before version 7, Java version 7 added the ability to use strings as well</p>
<p>The switch statement with the string data type is case sensitive<br />
This will print hello</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> test <span class="sy0">=</span><span class="st0">&quot;hello&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">switch</span><span class="br0">&#40;</span>test<span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">case</span> <span class="st0">&quot;Hello&quot;</span><span class="sy0">:</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;Hello&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">case</span> <span class="st0">&quot;hello&quot;</span><span class="sy0">:</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;hello&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">default</span><span class="sy0">:</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;default&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String test ="hello";
		switch(test){
		case "Hello":
			System.out.println("Hello");
			break;
		case "hello":
			System.out.println("hello");
			break;
		default:
			System.out.println("default");
			break;
		}</pre></div></div>

<p><strong>Integer data types</strong><br />
No null values like in .net where you would use int?<br />
you can use _ in constants for readability reasons so for example 2_000 and 2000 are the same<br />
There are no underflow or overflow error, results will wrap around</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw4">byte</span> x <span class="sy0">=</span><span class="nu0">127</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span>
x<span class="sy0">+=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">byte x =127;
System.out.println(x);
x+= 1;
System.out.println(x);</pre></div></div>

<p>That will print<br />
127<br />
-128</p>
<p>Java doesn&#8217;t have the checked keyword like in c#, you need to roll your own if you want to prevent this kind of stuff</p>
<p>If you try assigning  128 to a byte, you will get an error, it won&#8217;t become -128</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw4">byte</span> x <span class="sy0">=</span><span class="nu0">128</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">byte x =128;
System.out.println(x);</pre></div></div>

<p>Exception in thread &#8220;main&#8221; java.lang.Error: Unresolved compilation problem:<br />
Type mismatch: cannot convert from int to byte<br />
at com.denis.MainClass.main(MainClass.java:12)</p>
<p>You also can&#8217;t convert straight from an int to a string</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> s <span class="sy0">=</span> <span class="st0">&quot;123&quot;</span><span class="sy0">;</span>
<span class="kw4">int</span> z <span class="sy0">=</span> s<span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>z<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String s = "123";
int z = s;
System.out.println(z);</pre></div></div>

<p>Exception in thread &#8220;main&#8221; java.lang.Error: Unresolved compilation problem:<br />
Type mismatch: cannot convert from String to int</p>
<p>Here is one way to do the conversion by using the parseInt method of the Integer wrapper type</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> s <span class="sy0">=</span> <span class="st0">&quot;123&quot;</span><span class="sy0">;</span>
<span class="kw4">int</span> z <span class="sy0">=</span> <span class="kw3">Integer</span>.<span class="me1">parseInt</span><span class="br0">&#40;</span>s<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>z<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String s = "123";
int z = Integer.parseInt(s);
System.out.println(z);</pre></div></div>

<p>Looks like Java doesn&#8217;t have TryParse like c#</p>
<p>To test if strings are the same use equals or equalsIgnoreCase<br />
Here is what is the output of the following tests</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> a1 <span class="sy0">=</span> <span class="st0">&quot;A&quot;</span><span class="sy0">;</span>
<span class="kw3">String</span> a2 <span class="sy0">=</span> <span class="st0">&quot;a&quot;</span><span class="sy0">;</span>
<span class="kw3">String</span> a3 <span class="sy0">=</span> <span class="st0">&quot;a&quot;</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1 <span class="sy0">==</span> a2<span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//false</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1 <span class="sy0">==</span> a3<span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//false</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1.<span class="me1">equals</span><span class="br0">&#40;</span>a2<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//false</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1.<span class="me1">equalsIgnoreCase</span><span class="br0">&#40;</span>a2<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp;<span class="co1">//true</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String a1 = "A";
String a2 = "a";
String a3 = "a";
System.out.println(a1 == a2); 			//false
System.out.println(a1 == a3); 			//false
System.out.println(a1.equals(a2));  		//false
System.out.println(a1.equalsIgnoreCase(a2)); 	//true</pre></div></div>

<p>This one is similar to SELECT 5/2 in SQL Server, it does integer math, however since answer is a double, you get back 2.0</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw4">double</span> answer<span class="sy0">;</span>
answer <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">/</span><span class="nu0">2</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>answer<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// 2.0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">double answer;
answer = 5/2;
System.out.println(answer); // 2.0</pre></div></div>

<p>You need to change either of the two integers in order to get back a result that is not an integer</p>
<p>The stack holds all local variables and temporary variables, there is a separate stack for each thread, variables on the stack must be initialized explicitly<br />
The heap holds memory that is dynamically allocated with new, heap memory is shared between threads, variables on the heap are initialized automatically to default values<br />
Objects are always on the heap</p>
<p>Primitive arguments are always passed by value<br />
Objects and arrays are passed by reference</p>
<p>We covered StringBuffer and StringBuilder, StringBuilder is not thread safe but is faster than StringBuffer if accesed by a single thread</p>
<p><strong>varargs</strong><br />
varargs is a variable-length argument list</p>
<p>public static void main(String[] args)<br />
public static void main(String&#8230; args)</p>
<p>  public static void main(String&#8230; args){<br />
    for (String s: args ) System.out.println(s);<br />
  }</p>
<p>Arrays and Objects instantiation, constructors, default constructors were also covered. We covered much more than I wrote down, I was busy with listening and doing the labs so didn&#8217;t have the opportunity to write it all down</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/java-training-day-2/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/java-training-day-2/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Java Training Day 1]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/jee/java-training-day-1/" />
		<id>/index.php/2012/11/java-training-day-1/</id>
		<updated>2012-11-26T19:22:00Z</updated>
		<published>2012-11-26T19:22:00Z</published>
		<category scheme="/" term="Application Lifecycle Management" /><category scheme="/" term="Java EE" /><category scheme="/" term="JBoss" /><category scheme="/" term="Websphere" /><category scheme="/" term="eclipse" /><category scheme="/" term="java" /><category scheme="/" term="maven" /><category scheme="/" term="netbeans" /><category scheme="/" term="oop" />		<summary type="html"><![CDATA[Today is day one of the Java class I am taking this week. I am just dumping some of the stuff that I am hearing about, some of the stuff I might already know.
Java is a general purpose language, it is interperted, output is by&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/jee/java-training-day-1/"><![CDATA[<p>Java Training Day 1<br />
&#8212;<br />
Today is day one of the Java class I am taking this week. I am just dumping some of the stuff that I am hearing about, some of the stuff I might already know.<br />
Java is a general purpose language, it is interperted, output is bytecode, you need to have a Java Virtual Machine on the target machine in order to run a Java program.<br />
A Java file gets compiled to a system-neutral format which is a class file and gets a .class extension, this is compressed and not really human readable</p>
<p>Classes are organized in a group called a package, a package is very similar to a .net namespace. You use this so that you don&#8217;t get collisions if you have two classes with the same name.</p>
<p>You use javadoc to generate standard formatted documentation.</p>
<p><strong>Java community process(JCP)</strong><br />
Formal community-driven process to drive the Java standard, the iste is http://jcp.org/</p>
<p>Deprecate, use annotation and then when you compile your class, you will get a warning so that you will know that you will need to rewrite that piece of the code.</p>
<p>Java is case sensitive, all reserved java keywords are lowercase</p>
<p>In a class the main routine is the start of a program<br />
The main routine will look like this</p>
<p>public static void main(String[] args) {&#8230;&#8230;.}</p>
<p>A java source file has to end in  .java, for example  MyClass.java this will produce a file called MyClass.class. you can&#8217;t have more than one public class in a source file, you cannot have partial classes like in .net either.</p>
<p>Java runs on top of the JVM, the JVM is different per operating system. No need to recompile Java&#8230;Write once run everywhere&#8230;.some people like to say write once&#8230;debug everywhere  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong>Java versions and flavors</strong><br />
Java 1.0, 1.1<br />
Java 2 	1.2, 1.3, 1.4, 1.5<br />
Java 5  also sometimes called 1.5, 1.5 is when they shifted to integers again<br />
Java 6<br />
Java 7</p>
<p>The different flavors of Java and their old and new names<br />
J2SE  	Java SE<br />
J2EE	Java EE<br />
J2ME	Java ME</p>
<p><strong>Base libraries to provide common functionality</strong><br />
Here are just some of them</p>
<p>java.lang<br />
java.lang contains fundamental classes and interfaces closely tied to the language and runtime system.</p>
<p>java.io/java.nio/java.net<br />
I/O and networking access the platform file system, and more generally networks through the java.io, java.nio and java.net packages. </p>
<p>java.math<br />
Mathematics package: java.math provides mathematical expressions and evaluation, as well as arbitrary-precision decimal and integer number datatypes.</p>
<p>java.text<br />
Text: java.text deals with text, dates, numbers, and messages.</p>
<p>javax.crypto<br />
Security is provided by java.security and encryption services are provided by javax.crypto.</p>
<p>java.sql<br />
Databases: access to SQL databases via java.sql</p>
<p>java.beans<br />
Java Beans: java.beans provides ways to manipulate reusable components.</p>
<p><strong>Types of Java Software</strong><br />
Class Libraries<br />
Standalone Java<br />
Applets<br />
Servlets, JSP and tag libraries<br />
Enterprise Java Beans</p>
<p><strong>Enterprise Application Servers</strong><br />
Here are a couple of Java Enterprise Application Servers and their vendors<br />
GlassFish	Oracle/Sun<br />
Weblogic	Oracle/BEA<br />
Webshere	IBM<br />
JBoss		Red Hat</p>
<p><strong>Environment variables</strong><br />
Oh how I used to hate dealing with these variables, stuff wouldn&#8217;t work if this wasn&#8217;t setup correctly<br />
There are a couple of environment variables that you need</p>
<p><strong>JAVA_HOME</strong><br />
This will be use by the tools in the JDK</p>
<p><strong>PATH</strong><br />
This is used by the operating system to find the compiler and other programs, add the/bin directory</p>
<p><strong>CLASSPATH</strong><br />
This is used by the Java Virtual Machine to find application specific classes at compile as well as run time</p>
<p><strong>JDK Bin directory</strong><br />
THe JDK Bin directory holds all the programs used by the JDK to do what is needed for Java to function<br />
There are programs to compile java, to run java, to create JAR files, to create javadoc documentation files etc etc<br />
Mine is installed here C:Program FilesJavajdk1.7.0_07bin</p>
<p>Here is screenshot of my directory with some of those programs</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/JavaBinDirectory.PNG?mtime=1353948732"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/JavaBinDirectory.PNG?mtime=1353948732" width="795" height="635" /></a></div>
<p>There is something called jvisualvm.exe, this is know as Java VisualVM, from the Oracle documentation: http://docs.oracle.com/javase/6/docs/technotes/tools/share/jvisualvm.html<br />
Java VisualVM is an intuitive graphical user interface that provides detailed information about Java technology-based applications (Java applications) while they are running on a given Java Virtual Machine (JVM*). The name Java VisualVM comes from the fact that Java VisualVM provides information about the JVM software visually.</p>
<p>Java VisualVM combines several monitoring, troubleshooting, and profiling utilities into a single tool. For example, most of the functionality offered by the standalone tools jmap, jinfo, jstat and jstack have been integrated into Java VisualVM. Other functionalities, such as some of those offered by the JConsole tool, can be added as optional plug-ins.</p>
<p>Here are some screenshots of the tool in action while running against Eclipse</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMMonitor.PNG?mtime=1353948863"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMMonitor.PNG?mtime=1353948863" width="929" height="579" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreads.PNG?mtime=1353948850"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreads.PNG?mtime=1353948850" width="919" height="581" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreadsTable.PNG?mtime=1353948837"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreadsTable.PNG?mtime=1353948837" width="930" height="594" /></a></div>
<p>Always include . as part of the classpath, this ensure that the current directory is searched in case of a default package</p>
<p><strong>JAR</strong><br />
Java Archive, this is an archived file holding all the classes and a manifest describing what is in the archive</p>
<p>There are related files that are used based on the type of application, here is what info wikipedia has listed</p>
<p>WAR (Web application archive) files, also Java archives, store XML files, Java classes, JavaServer Pages and other objects for Web Applications.<br />
RAR (resource adapter archive) files (not to be confused with the RAR file format), also Java archives, store XML files, Java classes and other objects for J2EE Connector Architecture (JCA) applications.<br />
EAR (enterprise archive) files provide composite Java archives which combine XML files, Java classes and other objects including JAR, WAR and RAR Java archive files for Enterprise Applications.<br />
SAR (service archive) is similar to EAR. It provides a service.xml file and accompanying JAR files.<br />
APK (Android Application Package), a variant of the Java archive format, is used for Android applications.[3]</p>
<p>We compiled and ran some programs from the command line, it is amazing how many people have problems with the path and classpath variables to get it to work&#8230;but we all did and now we are allowed to use Eclipese or Netbeans instead</p>
<p><strong>Javadoc comments</strong><br />
We looked at how to do javadoc comments, basically the first line has to start with /**</p>
<p>There are also tags that you can use, it is recommended to use this order</p>
<p>@author (classes and interfaces only, required)<br />
@version (classes and interfaces only, required. See footnote 1)<br />
@param (methods and constructors only)<br />
@return (methods only)<br />
@exception (@throws is a synonym added in Javadoc 1.2)<br />
@see<br />
@since<br />
@serial (or @serialField or @serialData)<br />
@deprecated (see How and When To Deprecate APIs)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1">Here is an example
&nbsp;
&nbsp; &nbsp;<span class="co3">/**</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* Disposes of this graphics context once it is no longer </span>
<span class="co3">&nbsp; &nbsp; &nbsp;* referenced.</span>
<span class="co3">&nbsp; &nbsp; &nbsp;*</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* @see &nbsp; &nbsp; &nbsp; #dispose()</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* @since &nbsp; &nbsp; 1.0</span>
<span class="co3">&nbsp; &nbsp; &nbsp;*/</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> finalize<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; dispose<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Here is an example

   /**
     * Disposes of this graphics context once it is no longer 
     * referenced.
     *
     * @see       #dispose()
     * @since     1.0
     */
    public void finalize() {
        dispose();
    }
}</pre></div></div>

<p><strong>Identifiers</strong><br />
Can have letters and numbers, cannot begin with a digit</p>
<p>The reason most programming language don&#8217;t allow identifiers to start with a digit is simple</p>
<p>int 6;<br />
6=5;</p>
<p>See that? Since an identifier can be 1 character, you could create something named 5 or 6 or even 256, this rule prevents you doing such stuff</p>
<p>Variables can me made constant by using the final keyword for example</p>
<p>final int MAX_VALUE = 40;</p>
<p>You can also do this<br />
final int BOILING_POINT;<br />
BOILING_POINT; = 100;</p>
<p>Once you assign the value, you can&#8217;t change BOILING_POINT anymore</p>
<p>We learned about scope and learned that depending on where the variable is declared, it might not be visible outside of the block, this is the same as in other languages (local variables)</p>
<p>When you want to have only one copy of a class variable, make it static, then if you instatiate 100 classes they all point to the same variable instead of having 100 variables in memory<br />
Static variables are available to use as soon as a class is loaded</p>
<p>Brain fried&#8230;&#8230;time to go&#8230;&#8230;..  back tomorrow</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/jee/java-training-day-1/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/jee/java-training-day-1/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Back to Java after an eleven year hiatus, what are some good resources you recommend?]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/jee/back-to-java-after-an/" />
		<id>/index.php/2012/11/back-to-java-after-an/</id>
		<updated>2012-11-25T22:34:00Z</updated>
		<published>2012-11-25T22:34:00Z</published>
		<category scheme="/" term="BEA WebLogic and Aqualogic" /><category scheme="/" term="Java EE" /><category scheme="/" term="Websphere" /><category scheme="/" term="eclipse" /><category scheme="/" term="java" /><category scheme="/" term="maven" /><category scheme="/" term="netbeans" />		<summary type="html"><![CDATA[This week eleven coworkers and myself will be in Java training for most of the time, I haven't touched Java since 2001. I did a bunch of research over the 4 day weekend to get a little head start.

I installed Netbeans and Eclipse to see how they are&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/jee/back-to-java-after-an/"><![CDATA[<p><a href="http://www.flickr.com/photos/mrjoro/22752982/" title="Java Logo by mrjoro, on Flickr"><img src="http://farm1.staticflickr.com/17/22752982_28bfc98f68_m.jpg" width="240" height="180" alt="Java Logo" /></a></p>
<p>This week eleven coworkers and myself will be in Java training for most of the time, I haven&#8217;t touched Java since 2001. I did a bunch of research over the 4 day weekend to get a little head start.</p>
<p>I installed Netbeans and Eclipse to see how they are different<br />
I played around with Tapestry and took a look at Struts<br />
I used JUnit to write a couple of tests<br />
I installed Maven and used that to bring down the sample Tapestry project<br />
I installed and configured HyperSQL (with sa and blank password&#8230;  ouch!!!)</p>
<p>It seems to me that there are a whole lot of things that I need to know, twelve years ago none of this stuff existed. I also seems to me that the language itself hasn&#8217;t changed so much compared to C#. I might also take a look at Scala down the road, some of that stuff seems interesting. </p>
<p>When I used Java in 2000 and 2001 it was primarily to do JSP development. The main project at that time was converting a ColdFusion site to JSP. The IDE that we used at that time was Kawa, we also gave Visual Cafe a spin. I must say that the IDE is much much better than what existed twelve years ago. Eclipse has a robust plugin system and computers have advanced in speed over the past twelve years so that Java apps don&#8217;t feels slow on the desktop anymore</p>
<p>Over the next five days, I will blog about what I did and learned, I will also probably put some stuff on our wiki so that I can have it as a reference/cheat sheet</p>
<p>Here is my question to you&#8230;..What are some of your favorite resources for Java and the Java ecosystem? I am looking for blogs to subscribe to, people to follow on twitter, if you have a favorite Java book then tell me about it. My favorite books from 2001 were Core Java, Volume I and II, I am happy to see that the 9th edition is coming out on December 10th: <a href="http://www.amazon.com/gp/product/0137081898/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0137081898&amp;linkCode=as2&amp;tag=sql08-20">Core Java Volume I&#8211;Fundamentals (9th Edition) (Core Series)</a>. If you know of any good podcasts then tell me about those as well</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/jee/back-to-java-after-an/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/jee/back-to-java-after-an/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Oracle Details Its Plans For MySQL, Java, Virtualization, NetBeans, Glassfish, OpenOffice And Open Source]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/" />
		<id>/index.php/2009/10/oracle-details-its-plans-for-mysql-java/</id>
		<updated>2009-10-31T09:50:45Z</updated>
		<published>2009-10-31T09:50:45Z</published>
		<category scheme="/" term="Java EE" /><category scheme="/" term="glassfish" /><category scheme="/" term="java" /><category scheme="/" term="mysql" /><category scheme="/" term="netbeans" /><category scheme="/" term="open source" /><category scheme="/" term="openoffice" /><category scheme="/" term="oracle" /><category scheme="/" term="sun" /><category scheme="/" term="virtualization" />		<summary type="html"><![CDATA[Oracle has updated the Sun Acquisition FAQ. The FAQ now has Oracle's plans for MySQL, Java, Virtualization, NetBeans, Glassfish, OpenOffice, Open Source and other things.

Below are the relevant pieces from that document.

What are Oracle’s plans fo&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/"><![CDATA[<p>Oracle has updated the <a href="http://www.oracle.com/us/sun/038563.pdf">Sun Acquisition FAQ</a>. The FAQ now has Oracle&#8217;s plans for MySQL, Java, Virtualization, NetBeans, Glassfish, OpenOffice, Open Source and other things.</p>
<p>Below are the relevant pieces from that document.</p>
<p><strong>What are Oracle’s plans for the GlassFish Enterprise (Java<br />
EE) Server after the transaction closes?</strong><br />
Oracle plans to continue evolving GlassFish Enterprise Server, delivering<br />
it as the open source reference implementation (RI) of the Java Enterprise<br />
Edition (Java EE) specifications, and actively supporting the large GlassFish<br />
community.  Additionally, Oracle plans to invest in aligning common<br />
infrastructure components and innovations from Oracle WebLogic Server<br />
and GlassFish Enterprise Server to benefit both Oracle WebLogic Server and<br />
GlassFish Enterprise Server customers.</p>
<p><strong>What are Oracle’s plans for NetBeans?</strong><br />
Oracle has a strong track record of demonstrating commitment to choice for<br />
Java developers. As such, NetBeans is expected to provide an additional open<br />
source option and complement to the two free tools Oracle already offers for<br />
enterprise Java development: Oracle JDeveloper and Oracle Enterprise Pack for<br />
Eclipse. While Oracle JDeveloper remains Oracle’s strategic development tool<br />
for the broad portfolio of Oracle Fusion Middleware products and for Oracle’s<br />
next generation of enterprise applications, developers will be able to use<br />
whichever free tool they are most comfortable with for pure Java and Java EE<br />
development:  JDeveloper, Enterprise Pack for Eclipse, or NetBeans. </p>
<p><strong>What are Oracle’s plans for MySQL?</strong><br />
Oracle plans to spend more money developing MySQL than Sun does now.<br />
Oracle expects to continue to develop and provide the open source MySQL<br />
database after the transaction closes. Oracle plans to add MySQL to Oracle’s<br />
existing suite of database products, which already includes Berkeley DB, an<br />
open source database. Oracle also currently offers InnoDB, an open source<br />
transactional storage engine and the most important and popular transaction<br />
engine under MySQL. Oracle already distributes MySQL as part of our<br />
Enterprise Linux offering.</p>
<p><strong>What is Oracle’s plan for OpenOffice?</strong><br />
Oracle has a history of developing complete, integrated, and open products,<br />
making integration quicker and less costly for our customers. Based on the<br />
open ODF standard, OpenOffice is expected to create a compelling desktop<br />
integration bridge for our enterprise customers and offers consumers another<br />
choice on the desktop. After the transaction closes, Oracle plans to continue<br />
developing and supporting OpenOffice as open source. As before, some of<br />
the larger customers will ask for extra assurances, support, and enterprise<br />
tools. For these customers we expect to offer a typical commercial license<br />
option.</p>
<p><strong>How does Oracle support open source?</strong><br />
Oracle has long been committed to developing, supporting, and promoting<br />
open source. Oracle has been, and continues to be, committed to offering<br />
choice, flexibility, and a lower cost of computing for end users. Oracle<br />
has invested significant resources in developing, testing, optimizing and<br />
supporting open source technologies such as Linux, PHP, Apache, Eclipse,<br />
Berkeley DB, and InnoDB. Oracle continues to embrace and offer open source<br />
solutions as a viable choice for development and deployment. More information<br />
about Oracle’s support of open source can be found at<br />
oracle.com/opensource. </p>
<p><strong>Will Oracle continue Sun’s virtualization strategy?</strong><br />
Yes, Oracle plans to continue Sun’s “desktop to datacenter virtualization”<br />
strategy and integrate with Oracle’s virtualization products. By unifying<br />
management across desktop virtualization, server virtualization, storage<br />
virtualization, and network virtualization, Oracle and Sun provide<br />
comprehensive, flexible, eco-efficient solutions to maximize utilization,<br />
consolidate to reduce costs, increase productivity, and decrease management<br />
complexity. We expect to continue Sun’s desktop virtualization products:<br />
VDI, Secure Global Desktop, Sun Ray, and VirtualBox.</p>
<p><strong>Delivering increased investment and innovation in Java</strong><br />
Oracle plans to accelerate investment in the Java platform for the<br />
benefit of customers and the Java community. Java is one of the<br />
computer industry’s best-known brands and the Java platform is<br />
one of the industry’s most widely deployed technologies. Oracle has<br />
been a leader in the Java community since the inception of the Java<br />
programming language and already has the world’s largest investment<br />
in the Java platform, which provides the foundation for its Oracle<br />
Fusion Middleware products and its next-generation enterprise<br />
applications.<br />
Oracle plans to not only broaden and accelerate its own investment in the<br />
Java platform, but also plans to increase the commitment to the community<br />
that helps make Java an ubiquitous, innovative platform unified around<br />
open standards. </p>
<p>So what do you think, is there still a reason to fear what will happen to these technologies after this deal closes?</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/#comments" thr:count="3"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/feed/atom/" thr:count="3"/>
		<thr:total>3</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Visual Studio 2010 and .NET Framework 4 Beta 2 Available on MSDN]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/visual-studio-2010-and-net-framework-4-b/" />
		<id>/index.php/2009/10/visual-studio-2010-and-net-framework-4-b/</id>
		<updated>2009-10-19T14:11:45Z</updated>
		<published>2009-10-19T14:11:45Z</published>
		<category scheme="/" term="Application Server" /><category scheme="/" term=".net framework 4" /><category scheme="/" term="visual studio 2010" />		<summary type="html"><![CDATA[Microsoft announced the immediate availability of Microsoft Visual Studio 2010 Beta 2 and Microsoft .NET Framework 4 Beta 2 to MSDN subscribers; general availability will follow on Oct. 21. The company also outlined a simplified product lineup and prici&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/visual-studio-2010-and-net-framework-4-b/"><![CDATA[<p><img src="http://imgur.com/EnUha.png" alt="Visual Studio 2010" /><br />
</p>
<p>Microsoft announced the immediate availability of Microsoft Visual Studio 2010 Beta 2 and Microsoft .NET Framework 4 Beta 2 to MSDN subscribers; general availability will follow on Oct. 21. The company also outlined a simplified product lineup and pricing options for Visual Studio 2010 as well as new benefits for MSDN subscribers, including the Ultimate Offer, available to all active MSDN Premium subscribers at the official product launch on March 22, 2010.</p>
<p>Those interested can download Beta 2 at http://msdn.microsoft.com/en-us/default.aspx.</p>
<p>Here is what is new</p>
<ul>
<li>New testing options in Visual Studio 2010 will help ensure quality code.<br />
Enhancements to the integrated development environment mean that whether modeling, coding, testing or debugging, developers can use existing skills to deploy a growing number of application types. </li>
<li>Built-in tools for Windows 7 and Microsoft SharePoint 2010, new drag and drop bindings for Silverlight and Windows Presentation Foundation, and interoperability with innovative technologies (such as those for the database, ASP.NET model view controller, unified modeling language, Expression, and multicore) allow developers to bring their visions to life. </li>
<li>With the .NET Framework 4, developers can experience immensely smaller deployments with up to an 81 percent reduction in the framework size when using the Client Profile. Other .NET Framework 4 developer benefits include additional support for industry standards, inclusion of the Dynamic Language Runtime for more language choice, new support for high-performance middle-tier applications (including parallel programming, workflow and service-oriented applications) and backward compatibility through side-by-side installation with .NET Framework 3.5.</li>
</ul>
<p>See also the video below (you need to have silverlight to see it)</p>
<p>Dave Mendlen of Microsoft Corp. discusses availability of Visual Studio 2010 and .NET Framework 4 Beta 2, the March 22, 2010, launch date, and the simplified product lineup for Visual Studio 2010, including the Ultimate Offer and new MSDN subscriber <br />
<iframe src="http://www.microsoft.com/presspass/silverlightApps/videoplayer2/standalone.aspx?contentId=MSDN&amp;src=/presspass/videos/playlists/2009/10-19MSDN.xml&amp;WT.cg_n=videoplayer&amp;WT.z_convert=embed" width="400" height="334" frameborder="0" scrolling="no"></iframe></p>
<p>Make sure to watch the following video:  <strong><a href="http://channel9.msdn.com/shows/10-4/10-4-Episode-33-Downloading-and-Installing-Visual-Studio-2010-Beta-2/">Downloading and Installing Visual Studio 2010 Beta 2</a></strong></p>
<p>In this episode of 10-4, Brian Keller takes us through downloading and installing Visual Studio 2010 Ultimate Beta 2 and Visual Studio 2010 Team Foundation Server Beta 2. This time-compressed video will take you through all of the key things you need to know to get up and running quickly with beta 2.</p>
<p>Download instructions for all the files in that video can be found here: http://blogs.msdn.com/briankel/archive/2009/10/19/using-a-download-manager-to-quickly-download-visual-studio-2010-beta-2.aspx</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/visual-studio-2010-and-net-framework-4-b/#comments" thr:count="1"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/visual-studio-2010-and-net-framework-4-b/feed/atom/" thr:count="1"/>
		<thr:total>1</thr:total>
		</entry>
		<entry>
		<author>
			<name>Alex Ullrich</name>
					</author>
		<title type="html"><![CDATA[Quick and Dirty Enum Mapper for Fluent NHibernate]]></title>
		<link rel="alternate" type="text/html" href="/index.php/enterprisedev/appserver/quick-and-dirty-enum-mapper-for-fluent-n/" />
		<id>/index.php/2009/10/quick-and-dirty-enum-mapper-for-fluent-n/</id>
		<updated>2009-10-10T01:54:00Z</updated>
		<published>2009-10-10T01:54:00Z</published>
		<category scheme="/" term="Application Server" /><category scheme="/" term="nHibernate (.Net)" />		<summary type="html"><![CDATA[I ran into a funny issue recently using Fluent NHibernate.  Saw that it was storing enums as Strings in the database, or more accurately storing them as MySQL's Enum Data Type.  I would prefer to store them as integers so that behavior is the same as ot&#8230;]]></summary>
		<content type="html" xml:base="/index.php/enterprisedev/appserver/quick-and-dirty-enum-mapper-for-fluent-n/"><![CDATA[<p>I ran into a funny issue recently using Fluent NHibernate.  Saw that it was storing enums as Strings in the database, or more accurately storing them as MySQL&#8217;s <a href="http://dev.mysql.com/doc/refman/5.0/en/enum.html">Enum Data Type</a>.  I would prefer to store them as integers so that behavior is the same as other databases, and refactoring gets easier.  Hacking around in Fluent NHibernate I found the following:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">Map<span class="br0">&#40;</span>x <span class="sy0">=&gt;</span> x<span class="sy0">.</span><span class="me1">Property</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">CustomType</span><span class="sy0">&lt;</span>SomeType<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Map(x =&gt; x.Property).CustomType&lt;SomeType&gt;();</pre></div></div>

<p>It had a slightly different name in the previous versions (I think it was CustomTypeIs), not sure if the same thing happened there (I did not notice it until using the latest).  Anyway I was mapping my properties like shown above, and it seemed all was well.  Until I noticed a strange thing in the SQL written to the output window.  What I was expecting to see was a single select statement for the primary entity, and another three select statements to fill a couple of collections contained in the object.  I saw these, and one unwelcome guest.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="sql"><thead><tr><td colspan="2"  class="head">SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1">NHibernate: <span class="kw1">SELECT</span> this_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>AttemptDate <span class="kw1">AS</span> AttemptD2_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>BatchSize <span class="kw1">AS</span> BatchSize12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>ConditioningTimeDays <span class="kw1">AS</span> Conditio4_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>TotalBoilTimeMinutes <span class="kw1">AS</span> TotalBoi5_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Family <span class="kw1">AS</span> Family12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>FermentationTemperature <span class="kw1">AS</span> Fermenta7_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>FermentationTimeDays <span class="kw1">AS</span> Fermenta8_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>FinalGravity <span class="kw1">AS</span> FinalGra9_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Name <span class="kw1">AS</span> Name12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>OriginalGravity <span class="kw1">AS</span> Origina12_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>SecondaryFermentationTimeDays <span class="kw1">AS</span> Seconda13_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span><span class="kw1">STYLE</span> <span class="kw1">AS</span> Style12_6_<span class="sy0">,</span> this_<span class="sy0">.</span><span class="kw1">TYPE</span> <span class="kw1">AS</span> Type12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Brewer_id <span class="kw1">AS</span> Brewer16_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Filter_id <span class="kw1">AS</span> Filter17_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Lauter_id <span class="kw1">AS</span> Lauter18_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Mash_id <span class="kw1">AS</span> Mash19_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>YeastUsed_id <span class="kw1">AS</span> YeastUsed20_12_6_<span class="sy0">,</span> person2_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>About <span class="kw1">AS</span> About9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>Location <span class="kw1">AS</span> Location9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>DateOfBirth <span class="kw1">AS</span> DateOfBi4_9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>Email <span class="kw1">AS</span> Email9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>UserName <span class="kw1">AS</span> UserName9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span><span class="kw1">TYPE</span> <span class="kw1">AS</span> Type9_0_<span class="sy0">,</span> filter3_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id2_1_<span class="sy0">,</span> filter3_<span class="sy0">.</span><span class="kw1">TYPE</span> <span class="kw1">AS</span> Type2_1_<span class="sy0">,</span> filter3_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note2_1_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id6_2_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>SpargeType <span class="kw1">AS</span> SpargeType6_2_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>Volume <span class="kw1">AS</span> Volume6_2_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note6_2_<span class="sy0">,</span> mash5_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>MashInTemp <span class="kw1">AS</span> MashInTemp16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>MashOutTemp <span class="kw1">AS</span> MashOutT3_16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>Volume <span class="kw1">AS</span> Volume16_3_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>StarterTime <span class="kw1">AS</span> StarterT3_15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>StarterUsed <span class="kw1">AS</span> StarterU4_15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>YeastUsed_id <span class="kw1">AS</span> YeastUsed5_15_4_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Brand <span class="kw1">AS</span> Brand14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Description <span class="kw1">AS</span> Descript3_14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Strain <span class="kw1">AS</span> Strain14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span><span class="kw1">STYLE</span> <span class="kw1">AS</span> Style14_5_ <span class="kw1">FROM</span> <span class="st0">`Recipe`</span> this_ <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Person`</span> person2_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Brewer_id<span class="sy0">=</span>person2_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Filter`</span> filter3_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Filter_id<span class="sy0">=</span>filter3_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Lauter`</span> lauter4_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Lauter_id<span class="sy0">=</span>lauter4_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Mash`</span> mash5_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Mash_id<span class="sy0">=</span>mash5_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`YeastUse`</span> yeastuse6_ <span class="kw1">ON</span> this_<span class="sy0">.</span>YeastUsed_id<span class="sy0">=</span>yeastuse6_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Yeast`</span> yeast7_ <span class="kw1">ON</span> yeastuse6_<span class="sy0">.</span>YeastUsed_id<span class="sy0">=</span>yeast7_<span class="sy0">.</span>Id
NHibernate: <span class="kw1">SELECT</span> maltsused0_<span class="sy0">.</span>Recipe_id <span class="kw1">AS</span> Recipe8_1_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id1_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>AddTime <span class="kw1">AS</span> AddTime8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>BoilTime <span class="kw1">AS</span> BoilTime8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Quantity <span class="kw1">AS</span> Quantity8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>WhenUsed <span class="kw1">AS</span> WhenUsed8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>MaltUsed_id <span class="kw1">AS</span> MaltUsed7_8_0_ <span class="kw1">FROM</span> <span class="st0">`MaltUse`</span> maltsused0_ <span class="kw1">WHERE</span> maltsused0_<span class="sy0">.</span>Recipe_id<span class="sy0">=</span>?p0;?p0 <span class="sy0">=</span> <span class="nu0">1</span>
NHibernate: <span class="kw1">SELECT</span> hopsused0_<span class="sy0">.</span>Recipe_id <span class="kw1">AS</span> Recipe9_1_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id1_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>AddTime <span class="kw1">AS</span> AddTime4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>BoilTime <span class="kw1">AS</span> BoilTime4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>HopIngredientType <span class="kw1">AS</span> HopIngre4_4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Quantity <span class="kw1">AS</span> Quantity4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>WhenUsed <span class="kw1">AS</span> WhenUsed4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>HopUsed_id <span class="kw1">AS</span> HopUsed8_4_0_ <span class="kw1">FROM</span> <span class="st0">`HopUse`</span> hopsused0_ <span class="kw1">WHERE</span> hopsused0_<span class="sy0">.</span>Recipe_id<span class="sy0">=</span>?p0;?p0 <span class="sy0">=</span> <span class="nu0">1</span>
NHibernate: <span class="kw1">SELECT</span> additionsu0_<span class="sy0">.</span>Recipe_id <span class="kw1">AS</span> Recipe8_2_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id2_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>AddTime <span class="kw1">AS</span> AddTime1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>BoilTime <span class="kw1">AS</span> BoilTime1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Quantity <span class="kw1">AS</span> Quantity1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>WhenUsed <span class="kw1">AS</span> WhenUsed1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>AdditionUsed_id <span class="kw1">AS</span> Addition7_1_1_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id0_0_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Brand <span class="kw1">AS</span> Brand0_0_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Description <span class="kw1">AS</span> Descript3_0_0_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Name <span class="kw1">AS</span> Name0_0_ <span class="kw1">FROM</span> <span class="st0">`AdditionUse`</span> additionsu0_ <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Addition`</span> addition1_ <span class="kw1">ON</span> additionsu0_<span class="sy0">.</span>AdditionUsed_id<span class="sy0">=</span>addition1_<span class="sy0">.</span>Id <span class="kw1">WHERE</span> additionsu0_<span class="sy0">.</span>Recipe_id<span class="sy0">=</span>?p0;?p0 <span class="sy0">=</span> <span class="nu0">1</span>
NHibernate: <span class="kw1">UPDATE</span> <span class="st0">`HopUse`</span> <span class="kw1">SET</span> AddTime <span class="sy0">=</span> ?p0<span class="sy0">,</span> BoilTime <span class="sy0">=</span> ?p1<span class="sy0">,</span> HopIngredientType <span class="sy0">=</span> ?p2<span class="sy0">,</span> Note <span class="sy0">=</span> ?p3<span class="sy0">,</span> Quantity <span class="sy0">=</span> ?p4<span class="sy0">,</span> WhenUsed <span class="sy0">=</span> ?p5<span class="sy0">,</span> HopUsed_id <span class="sy0">=</span> ?p6 <span class="kw1">WHERE</span> Id <span class="sy0">=</span> ?p7;?p0 <span class="sy0">=</span> <span class="nu0">15</span><span class="sy0">,</span> ?p1 <span class="sy0">=</span> <span class="nu0">45</span><span class="sy0">,</span> ?p2 <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">,</span> ?p3 <span class="sy0">=</span> <span class="st0">'note'</span><span class="sy0">,</span> ?p4 <span class="sy0">=</span> <span class="nu0">56.6990462</span><span class="sy0">,</span> ?p5 <span class="sy0">=</span> <span class="nu0">3</span><span class="sy0">,</span> ?p6 <span class="sy0">=</span> <span class="kw1">NULL</span><span class="sy0">,</span> ?p7 <span class="sy0">=</span> <span class="nu0">2</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">NHibernate: SELECT this_.Id AS Id12_6_, this_.AttemptDate AS AttemptD2_12_6_, this_.BatchSize AS BatchSize12_6_, this_.ConditioningTimeDays AS Conditio4_12_6_, this_.TotalBoilTimeMinutes AS TotalBoi5_12_6_, this_.Family AS Family12_6_, this_.FermentationTemperature AS Fermenta7_12_6_, this_.FermentationTimeDays AS Fermenta8_12_6_, this_.FinalGravity AS FinalGra9_12_6_, this_.Name AS Name12_6_, this_.Note AS Note12_6_, this_.OriginalGravity AS Origina12_12_6_, this_.SecondaryFermentationTimeDays AS Seconda13_12_6_, this_.Style AS Style12_6_, this_.Type AS Type12_6_, this_.Brewer_id AS Brewer16_12_6_, this_.Filter_id AS Filter17_12_6_, this_.Lauter_id AS Lauter18_12_6_, this_.Mash_id AS Mash19_12_6_, this_.YeastUsed_id AS YeastUsed20_12_6_, person2_.Id AS Id9_0_, person2_.About AS About9_0_, person2_.Location AS Location9_0_, person2_.DateOfBirth AS DateOfBi4_9_0_, person2_.Email AS Email9_0_, person2_.UserName AS UserName9_0_, person2_.Type AS Type9_0_, filter3_.Id AS Id2_1_, filter3_.Type AS Type2_1_, filter3_.Note AS Note2_1_, lauter4_.Id AS Id6_2_, lauter4_.SpargeType AS SpargeType6_2_, lauter4_.Volume AS Volume6_2_, lauter4_.Note AS Note6_2_, mash5_.Id AS Id16_3_, mash5_.MashInTemp AS MashInTemp16_3_, mash5_.MashOutTemp AS MashOutT3_16_3_, mash5_.Note AS Note16_3_, mash5_.Volume AS Volume16_3_, yeastuse6_.Id AS Id15_4_, yeastuse6_.Note AS Note15_4_, yeastuse6_.StarterTime AS StarterT3_15_4_, yeastuse6_.StarterUsed AS StarterU4_15_4_, yeastuse6_.YeastUsed_id AS YeastUsed5_15_4_, yeast7_.Id AS Id14_5_, yeast7_.Brand AS Brand14_5_, yeast7_.Description AS Descript3_14_5_, yeast7_.Strain AS Strain14_5_, yeast7_.Style AS Style14_5_ FROM `Recipe` this_ LEFT OUTER JOIN `Person` person2_ ON this_.Brewer_id=person2_.Id LEFT OUTER JOIN `Filter` filter3_ ON this_.Filter_id=filter3_.Id LEFT OUTER JOIN `Lauter` lauter4_ ON this_.Lauter_id=lauter4_.Id LEFT OUTER JOIN `Mash` mash5_ ON this_.Mash_id=mash5_.Id LEFT OUTER JOIN `YeastUse` yeastuse6_ ON this_.YeastUsed_id=yeastuse6_.Id LEFT OUTER JOIN `Yeast` yeast7_ ON yeastuse6_.YeastUsed_id=yeast7_.Id
NHibernate: SELECT maltsused0_.Recipe_id as Recipe8_1_, maltsused0_.Id as Id1_, maltsused0_.Id as Id8_0_, maltsused0_.AddTime as AddTime8_0_, maltsused0_.BoilTime as BoilTime8_0_, maltsused0_.Note as Note8_0_, maltsused0_.Quantity as Quantity8_0_, maltsused0_.WhenUsed as WhenUsed8_0_, maltsused0_.MaltUsed_id as MaltUsed7_8_0_ FROM `MaltUse` maltsused0_ WHERE maltsused0_.Recipe_id=?p0;?p0 = 1
NHibernate: SELECT hopsused0_.Recipe_id as Recipe9_1_, hopsused0_.Id as Id1_, hopsused0_.Id as Id4_0_, hopsused0_.AddTime as AddTime4_0_, hopsused0_.BoilTime as BoilTime4_0_, hopsused0_.HopIngredientType as HopIngre4_4_0_, hopsused0_.Note as Note4_0_, hopsused0_.Quantity as Quantity4_0_, hopsused0_.WhenUsed as WhenUsed4_0_, hopsused0_.HopUsed_id as HopUsed8_4_0_ FROM `HopUse` hopsused0_ WHERE hopsused0_.Recipe_id=?p0;?p0 = 1
NHibernate: SELECT additionsu0_.Recipe_id as Recipe8_2_, additionsu0_.Id as Id2_, additionsu0_.Id as Id1_1_, additionsu0_.AddTime as AddTime1_1_, additionsu0_.BoilTime as BoilTime1_1_, additionsu0_.Note as Note1_1_, additionsu0_.Quantity as Quantity1_1_, additionsu0_.WhenUsed as WhenUsed1_1_, additionsu0_.AdditionUsed_id as Addition7_1_1_, addition1_.Id as Id0_0_, addition1_.Brand as Brand0_0_, addition1_.Description as Descript3_0_0_, addition1_.Name as Name0_0_ FROM `AdditionUse` additionsu0_ left outer join `Addition` addition1_ on additionsu0_.AdditionUsed_id=addition1_.Id WHERE additionsu0_.Recipe_id=?p0;?p0 = 1
NHibernate: UPDATE `HopUse` SET AddTime = ?p0, BoilTime = ?p1, HopIngredientType = ?p2, Note = ?p3, Quantity = ?p4, WhenUsed = ?p5, HopUsed_id = ?p6 WHERE Id = ?p7;?p0 = 15, ?p1 = 45, ?p2 = 0, ?p3 = 'note', ?p4 = 56.6990462, ?p5 = 3, ?p6 = NULL, ?p7 = 2</pre></div></div>

<p>Now, what the heck is that update doing there?  A quick googling showed that it is a common problem associated with flushing the session.  The test method shown even has a killer name: <a href="http://nhforge.org/blogs/nhibernate/archive/2008/10/20/how-test-your-mappings-the-ghostbuster.aspx">The Ghostbuster</a>.  In a nutshell it means that if something needs to be done behind the scenes that &#8220;changes&#8221; a property on your object (like converting an integer to an enum) the object is marked as dirty and when the session is flushed it will need to be updated.  You can see how this would get expensive!</p>
<p>That&#8217;s all well and good, but how to fix it?  The first thing that came to mind was a mapping convention for enums.  But I ran into another problem there &#8211; the examples I saw for setting up conventions used the IProperty class, <a href="http://stackoverflow.com/questions/729456/argument-type-fluentnhibernate-mapping-iproperty-is-not-cls-compliant">which is not cls-compliant</a>.  I&#8217;m running on Mono, so this was not an option for me.  Going back to the drawing board, I remembered the IUserType from &#8220;old school&#8221; NHibernate (<a href="http://www.lostechies.com/blogs/rhouston/archive/2008/03/23/mapping-strings-to-booleans-using-nhibernate-s-iusertype.aspx">ably explained here</a>).</p>
<p>I didn&#8217;t want to have to do this for every enum in the application &#8211; something I could use more widely was in order.  Unable to find any examples (could be weak google-fu) I decided to try my own.  I ended up with a generic class called &#8220;EnumMapper&#8221; implementing the IUserType interface, that looks awfully similar to Ray Houston&#8217;s example cited above.  It isn&#8217;t perfect (I think I might be able to go back and clean it up some) but its not too awful I don&#8217;t think.  It might just be getting too late for me, but I couldn&#8217;t think of a good way to limit it to enums.  Anyway, it does its job as long as I don&#8217;t give it a bad parameter.  Here it is in all its ugliness:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> <span class="kw4">class</span> EnumMapper<span class="sy0">&lt;</span>T<span class="sy0">&gt;</span> <span class="sy0">:</span> IUserType
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> Boolean IsMutable <span class="br0">&#123;</span> <span class="kw1">get</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="kw1">false</span><span class="sy0">;</span> <span class="br0">&#125;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="kw1">public</span> Type ReturnedType <span class="br0">&#123;</span> <span class="kw1">get</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="kw3">typeof</span><span class="br0">&#40;</span>T<span class="br0">&#41;</span><span class="sy0">;</span> <span class="br0">&#125;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="kw1">public</span> SqlType<span class="br0">&#91;</span><span class="br0">&#93;</span> SqlTypes <span class="br0">&#123;</span> <span class="kw1">get</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="kw3">new</span><span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#123;</span> SqlTypeFactory<span class="sy0">.</span><span class="me1">Int16</span> <span class="br0">&#125;</span><span class="sy0">;</span> <span class="br0">&#125;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">object</span> NullSafeGet<span class="br0">&#40;</span>IDataReader rs, <span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> names, <span class="kw4">object</span> owner<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> tmp <span class="sy0">=</span> NHibernateUtil<span class="sy0">.</span><span class="me1">Int32</span><span class="sy0">.</span><span class="me1">NullSafeGet</span><span class="br0">&#40;</span>rs, names<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw4">Enum</span><span class="sy0">.</span><span class="me1">Parse</span><span class="br0">&#40;</span><span class="kw3">typeof</span><span class="br0">&#40;</span>T<span class="br0">&#41;</span>, tmp<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> NullSafeSet<span class="br0">&#40;</span>IDbCommand cmd, <span class="kw4">object</span> <span class="kw1">value</span>, <span class="kw4">int</span> index<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">value</span> <span class="sy0">==</span> <span class="kw1">null</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span><span class="br0">&#40;</span>IDataParameter<span class="br0">&#41;</span>cmd<span class="sy0">.</span><span class="me1">Parameters</span><span class="br0">&#91;</span>index<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="kw1">Value</span> <span class="sy0">=</span> DBNull<span class="sy0">.</span><span class="kw1">Value</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span><span class="br0">&#40;</span>IDataParameter<span class="br0">&#41;</span>cmd<span class="sy0">.</span><span class="me1">Parameters</span><span class="br0">&#91;</span>index<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="kw1">Value</span> <span class="sy0">=</span> <span class="br0">&#40;</span>Int32<span class="br0">&#41;</span><span class="kw1">value</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">object</span> DeepCopy<span class="br0">&#40;</span><span class="kw4">object</span> <span class="kw1">value</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw1">value</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">object</span> Replace<span class="br0">&#40;</span><span class="kw4">object</span> original, <span class="kw4">object</span> target, <span class="kw4">object</span> owner<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> original<span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">object</span> Assemble<span class="br0">&#40;</span><span class="kw4">object</span> cached, <span class="kw4">object</span> owner<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> cached<span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">object</span> Disassemble<span class="br0">&#40;</span><span class="kw4">object</span> <span class="kw1">value</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw1">value</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw3">new</span> <span class="kw4">bool</span> Equals<span class="br0">&#40;</span><span class="kw4">object</span> x, <span class="kw4">object</span> y<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>ReferenceEquals<span class="br0">&#40;</span>x, y<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw1">true</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>x <span class="sy0">==</span> <span class="kw1">null</span> <span class="sy0">||</span> y <span class="sy0">==</span> <span class="kw1">null</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw1">false</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> x<span class="sy0">.</span><span class="me1">Equals</span><span class="br0">&#40;</span>y<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">int</span> GetHashCode<span class="br0">&#40;</span><span class="kw4">object</span> x<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> x <span class="sy0">==</span> <span class="kw1">null</span> <span class="sy0">?</span> <span class="kw3">typeof</span><span class="br0">&#40;</span>T<span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">GetHashCode</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">:</span> x<span class="sy0">.</span><span class="me1">GetHashCode</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public class EnumMapper&lt;T&gt; : IUserType
{
    public Boolean IsMutable { get { return false; } }
    public Type ReturnedType { get { return typeof(T); } }
    public SqlType[] SqlTypes { get { return new[] { SqlTypeFactory.Int16 }; } }

    public object NullSafeGet(IDataReader rs, string[] names, object owner)
    {
        var tmp = NHibernateUtil.Int32.NullSafeGet(rs, names[0]).ToString();

        return Enum.Parse(typeof(T), tmp);
    }

    public void NullSafeSet(IDbCommand cmd, object value, int index)
    {
        if (value == null)
        {
            ((IDataParameter)cmd.Parameters[index]).Value = DBNull.Value;
        }
        else
        {
            ((IDataParameter)cmd.Parameters[index]).Value = (Int32)value;
        }
    }

    public object DeepCopy(object value)
    {
        return value;
    }

    public object Replace(object original, object target, object owner)
    {
        return original;
    }

    public object Assemble(object cached, object owner)
    {
        return cached;
    }

    public object Disassemble(object value)
    {
        return value;
    }

    public new bool Equals(object x, object y)
    {
        if (ReferenceEquals(x, y))
        {
            return true;
        }

        if (x == null || y == null)
        {
            return false;
        }

        return x.Equals(y);
    }

    public int GetHashCode(object x)
    {
        return x == null ? typeof(T).GetHashCode() : x.GetHashCode();
    }
}</pre></div></div>

<p>I hope to clean this up eventually, but it looks like it will work for now.  The mapping was changed to look like this:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">Map<span class="br0">&#40;</span>x <span class="sy0">=&gt;</span> x<span class="sy0">.</span><span class="me1">Property</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">CustomType</span><span class="sy0">&lt;</span>EnumMapper<span class="sy0">&lt;</span>SomeType<span class="sy0">&gt;&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Map(x =&gt; x.Property).CustomType&lt;EnumMapper&lt;SomeType&gt;&gt;();</pre></div></div>

<p>I started up the app and checked the output again, and saw just what I was looking for:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="sql"><thead><tr><td colspan="2"  class="head">SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1">NHibernate: <span class="kw1">SELECT</span> this_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>AttemptDate <span class="kw1">AS</span> AttemptD2_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>BatchSize <span class="kw1">AS</span> BatchSize12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>ConditioningTimeDays <span class="kw1">AS</span> Conditio4_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>TotalBoilTimeMinutes <span class="kw1">AS</span> TotalBoi5_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Family <span class="kw1">AS</span> Family12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>FermentationTemperature <span class="kw1">AS</span> Fermenta7_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>FermentationTimeDays <span class="kw1">AS</span> Fermenta8_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>FinalGravity <span class="kw1">AS</span> FinalGra9_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Name <span class="kw1">AS</span> Name12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>OriginalGravity <span class="kw1">AS</span> Origina12_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>SecondaryFermentationTimeDays <span class="kw1">AS</span> Seconda13_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span><span class="kw1">STYLE</span> <span class="kw1">AS</span> Style12_6_<span class="sy0">,</span> this_<span class="sy0">.</span><span class="kw1">TYPE</span> <span class="kw1">AS</span> Type12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Brewer_id <span class="kw1">AS</span> Brewer16_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Filter_id <span class="kw1">AS</span> Filter17_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Lauter_id <span class="kw1">AS</span> Lauter18_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>Mash_id <span class="kw1">AS</span> Mash19_12_6_<span class="sy0">,</span> this_<span class="sy0">.</span>YeastUsed_id <span class="kw1">AS</span> YeastUsed20_12_6_<span class="sy0">,</span> person2_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>About <span class="kw1">AS</span> About9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>Location <span class="kw1">AS</span> Location9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>DateOfBirth <span class="kw1">AS</span> DateOfBi4_9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>Email <span class="kw1">AS</span> Email9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span>UserName <span class="kw1">AS</span> UserName9_0_<span class="sy0">,</span> person2_<span class="sy0">.</span><span class="kw1">TYPE</span> <span class="kw1">AS</span> Type9_0_<span class="sy0">,</span> filter3_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id2_1_<span class="sy0">,</span> filter3_<span class="sy0">.</span><span class="kw1">TYPE</span> <span class="kw1">AS</span> Type2_1_<span class="sy0">,</span> filter3_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note2_1_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id6_2_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>SpargeType <span class="kw1">AS</span> SpargeType6_2_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>Volume <span class="kw1">AS</span> Volume6_2_<span class="sy0">,</span> lauter4_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note6_2_<span class="sy0">,</span> mash5_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>MashInTemp <span class="kw1">AS</span> MashInTemp16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>MashOutTemp <span class="kw1">AS</span> MashOutT3_16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note16_3_<span class="sy0">,</span> mash5_<span class="sy0">.</span>Volume <span class="kw1">AS</span> Volume16_3_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>StarterTime <span class="kw1">AS</span> StarterT3_15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>StarterUsed <span class="kw1">AS</span> StarterU4_15_4_<span class="sy0">,</span> yeastuse6_<span class="sy0">.</span>YeastUsed_id <span class="kw1">AS</span> YeastUsed5_15_4_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Brand <span class="kw1">AS</span> Brand14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Description <span class="kw1">AS</span> Descript3_14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span>Strain <span class="kw1">AS</span> Strain14_5_<span class="sy0">,</span> yeast7_<span class="sy0">.</span><span class="kw1">STYLE</span> <span class="kw1">AS</span> Style14_5_ <span class="kw1">FROM</span> <span class="st0">`Recipe`</span> this_ <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Person`</span> person2_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Brewer_id<span class="sy0">=</span>person2_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Filter`</span> filter3_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Filter_id<span class="sy0">=</span>filter3_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Lauter`</span> lauter4_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Lauter_id<span class="sy0">=</span>lauter4_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Mash`</span> mash5_ <span class="kw1">ON</span> this_<span class="sy0">.</span>Mash_id<span class="sy0">=</span>mash5_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`YeastUse`</span> yeastuse6_ <span class="kw1">ON</span> this_<span class="sy0">.</span>YeastUsed_id<span class="sy0">=</span>yeastuse6_<span class="sy0">.</span>Id <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Yeast`</span> yeast7_ <span class="kw1">ON</span> yeastuse6_<span class="sy0">.</span>YeastUsed_id<span class="sy0">=</span>yeast7_<span class="sy0">.</span>Id
NHibernate: <span class="kw1">SELECT</span> maltsused0_<span class="sy0">.</span>Recipe_id <span class="kw1">AS</span> Recipe8_1_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id1_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>AddTime <span class="kw1">AS</span> AddTime8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>BoilTime <span class="kw1">AS</span> BoilTime8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>Quantity <span class="kw1">AS</span> Quantity8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>WhenUsed <span class="kw1">AS</span> WhenUsed8_0_<span class="sy0">,</span> maltsused0_<span class="sy0">.</span>MaltUsed_id <span class="kw1">AS</span> MaltUsed7_8_0_ <span class="kw1">FROM</span> <span class="st0">`MaltUse`</span> maltsused0_ <span class="kw1">WHERE</span> maltsused0_<span class="sy0">.</span>Recipe_id<span class="sy0">=</span>?p0;?p0 <span class="sy0">=</span> <span class="nu0">1</span>
NHibernate: <span class="kw1">SELECT</span> hopsused0_<span class="sy0">.</span>Recipe_id <span class="kw1">AS</span> Recipe8_1_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id1_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>AddTime <span class="kw1">AS</span> AddTime4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>BoilTime <span class="kw1">AS</span> BoilTime4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>Quantity <span class="kw1">AS</span> Quantity4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>WhenUsed <span class="kw1">AS</span> WhenUsed4_0_<span class="sy0">,</span> hopsused0_<span class="sy0">.</span>HopUsed_id <span class="kw1">AS</span> HopUsed7_4_0_ <span class="kw1">FROM</span> <span class="st0">`HopUse`</span> hopsused0_ <span class="kw1">WHERE</span> hopsused0_<span class="sy0">.</span>Recipe_id<span class="sy0">=</span>?p0;?p0 <span class="sy0">=</span> <span class="nu0">1</span>
NHibernate: <span class="kw1">SELECT</span> additionsu0_<span class="sy0">.</span>Recipe_id <span class="kw1">AS</span> Recipe8_2_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id2_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>AddTime <span class="kw1">AS</span> AddTime1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>BoilTime <span class="kw1">AS</span> BoilTime1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Note <span class="kw1">AS</span> Note1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>Quantity <span class="kw1">AS</span> Quantity1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>WhenUsed <span class="kw1">AS</span> WhenUsed1_1_<span class="sy0">,</span> additionsu0_<span class="sy0">.</span>AdditionUsed_id <span class="kw1">AS</span> Addition7_1_1_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Id <span class="kw1">AS</span> Id0_0_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Brand <span class="kw1">AS</span> Brand0_0_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Description <span class="kw1">AS</span> Descript3_0_0_<span class="sy0">,</span> addition1_<span class="sy0">.</span>Name <span class="kw1">AS</span> Name0_0_ <span class="kw1">FROM</span> <span class="st0">`AdditionUse`</span> additionsu0_ <span class="kw1">LEFT</span> <span class="kw1">OUTER</span> <span class="kw1">JOIN</span> <span class="st0">`Addition`</span> addition1_ <span class="kw1">ON</span> additionsu0_<span class="sy0">.</span>AdditionUsed_id<span class="sy0">=</span>addition1_<span class="sy0">.</span>Id <span class="kw1">WHERE</span> additionsu0_<span class="sy0">.</span>Recipe_id<span class="sy0">=</span>?p0;?p0 <span class="sy0">=</span> <span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">NHibernate: SELECT this_.Id as Id12_6_, this_.AttemptDate as AttemptD2_12_6_, this_.BatchSize as BatchSize12_6_, this_.ConditioningTimeDays as Conditio4_12_6_, this_.TotalBoilTimeMinutes as TotalBoi5_12_6_, this_.Family as Family12_6_, this_.FermentationTemperature as Fermenta7_12_6_, this_.FermentationTimeDays as Fermenta8_12_6_, this_.FinalGravity as FinalGra9_12_6_, this_.Name as Name12_6_, this_.Note as Note12_6_, this_.OriginalGravity as Origina12_12_6_, this_.SecondaryFermentationTimeDays as Seconda13_12_6_, this_.Style as Style12_6_, this_.Type as Type12_6_, this_.Brewer_id as Brewer16_12_6_, this_.Filter_id as Filter17_12_6_, this_.Lauter_id as Lauter18_12_6_, this_.Mash_id as Mash19_12_6_, this_.YeastUsed_id as YeastUsed20_12_6_, person2_.Id as Id9_0_, person2_.About as About9_0_, person2_.Location as Location9_0_, person2_.DateOfBirth as DateOfBi4_9_0_, person2_.Email as Email9_0_, person2_.UserName as UserName9_0_, person2_.Type as Type9_0_, filter3_.Id as Id2_1_, filter3_.Type as Type2_1_, filter3_.Note as Note2_1_, lauter4_.Id as Id6_2_, lauter4_.SpargeType as SpargeType6_2_, lauter4_.Volume as Volume6_2_, lauter4_.Note as Note6_2_, mash5_.Id as Id16_3_, mash5_.MashInTemp as MashInTemp16_3_, mash5_.MashOutTemp as MashOutT3_16_3_, mash5_.Note as Note16_3_, mash5_.Volume as Volume16_3_, yeastuse6_.Id as Id15_4_, yeastuse6_.Note as Note15_4_, yeastuse6_.StarterTime as StarterT3_15_4_, yeastuse6_.StarterUsed as StarterU4_15_4_, yeastuse6_.YeastUsed_id as YeastUsed5_15_4_, yeast7_.Id as Id14_5_, yeast7_.Brand as Brand14_5_, yeast7_.Description as Descript3_14_5_, yeast7_.Strain as Strain14_5_, yeast7_.Style as Style14_5_ FROM `Recipe` this_ left outer join `Person` person2_ on this_.Brewer_id=person2_.Id left outer join `Filter` filter3_ on this_.Filter_id=filter3_.Id left outer join `Lauter` lauter4_ on this_.Lauter_id=lauter4_.Id left outer join `Mash` mash5_ on this_.Mash_id=mash5_.Id left outer join `YeastUse` yeastuse6_ on this_.YeastUsed_id=yeastuse6_.Id left outer join `Yeast` yeast7_ on yeastuse6_.YeastUsed_id=yeast7_.Id
NHibernate: SELECT maltsused0_.Recipe_id as Recipe8_1_, maltsused0_.Id as Id1_, maltsused0_.Id as Id8_0_, maltsused0_.AddTime as AddTime8_0_, maltsused0_.BoilTime as BoilTime8_0_, maltsused0_.Note as Note8_0_, maltsused0_.Quantity as Quantity8_0_, maltsused0_.WhenUsed as WhenUsed8_0_, maltsused0_.MaltUsed_id as MaltUsed7_8_0_ FROM `MaltUse` maltsused0_ WHERE maltsused0_.Recipe_id=?p0;?p0 = 1
NHibernate: SELECT hopsused0_.Recipe_id as Recipe8_1_, hopsused0_.Id as Id1_, hopsused0_.Id as Id4_0_, hopsused0_.AddTime as AddTime4_0_, hopsused0_.BoilTime as BoilTime4_0_, hopsused0_.Note as Note4_0_, hopsused0_.Quantity as Quantity4_0_, hopsused0_.WhenUsed as WhenUsed4_0_, hopsused0_.HopUsed_id as HopUsed7_4_0_ FROM `HopUse` hopsused0_ WHERE hopsused0_.Recipe_id=?p0;?p0 = 1
NHibernate: SELECT additionsu0_.Recipe_id as Recipe8_2_, additionsu0_.Id as Id2_, additionsu0_.Id as Id1_1_, additionsu0_.AddTime as AddTime1_1_, additionsu0_.BoilTime as BoilTime1_1_, additionsu0_.Note as Note1_1_, additionsu0_.Quantity as Quantity1_1_, additionsu0_.WhenUsed as WhenUsed1_1_, additionsu0_.AdditionUsed_id as Addition7_1_1_, addition1_.Id as Id0_0_, addition1_.Brand as Brand0_0_, addition1_.Description as Descript3_0_0_, addition1_.Name as Name0_0_ FROM `AdditionUse` additionsu0_ left outer join `Addition` addition1_ on additionsu0_.AdditionUsed_id=addition1_.Id WHERE additionsu0_.Recipe_id=?p0;?p0 = 1</pre></div></div>

<p>The ghost update is gone!  It ain&#8217;t pretty but its&#8217; getting the job done.  At least until the next time I break it <img src="https://s.w.org/images/core/emoji/2/72x72/1f644.png" alt="🙄" class="wp-smiley" style="height: 1em; max-height: 1em;" />  If anyone knows a better way, I would love to hear it.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/enterprisedev/appserver/quick-and-dirty-enum-mapper-for-fluent-n/#comments" thr:count="1"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/enterprisedev/appserver/quick-and-dirty-enum-mapper-for-fluent-n/feed/atom/" thr:count="1"/>
		<thr:total>1</thr:total>
		</entry>
	</feed>
