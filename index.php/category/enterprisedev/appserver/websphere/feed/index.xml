<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Websphere &#8211; LessthanDot</title>
	<atom:link href="/index.php/category/enterprisedev/appserver/websphere/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Java Training Day 2</title>
		<link>/index.php/enterprisedev/appserver/java-training-day-2/</link>
		<comments>/index.php/enterprisedev/appserver/java-training-day-2/#respond</comments>
		<pubDate>Wed, 28 Nov 2012 00:05:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Application Lifecycle Management]]></category>
		<category><![CDATA[Application Server]]></category>
		<category><![CDATA[Java EE]]></category>
		<category><![CDATA[JBoss]]></category>
		<category><![CDATA[Websphere]]></category>

		<guid isPermaLink="false">/index.php/2012/11/java-training-day-2/</guid>
		<description><![CDATA[Control statements

if

has to have parentheses and it has to be a boolean expressions  if (boolean-expression) {statement};
We also covered the while and do while loop followed by the for loop

Enhanced for loop aka foreach loop
The for loop lo&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is day two of the Java training that our group is taking. Today nothing really complicated was covered, nobody looked like a zombie yet, I am sure by Friday, that will be different. Here is a quick rundown of what was covered</p>
<p><strong>Control statements</strong></p>
<p><strong>if</strong></p>
<p>The if has to have parentheses and it has to be a boolean expressions  if (boolean-expression) {statement};<br />
We also covered the while and do while loop followed by the for loop</p>
<p>Enhanced for loop aka foreach loop<br />
The for loop looks like this  for(1=0;i&lt;10;I++)<br />
The enhanced for loop looks like this:  <code>for(Number n : Numbers.getList())</code><br />
In C# the foreach loop looks like this: <code>foreach (Number n in Numbers.getList())</code></p>
<p>Java doesn&#8217;t have a goto statement but you can accomplish the same thing by using a label&#8230;see you can still write spaghetti code  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong>Switch statement</strong><br />
The switch statement works with byte,short, int, char and enum in Java before version 7, Java version 7 added the ability to use strings as well</p>
<p>The switch statement with the string data type is case sensitive<br />
This will print hello</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> test <span class="sy0">=</span><span class="st0">&quot;hello&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">switch</span><span class="br0">&#40;</span>test<span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">case</span> <span class="st0">&quot;Hello&quot;</span><span class="sy0">:</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;Hello&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">case</span> <span class="st0">&quot;hello&quot;</span><span class="sy0">:</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;hello&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">default</span><span class="sy0">:</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;default&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String test ="hello";
		switch(test){
		case "Hello":
			System.out.println("Hello");
			break;
		case "hello":
			System.out.println("hello");
			break;
		default:
			System.out.println("default");
			break;
		}</pre></div></div>

<p><strong>Integer data types</strong><br />
No null values like in .net where you would use int?<br />
you can use _ in constants for readability reasons so for example 2_000 and 2000 are the same<br />
There are no underflow or overflow error, results will wrap around</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw4">byte</span> x <span class="sy0">=</span><span class="nu0">127</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span>
x<span class="sy0">+=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">byte x =127;
System.out.println(x);
x+= 1;
System.out.println(x);</pre></div></div>

<p>That will print<br />
127<br />
-128</p>
<p>Java doesn&#8217;t have the checked keyword like in c#, you need to roll your own if you want to prevent this kind of stuff</p>
<p>If you try assigning  128 to a byte, you will get an error, it won&#8217;t become -128</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw4">byte</span> x <span class="sy0">=</span><span class="nu0">128</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">byte x =128;
System.out.println(x);</pre></div></div>

<p>Exception in thread &#8220;main&#8221; java.lang.Error: Unresolved compilation problem:<br />
Type mismatch: cannot convert from int to byte<br />
at com.denis.MainClass.main(MainClass.java:12)</p>
<p>You also can&#8217;t convert straight from an int to a string</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> s <span class="sy0">=</span> <span class="st0">&quot;123&quot;</span><span class="sy0">;</span>
<span class="kw4">int</span> z <span class="sy0">=</span> s<span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>z<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String s = "123";
int z = s;
System.out.println(z);</pre></div></div>

<p>Exception in thread &#8220;main&#8221; java.lang.Error: Unresolved compilation problem:<br />
Type mismatch: cannot convert from String to int</p>
<p>Here is one way to do the conversion by using the parseInt method of the Integer wrapper type</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> s <span class="sy0">=</span> <span class="st0">&quot;123&quot;</span><span class="sy0">;</span>
<span class="kw4">int</span> z <span class="sy0">=</span> <span class="kw3">Integer</span>.<span class="me1">parseInt</span><span class="br0">&#40;</span>s<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>z<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String s = "123";
int z = Integer.parseInt(s);
System.out.println(z);</pre></div></div>

<p>Looks like Java doesn&#8217;t have TryParse like c#</p>
<p>To test if strings are the same use equals or equalsIgnoreCase<br />
Here is what is the output of the following tests</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw3">String</span> a1 <span class="sy0">=</span> <span class="st0">&quot;A&quot;</span><span class="sy0">;</span>
<span class="kw3">String</span> a2 <span class="sy0">=</span> <span class="st0">&quot;a&quot;</span><span class="sy0">;</span>
<span class="kw3">String</span> a3 <span class="sy0">=</span> <span class="st0">&quot;a&quot;</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1 <span class="sy0">==</span> a2<span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//false</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1 <span class="sy0">==</span> a3<span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//false</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1.<span class="me1">equals</span><span class="br0">&#40;</span>a2<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//false</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>a1.<span class="me1">equalsIgnoreCase</span><span class="br0">&#40;</span>a2<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp;<span class="co1">//true</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">String a1 = "A";
String a2 = "a";
String a3 = "a";
System.out.println(a1 == a2); 			//false
System.out.println(a1 == a3); 			//false
System.out.println(a1.equals(a2));  		//false
System.out.println(a1.equalsIgnoreCase(a2)); 	//true</pre></div></div>

<p>This one is similar to SELECT 5/2 in SQL Server, it does integer math, however since answer is a double, you get back 2.0</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw4">double</span> answer<span class="sy0">;</span>
answer <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">/</span><span class="nu0">2</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span>answer<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// 2.0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">double answer;
answer = 5/2;
System.out.println(answer); // 2.0</pre></div></div>

<p>You need to change either of the two integers in order to get back a result that is not an integer</p>
<p>The stack holds all local variables and temporary variables, there is a separate stack for each thread, variables on the stack must be initialized explicitly<br />
The heap holds memory that is dynamically allocated with new, heap memory is shared between threads, variables on the heap are initialized automatically to default values<br />
Objects are always on the heap</p>
<p>Primitive arguments are always passed by value<br />
Objects and arrays are passed by reference</p>
<p>We covered StringBuffer and StringBuilder, StringBuilder is not thread safe but is faster than StringBuffer if accesed by a single thread</p>
<p><strong>varargs</strong><br />
varargs is a variable-length argument list</p>
<p>public static void main(String[] args)<br />
public static void main(String&#8230; args)</p>
<p>  public static void main(String&#8230; args){<br />
    for (String s: args ) System.out.println(s);<br />
  }</p>
<p>Arrays and Objects instantiation, constructors, default constructors were also covered. We covered much more than I wrote down, I was busy with listening and doing the labs so didn&#8217;t have the opportunity to write it all down</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/java-training-day-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Java Training Day 1</title>
		<link>/index.php/enterprisedev/appserver/jee/java-training-day-1/</link>
		<comments>/index.php/enterprisedev/appserver/jee/java-training-day-1/#respond</comments>
		<pubDate>Mon, 26 Nov 2012 19:22:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Application Lifecycle Management]]></category>
		<category><![CDATA[Java EE]]></category>
		<category><![CDATA[JBoss]]></category>
		<category><![CDATA[Websphere]]></category>
		<category><![CDATA[eclipse]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[maven]]></category>
		<category><![CDATA[netbeans]]></category>
		<category><![CDATA[oop]]></category>

		<guid isPermaLink="false">/index.php/2012/11/java-training-day-1/</guid>
		<description><![CDATA[Today is day one of the Java class I am taking this week. I am just dumping some of the stuff that I am hearing about, some of the stuff I might already know.
Java is a general purpose language, it is interperted, output is by&#8230;]]></description>
				<content:encoded><![CDATA[<p>Java Training Day 1<br />
&#8212;<br />
Today is day one of the Java class I am taking this week. I am just dumping some of the stuff that I am hearing about, some of the stuff I might already know.<br />
Java is a general purpose language, it is interperted, output is bytecode, you need to have a Java Virtual Machine on the target machine in order to run a Java program.<br />
A Java file gets compiled to a system-neutral format which is a class file and gets a .class extension, this is compressed and not really human readable</p>
<p>Classes are organized in a group called a package, a package is very similar to a .net namespace. You use this so that you don&#8217;t get collisions if you have two classes with the same name.</p>
<p>You use javadoc to generate standard formatted documentation.</p>
<p><strong>Java community process(JCP)</strong><br />
Formal community-driven process to drive the Java standard, the iste is http://jcp.org/</p>
<p>Deprecate, use annotation and then when you compile your class, you will get a warning so that you will know that you will need to rewrite that piece of the code.</p>
<p>Java is case sensitive, all reserved java keywords are lowercase</p>
<p>In a class the main routine is the start of a program<br />
The main routine will look like this</p>
<p>public static void main(String[] args) {&#8230;&#8230;.}</p>
<p>A java source file has to end in  .java, for example  MyClass.java this will produce a file called MyClass.class. you can&#8217;t have more than one public class in a source file, you cannot have partial classes like in .net either.</p>
<p>Java runs on top of the JVM, the JVM is different per operating system. No need to recompile Java&#8230;Write once run everywhere&#8230;.some people like to say write once&#8230;debug everywhere  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong>Java versions and flavors</strong><br />
Java 1.0, 1.1<br />
Java 2 	1.2, 1.3, 1.4, 1.5<br />
Java 5  also sometimes called 1.5, 1.5 is when they shifted to integers again<br />
Java 6<br />
Java 7</p>
<p>The different flavors of Java and their old and new names<br />
J2SE  	Java SE<br />
J2EE	Java EE<br />
J2ME	Java ME</p>
<p><strong>Base libraries to provide common functionality</strong><br />
Here are just some of them</p>
<p>java.lang<br />
java.lang contains fundamental classes and interfaces closely tied to the language and runtime system.</p>
<p>java.io/java.nio/java.net<br />
I/O and networking access the platform file system, and more generally networks through the java.io, java.nio and java.net packages. </p>
<p>java.math<br />
Mathematics package: java.math provides mathematical expressions and evaluation, as well as arbitrary-precision decimal and integer number datatypes.</p>
<p>java.text<br />
Text: java.text deals with text, dates, numbers, and messages.</p>
<p>javax.crypto<br />
Security is provided by java.security and encryption services are provided by javax.crypto.</p>
<p>java.sql<br />
Databases: access to SQL databases via java.sql</p>
<p>java.beans<br />
Java Beans: java.beans provides ways to manipulate reusable components.</p>
<p><strong>Types of Java Software</strong><br />
Class Libraries<br />
Standalone Java<br />
Applets<br />
Servlets, JSP and tag libraries<br />
Enterprise Java Beans</p>
<p><strong>Enterprise Application Servers</strong><br />
Here are a couple of Java Enterprise Application Servers and their vendors<br />
GlassFish	Oracle/Sun<br />
Weblogic	Oracle/BEA<br />
Webshere	IBM<br />
JBoss		Red Hat</p>
<p><strong>Environment variables</strong><br />
Oh how I used to hate dealing with these variables, stuff wouldn&#8217;t work if this wasn&#8217;t setup correctly<br />
There are a couple of environment variables that you need</p>
<p><strong>JAVA_HOME</strong><br />
This will be use by the tools in the JDK</p>
<p><strong>PATH</strong><br />
This is used by the operating system to find the compiler and other programs, add the/bin directory</p>
<p><strong>CLASSPATH</strong><br />
This is used by the Java Virtual Machine to find application specific classes at compile as well as run time</p>
<p><strong>JDK Bin directory</strong><br />
THe JDK Bin directory holds all the programs used by the JDK to do what is needed for Java to function<br />
There are programs to compile java, to run java, to create JAR files, to create javadoc documentation files etc etc<br />
Mine is installed here C:Program FilesJavajdk1.7.0_07bin</p>
<p>Here is screenshot of my directory with some of those programs</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/JavaBinDirectory.PNG?mtime=1353948732"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/JavaBinDirectory.PNG?mtime=1353948732" width="795" height="635" /></a></div>
<p>There is something called jvisualvm.exe, this is know as Java VisualVM, from the Oracle documentation: http://docs.oracle.com/javase/6/docs/technotes/tools/share/jvisualvm.html<br />
Java VisualVM is an intuitive graphical user interface that provides detailed information about Java technology-based applications (Java applications) while they are running on a given Java Virtual Machine (JVM*). The name Java VisualVM comes from the fact that Java VisualVM provides information about the JVM software visually.</p>
<p>Java VisualVM combines several monitoring, troubleshooting, and profiling utilities into a single tool. For example, most of the functionality offered by the standalone tools jmap, jinfo, jstat and jstack have been integrated into Java VisualVM. Other functionalities, such as some of those offered by the JConsole tool, can be added as optional plug-ins.</p>
<p>Here are some screenshots of the tool in action while running against Eclipse</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMMonitor.PNG?mtime=1353948863"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMMonitor.PNG?mtime=1353948863" width="929" height="579" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreads.PNG?mtime=1353948850"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreads.PNG?mtime=1353948850" width="919" height="581" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreadsTable.PNG?mtime=1353948837"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreadsTable.PNG?mtime=1353948837" width="930" height="594" /></a></div>
<p>Always include . as part of the classpath, this ensure that the current directory is searched in case of a default package</p>
<p><strong>JAR</strong><br />
Java Archive, this is an archived file holding all the classes and a manifest describing what is in the archive</p>
<p>There are related files that are used based on the type of application, here is what info wikipedia has listed</p>
<p>WAR (Web application archive) files, also Java archives, store XML files, Java classes, JavaServer Pages and other objects for Web Applications.<br />
RAR (resource adapter archive) files (not to be confused with the RAR file format), also Java archives, store XML files, Java classes and other objects for J2EE Connector Architecture (JCA) applications.<br />
EAR (enterprise archive) files provide composite Java archives which combine XML files, Java classes and other objects including JAR, WAR and RAR Java archive files for Enterprise Applications.<br />
SAR (service archive) is similar to EAR. It provides a service.xml file and accompanying JAR files.<br />
APK (Android Application Package), a variant of the Java archive format, is used for Android applications.[3]</p>
<p>We compiled and ran some programs from the command line, it is amazing how many people have problems with the path and classpath variables to get it to work&#8230;but we all did and now we are allowed to use Eclipese or Netbeans instead</p>
<p><strong>Javadoc comments</strong><br />
We looked at how to do javadoc comments, basically the first line has to start with /**</p>
<p>There are also tags that you can use, it is recommended to use this order</p>
<p>@author (classes and interfaces only, required)<br />
@version (classes and interfaces only, required. See footnote 1)<br />
@param (methods and constructors only)<br />
@return (methods only)<br />
@exception (@throws is a synonym added in Javadoc 1.2)<br />
@see<br />
@since<br />
@serial (or @serialField or @serialData)<br />
@deprecated (see How and When To Deprecate APIs)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1">Here is an example
&nbsp;
&nbsp; &nbsp;<span class="co3">/**</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* Disposes of this graphics context once it is no longer </span>
<span class="co3">&nbsp; &nbsp; &nbsp;* referenced.</span>
<span class="co3">&nbsp; &nbsp; &nbsp;*</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* @see &nbsp; &nbsp; &nbsp; #dispose()</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* @since &nbsp; &nbsp; 1.0</span>
<span class="co3">&nbsp; &nbsp; &nbsp;*/</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> finalize<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; dispose<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Here is an example

   /**
     * Disposes of this graphics context once it is no longer 
     * referenced.
     *
     * @see       #dispose()
     * @since     1.0
     */
    public void finalize() {
        dispose();
    }
}</pre></div></div>

<p><strong>Identifiers</strong><br />
Can have letters and numbers, cannot begin with a digit</p>
<p>The reason most programming language don&#8217;t allow identifiers to start with a digit is simple</p>
<p>int 6;<br />
6=5;</p>
<p>See that? Since an identifier can be 1 character, you could create something named 5 or 6 or even 256, this rule prevents you doing such stuff</p>
<p>Variables can me made constant by using the final keyword for example</p>
<p>final int MAX_VALUE = 40;</p>
<p>You can also do this<br />
final int BOILING_POINT;<br />
BOILING_POINT; = 100;</p>
<p>Once you assign the value, you can&#8217;t change BOILING_POINT anymore</p>
<p>We learned about scope and learned that depending on where the variable is declared, it might not be visible outside of the block, this is the same as in other languages (local variables)</p>
<p>When you want to have only one copy of a class variable, make it static, then if you instatiate 100 classes they all point to the same variable instead of having 100 variables in memory<br />
Static variables are available to use as soon as a class is loaded</p>
<p>Brain fried&#8230;&#8230;time to go&#8230;&#8230;..  back tomorrow</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/jee/java-training-day-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Back to Java after an eleven year hiatus, what are some good resources you recommend?</title>
		<link>/index.php/enterprisedev/appserver/jee/back-to-java-after-an/</link>
		<comments>/index.php/enterprisedev/appserver/jee/back-to-java-after-an/#respond</comments>
		<pubDate>Sun, 25 Nov 2012 22:34:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[BEA WebLogic and Aqualogic]]></category>
		<category><![CDATA[Java EE]]></category>
		<category><![CDATA[Websphere]]></category>
		<category><![CDATA[eclipse]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[maven]]></category>
		<category><![CDATA[netbeans]]></category>

		<guid isPermaLink="false">/index.php/2012/11/back-to-java-after-an/</guid>
		<description><![CDATA[This week eleven coworkers and myself will be in Java training for most of the time, I haven't touched Java since 2001. I did a bunch of research over the 4 day weekend to get a little head start.

I installed Netbeans and Eclipse to see how they are&#8230;]]></description>
				<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/mrjoro/22752982/" title="Java Logo by mrjoro, on Flickr"><img src="http://farm1.staticflickr.com/17/22752982_28bfc98f68_m.jpg" width="240" height="180" alt="Java Logo" /></a></p>
<p>This week eleven coworkers and myself will be in Java training for most of the time, I haven&#8217;t touched Java since 2001. I did a bunch of research over the 4 day weekend to get a little head start.</p>
<p>I installed Netbeans and Eclipse to see how they are different<br />
I played around with Tapestry and took a look at Struts<br />
I used JUnit to write a couple of tests<br />
I installed Maven and used that to bring down the sample Tapestry project<br />
I installed and configured HyperSQL (with sa and blank password&#8230;  ouch!!!)</p>
<p>It seems to me that there are a whole lot of things that I need to know, twelve years ago none of this stuff existed. I also seems to me that the language itself hasn&#8217;t changed so much compared to C#. I might also take a look at Scala down the road, some of that stuff seems interesting. </p>
<p>When I used Java in 2000 and 2001 it was primarily to do JSP development. The main project at that time was converting a ColdFusion site to JSP. The IDE that we used at that time was Kawa, we also gave Visual Cafe a spin. I must say that the IDE is much much better than what existed twelve years ago. Eclipse has a robust plugin system and computers have advanced in speed over the past twelve years so that Java apps don&#8217;t feels slow on the desktop anymore</p>
<p>Over the next five days, I will blog about what I did and learned, I will also probably put some stuff on our wiki so that I can have it as a reference/cheat sheet</p>
<p>Here is my question to you&#8230;..What are some of your favorite resources for Java and the Java ecosystem? I am looking for blogs to subscribe to, people to follow on twitter, if you have a favorite Java book then tell me about it. My favorite books from 2001 were Core Java, Volume I and II, I am happy to see that the 9th edition is coming out on December 10th: <a href="http://www.amazon.com/gp/product/0137081898/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0137081898&amp;linkCode=as2&amp;tag=sql08-20">Core Java Volume I&#8211;Fundamentals (9th Edition) (Core Series)</a>. If you know of any good podcasts then tell me about those as well</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/jee/back-to-java-after-an/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
