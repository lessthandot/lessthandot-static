<?xml version="1.0" encoding="UTF-8"?><feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en-US"
  xml:base="/wp-atom.php"
   >
	<title type="text">2012 Server &#8211; LessthanDot</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-03-09T12:50:36Z</updated>

	<link rel="alternate" type="text/html" href="/" />
	<id>/index.php/feed/atom/</id>
	<link rel="self" type="application/atom+xml" href="/index.php/category/sysadmins/2012-server/feed/atom/" />

	<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<author>
			<name>Axel Achten (axel8s)</name>
					</author>
		<title type="html"><![CDATA[Getting remote Mount Point information with PowerShell]]></title>
		<link rel="alternate" type="text/html" href="/index.php/sysadmins/os/windows/getting-remote-mount-point-information/" />
		<id>/index.php/2012/11/getting-remote-mount-point-information/</id>
		<updated>2012-11-29T11:27:00Z</updated>
		<published>2012-11-29T11:27:00Z</published>
		<category scheme="/" term="2003 Server" /><category scheme="/" term="2008 Server" /><category scheme="/" term="2012 Server" /><category scheme="/" term="Windows" /><category scheme="/" term="diskspace" /><category scheme="/" term="mount point" /><category scheme="/" term="powershell" /><category scheme="/" term="remote" />		<summary type="html"><![CDATA[In a previous post I showed how to get remote disk information with PowerShell. The script works nice untill you execute it on a server with Mount Points. When executing the following script on a server with Mount Points:

Get-WmiObject win32_logicald&#8230;]]></summary>
		<content type="html" xml:base="/index.php/sysadmins/os/windows/getting-remote-mount-point-information/"><![CDATA[<p>In a previous post I showed how to <a href="/index.php/SysAdmins/OS/Windows/getting-remote-disk-information-with">get remote disk information with PowerShell</a>. The script works nice until you execute it on a server with Mount Points. When executing the following script on a server with Mount Points:</p>
<pre>Get-WmiObject win32_logicaldisk -computer &lt;computername&gt; | 
select-object DeviceID, VolumeName, @{Name="Size";Expression={$_.Size/1GB}},@{Name="FreeSpace";Expression={$_.FreeSpace/1GB}},
@{Name="PCTFreeSpace";Expression={
$_.FreeSpace/$_.Size*100}}|Sort-Object -descending PCTfreespace|format-table</pre>
<p>I get the following result:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/SysAdmins/FSMP1.JPG?mtime=1354195164"><img alt="" src="/wp-content/uploads/blogs/SysAdmins/FSMP1.JPG?mtime=1354195164" width="977" height="144" /></a></div>
<p>Knowing the sizes of my databases, I knew the numbers were wrong. So I opened a RDP session to the server and found this picture in Disk Management:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/SysAdmins/FSMP2.JPG?mtime=1354195179"><img alt="" src="/wp-content/uploads/blogs/SysAdmins/FSMP2.JPG?mtime=1354195179" width="810" height="530" /></a></div>
<p>At that moment I realized I wasn&#8217;t getting the information from the Mount Points, just from the Disks that had a drive letter assigned to them.<br />
So let&#8217;s find out how we can get that information with Windows PowerShell. I still need the wmiobject but instead of the win32_logicaldisk I&#8217;m going to use the win32_volume. I also replace the DeviceID and VolumeName objects with Name and Label:</p>
<pre>get-wmiobject win32_volume -computer &lt;computername|
select name, label, driveletter</pre>
<p>The result looks like this:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/SysAdmins/FSMP3.JPG?mtime=1354195191"><img alt="" src="/wp-content/uploads/blogs/SysAdmins/FSMP3.JPG?mtime=1354195191" width="733" height="200" /></a></div>
<p>As you can see, the drive letter properties are empty for my Mount Points and in the name column I can find the file and folder where they are mounted.<br />
So let&#8217;s find the space, free space and percentage free space of the volumes. I can use the calculations from my previous script only Size needs to be replaced with Capacity:</p>
<pre>get-wmiobject win32_volume -computer &lt;computername|
select name, label, @{Name="Capacity (GB)";Expression={$_.Capacity/1GB}},@{Name="FreeSpace (GB)";Expression={$_.FreeSpace/1GB}},
@{Name="FreeSpace (PCT)";Expression={$_.FreeSpace/$_.Capacity*100}} |
format-table</pre>
<p>The result now shows the drives and Mount Points with all the requested information:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/SysAdmins/FSMP4.JPG?mtime=1354195223"><img alt="" src="/wp-content/uploads/blogs/SysAdmins/FSMP4.JPG?mtime=1354195223" width="964" height="186" /></a></div>
<p>To be able to reuse the script I do what I did in the other two PowerShell post:</p>
<pre>param(
	[string] $compname = $(Throw "Provide a Server name as first parameter")
)
Get-WmiObject win32_volume -computer $compname |
select name, label, @{Name="Capacity (GB)";Expression={$_.Capacity/1GB}},
@{Name="FreeSpace (GB)";Expression={$_.FreeSpace/1GB}},
@{Name="FreeSpace (PCT)";Expression={$_.FreeSpace/$_.Capacity*100}} |
format-table</pre>
<p>End that&#8217;s it, the next request for free disk space is a matter of seconds again.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/sysadmins/os/windows/getting-remote-mount-point-information/#comments" thr:count="5"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/sysadmins/os/windows/getting-remote-mount-point-information/feed/atom/" thr:count="5"/>
		<thr:total>5</thr:total>
		</entry>
	</feed>
