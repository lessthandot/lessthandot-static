<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Policy and Standards &#8211; LessthanDot</title>
	<atom:link href="/index.php/category/itprofessionals/policystandards/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Kan U Spel?</title>
		<link>/index.php/itprofessionals/policystandards/kan-u-spel/</link>
		<comments>/index.php/itprofessionals/policystandards/kan-u-spel/#comments</comments>
		<pubDate>Tue, 05 Nov 2013 14:13:00 +0000</pubDate>
		<dc:creator><![CDATA[chopstik]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[Professional Development]]></category>

		<guid isPermaLink="false">/index.php/2013/11/kan-u-spel/</guid>
		<description><![CDATA[I admit that I am a bit of a spelling and grammar Nazi. It drives me to absolute distraction when I read something and notice a spelling mistake, particularly if it is on a "professional" site such as a news or business site. When I see something like t&#8230;]]></description>
				<content:encoded><![CDATA[<p>I admit that I am a bit of a spelling and grammar Nazi. It drives me to absolute distraction when I read something and notice a spelling mistake, particularly if it is on a &#8220;professional&#8221; site such as a news or business site. When I see something like that, I am unable to take the information on the site seriously. Perhaps I am a bit OCD but it is one of those things that says &#8211; &#8220;Get a copy editor before you hit the Publish button!&#8221;  88|  And, just in the interest of disclosure, I am not always great at editing my own work so I often will have someone else review it for me just to help ensure I haven&#8217;t missed something.</p>
<p>However, beyond what a site looks like (which I hope to cover in another blog post a bit later), there is something that, as a developer, still drives me to distraction. How often have you had to review work done by someone else to make modifications? And, within that code, how often have you seen spelling mistakes in the names of variables, functions or other objects in code that are meant to be re-used? For example, I came across this just recently &#8211; a SQL stored procedure with the name &#8220;Secuirty&#8221;. This is an obvious misspelling and one that can have significant consequences for other devs who may need to reference this particular SP. I, for one, will attempt to reference the SP &#8220;Security&#8221; and, when it fails, be at a complete loss as to why the object cannot be found. I will then have to stop my own development for some period of time to troubleshoot why my code doesn&#8217;t work. Perhaps it will be only 5 minutes to realize that some other dev can&#8217;t spell something so obvious, maybe it&#8217;ll take a few hours thinking the problem must be in my own code (I&#8217;ll never suggest that I&#8217;m a perfect coder and I always look to my own code first when I have a problem). Regardless, it&#8217;s wasted time on something that should be fairly simple.</p>
<p>Now, understand that I&#8217;m not criticizing developers who cannot spell. I&#8217;ve known more than a few who could spell no better than <a href="http://www.mcmillenandwife.com/bradshaw_quotes.html">Terry Bradshaw</a>, but in most of the shops I&#8217;ve worked in, there was some sort of review process or at least a developer lead who did code reviews before it was put into production. Things like this should be caught before code is put into production because, let&#8217;s face it, once the code is put into production, it&#8217;s nigh on impossible to fix later on because of later dependencies or interrelated code elsewhere in the applications (or even external apps that may call it such as in the case of services).</p>
<p>Maybe this is a small point to some but I believe it can have serious implications down the line. It speaks to a lack of professionalism in that something such as a simple misspelling can be perpetuated for the lifetime of an application. Equally important, it can lead to wasted time trying to troubleshoot a problem tied to a simple misspelled word in an application. When the ultimate point of an application is to make things easier, it seems rather oxymoronic (I&#8217;m pretty sure that is a word and, if it&#8217;s not, then I&#8217;m making it up now) that the process of creating a more efficient world is an inefficient process created by something as simple as a misspelled wyrd.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/policystandards/kan-u-spel/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Developing for the business and the user</title>
		<link>/index.php/itprofessionals/policystandards/developing-for-the-business-and/</link>
		<comments>/index.php/itprofessionals/policystandards/developing-for-the-business-and/#respond</comments>
		<pubDate>Thu, 05 Sep 2013 12:10:00 +0000</pubDate>
		<dc:creator><![CDATA[chopstik]]></dc:creator>
				<category><![CDATA[Other]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[Professional Development]]></category>

		<guid isPermaLink="false">/index.php/2013/09/developing-for-the-business-and/</guid>
		<description><![CDATA[Technology is a wonderful tool that should make all of our lives better - at least until Skynet takes over. But then I am hoping that this article will serve me in good stead with our new superior overlords.  :D
The problem, as you may have guessed by&#8230;]]></description>
				<content:encoded><![CDATA[<p>Technology is a wonderful tool that should make all of our lives better &#8211; at least until Skynet takes over. But then I am hoping that this article will serve me in good stead with our new superior overlords.  <img src="https://s.w.org/images/core/emoji/2/72x72/1f600.png" alt="😀" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>The problem, as you may have guessed by now, is that far too often we find that technology often frustrates us as much as it serves to benefit. Beyond the work software that we use that simply never functions as well as we think it should (Microsoft Office, anyone?) are the increasing multitude of apps that are available for pc&#8217;s, tablets and smartphones that either perform nowhere near to expectations or behave in odd fashions that we would not expect.</p>
<p>For example, I am an avid fan of Spotify, the streaming music service. I love it and have it installed on my desktop, laptop, iPad and now iPhone (as well as on my beloved Android that I recently exchanged for work reasons). It works wonderfully on my two computers. It is functional (in my opinion) on the iPad and similar on the iPhone (though I haven&#8217;t done as much with it there just yet) and flat out unusable on my old Android. Making it worse is the fact that I pay $10/month for this service and can&#8217;t really use it as well as I want on all of my devices. Yet, with a few tweaks (all of which I have found suggested on Spotify&#8217;s forums), I think it could be even better. I seriously considered giving up the service but continue to hold out hope that it will fix those last few issues to make it a better experience.</p>
<p>And, in the end, all of the software that we use is for the experience as much for the convenience. If we have a bad experience or the convenience is not what we think it should be, we are less likely to pay money for it again. This holds true for non-technical experiences (how many times have you gone <em>back</em> to a bad restaurant?) so it should not be a surprise that we increasingly expect our apps to be worth it as well. And when considering how many apps are developed, it should not be at all surprising how many fail because they are either not providing the experience that the user expects or do not perform in a manner to benefit the business.</p>
<p>It is critically important for the developers to recognize not just how to put an application together but to ensure that the user can have a positive experience from it on top of the expected convenience. Frustration with those apps will only end up reflecting poorly on the application and those behind it. Even if it accomplishes what the users want, an unpleasant experience will negatively color the reviews and ultimately the product. But if we make things that not only do what they&#8217;re expected to do but make for a pleasant experience (or, at the very least, leave no lasting negative experience), then those apps will succeed in every way.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/policystandards/developing-for-the-business-and/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Goodbye Google Reader, hello feedly</title>
		<link>/index.php/itprofessionals/policystandards/goodbye-google-reader-hello-feedly/</link>
		<comments>/index.php/itprofessionals/policystandards/goodbye-google-reader-hello-feedly/#comments</comments>
		<pubDate>Thu, 14 Mar 2013 18:50:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Book Review]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[feedly]]></category>
		<category><![CDATA[rss]]></category>

		<guid isPermaLink="false">/index.php/2013/03/goodbye-google-reader-hello-feedly/</guid>
		<description><![CDATA[Yesterday, the following was announced

We launched Google Reader in 2005 in an effort to make it easy for people to discover and keep tabs on their favorite websites. While the product has a loyal following, over the years usage has declined. So, on&#8230;]]></description>
				<content:encoded><![CDATA[<p>Yesterday, the following was <a href="http://googleblog.blogspot.com/2013/03/a-second-spring-of-cleaning.html">announced</a></p>
<blockquote><p>We launched Google Reader in 2005 in an effort to make it easy for people to discover and keep tabs on their favorite websites. While the product has a loyal following, over the years usage has declined. So, on July 1, 2013, we will retire Google Reader. Users and developers interested in RSS alternatives can export their data, including their subscriptions, with Google Takeout over the course of the next four months.</p></blockquote>
<p>Damn, I love my Google reader. Today my fellow LessThanDot member <a href="https://twitter.com/damber">damber</a> told me about feedly</p>
<p>Feedly exists for the following platforms and browsers</p>
<p>Feedly for iOS<br />
Feedly for Android<br />
Feedly for Chrome<br />
Feedly for Firefox<br />
Feedly for Safari</p>
<p>Feedly will connect to Google Reader and import all your stuff.<br />
I decided to give the Chrome plugin a try, here is what it looks like</p>
<p><a href="http://www.flickr.com/photos/denisgobo/8557317305/" title="Feedly list by Denis Gobo, on Flickr"><img src="http://farm9.staticflickr.com/8238/8557317305_14e215d534_z.jpg" width="640" height="330" alt="Feedly list" /></a></p>
<p>I also like the way you can organize the feeds, much better than Google reader IMHO</p>
<p><a href="http://www.flickr.com/photos/denisgobo/8557302843/" title="Feedly by Denis Gobo, on Flickr"><img src="http://farm9.staticflickr.com/8388/8557302843_80fc57076f_z.jpg" width="640" height="333" alt="Feedly" /></a></p>
<p>I am also very happy that the j and k keyboard shortcuts work</p>
<p>If you want to know more about feedly, check out this post http://blog.feedly.com/2013/03/14/google-reader/</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/policystandards/goodbye-google-reader-hello-feedly/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>Blogging Tip &#8211; Removing Sensitive Information from Images</title>
		<link>/index.php/itprofessionals/policystandards/removing-sensitive-information-from-images/</link>
		<comments>/index.php/itprofessionals/policystandards/removing-sensitive-information-from-images/#comments</comments>
		<pubDate>Fri, 04 Nov 2011 11:04:00 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[Professional Development]]></category>
		<category><![CDATA[Project Management]]></category>

		<guid isPermaLink="false">/index.php/2011/11/removing-sensitive-information-from-images/</guid>
		<description><![CDATA[One of the things that is fairly important when writing articles, blogs, whitepapers or even authoring books is ensuring you do not share any personal information in your screen captures.  This is even more important when you are using company property&#8230;]]></description>
				<content:encoded><![CDATA[<p>One of the things that is fairly important when writing articles, blogs, whitepapers or even authoring books is ensuring you do not share any personal information in your screen captures.  This is even more important when you are using company property to make your screen captures.</p>
<p>Now, on some occasions, leaving connections to SQL Server or Security context is ok.  For example, I’ve used Fred and God commonly as SQL Authenticated Logins to my instances.  Those two accounts are something I picked and kept to over the years.  This can be done with named instances also.  You can install and name a SQL Server something comical, meaningful or encrypted.  <em>“Connect to your instance named, SomeCrasyMessedUpMachineHolySmokesSQLIsCool”.</em></p>
<p>But getting back to topic; you really want to make sure you never leave a trace of anything that you do not purposely intend to use, like above.</p>
<p>Here is how I remove these potentially, incriminating names.</p>
<p>Download <a href="http://paint.net/">PAINT.NET</a>.  Paint.net is a free image editor that is extremely valuable.  For years I used Photo Shop and for years my wallet was empty due to it.  Now, Photo Shop does have a lot of very advanced options that Paint.net doesn’t but at my level for writing, those options will never be touched.  So Paint.net filled a hole where cost and needed abilities were completely met.</p>
<p>After installing Paint.net, I recommend installing the <a href="http://paint.net.amihotornot.com.au/Download/PluginsPack/">Megalo Effects Plugin Pack</a>. You get dozens of really cool effects and options for editing in more advanced ways.  For this tip, those will not be used but again, highly recommended.</p>
<p>Using Windows 7 Snipping Tool, take a screen capture of a login properties window opened from SSMS.  (Note: I marked out the real values in Server and Connection still. You can do that with Paint.net too!)</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-3.png?mtime=1320411554"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-3.png?mtime=1320411554" width="318" height="284" /></a></div>
</p>
<p>We’re going to edit Fred in this case.  The properties that we would not want to share to the public are Server and Connection.  These properties will show domain logins and SQL Server Instance names.  You would be surprised how many Server values I’ve seen that were full IP addresses that I could ping and I could actual connect to.  Those instances were placed online and exposed extremely poorly and a massive security risk to networks and even, home machines.</p>
<p><strong>Removal with Paint.net</strong></p>
<p>To remove these values, click the cropping icon in the Tools box in Paint.net.</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-4.png?mtime=1320411554"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-4.png?mtime=1320411554" width="67" height="97" /></a></div>
</p>
<p>Now, select the area you need to remove and hit Delete on your keyboard.</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-5.png?mtime=1320411554"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-5.png?mtime=1320411554" width="276" height="171" /></a></div>
</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-6.png?mtime=1320411554"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-6.png?mtime=1320411554" width="235" height="145" /></a></div>
</p>
<p>We need to make this look better because the world is going to see it.  To do this we want to first, sample the color area that the value we just removed was in and then using the paint bucket, fill that area with the selected color.</p>
<p>Select the Color Picker icon in the toolbox</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-7.png?mtime=1320411554"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-7.png?mtime=1320411554" width="91" height="99" /></a></div>
</p>
<p>Move the color picker over the gray area next to Server: and click the area.  This selects the color exactly the way it is in the image.</p>
<p>Next, select the Paint Bucket icon in the toolbox.</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-8.png?mtime=1320411610"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-8.png?mtime=1320411610" width="77" height="98" /></a></div>
</p>
<p>Move the paint bucket icon over the areas that were cropped and click the area.</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/-9.png?mtime=1320411611"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/-9.png?mtime=1320411611" width="245" height="133" /></a></div>
</p>
<p>Perfect!</p>
<p>At this point you have a clean image that is not distracting to what you are trying to write about and looks professional.</p>
<p>Happy writing!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/policystandards/removing-sensitive-information-from-images/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Being a finalist for the Exceptional DBA of the Year</title>
		<link>/index.php/itprofessionals/ethicsit/exceptional-dba/</link>
		<comments>/index.php/itprofessionals/ethicsit/exceptional-dba/#comments</comments>
		<pubDate>Fri, 25 Jun 2010 16:36:13 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Ethics and IT]]></category>
		<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[community]]></category>
		<category><![CDATA[exceptional dba of the year]]></category>
		<category><![CDATA[help]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2010/06/exceptional-dba/</guid>
		<description><![CDATA[This week brought one of the highest achievements in my career and community work.  On June 23rd it was announced by Red Gate and SQL Server Central that I had made it into the finalists for the Exceptional DBA of the Year award.  WOW!  Every time I say it, I still get that feeling in my gut only certain things that you are truly emotional about can bring.]]></description>
				<content:encoded><![CDATA[<div class="image_block"><img src="/wp-content/uploads/blogs/ITProfessionals/dba_year.gif" alt="" title="" width="180" height="79" /></div>
<p>This week brought one of the highest achievements in my career and community work.  On June 23rd it was announced by Red Gate and SQL Server Central that I had made it into the finalists for the Exceptional DBA of the Year award.  WOW!  Every time I say it, I still get that feeling in my gut only certain things that you are truly emotional about can bring.  </p>
<p><strong>June 23rd, 2010</strong></p>
<p>The morning that the announcement went out I was completely blown away, not only by the nomination, but by the reactions and support from the SQL Community.  Twitter, personal email, IM, Facebook, Linkedin and every other online communication method had messages congratulating me on this remarkable accomplishment and wishes for luck on winning. </p>
<p>This was also the day I was able to see who the other finalists were.  I was more than pleased to see Jorge Segarra (<a href="http://sqlchicken.com/">Blog</a> | <a href="http://twitter.com/sqlchicken">Twitter</a>) and Jonathan Kehayias (<a href="http://sqlblog.com/blogs/jonathan_kehayias/">Blog</a> | <a href="http://twitter.com/sqlsarg">Twitter</a>) in the final six.  Jorge is a leader in the SQL Community.  I could easily see that from the creation of SQL University and when I was lucky enough to have him come speak at SQL Saturday in Chicago.  Jonathan is another person that the word exceptional fits with without a doubt.  I’ve been very fortunate over the last few months to get to know him better and, for my part, call him a friend.</p>
<p>I&#8217;m still reading about Kevan Riley, John Burnette and Tracy Hamlin.  I can guarantee that these other three finalists are nothing short of exceptional simply by making it to this accomplishment as well.  I hope to meet all of them at PASS or in their local areas during SQL Saturday’s or SSUG’s. </p>
<p><strong>How did I get here?</strong></p>
<p>I have to thank Rose Waters (<a href="http://twitter.com/sqlrose">Twitter</a>) dearly.  Rose works on my team as a SQL Developer, and she is a great one at that.  She nominated me for this award which means more to me than I can express in a blog.  The one thing I strive for is to help the people around me, and try to create an atmosphere that we all want to come into daily.  The fact that Rose did this for me means I’m doing a good job at that goal.  Every time I hear Rose is attending User Groups meetings, posting on <a href="http://twitter.com/#search?q=%23sqlhelp">#SQLHELP</a> and interacting with the community I get a huge smile.  To help Rose and others get involved in this awesome community is the most important goal I have and can accomplish for myself. </p>
<p align="center"><strong>Thanks Rose!!!!</strong></p>
<div class="image_block"><img src="/wp-content/uploads/blogs/ITProfessionals/thanks.gif" alt="" title="" width="200" height="133" /></div>
</p>
<p><strong>The week in play</strong></p>
<p>The week following the announcement has been nonstop jaw dropping events.  The next day, my Google alerts had blown up on me and I was off looking at how big this nomination was.  Several news sites had announced the start of the community voting process, and many of the people I look up to and have a very high level of respect for had blogged on the announcement.  I found that even CNBC had the announcement the next day.  Each day brought another jaw dropping moment.  Thursday, I received a call from my local news paper.  The reporter had found out about the award and nomination, and wanted to report on the news in the weekends publications.  At this point I’m still just amazed at this entire nomination. </p>
<p><strong><a href="http://www.red-gate.com/">Red Gate</a> and <a href="http://www.sqlservercentral.com/">SQL Server Central</a></strong></p>
<p>I feel the Exceptional DBA of the Year award that Red Gate and SQL Server Central have created is the utmost prestigious award in the SQL Server field.  To be a finalist is an honor and accomplishment.  The part of this nomination that is most special to me is that my peers are doing the nominating and voting.  There is no more gratifying feeling and reward than knowing your hard work is respected by so many others and you have helped them with their own growth in the community and personal careers.    That is, without a doubt in my mind, the power of the SQL Community.  We stand together and support each other no matter who the other person is.  In my mind, we are all exceptional in that way. </p>
<p><strong>Cast Your Vote!</strong></p>
<div class="image_block"><img src="/wp-content/uploads/blogs/ITProfessionals/vote.gif" alt="" title="" width="200" height="168" align="left" /></div>
<p></p>
<p>Winning this award would be one of the highest accomplishments possible in my career. I’d love to say, “Vote for me!” But, what I sincerely would like everyone to do is take a few minutes and read about all of the finalists. If you don’t know one of them from the community or personally, take a few minutes to research and find out what they have accomplished in their career. They have made it this far, and deserve the attention and recognition. Each of these DBAs is exceptional. It’s a hard decision, but do your best to vote for the person you truly feel is the most exceptional.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/ethicsit/exceptional-dba/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>
		</item>
		<item>
		<title>There Is Never Time For &#8230; (Part 3)</title>
		<link>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-3/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-3/#respond</comments>
		<pubDate>Wed, 21 Apr 2010 11:24:43 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[process improvement]]></category>
		<category><![CDATA[waste]]></category>

		<guid isPermaLink="false">/index.php/2010/04/there-is-never-time-for-part-3/</guid>
		<description><![CDATA[Our ticket counts are down, the systems are failing less often, and we&#8217;re reporting regular corrective actions to the business instead of just patches. Fixing issues as they occur, even root cause correction, is a process of stabilization. I&#8217;m not sure about you, but I don&#8217;t like aiming for average. This is the third article [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Our ticket counts are down, the systems are failing less often, and we&#8217;re reporting regular corrective actions to the business instead of just patches. Fixing issues as they occur, even root cause correction, is a process of stabilization. I&#8217;m not sure about you, but I don&#8217;t like aiming for average.</p>
<p><em>This is the third article in a three part series on major gaps that we never seem to have the time to address as well as ideas on how to overcome and initiate processes for closing or reducing those gaps. Each article is based on one high-level subject and provides ideas on how to gain individual and group level traction.</em></p>
<p>We will initially cover some key concepts in Process Improvement and Lean, then jump right into a PC Request process that is modeled on a real process I have worked with in the past&#8230;and in one pass we will cut the PC ordering process in half.</p>
<h2>Firefighting Is Not Our Job</h2>
<p>Whether you&#8217;re patching surface issues or solving root cause problems, all you&#8217;re doing (in the paraphrased words of <a href="http://en.wikipedia.org/wiki/W._Edwards_Deming" title="More on Dr Deming at Wikipedia">Dr William E. Deming</a>) is catching the systems back up to either where they were or where they should have been. In the meantime, those services that support the company cost money while time and technology continues to improve and change the way competitors are doing their business.</p>
<p>On top of the inexorable march of technology there is a certain level of waste that accrues in every process. As time goes by small steps are added to processes that make sense at the time, but aren&#8217;t really necessary long term or could be minimized with the advent of other new policies, long practice, or new ideas. These wastes can consist of extra costs, time, movement, or even poor quality work and reducing the wastes can not only reduce costs but more importantly unlock more of our (and others) time. And just like improving one&#8217;s own skills and trying to standardize common operations, the benefit of starting process improvement is hard to quantify and requires time that we think we don&#8217;t have.</p>
<h2>Seven Wastes</h2>
<p>The philosophy of Lean (or Lean Manufacturing) categorizes <a href="http://en.wikipedia.org/wiki/Lean_manufacturing#Types_of_wastes" title="Seven Wastes at Wikipedia">seven types of waste</a>:</p>
<dl>
<dt>Waiting</dt>
<dd>Any time there are delays between the steps of a process we are creating waste. Delays between steps when no one is working on the task cause us to have to try and see farther into the future and provide people with longer quotes than they will be happy with. Plus it gives people more time to make minor changes or additions to their request, potentially requiring us to redo part of the work we had already completed.</dd>
<dt>Overproduction</dt>
<dd>Spending time and resources producing more of something than a company needs is a waste. That same time could have been spent doing absolutely nothing or, better, working on something that had direct value to the business. If we built or acquired something physical, then we also get a sneaky secondary waste because now we have to use up valuable space to store that item.</dd>
<dt>Unnecessary Motion</dt>
<dd>Excess walking, stretching, lifting, etc is not only a concern for safety reasons, but also a potential form of waste. As you walk back and forth to the same place 10-15 times a day consider how much time you could save if it was a shorter walk or no walk. Considering the focus many of us are required to bring to our tasks, consider how much smoother they would be if we weren&#8217;t constantly stepping out of our zone to go walk somewhere and back again.</dd>
<dt>Unnecessary Inventory</dt>
<dd>Excess inventory in the IT world is not just excess equipment, but can also mean excess tasks waiting on their next step. One example would be a backlog of new equipment that is waiting for OS and software installs before it can be usable, another would be a backlog of software tasks that are waiting on QA to validate them. There are costs involved in having unnecessary inventory of anything, physical equipment takes up valuable space and time to inventory and manage, tasks that are sitting around require more extensive tracking and management procedures and start getting in the way of other tasks that are coming in.</dd>
<dt>Over Processing</dt>
<dd>When the tool being used causes more work than should be necessary to complete a job, then we are in the realm of overprocessing. This waste can range from tools being poorly located in relation to one another, using more tool than is necessary for a job, and potentially overuse of the wrong tool simply to justify the expense in purchasing it. When we try to make a tool do a job it isn&#8217;t good at, we waste time and money with a risk of greater defect rates in our process or end unit.</dd>
<dt>Transporting</dt>
<dd>Excessive movement of a product or task is wasteful of time and risks additional wear, damage, or potential loss of the product or task. Even in development there is waste in transporting a task to QA and back multiple times and understanding why that task is going back and forth, which is why many Agile shops suggest collocation.</dd>
<dt>Defects</dt>
<dd>Making bad or incorrect products is a waste of the time and energy that went into making that product. Completing a task incorrectly or applying the wrong correction in response to a help request is also a waste of time and energy. Any time that we execute the wrong task or produce poorly, we are going to spend more time to determine it was the wrong thing, possibly why it was the wrong thing, and then how we can correct it or start again from the beginning. Doing this occasionally is waste, doing it regularly is an ongoing failure.</dd>
</dl>
<p>Seven wastes. How many of these looked familiar? Would you be surprised if I told you studies had shown that service businesses often ran at the 30-80% waste level? (<a href="http://www.amazon.com/Lean-Six-Sigma-Service-Transactions/dp/0071418210" title="View book at Amazon">Lean Six Sigma For Service, Michael L. George</a>) What if your department was on the best side of that curve and could only manage to reduce waste by half, would a 15% improvement in cost or time be worth it? Reduced times from requests coming in to requests being fulfilled? What if your competitor did it?</p>
<h2>Process Improvement</h2>
<p>There are a lot of process improvement tools out there, as well as a number of methodologies. Lean and Six Sigma, the two I am most familiar with, focus on waste reduction and process quality improvement respectively. Lean has a number of tools for identifying wastes in a process and evaluating them, while Six Sigma brings us tools for measuring the quality of a process and improvements to that quality. Being an expert at neither of these methods, I am instead going to outline some basic methods for evaluating a process and trying solutions.</p>
<h3>Evaluating a Process</h3>
<p>When you are first starting out it will be easier to pick processes that you know are running slowly or that the business is commonly upset with. Later, once you have a bit more experience and a track record to show people, you should involve people that are directly interacting with IT processes and enlist them to help you find wastes in processes. Generally the people actually executing a process have a good idea when it isn&#8217;t working, however it is important to start evaluating without an end solution in mind. Many times when we can identify problem areas we think we already have a solution, only to find something an order of magnitude better during our improvement process.</p>
<p>Select a process that is commonly considered slow or costly to perform. Starting at the beginning of the process, for instance when the request is generated or when a system triggers a process, draw each step the task goes through on it&#8217;s way to completion and communications of that completion. At each step write down the average amount of time (you could also choose to write down the maximum, just be consistent). What you should end up with is something like this:</p>
<div style="text-align: center; color: #666666; ">
<img src="http://tiernok.com/LTDBlog/nevertime_workflow.png" alt="Sample Workflow Diagram" /><br />
Diagram #1: Partial sample workflow of PC request process
</div>
<p>In our example workflow it takes almost 20 days from the first request to actually get hardware in so we can start installing software. At each step in the diagram we should be asking ourselves what value is provided by the step and why it takes as long as it does. For example, the most obvious items on the diagram are probably the time for filling out the form and generating the PO. Cutting those two in half would be a 13% improvement in the process time from the request to getting the equipment in. But lets look at a couple more, what value does it provide for the IT Manager to sign off on both the request and the Purchase Order Request? What value does it provide to quote each PC request individually? We now have 4 items to work on improving. </p>
<h3>Improving a Process</h3>
<p>So we have some targets to start improving on from our example above. The simplest tool for reducing the waste of a step in the process is to understand the purpose of the step. By understanding the purpose we can start paring away some of the waste that has attached itself to the process over the course of time. Each step should be evaluated against the goal of the process and determine what part (if any) actually provides some value towards that goal. </p>
<p><em>I like using the 5-Why process to dig into processes, it is simple, direct, and gets good results. A good article can be found <a href="http://lssacademy.com/2010/01/10/introducing-the-5-why-“so-what”-test/" title="View the article at LSS Academy">here</a>.</em></p>
<h4>Example 1) The Request Form</h4>
<p>The request form takes 2 days to fill out on average, partially because the end user has to ask a lot of questions about values on the form and partially because it&#8217;s so long it takes a day to get up the energy to get started. The value it provides is a clear checklist of everything the end user thinks should be on the final PC.<br />
Normally people would look at the situation and ask if we could simplify the form, build a system, or better educate the end users. I would go one step further, can we get rid of the form? What if we created a standard configuration for each department and a standard list of applications for each management position? It still isn&#8217;t perfect, but would it be closer or farther then having the end user try to create the list for us for each individual PC?</p>
<h4>Example 2) Generating the PO</h4>
<p>The process of generating a PO currently takes 3 days. We identify the value of this process as having the funds to purchase the requested PC. Unfortunately we have over-simplified the process of generating a PO by making it only one step in our diagram and I am sure the person responsible for generating them would have a few words to say about that. Instead of trying to guess, walk down and have a conversation with them. If possible map out the process they are going through, from receiving a request to completion of the PO. If you can get them on board and reduce the process, then you will be making a company wide improvement and I expect to see &#8220;Cross-Functional Process Improvement reduced processing of Purchase Orders by 50% company-wide&#8221; on your year end list of achievements. For the mean time, lets put this one to the side, as we won&#8217;t be able to fix it until management sees some good savings from process improvement and we&#8217;ve built up a little credit.</p>
<h4>Example 2b) Generating the PO</h4>
<p>Wait, what? Again?<br />
While we could help the PO process improve, our goal today is to try and improve our example process, so lets look again at what value we are achieving. Earlier we identified the value as being able to purchase the PC. Can we standardize a little? How much of our PC purchases fall into a pattern? We&#8217;ve undoubtedly budgeted for a certain degree of computer equipment throughout the year based on expected labor growth or turnover, would finance allow us to create blanket POs to cover this expense? If we could standardize these PC purchases and use blanket POs, then we have all the value with no cost to this process. A blanket order for new hires and a second for PC replenishment would could cut out 4 Days, approximately 20% of the current process.</p>
<h4>Example 3) IT Manager Sign-off</h4>
<p>Assuming we hadn&#8217;t simplified the Purchase Order process yet, we had two different instances for the IT Manager to sign-off and in both cases it is taking him/her a day to do so. Before we jump into color-coding labels or special desk trays, lets take a step back and look at why they are signing twice. Is the first signature necessary? What value is it providing? If it is simply an acknowledgment of the request, do they need to do it or can they delegate that to the person processing the request? Potentially 1 day removed (5%). Did we remove the need for the per-order PO? Then that 1 day is definably removed.<br />
And that&#8217;s one less item to bug your manager about in your weekly meeting. Less stressed managers are happy managers, happy managers are much better than the alternative.</p>
<h4>Example 4) Quoting the PC </h4>
<p>What is the value of quoting the PC? Finding out how much it will cost. Going back to our second example, is there any way we could create some standards? How many PCs models do you need? Most vendors are willing to help you build a standard set of PCs with consistent quotes. Does each individual member of the company need their own special setup, or would a few standard models suffice? If the value of this step is to determine the cost and we can create some standard model configurations, then we just removed the custom quote step and reduced delivery time by another 2 days (or 10%). </p>
<h3>Results</h3>
<p>In our example above we saw the potential for reducing the first half of our new equipment process by almost 50%. These types of numbers are just as achievable in the real world as they are in the example, the difference is going to be that the real world will have more strange extra steps involved and it isn&#8217;t always possible to completely replace or remove a step. Focus on adding value to the final deliverable and try replacing complex systems with simple ones. Sometimes all it takes to cut a couple days off a process is to have a labeled tray on someones desk or a clear plastic pouch to put documents in on their front door.<br />
As we make improvements we need to communicate them to the wider company. By continuing to pare away at the wastes inherent in your processes, your area (and the company) is going to be running more smoothly and more effectively. </p>
<p>The next step is to grow the process, to be an agent of change in your business. There are others that are or will be interested in continuous improvement, but as you start to widen the scope you need to get buy-in from managers and executives. Having real-world examples of the savings the company has already achieved is going to be a strong argument for taking time away from day-to-day tasks and applying it towards a cultural shift that is an investment in <a href="http://dailykaizen.org/archives/792" title="How do you calculate ROI? You don't!">an unknown ROI</a>.</p>
<h2>Why Improve&#8230;</h2>
<p>While it may take more research and thought to identify wastes and start improving your environment, while it may seem easier to simply stand still and keep throwing more technology at problems as they appear, remember that there are companies adopting practices for improvement as part of Agile, Lean, and other cultural shifts. At the worst you will be increasing your effectiveness, decreasing costs, and improving your understanding of the business, at the best you could be starting a company-wide culture shift that requires managers to shift towards leadership and servant-leader roles, requires greater levels of respect for non-managers from the business, and enables businesses to provide high quality results at competitive prices, even when those competitors are offshore at much lower wages.</p>
<p>And the last benefit? Most of us are in our jobs because we like identifying problems and finding solutions for them. Process Improvement is just one more playground that we have available to us, with new and interesting problems that generally benefit from the simplest, most elegant solutions you can come up with. Sure, you&#8217;re going to have to get up and talk to people. But they will be looking for you at some point anyway, so we might as well save some money, sharpen our skills, and head out to meet them first.</p>
<p>Miss an article in the series?<br />
There Is Never Time For &#8230; <a href="/index.php/ITProfessionals/ITProcesses/there-is-never-time-for-part-1" title="Read the first article in the series">Part 1: Training and Development</a><br />
There Is Never Time For &#8230; <a href="/index.php/ITProfessionals/ITProcesses/there-is-never-time-for-part-2" title="Read the second article in the series">Part 2: Standard Processes</a><br />
There Is Never Time For &#8230; <em>Part 3: Process Improvement</em></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-3/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>There Is Never Time For &#8230; (Part 2)</title>
		<link>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-2/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-2/#respond</comments>
		<pubDate>Fri, 09 Apr 2010 13:37:24 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Policy and Standards]]></category>

		<guid isPermaLink="false">/index.php/2010/04/there-is-never-time-for-part-2/</guid>
		<description><![CDATA[So we might have some idea on how to improve our skills and knowledge, but it still takes 20 minutes to find a specific switch in the cabinet, the last time a server lost a fan we didn&#8217;t find out until after it overheated, and we have no idea how many licenses we have purchased. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>So we might have some idea on how to improve our skills and knowledge, but it still takes 20 minutes to find a specific switch in the cabinet, the last time a server lost a fan we didn&#8217;t find out until after it overheated, and we have no idea how many licenses we have purchased. And we&#8217;ll figure it all out right after I finish this next help desk ticket.</p>
<p><em>This is the second article in a three part series on major gaps that we never seem to have the time to address as well as ideas on how to overcome and initiate processes for closing or reducing those gaps. Each article is based on one high-level subject and provides ideas on how to gain individual and group level traction.</em></p>
<h2>[Coding|Provisioning|Reporting|&#8230;] Standards</h2>
<p>It&#8217;s always easy to put off little tasks until later. Labeling new equipment, updating a diagram of a wiring cabinet or server rack, creating monitors for performance and temperatures, testing your backups. Ok, some of these are less than small, and yet we continue to put them off.<br />
Take a moment and list two or three items you would like to make part of your process for deploying new code, new servers, new databases, new (whatever you do all day long). Ok, now open up your calendar and look forward to the next month, two months, 6 months&#8230;where is the reminder that your going to start doing that task, that your going to go back and do it for all the work you have completed to date? Yeah, thought so. This isn&#8217;t a &#8220;one day&#8221; task, it&#8217;s a &#8220;Never would have done it&#8221; task. Remember, I&#8217;ve been there too. </p>
<h3>Step 1: Make a Standard</h3>
<p>The first step is to write it down. Creating a &#8216;standard&#8217; is going to be difficult, we naturally shy away from writing these things down because writing is powerful and once it&#8217;s written down we feel committed. On the other hand, we want it to get done, so that power that makes us nervous is also going to help strengthen our self-discipline and get it done.<br />
Keep your standard as simple as possible. The more complex your standard is, the harder it will be to actually go out and follow it. if you later find items that need to be added, you can add them, but make do your best to keep it simple and to only add things that are actually practical (both in doing and in result). A simple standard is easier to follow and takes less time, letting you build good habits with less effort.<br />
<em>For instance, if this is a server deployment standard, list the standard set of software that has to be installed on every server, the standard settings that have to be changed, the services that have to be enabled, an item to ensure it is added to the backup schedule, and one or two of the items you pretended to list earlier when I asked (like monitoring).</em><br />
After building your simple standard you should have a list of X things you already do plus one or two you always thought you should do or, when it broke, wished you had done. Save that document and each time you go to execute the task print off a copy and use it as a checklist. </p>
<h3>Step 2: Revise your Standard, Review your Process</h3>
<p>Next add a recurring appointment (once a month or once a quarter) to your calendar to spend 15 minutes reviewing your standard. During this scheduled time you will first assess how well you are following the standard. If there are lines you are skipping then try to root cause the issue and figure out why you are skipping them. If you end up back at &#8220;there is never time for..&#8221; then go back and review the reasoning for why you wanted to do it in the first place. If a 5 minute task for each server is going to prevent outages and millions in losses, it&#8217;s going to be a little harder to make a case for not doing it.<br />
After reviewing how well your doing each line, remove any lines you have determined were wasteful or are no longer necessary and add some additional items to the list. Again, keep your standard in a list format so you can easily use it as a check list to make sure your following your standard process, but also make sure there is enough description that a co-worker would be able to duplicate your process.</p>
<h3>Step 3: Do It</h3>
<p>Make it happen. You have a written standard and if you need further help staying on the straight and narrow then here are some more ideas:</p>
<dl>
<dt>Tell Your Boss</dt>
<dd>You have a reason you&#8217;ve created this process and your boss probably remembers the last time it cost time, money, or resources to solve a problem that could have been sidestepped. If you can convince them of the importance of your standard then they will also provide some extra [incentive|[pressure|etc] in making sure you follow it.</dd>
<dt>Tell Your Co-Workers</dt>
<dd>They&#8217;re going to think your crazy, so again you will need to remind them how x minutes of work is going to save the group from that issue that happened in the middle of the night back when. If the group will be sharing responsibility then you not only want to share the standard with them, you probably want to include them in it&#8217;s inception. You don&#8217;t have to have everyone in a room together, but you can get them to agree it&#8217;s a good idea and offer to build s starter standard that can be revised later. Remember, keep it simple so you can build good habits, later on the group can argue for a 50-page list of items.</dd>
<dt>Hold Yourself Responsible</dt>
<dd>Add an [annual|quarterly|whatever] goal to deliver the results of the process. Take the overall issue your trying to resolve (time involved in finding switches during outages, potential costs if a server fan goes out, cost to fix a code defect after it has been deployed, etc) and create a goal that says you will reduce that issue and will do so by implementing and following a standard. A good businessy goal is something your department can report directly up the chain and should be listed on your achievements for year-end review. Worst case, if you find a previously unknown issue that prevents you from reaching the goal, you can still claim success in making savings as well as uncovering a potential dangerous and unknown issue that the department can now work on resolving.</dd>
</dl>
<h2>Discipline</h2>
<p>To many of us it probably sounds crazy to voluntarily create a standard and make more work for ourselves, but it&#8217;s the greater path of laziness. If we can convince ourselves to have the discipline to identify and execute those little tasks, it will mean fewer 3AM phone calls, fewer stress-filled outages, and fewer year-end inventories audits and other time consuming (and sometimes painful) activities. When you start looking at the number of risks and the amount of unplanned events you can avoid, suddenly the extra 10 or 20 minutes every few weeks, months, or years doesn&#8217;t seem like so big a deal. But you have to do it, each and every time. Half the job is usually not going to net you half the results, so be disciplined enough to do it every time. If part of a task has to be put off due to an emergency deployment, schedule a meeting reminder to finish it later that day. If your a heavy procrastinator, like me, then remind yourself constantly than it is lazier to do that 5 minute task now then to take a 4AM call. Make it happen.</p>
<h2>Next &#8211; Part 3</h2>
<p>There is never time to sit and reflect on how your job gets done, experiment to find better ways, or attend non-technical training to improve your team or processes. In fact, if only you could reduce the time you spend on such-and-such task, you might finally have the time to focus on that. Hmm, chicken and egg. </p>
<p>Miss an article in the series?<br />
There Is Never Time For &#8230; <a href="/index.php/ITProfessionals/ITProcesses/there-is-never-time-for-part-1" title="Read the first article in the series">Part 1: Training and Development</a><br />
There Is Never Time For &#8230; <em>Part 2: Standard Processes</em><br />
There Is Never Time For &#8230; <a href="/index.php/ITProfessionals/ITServiceManagement/there-is-never-time-for-part-3">Part 3: Process Improvement</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>There Is Never Time For &#8230; (Part 1)</title>
		<link>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/#comments</comments>
		<pubDate>Thu, 01 Apr 2010 10:01:17 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[cost reduction]]></category>
		<category><![CDATA[initiative]]></category>
		<category><![CDATA[productivity]]></category>
		<category><![CDATA[training]]></category>

		<guid isPermaLink="false">/index.php/2010/04/there-is-never-time-for-part-1/</guid>
		<description><![CDATA[There is never time for training, or to make sure the servers have the right background image, or to make a monitoring script to send emails when certain schema changes occur in the database, or to improve the feedback loop on quarterly goals, or to change that dreadful change management form to streamline the process. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>There is never time for training, or to make sure the servers have the right background image, or to make a monitoring script to send emails when certain schema changes occur in the database, or to improve the feedback loop on quarterly goals, or to change that dreadful change management form to streamline the process. Unfortunately the deep, dark secret is that in 6 months we&#8217;re going to be saying the same thing, &#8220;There isn&#8217;t time now, we&#8217;ll do it later&#8221;.</p>
<p><em>This is the first article in a three part series on major gaps that we continue to put off until we have &#8220;time&#8221;, a magical state that never seems to occur on it&#8217;s own. Each article is based on one high-level subject and provides ideas on how to gain individual and group level traction and make now that &#8220;time&#8221;.</em></p>
<h2>Training and Development</h2>
<p>Training and development seem to be the easiest items to put off until later. Training in our field is critical in timing and content. If we are not constantly honing and growing our skills then we are actually degrading in both ability and the level of opportunity we provide our companies. What&#8217;s worse, you&#8217;re not only performing at lesser levels, but everything you produce with degraded skills is going into production with higher maintenance costs, is not likely to be redone in a hurry with newer technology, and is possibly putting you at a competitive disadvantage. </p>
<p>Times are tough right now and there are still many businesses that don&#8217;t understand the speed with which our various technical landscapes are changing. Instead of waiting for your company to provide training, here are some other ideas on how to improve your skills without breaking the bank:</p>
<dl>
<dt>Lunch and Learn</dt>
<dd>Lunch and Learns don&#8217;t have to be official and don&#8217;t have to be large. Get sign off from your manager, gather some co-workers, and take a slightly longer lunch once every week or two. Take turns researching a new topic and presenting it to the group. Extra technology lpus presentation practice, double win. Out of ideas or research time occasionally? Webinars are occurring on every topic imaginable> Watch in a group, discuss, and try along with the video as ateam.</dd>
<dt>Webinars</dt>
<dd>Can you say free training from top-level talent? More obscure interests may be harder to find specific webinars for, but Microsoft has tons of saved videos, <a href="http://www.sqlpass.org/" title="Visit the PASS website">PASS</a> virtual chapters offer webinars every week or two, and so on.</dd>
<dt>Experimentation</dt>
<dd>Make a list of 5 major new technologies and take it to your boss. Explain that you would like to spend 4 hours a month (or a week, or whenever) working in a lab environment. It might take some negotiation, so make sure you bring some articles of companies that are making a great deal of money off those technologies, saw savings in time or resources from the technologies, or lost vast tracts of their business from diving on a technology without researching it first. Make sure you aren&#8217;t just playing with these new toys, try to solve actual problems with them or create new services for existing products.</dd>
<dt>Articles</dt>
<dd>Have you set up an RSS feed reader? Drowned in the results and stopped reading? Time to try again. Instead of trying to read everything new that comes in, give yourself a goal of reading 1-2 articles a day. Read those one or two then mark everything else as read and repeat the next day. The goal isn&#8217;t to read everything published every minute of every day, it&#8217;s to find 1-2 good articles each day that make you think, expand your skills, or simply present a different outlook or opinion. One article a day is five articles in a work week, is 20 articles a month. Set a goal and achieve it, don&#8217;t let the feeds drown you.</dd>
<dt>Forums</dt>
<dd>This was my secret weapon 7-8 years ago. I had a technical forum account and I started by answering beginner and mid-level questions. As I saw other questions come up I would be interested in their answers or in finding the answers myself. I pace setup on a home PC to try out potential answers I found and answers others suggested. Like a workout routine, I set time aside to visit and answer questions and grew my knowledge incrementally. Also like a workout routine, this doesn&#8217;t have to be a daily habit, just a regular one.</dd>
<dt>Peer Review</dt>
<dd>Some developers already do this and it&#8217;s a tactic we can all take advantage of. That co-worker beside you? yeah, they know something you don&#8217;t know. And guess what, you probably know something they don&#8217;t know. Convince them to sit behind you for a little while, and vice versa. They are going to not only point out that you hit the backspace key 50 times per minute, but also that they do certain tasks slightly differently, or had a different understanding. And while it may seem slower to have someone sit behind you for a few hours insteda of working on their own, keep in mind that if they come up with one shortcut that saves you 10 minutes a day, you just bought an entire extra week of productivity a year (~48 weeks * 5 days * 10 minutes / 60 minutes = 40 hours).</dd>
<dt>Blogging</dt>
<dd>&#8220;Wait, writing stuff makes me better? That seems backwards.&#8221; Starting to write regular blog entries on technology or your professional interests will force you to focus your thoughts and find new ways to present them. You will end up doing random internet searches that provide you with more knowledge, you will work harder to form your thoughts and experiences into words that other people can (hopefully) understand. In short, you will be getting more out of the experiences and knowledge you already have and keeping those skills sharpened even when you aren&#8217;t actively using them.</dd>
</dl>
<h2>Initiative</h2>
<p>These are just a few ideas, I&#8217;m sure if you spent a few minutes you could expand on them and even come up with others that I didn&#8217;t think of. The key factor, though, is that you have to take the initiative to make these happen. Waiting for someone to budget some extra training time or to setup one of these programs for you is likely going to leave you exactly where you are right now. Pick one of these that seems easy, determine your next step and commit. Now write it on a post-it, tell a co-worker, heck post it down below and tell us all what you will start doing in the next 24 hours (or 6, or now) to keep and improve your edge.</p>
<h2>Next &#8211; Part 2</h2>
<p>We can&#8217;t keep waiting for a CPU to fry from a failed fan, a 3AM outage from a full disk drive, or for database to corrupt before we find out no one has been switching out the tapes. Get your training and developmental tasks started, the next article is going to bring another gap&#8230;and another challenge.</p>
<p>Miss an article in the series?<br />
There Is Never Time For &#8230; <em>Part 1: Training and Development</em><br />
There Is Never Time For &#8230; <a href="/index.php/ITProfessionals/ITProcesses/there-is-never-time-for-part-2">Part 2: Standard Processes</a><br />
There Is Never Time For &#8230; <a href="/index.php/ITProfessionals/ITServiceManagement/there-is-never-time-for-part-3">Part 3: Process Improvement</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Office Inspiration Quotes</title>
		<link>/index.php/itprofessionals/ethicsit/office-inspiration-quotes/</link>
		<comments>/index.php/itprofessionals/ethicsit/office-inspiration-quotes/#comments</comments>
		<pubDate>Fri, 03 Oct 2008 15:20:58 +0000</pubDate>
		<dc:creator><![CDATA[damber]]></dc:creator>
				<category><![CDATA[Ethics and IT]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Policy and Standards]]></category>
		<category><![CDATA[inspiration]]></category>
		<category><![CDATA[quotes]]></category>

		<guid isPermaLink="false">/index.php/2008/10/office-inspiration-quotes/</guid>
		<description><![CDATA[A few tag lines for your motivational posters at work&#8230; Rome did not create a great empire by having meetings, they did it by killing all those who opposed them. If you can stay calm, while all around you is chaos&#8230; then you probably haven&#8217;t completely understood the seriousness of the situation. Doing a job [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>A few tag lines for your motivational posters at work&#8230; </p>
<ul>
<li>Rome did not create a great empire by having meetings, they did it by killing all those who opposed them.</li>
<li>If you can stay calm, while all around you is chaos&#8230; then you probably haven&#8217;t completely understood the seriousness of the situation. </li>
<li>Doing a job RIGHT the first time gets the job done. Doing the job WRONG fourteen times gives you job security. </li>
<li>Eagles may soar, but weasels don&#8217;t get sucked into jet engines. </li>
<li>Artificial Intelligence is no match for Natural Stupidity </li>
<li>A person who smiles in the face of adversity&#8230; probably has a scapegoat. </li>
<li>Plagiarism saves time. </li>
<li>If at first you don&#8217;t succeed, try management. </li>
<li>Never put off until tomorrow what you can avoid altogether. </li>
<li>TEAMWORK&#8230; means never having to take all the blame yourself. </li>
<li>The beatings will continue until morale improves. </li>
<li>Never underestimate the power of very stupid people in large groups. </li>
<li>We waste time, so you don&#8217;t have to. </li>
<li>Hang in there, retirement is only thirty years away! </li>
<li>Go the extra mile. It makes your boss look like an incompetent slacker. </li>
<li>A snooze button is a poor substitute for no alarm clock at all. </li>
<li>When the going gets tough, the tough take a coffee break. </li>
<li>INDECISION is the key to FLEXIBILITY. </li>
<li>Succeed in spite of management. </li>
<li>Aim Low, Reach Your Goals, Avoid Disappointment.</li>
</ul>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/ethicsit/office-inspiration-quotes/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
