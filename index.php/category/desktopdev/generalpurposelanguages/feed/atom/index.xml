<?xml version="1.0" encoding="UTF-8"?><feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en-US"
  xml:base="/wp-atom.php"
   >
	<title type="text">General Purpose Languages &#8211; LessthanDot</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-03-09T12:50:36Z</updated>

	<link rel="alternate" type="text/html" href="/" />
	<id>/index.php/feed/atom/</id>
	<link rel="self" type="application/atom+xml" href="/index.php/category/desktopdev/generalpurposelanguages/feed/atom/" />

	<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<author>
			<name>Rob Earl</name>
					</author>
		<title type="html"><![CDATA[Ignoring SVN Directories at the Command Line]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/generalpurposelanguages/ignoring-svn-directories-at-the/" />
		<id>/index.php/2011/05/ignoring-svn-directories-at-the/</id>
		<updated>2011-05-14T13:20:00Z</updated>
		<published>2011-05-14T13:20:00Z</published>
		<category scheme="/" term="General Purpose Languages" /><category scheme="/" term="bash" /><category scheme="/" term="cli" /><category scheme="/" term="linux" /><category scheme="/" term="subversion" /><category scheme="/" term="svn" />		<summary type="html"><![CDATA[A colleague of mine told me this neat trick which I had to share:

echo "FIGNORE=.svn" &#62;&#62; ~/.bashrc

Now when you're moving around subversion controlled directories with only one subdirectory, hitting tab won't try to autocomplete to ".svn/".]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/generalpurposelanguages/ignoring-svn-directories-at-the/"><![CDATA[<p>A colleague of mine told me this neat trick which I had to share:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="bash"><thead><tr><td colspan="2"  class="head">Bash</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw3">echo</span> <span class="st0">&quot;FIGNORE=.svn&quot;</span> <span class="sy0">&gt;&gt;</span> ~<span class="sy0">/</span>.bashrc
<span class="kw3">source</span> ~<span class="sy0">/</span>.bashrc</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">echo "FIGNORE=.svn" &gt;&gt; ~/.bashrc
source ~/.bashrc</pre></div></div>

<p>Now when you&#8217;re moving around subversion controlled directories with only one subdirectory, hitting tab won&#8217;t try to autocomplete to &#8220;.svn/&#8221;.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/generalpurposelanguages/ignoring-svn-directories-at-the/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/generalpurposelanguages/ignoring-svn-directories-at-the/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>Ted Krueger (onpnt)</name>
					</author>
		<title type="html"><![CDATA[Reflector to cost us now]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/mstech/reflector-to-cost-us-now-1/" />
		<id>/index.php/2011/02/reflector-to-cost-us-now-1/</id>
		<updated>2011-02-08T00:52:00Z</updated>
		<published>2011-02-08T00:52:00Z</published>
		<category scheme="/" term="Access Forms and Reports" /><category scheme="/" term="C#" /><category scheme="/" term="General Purpose Languages" /><category scheme="/" term="Microsoft Technologies" /><category scheme="/" term="VB.NET" />		<summary type="html"><![CDATA[Red Gate is a company that is widely known as a community company.  I have yet to meet an individual that had anything bad to say about them, even if there are occasional complaints, whines or whatnot.  Overall, the company really is one that we as a co&#8230;]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/mstech/reflector-to-cost-us-now-1/"><![CDATA[<p>Red Gate is a company that is widely known as a community company.  I have yet to meet an individual that had anything bad to say about them, even if there are occasional complaints, whines or whatnot.  Overall, the company really is one that we as a community are proud to plug based on our experiences with them.  Tools like SQL Prompt, SQL Compare, SQL HyperBac and even the bundle, SQL Toolbelt, are tools that have helped the SQL Server professional push forward more efficiently by doing more with what they have available. </p>
<p>There is another product that is under Red Gate’s ownership called <a href="http://www.red-gate.com/products/dotnet-development/reflector/">Reflector</a>.   Reflector is a tool that allows you to decompile almost anything .NET.  Essentially, you can view the code that is behind .NET Assemblies.  The really cool thing is you can plug an executable in and view the code as well.</p>
<p>Here’s a view of a program I wrote recently for an article based on troubleshooting ASYNC_NETWORK_IO</p>
<p><div class="image_block"><a href="/media/blogs/DesktopDev/.png?mtime=1297132899"><img src="/wp-content/uploads/blogs/DesktopDev/.png?mtime=1297132899" alt="" width="628" height="187" /></a></div>
</p>
<p>As you can see, I simply browsed to the executable that was built from the solution and expanded the methods and there you go.  All of my code for that test is right there to analyze, troubleshoot or recreate in an attempt to learn from it. </p>
<p>So why is a DBA writing about this tool?  As a DBA that believes in knowing a developers task as much as the task of being a DBA, I think it is critical to do just that.  Also, it is a great way to recover lost code.  Mind you; all of this is while minding the law and copyrights of other vendor and developer’s code.</p>
<p>There is an underlying reason for this article being written.  Lutz Roeder was the creator of Reflector.  Years ago when I found the free tool I was absolutely amazed at the real value in it for any person that works in the .NET and Microsoft camp.  Around 2008, Lutz decided it was time to move on and reached an agreement with Red Gate to take over.  Red Gate left Reflector available as a free version while adding a professional version allowing you to debug assemblies.  That is a truly valued addition when you think about the applicable use of it.</p>
<p>Well, <a href="http://www.red-gate.com/products/dotnet-development/reflector/announcement-faq">Red Gate decided</a> that after version 7, Reflector will now cost $35.  Yes, you read that correctly, and there will no longer be a free version of Reflector.</p>
<p>I see both sides to this announcement.  One, Red Gate is a business entity and in order to manage and put resources into building Reflector along with tapping the power it may be able to grow into, they must pay for those resources.  On the other hand, is $35 a lot to some people? Yes, of course it is.  I don’t want to pay it as much as the next person.  Will I?  I’m not even sure about that just yet.  Depends on if the use of Reflector will be of value to me at the time I go calling on it again.</p>
<p>The point I’m trying to make is: Red Gate is a business and as such, is out to make a return on their products.  Business decisions are made in the best interest of the business.  Are those business decisions always right?</p>
<div class="image_block">
<div class="image_block"><a href="/media/blogs/DesktopDev/-1.png?mtime=1297132900"><img src="/wp-content/uploads/blogs/DesktopDev/-1.png?mtime=1297132900" alt="" width="163" height="89" align="left" /></a></div>
<p><a href="/media/blogs/DesktopDev/-1.png?mtime=1297132900"></a></div>
<p>Was the Renault Alliance a good car to manufacture by American Motors?  Who knows?   Maybe if they didn’t go that route they would still be around though.</p>
<div class="image_block"><a href="/media/blogs/DesktopDev/-1.png?mtime=1297132900"></a></div>
<div class="image_block"><a href="/media/blogs/DesktopDev/-1.png?mtime=1297132900"></a></div>
<p> </p>
<p> <a href="/media/blogs/DesktopDev/-2.png?mtime=1297132900"><img src="/wp-content/uploads/blogs/DesktopDev/-2.png?mtime=1297132900" alt="" width="142" height="107" align="left" /></a></p>
<p class="image_block">Do you think you get what you pay for in a Lamborghini and the cost goes to making the next one even better?  Yes, more than likely that is a good call. </p>
<p class="image_block"> </p>
<p>I do know that Red Gate is respected for making some good decisions and I’ll stand behind them on this for now.  I may put too much trust in them that the product will not jump to $335 next year or in five years but I do put that trust there, given the relationship (myself as part of the community) have built between Red Gate and the Community.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/mstech/reflector-to-cost-us-now-1/#comments" thr:count="9"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/mstech/reflector-to-cost-us-now-1/feed/atom/" thr:count="9"/>
		<thr:total>9</thr:total>
		</entry>
		<entry>
		<author>
			<name>Eli Weinstock-Herman (tarwn)</name>
					</author>
		<title type="html"><![CDATA[Unit Testing Costs Too Much &#8211; Twice The Code = Value?]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much-twice-the-co/" />
		<id>/index.php/2010/11/unit-testing-costs-too-much-twice-the-co/</id>
		<updated>2010-11-15T15:56:09Z</updated>
		<published>2010-11-15T15:56:09Z</published>
		<category scheme="/" term="General Purpose Languages" /><category scheme="/" term="lean software" /><category scheme="/" term="unit testing" />		<summary type="html"><![CDATA[Last week I had the pleasure of presenting at a .Net Code Camp on the topic of Unit Testing. A key theme of the session was barriers to adoption and the values we can achieve using this tool.The main barrier to my adoption of Unit Testing was the idea that writing twice as much code would increase the value of my work. Twice as much code, as was pointed out in a response to my post two week's ago, sounds like higher maintenance costs, higher initial development costs, and a greater opportunity for bugs.]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much-twice-the-co/"><![CDATA[<p>Last week I had the pleasure of presenting at a <a href="/index.php/DesktopDev/MSTech/raleigh-code-camp-followup" title="Read my quick CodeCamp review">.Net Code Camp</a> on the topic of Unit Testing. A key theme of the session was barriers to adoption and the values we can achieve using this tool.</p>
<p>The main barrier to my adoption of Unit Testing was the idea that writing twice as much code would increase the value of my work. Twice as much code, as was pointed out in a response to <a href="/index.php/DesktopDev/GeneralPurposeLanguages/unit-testing-costs-too-much" title="Read the 'Unit testing Costs Too Much' post">my post two week&#8217;s ago</a>, sounds like higher maintenance costs, higher initial development costs, and a greater opportunity for bugs.</p>
<h2>How Does Adding Code Increase Value?</h2>
<p>People have published numerous lists of benefits they have received from Unit Testing, but there is still this seemingly illogical starting point of creating more code to deliver the same end product. And before evaluating any other benefits we could achieve from Unit testing, we have to start by resolving that seeming contradiction.</p>
<h3>Current Process</h3>
<p>Consider a software process that includes developers, a QA department, a customer review, and a production deployment. </p>
<ol>
<li>Each developer writes code to fulfill assigned features or tasks</li>
<li>Once enough pieces have been written, the developer can wire them together and debug the pieces they have written</li>
<li>Completed pieces are handed off to QA</li>
<li>QA tests those pieces against the requirements</li>
<li>Bugs (code defects or missing requirements) are returned to developers</li>
<li>Once QA is satisfied, the pieces are handed off to the customer for review</li>
<li>The customer reviews the pieces, possibly sending back instructions for refinement or corrections</li>
<li>Once the customer is satisfied, the pieces are deployed to production</li>
<li>End users use the pieces in production and interact with production data</li>
</ol>
<p>This won&#8217;t match everyone&#8217;s environments but it should be simple enough to be representative of the work that happens in our environments.</p>
<h3>Unit Testing is Testing at the Source</h3>
<p>In Lean Manufacturing there is the concept of moving quality to the source of production. Tests are created that are quick to execute and provide the operator with a quick detection of defects instead of waiting for a Quality Control at the end of the process.</p>
<p>Moving testing closer to the source reduces the number of defective parts that are stored, transported, and used in later production steps. It allows for faster reaction time to correct the problem and reduces the number of interruptions from having to stop a run and re-produce product for a previous order.</p>
<p>All of these costs have well-defined values in manufacturing environments as well as parallels in our own environments.</p>
<h3>Lean Development</h3>
<p>Each step in our sample development process above increases the base cost of producing a working feature. The further a bug makes it without being detected the greater costs it has accrued and the more cost it will take to correct it.</p>
<div style="text-align: center; color: #666666;">
<img src="http://tiernok.com/LTDBlog/unittesting/UnitTestingGraphs.png" alt="Effort and cost of bugs increase dramatically as time passes" /><br />
Effort and cost from bugs increase dramatically as time passes
</div>
<p>Costs:</p>
<ul>
<li>Bug while writing one unit: Cheapest cost</li>
<li>Several pieces wired together: changes to the unit and surrounding units</li>
<li>During Handoff: Wasted meeting/handoff time for devs and QA personnel, potential schedule change, additional debugging time and cost changes (per prior step)</li>
<li>Bugs found in QA: (at minimum) Handoff to Dev, switch from new task to work on bug, investigation, development, debugging changes, handoff to QA, QA repeats some level of testing (high potential for new bug, developers tend to test direct changes only)</li>
<li>Bugs found in handoff to customer: (at a minimum) Prior QA steps,time for QA to duplicate problem, task-switching time for QA, cost of customer time and others involved, re-handoff to customer, timeline impact, potential impact to customer trust (depends on frequency &#8211; costs include increased micro-management, increased meetings, etc)</li>
<li>Bugs found by customer: Similar to last step but any testing to this point by customer is likely to be duplicated, customer schedules impacted, cost of extar customer time, timeline impacted</li>
<li>Bugs found in production: Prior step + developers are pulled off other tasks to detect and cleanup bad data, schedules are impacted due to developer time, potentially wasted end user time, potential to retrain + monitor users to work around problem and then retrain back afterward</li>
</ul>
<p>Besides people-based costs, there are also hidden costs to returning to development and quality stages. The more time that passes between writing the code and returning to it, the more familiarity will be lost and the higher the potential that other pieces will have been added on top of the bug. Other details, such as the specifics of the requirements that code was fulfilling and how it was initially tested prior to QA hand-off, will rely on the memory of the developer and will have to take into account any changes that have occurred since initial development. Perhaps of greater concern is that QA will not have the same level of familiarity with the tests they initially performed and the customer is more likely to add even more &#8216;refinements&#8217; when it comes time to re-review the changes.</p>
<p>Unit Testing is our tool for doing testing at the source, to catch defects earlier before they propagate costs throughout the process.</p>
<h2>The Value of Quality at the Source</h2>
<p>Unit Testing will not prevent all bugs but it will catch bugs earlier, reducing the costs above. Unit Testing starts earlier, allowing us to test each unit we build instead of waiting until we have 10-20 built and wired to an interface. For the situations where a bug still makes it past development, we will have a solid set of tests to run after making corrections so we can not only test changes but also the rest of the codebase, heavily reducing the risk of creating new bugs out of bug fixes.</p>
<p>The value we gain from Unit Testing is value to the team and the business, not to the individual developer (though there are values to be gained there as well).</p>
<h2>Balancing Cost and Value</h2>
<p>There is a cost to writing Unit Tests that we have to balance with the potential savings and risk reduction. I don&#8217;t believe there is a universal answer as to how much Unit Testing is appropriate for a given environment, project, and team. Many teams take it on faith that 100% coverage is their best bet, but I am not convinced. </p>
<p>What I can tell you is that all of the benefits of this tool are out of your reach if you don’t give it a test drive. </p>
<p>As several people saw in my CodeCamp presentation, it doesn’t take long to add a Unit Testing project to an existing application and build a few tests. Pick a particularly complex business function or an existing bug in need of correction. If you decide to start evaluating it for greater implementation, the list of costs above should provide some pointers on where you can create some measurements to determine the level of value you are receiving.</p>
<p>Other posts in this unplanned series:</p>
<ul>
<li>Initial &#8220;Unit Testing Costs Too Much&#8221; post: <a href="/index.php/DesktopDev/GeneralPurposeLanguages/unit-testing-costs-too-much" title="Check out the first post">Unit Testing Costs Too Much</a></li>
<li>Code camp review and links for slides: <a href="/index.php/All/?p=999" title="Code Camp review">Raleigh Code Camp Followup</a></li>
<li>2x Code Followup: <a href="/index.php/DesktopDev/GeneralPurposeLanguages/unit-testing-costs-too-much-twice-the-co" title="Read more on the 2x Code topic">Unit Testing Costs Too Much &#8211; Twice The Code = Value?</a></li>
<li>Too Many Things to Learn: <a href="/index.php/WebDev/ServerProgramming/unit-testing-costs-too-much-too-many-thi" title="Read more on the Unit Test Cost topic">Unit Testing Costs Too Much &#8211; Too Many Things to Learn</a></li>
</ul>
<style>
ul{ margin: 1em; list-style-position: outside; }
ul li{ margin: .25em;}
</style>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much-twice-the-co/#comments" thr:count="8"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much-twice-the-co/feed/atom/" thr:count="8"/>
		<thr:total>8</thr:total>
		</entry>
		<entry>
		<author>
			<name>Eli Weinstock-Herman (tarwn)</name>
					</author>
		<title type="html"><![CDATA[Raleigh Code Camp Followup]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/mstech/raleigh-code-camp-followup/" />
		<id>/index.php/2010/11/raleigh-code-camp-followup/</id>
		<updated>2010-11-08T10:44:35Z</updated>
		<published>2010-11-08T10:44:35Z</published>
		<category scheme="/" term="General Purpose Languages" /><category scheme="/" term="Microsoft Technologies" /><category scheme="/" term="alm" /><category scheme="/" term="c#" /><category scheme="/" term="code camp" /><category scheme="/" term="f#" /><category scheme="/" term="ruby" /><category scheme="/" term="unit testing" />		<summary type="html"><![CDATA[Saturday started off cold and rainy, but it didn't matter because, for over 100 of us, there were more important things going on. Namely sessions ranging from the one I presented, Unit Testing, to specific C#, jQuery, database, ALM, Silverlight, Ruby, and Python topics. In fact there were so many specific topics and I heard so many good things about all of the sessions that I wish I could have twinned or tripled myself to attend them all.]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/mstech/raleigh-code-camp-followup/"><![CDATA[<p>Saturday started off cold and rainy, but it didn&#8217;t matter because, for over 100 of us, there were more important things going on. Namely sessions ranging from the one I presented, Unit Testing, to specific C#, jQuery, database, ALM, Silverlight, Ruby, and Python topics. In fact there were so many specific topics and I heard so many good things about all of the sessions that I wish I could have twinned or tripled myself to attend them all. </p>
<div style="float: left; margin: .5em; padding: .25em; border: 1px solid #dddddd;">
<img src="http://tiernok.com/_n_images/presentations/UnitTesting2.jpg" alt="" />
</div>
<p>My session was the first one in the craftsmanship series and it was a lot of fun. I purposefully left 15 minutes at the end so we could talk more to peoples specific environments and challenges and I like to think at least one person in my session will be trying some unit testing next week. The slides and notes handout are posted <a href="http://tiernok.com/presentation.php">on my site</a> (the handout is enough for a quick overview).</p>
<p>The next session was an excellent ALM session from Steve Andrews (<a href="http://www.platinumbay.com/blogs/" title="Steve's blog">blog</a>|<a href="http://twitter.com/SteveAndrews" title="Steve on Twitter">twitter</a>). Steve&#8217;s session covered a big picture view of selecting a strategy for branching and merging, some of the advances ALM has made with 2010, and some of the things build definitions are able to do right out of the box. He did an excellent job of providing a base of knowledge to attach all those little tidbits I&#8217;d picked up on my own.</p>
<p>After lunch, and a book raffle, I attended Mike O&#8217;Brien&#8217;s (<a href="http://blog.mikeobrien.net/" title="Mike's blog">blog</a>|<a href="http://twitter.com/hcoverlambda" title="mike's twitter page">twitter</a>) F# session, finally catching up a little on an item that has been sitting on my &#8220;find out more&#8221; list for a while. Mike exceeded my expectations for the session, not just showing us the language but really diving into what makes the functional paradigm different from the imperative. Coming out of his session I can tell I&#8217;ll be using F# in the near future, both to continue expanding my use of Functional languages and to have that skill (and mindset) available when using Functional constructs in .Net.</p>
<p>Rob Rowe (<a href="http://twitter.com/rippinrobr" title="Rob on twitter">twitter</a>) led a session on generating Data Assemblies using Iron Ruby. Frankly I didn&#8217;t know what to expect going into his session, as Ruby has never made it high enough on my &#8220;to learn&#8221; list to know what I was walking into. Rob&#8217;s session used Ruby, but the bigger focus was on data assembly generation. From a few scripts he was able to generate both IL and CodeDom-generated code to build an entire data model layer of an application. A few more clicks and he had an MVC front-end. The walk-through of his process opened up a lot of new subjects for me (IL generation, CodeDom, Ruby) and I&#8217;m starting to think I need a real &#8220;to learn&#8221; list to keep it all straight.</p>
<p>Chris Eargle (<a href="http://www.kodefuguru.com/" title="Chris's blog">blog</a>|<a href="http://twitter.com/kodefuguru" title="Chris on twitter">twitter</a>) did a last minute session on C# Ninjitsu, straining our brains and walking us through some interesting aspects of the C# language. Chris did the entire presentation on the fly, as his office suite had expired that morning. His session was a good choice for the last one of the day, as he kept it lively and flowed smoothly from one interesting construct to another. </p>
<p>The day ended with a raffle from the sponsors who made this event possible. I walked away with an enterprise suite of software from DevExpress (which I&#8217;m not planning on sharing, but may end up in a blog or two). Over the course of the day I got to meet a lot of fantastic people, had a lot of fun presenting on Unit Testing, and overall just had a blast. I&#8217;m looking forward to the next one and, if your in the Raleigh area, I hope to see you out at the User Group meetings.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/mstech/raleigh-code-camp-followup/#comments" thr:count="1"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/mstech/raleigh-code-camp-followup/feed/atom/" thr:count="1"/>
		<thr:total>1</thr:total>
		</entry>
		<entry>
		<author>
			<name>Eli Weinstock-Herman (tarwn)</name>
					</author>
		<title type="html"><![CDATA[Unit Testing Costs Too Much]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much/" />
		<id>/index.php/2010/11/unit-testing-costs-too-much/</id>
		<updated>2010-11-03T09:56:08Z</updated>
		<published>2010-11-03T09:56:08Z</published>
		<category scheme="/" term="General Purpose Languages" /><category scheme="/" term="tdd" /><category scheme="/" term="unit testing" />		<summary type="html"><![CDATA[There is a long list of reasons not to use Unit Testing in your current projects. In fact I was able to make such a long list of reasons not to use automated Unit Testing that I wasn't able to use them all in my presentation for the Raleigh Code Camp this coming weekend.]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much/"><![CDATA[<p>There is a long list of reasons not to use Unit Testing in your current projects. In fact I was able to make such a long list of reasons not to use automated Unit Testing that I wasn&#8217;t able to use them all in my presentation for the <a href="http://codecamp.org/" title="Visit the codecamp website">Raleigh Code Camp</a> this coming weekend. </p>
<p>While my presentation aims to dispel a number of these and show that unit testing can return a lot of value for low cost, I thought I would share the highlights from the &#8220;Why Not To Do It&#8221; list. </p>
<p>Warning: I know, it seems a little lighter-hearted than my usual posts, maybe a little more sarcastic. I blame it on all the time staring at powerpoint this weekend.</p>
<div style="color: #666666; text-align: center; float: left; margin: .5em; font-size: .8em;">
<img src="http://tiernok.com/LTDBlog/iStock_000005447184Smaller.jpg" alt="It's a Picture!" /><br />
Stock from <a href="http://www.istockphoto.com/" title="Visit iStockPhoto.com">iStockPhoto.com</a>
</div>
<h2>It&#8217;s Twice as Much Code!</h2>
<p>First you have to write all the &#8220;real&#8221; code, then you have to write all the test code, and before you know it you&#8217;ve spent twice as long writing the same amount of code. Who&#8217;s going to pay for all that keyboard wear? </p>
<p><em>(Check out the follow-up link below for a lot more on this one)</em></p>
<h2>I Don&#8217;t Want To TDD/BDD/ADHD/OMGWTFBBQ!?!?</h2>
<p>It seems like I have to learn 5 new things and start a blog just to do unit testing. Why do I have to care about 100% code coverage just to do some tests? Why am I doing it wrong to test the code after I write? And I have to be Agile to unit test? This seems like a much bigger investment of my time then I thought&#8230;</p>
<h2>I&#8217;m A Developer, Not QA!</h2>
<p>I mean, we hired all these people to test our application and now you want me to do all the testing?  are we duplicating effort or are we doing different types of testing? And is there really value in having two groups test? Wait a minute, these QA people have it all figured out, they&#8217;re going to stop testing as soon as I take it over&#8230;.how do I transfer?</p>
<h2>I&#8217;m Paid To Code, My Boss Told Me So</h2>
<p>My boss measures my work based on how long I am pounding on the keyboard and churning out real code. How do I communicate the value and get buy in on writing code that isn&#8217;t directly linked to a feature the customer can see? Is this going to be like that time I tried to explain fencepost errors, because that didn&#8217;t go over so well&#8230;</p>
<h2>I&#8217;ll Never Catch Them All&#8230;</h2>
<p>I&#8217;m going to be preemptive about this. Unit testing won&#8217;t catch all the bugs in my application, so I don&#8217;t see the point in even taking the time to do it. I&#8217;d be better off getting another feature or three done and just fixing the bugs when we find them.</p>
<h2>And So On&#8230;</h2>
<p>This wasn&#8217;t the end of the list, but one or two of you may show up on Saturday and I don&#8217;t want to give the whole show away. For those that are interested, I&#8217;ll release the full presentation notes and slides afterward on my personal site and do a follow-up post with links.</p>
<p>Feel free to keep adding to my list in the comments below, lets see who can think of something I didn&#8217;t already have.</p>
<p>Follow-ups:</p>
<ul>
<li>Initial &#8220;Unit Testing Costs Too Much&#8221; post: <a href="/index.php/DesktopDev/GeneralPurposeLanguages/unit-testing-costs-too-much" title="Check out the first post">Unit Testing Costs Too Much</a></li>
<li>Code camp review and links for slides: <a href="/index.php/All/?p=999" title="Code Camp review">Raleigh Code Camp Followup</a></li>
<li>2x Code Followup: <a href="/index.php/DesktopDev/GeneralPurposeLanguages/unit-testing-costs-too-much-twice-the-co" title="Read more on the 2x Code topic">Unit Testing Costs Too Much &#8211; Twice The Code = Value?</a></li>
<li>Too Many Things to Learn: <a href="/index.php/WebDev/ServerProgramming/unit-testing-costs-too-much-too-many-thi" title="Read more on the Unit Test Cost topic">Unit Testing Costs Too Much &#8211; Too Many Things to Learn</a></li>
</ul>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much/#comments" thr:count="6"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/generalpurposelanguages/unit-testing-costs-too-much/feed/atom/" thr:count="6"/>
		<thr:total>6</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Windows Azure Tools for Microsoft Visual Studio 1.1 Released]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/mstech/windows-azure-tools-for-microsoft-visual/" />
		<id>/index.php/2010/02/windows-azure-tools-for-microsoft-visual/</id>
		<updated>2010-02-02T00:04:02Z</updated>
		<published>2010-02-02T00:04:02Z</published>
		<category scheme="/" term="C#" /><category scheme="/" term="General Purpose Languages" /><category scheme="/" term="Microsoft Technologies" /><category scheme="/" term="VB.NET" /><category scheme="/" term="azure" /><category scheme="/" term="cloud computing" />		<summary type="html"><![CDATA[Microsoft has released Windows Azure Tools for Microsoft Visual Studio 1.1 today. 
Windows Azure Tools for Microsoft Visual Studio extend Visual Studio 2008 and the upcoming Visual Studio 2010 RC to enable the creation, configuration, building, debuggi&#8230;]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/mstech/windows-azure-tools-for-microsoft-visual/"><![CDATA[<div class="image_block"><img src="/wp-content/uploads/blogs/EnterpriseDev//windows_azure_small.jpg" alt="" title="" width="300" height="169" /></div>
<p>Microsoft has released Windows Azure Tools for Microsoft Visual Studio 1.1 today.<br />
Windows Azure Tools for Microsoft Visual Studio extend Visual Studio 2008 and the upcoming Visual Studio 2010 RC to enable the creation, configuration, building, debugging, running and packaging of scalable web applications and services on Windows Azure. Installation includes the Windows Azure SDK. (For VS 2010 Beta 2 please use the November 2009 release)</p>
<p><strong>Windows Azure Tools for Microsoft Visual Studio 1.1 includes the following</strong><br />
C# and VB Project creation support for creating a Windows Azure Cloud Service solution with multiple roles.</p>
<p>Tools to add and remove roles from the Cloud Service.</p>
<p>Tools to configure each Role.</p>
<p>Integrated local development via the Development Fabric and Development Storage services.</p>
<p>Running and Debugging a Cloud Service in the Development Fabric.</p>
<p>Building and packaging of Cloud Service Packages.</p>
<p>Browsing to the Windows Azure Developer Portal.</p>
<p><strong>New for version 1.1:</strong><br />
Windows Azure Drive: Enable a Windows Azure application to use existing NTFS APIs to access a durable drive. This allows the Windows Azure application to mount a page blob as a drive letter, such as X:, and enables easy migration of existing NTFS applications to the cloud.</p>
<p>OS Version Support: Allows a Windows Azure application to choose the appropriate Guest OS to run on in the cloud.</p>
<p>There are also some bug fixes in this release.</p>
<p>Download it here: http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=5664019e-6860-4c33-9843-4eb40b297ab6 and get your cloud going</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/mstech/windows-azure-tools-for-microsoft-visual/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/mstech/windows-azure-tools-for-microsoft-visual/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Visual Studio 2010 Beta 2 Virtual Machines with Sample Data Available]]></title>
		<link rel="alternate" type="text/html" href="/index.php/desktopdev/mstech/visual-studio-2010-beta-2-virtual-machin/" />
		<id>/index.php/2009/12/visual-studio-2010-beta-2-virtual-machin/</id>
		<updated>2009-12-26T13:12:21Z</updated>
		<published>2009-12-26T13:12:21Z</published>
		<category scheme="/" term="C#" /><category scheme="/" term="General Purpose Languages" /><category scheme="/" term="Microsoft Technologies" /><category scheme="/" term="VB.NET" /><category scheme="/" term="hands-on labs" /><category scheme="/" term="hyper-v" /><category scheme="/" term="visual studio 2010" /><category scheme="/" term="visual studio 2010 beta" /><category scheme="/" term="vpc" />		<summary type="html"><![CDATA[Here is your gift from Microsoft for the holidays: Visual Studio 2010 Beta 2 Virtual Machines with Sample Data. Brian Keller writes Just in time for the holidays, we have posted a brand new virtual machine (VM) which is pre-configured with Visual Studio 2010 Ultimate Beta 2, Visual Studio Team Foundation Server 2010 Beta 2, [&#8230;]]]></summary>
		<content type="html" xml:base="/index.php/desktopdev/mstech/visual-studio-2010-beta-2-virtual-machin/"><![CDATA[<p>Here is your gift from Microsoft for the holidays: Visual Studio 2010 Beta 2 Virtual Machines with Sample Data. Brian Keller writes</p>
<blockquote><p>Just in time for the holidays, we have posted a brand new virtual machine (VM) which is pre-configured with Visual Studio 2010 Ultimate Beta 2, Visual Studio Team Foundation Server 2010 Beta 2, and sample data that you can use to help learn the product, perform demonstrations, etc. This VM included everything you need to learn and demonstrate the Application Lifecycle Management (ALM) capabilities of Visual Studio 2010 beta 2 (with the exception of Lab Management). This VM is available in the virtualization platform of your choice (Hyper-V, Virtual PC 2007 SP1, and Windows [7] Virtual PC). Hyper-V is highly recommended because of the performance benefits and snapshotting capabilities.</p></blockquote>
<p>There are also 7 hands-on labs available</p>
<p>Get more info about how to download this here: http://blogs.msdn.com/briankel/archive/2009/12/23/now-available-visual-studio-2010-beta-2-virtual-machines-with-sample-data.aspx</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/desktopdev/mstech/visual-studio-2010-beta-2-virtual-machin/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/desktopdev/mstech/visual-studio-2010-beta-2-virtual-machin/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
	</feed>
