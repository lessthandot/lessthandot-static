<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Designing Software &#8211; LessthanDot</title>
	<atom:link href="/index.php/category/architect/designingsoftware/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Software Development Survey 2017</title>
		<link>/index.php/webdev/software-development-survey-2017/</link>
		<comments>/index.php/webdev/software-development-survey-2017/#comments</comments>
		<pubDate>Wed, 31 May 2017 17:10:36 +0000</pubDate>
		<dc:creator><![CDATA[damber]]></dc:creator>
				<category><![CDATA[All Blogs]]></category>
		<category><![CDATA[Architecture, Design and Strategy]]></category>
		<category><![CDATA[Data Management]]></category>
		<category><![CDATA[Designing Multi-Application Solutions]]></category>
		<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[Enterprise Architecture]]></category>
		<category><![CDATA[Enterprise Developer]]></category>
		<category><![CDATA[Enterprise Development]]></category>
		<category><![CDATA[IT Professionals]]></category>
		<category><![CDATA[Management]]></category>
		<category><![CDATA[Web Developer]]></category>

		<guid isPermaLink="false">/?p=8651</guid>
		<description><![CDATA[&#160; So, youâ€™re a developer? or an architect? or maybe even a technical delivery manager? GreatÂ ðŸ™‚ I need you! Iâ€™m currently doing some research for an upcoming book, and for a new software product, and who better to ask than those that are building and delivering software solutions each and every day? So Iâ€™d like [&#8230;]]]></description>
				<content:encoded><![CDATA[<p class="graf graf--p graf-after--figure"><img class="aligncenter size-large wp-image-8652" src="/wp-content/uploads/2017/05/shutterstock_374219557-small-1024x683.jpg" alt="Person having a bright idea" width="800" height="533" srcset="/wp-content/uploads/2017/05/shutterstock_374219557-small-1024x683.jpg 1024w, /wp-content/uploads/2017/05/shutterstock_374219557-small-300x200.jpg 300w, /wp-content/uploads/2017/05/shutterstock_374219557-small-768x512.jpg 768w, /wp-content/uploads/2017/05/shutterstock_374219557-small.jpg 1440w" sizes="(max-width: 800px) 100vw, 800px" /></p>
<p>&nbsp;</p>
<p id="f163" class="graf graf--p graf-after--figure">So, youâ€™re a developer? or an architect? or maybe even a technical delivery manager?</p>
<p id="654c" class="graf graf--p graf-after--p">GreatÂ <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p id="e525" class="graf graf--p graf-after--p">I need you!</p>
<p id="4ba4" class="graf graf--p graf-after--p">Iâ€™m currently doing some research for an upcoming book, and for a new software product, and who better to ask than those that are building and delivering software solutions each and every day?</p>
<p id="4b38" class="graf graf--p graf-after--p">So Iâ€™d like you to share the wisdom of your experience, by filling in a survey that will take you about 10â€“15 minutes to complete, about your experiences with designing, building, running and managing software. Start-ups and Enterprises both welcome.</p>
<p id="5c00" class="graf graf--p graf-after--p">There is a prize draw for an Amazon Echo, which you can opt into, as a thank-you for taking the time.</p>
<p id="8b54" class="graf graf--p graf-after--p">So, if you design, build or manage software on a regular basis, I would like to hear from youâ€¦</p>
<p id="3ecf" class="graf graf--p graf-after--p">Do you think you can help?</p>
<p id="1415" class="graf graf--p graf-after--p graf--trailing"><a class="markup--anchor markup--p-anchor" href="https://enterprisecore.io/page/making-systems-work-survey-2017" target="_blank" rel="noopener">https://enterprisecore.io/page/making-systems-work-survey-2017</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/software-development-survey-2017/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Scalability is Easy! (To Get Wrong)</title>
		<link>/index.php/architect/designingsoftware/scalability-is-easy-to-get/</link>
		<comments>/index.php/architect/designingsoftware/scalability-is-easy-to-get/#comments</comments>
		<pubDate>Wed, 05 Dec 2012 12:50:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[parallel processing]]></category>
		<category><![CDATA[scalability]]></category>
		<category><![CDATA[simulation]]></category>

		<guid isPermaLink="false">/index.php/2012/12/scalability-is-easy-to-get/</guid>
		<description><![CDATA[Scalability is easy, provided you don't need it to work.

Probably the number one failure of system scaling is when people dive right in and start building. No baselines, limited measurements, no analysis, just a hypothesis and a whole lot of late nights tweaking the system.]]></description>
				<content:encoded><![CDATA[<p>Scalability is easy, provided you don&#8217;t need it to work.</p>
<p>Probably the number one failure of system scaling is when people dive right in and start building. No baselines, limited measurements, no analysis, just a hypothesis and a whole lot of late nights tweaking the system. With extra complexity comes extra costs, from the initial development through more expensive maintenance. Scale poorly and not only do we take on those extra complexity costs, but also the more obvious additional costs of the actual implementation (new servers, more resources, etc).</p>
<h2>The Somewhat Contrived Example</h2>
<p>Recently I&#8217;ve been working on a system to simulate parallelizing workloads, specifically workloads that depend on external resources with rate or load thresholds. Let&#8217;s use it to look at a somewhat contrived example.</p>
<div style="background-color: #eeeeee; padding: 1em; margin: 1em;">
Note: For this post, the simulated &#8220;service&#8221; has a 100 request/minute limit and throttles individual clients for 15 second windows. Individual operations consist of 50ms of local processing and a single service request that has 50ms of latency and 100 ms for processing and response time. Similar results can be achieved with more realistic batch sizes and rates, the smaller values just allow me to more quickly produce samples for the blog post.
</div>
<p>So the backstory is that I have a batch process that is running more and more slowly as we take on larger and more frequent workloads. </p>
<p>I start by testing the batch process locally so I can see how slow it is before I make changes.</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_01.png" alt="Graph - 1 Client, 60 Requests, 100rpm Limit" /><br />
	1 Client, 60 Requests, 100rpm
</div>
<p>Locally it runs pretty quickly, but I&#8217;m betting that parallelizing the process will give me a significant increase in speed.</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_02.png" alt="Graph - 1 Client vs 30 Clients, 60 Requests, 100rpm Limit" /><br />
	1 Client vs 30 Clients, 60 Requests, 100rpm
</div>
<p>Look how well that performance improved, I achieved better than a 6x improvement in performance. My job here is done. </p>
<p>Except when I try to push this to production, I start getting a lot of errors. </p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_03.png" alt="Graph - 30 Clients, 300 Requests, 100rpm - 67% Failure Rate" /><br />
	30 Clients, 300 Requests, 100rpm &#8211; 67% Failure Rate
</div>
<p>As it turns out, the external API my process saves the data to has a rate limit. When I exceed the allowable rate, I&#8217;m throttled for a short period of time. Any requests I make during that throttle period are returned with errors indicating I&#8217;m throttled.</p>
<p>Hmm. Luckily there are a number of common patterns available to retry these types of failures. I&#8217;ll add an exponential back-off retry pattern so that when I get throttled my service will retry failed requests at slower rates until the service un-throttles me. While I&#8217;ve found plenty of code examples online, none of them seem to have recommendations, so I&#8217;ll just use one of the sample settings they provide.</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_04.png" alt="Graph - 30 Clients, 300 Requests, 100rpm, Retry Policy #1 - 7% Failure Rate" /><br />
	30 Clients, 300 Requests, 100rpm, Retry Policy #1 &#8211; 7% Failure Rate
</div>
<p>Hmm, better. My failure rate has gone way down. What if I tweak the values?</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_05.png" alt="Graph - 30 Clients, 300 Requests, 100rpm, Retry Policy #2 - 29% Failure Rate" /><br />
	30 Clients, 300 Requests, 100rpm, Retry Policy #2 &#8211; 29% Failure Rate
</div>
<p>Oh, that was bad, I obviously was on the right track before. What if I just extend the retry amount a bit to try and knock out the last bit of errors. </p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_06.png" alt="Graph - 30 Clients, 300 Requests, 100rpm, Retry Policy #1B - 0% Failure Rate" /><br />
	30 Clients, 300 Requests, 100rpm, Retry Policy #1B &#8211; 0% Failure Rate
</div>
<p>Ok, perfect. Now I have a system that is more than 6 times faster than the original, can be easily extended by throwing more workers at it, and is actually in a better position to handle occasional slow downs from my 3rd-party service. </p>
<p>Success!</p>
<h2>Where I Went Wrong</h2>
<p>Ok, so maybe not. Over the course of my little story I went wrong in a number of places. Even though this was a contrived example, I&#8217;ve watched very similar scenarios play out in a number of different organizations with real systems.</p>
<h3>The Bottleneck</h3>
<p>The first and most critical problem was that I didn&#8217;t actually locate the bottleneck in my process, I simply tried to do more of the same. The <a href="http://en.wikipedia.org/wiki/Theory_of_constraints" title="Theory of Constraints at Wikipedia">Theory of Constraints</a> tells us that we can improve the rate of a process by identifying and exploiting the constraints. </p>
<p>In this system, the constraint looked like it was the sequential execution of the tasks, but in reality the constraint was the time it took to call the 3rd-party API. Had we identified that bottleneck before starting, we could have approached the problem differently.</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/ProcessChange.png" alt="Process - Alternative Design" /><br />
	Process &#8211; Alternative Design
</div>
<p>Rather than the parallel complexity, we can modify how the tasks are executed to try and take advantage of knowing where our bottleneck is. If the API allowed us to submit several requests in a batch, this redesign would net us several orders of magnitude improvement. Another option would be to run the results of the local processing into a queue and submit requests from there at a slow trickle, using only a percentage of our API limit so as not to disrupt any other real-time operations or batch processing the system supports. Another option we could take advantage of is not starting any of our expensive 3rd-party communications until we know that the entire job can actually be processed successfully through our local process.</p>
<p>Identifying the constraint unlocks the ability to turn the problem on it&#8217;s head and achieve higher improvements, typically by orders of magnitude.</p>
<h3>The Math Error</h3>
<p>I concluded the scenario above by assuming I had found a good solution that also had a lot of headroom. Unfortunately what I actually did was find the ceiling. I have tuned the retry policy to 30 parallel systems, increasing that number could easily destabilize it further and cause more errors or delays. The headroom is, in fact, an illusion.</p>
<h3>The Evolving Assumption</h3>
<p>Somewhere along the way I found 30 clients to be a great improvement and didn&#8217;t test other options. Then I made some assumptions about a retry policy. Then I tweaked that retry policy until the error rate disappeared. My assumptions made sense at the time, so I never questioned where they were leading me.</p>
<p>When I found a winning combination for my retry rate, I didn&#8217;t realize I was missing other, better options:</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_07.png" alt="Graph - 30 Clients, 300 Requests, 100rpm, Retry Policy #1B vs 4A-C" /><br />
	30 Clients, 300 Requests, 100rpm, Retry Policy #1B vs 4A-C
</div>
<p>What&#8217;s worse, is that trail of assumptions along the way was never re-validated. I concluded with a 6.5x improvement, but is that still accurate?</p>
<div style="text-align: center; font-size: .8em; color: #666666">
	<img src="http://tiernok.com/LTDBlog/Scalability/Graph_08.png" alt="Graph - 1-50 Clients, 300 Requests, 100rpm, Retry Policy #1B" /><br />
	1-50 Clients, 300 Requests, 100rpm, Retry Policy #1B
</div>
<p>When I run the same settings on a range of 1 to 50 clients, we can see that I lost that original 6x improvement along the way. All I have managed to do is add complexity and some very explicit costs for those additional systems.</p>
<p><i>Note: What happened to retry policy #3? Well originally 1B was actually named 3, then I decided to update the name halfway through the post but was too lazy to update all of the completed images. Oh well.</i></p>
<h2>Scaling the Wrong Thing</h2>
<p>This post used fairly small numbers, had I applied a larger workload, higher throughput rates, different throttling windows, the whole problem would have turned out differently. </p>
<p>When we set out to make a system scale, we need to identify the real scenarios we are trying to scale for and the bottlenecks that stand in our way. Blindly performance tuning can look like an improvement, but is really just a poor short term investment that often entrenches the current performance problems even more deeply. There are a lot of questions that should be asked about the intended result, responsiveness fo the system, other operations it has to support while under load, potential overlap of that load, the type of load, etc. The patterns for one system may have relevance for another, but could just as easily be completely incorrect.</p>
<p>How hard it is to scale a system is going to depend on a lot of factors. Getting it wrong just happens to be the easiest option.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/designingsoftware/scalability-is-easy-to-get/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Getting Flexible With NDepend 4 and CQLinq</title>
		<link>/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/</link>
		<comments>/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/#comments</comments>
		<pubDate>Mon, 04 Jun 2012 10:45:00 +0000</pubDate>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
				<category><![CDATA[Designing Software]]></category>

		<guid isPermaLink="false">/index.php/2012/06/getting-flexible-with-ndepend-4-and-cqlinq/</guid>
		<description><![CDATA[At my last job we had a non-functional attribute that another team used to decorate service methods that they consumed.  The other team was working on an alternative client to our WCF services, and they weren't on the same release schedule they needed t&#8230;]]></description>
				<content:encoded><![CDATA[<p>At my last job we had a non-functional attribute that another team used to decorate service methods that they consumed.  The other team was working on an alternative client to our WCF services, and they weren&#8217;t on the same release schedule they needed to be able to target multiple versions of our services within a single version of their application.  Because of this requirement, they maintained a wrapper around our services that handled some of the differences   between versions.  The main use for this attribute was to foster communication between the teams, so that if we changed a decorated method we would let them know.  As I&#8217;m sure anyone on this other team would tell you, we weren&#8217;t always that good about communicating these changes.</p>
<p>In an effort to make communication between teams easier we used a CQL query like this to report changes to these methods as part of our automated builds:</p>
<pre>SELECT METHODS FROM NAMESPACES "Services"
WHERE HasAttribute "OPTIONAL:Services.KnownExternalClientsAttribute"
AND CodeWasChanged</pre>
<p>This was nice, but it only got us part of the way there.  This would alert us to signature changes or changes to the content of the method, but not necessarily changes to the message contracts passed in to the method.  In Pseudo-CQL the query I had in mind looks something like this:</p>
<pre>SELECT TYPES FROM NAMESPACES "Services"
WHERE CodeWasChanged
AND IsUsedBy (
    SELECT METHODS FROM NAMESPACES "Services"
    WHERE HasAttribute "OPTIONAL:Services.KnownExternalClientsAttribute"
)</pre>
<p>This didn&#8217;t work however (CQL doesn&#8217;t really have support for subqueries), and I couldn&#8217;t really find anything in the language that would allow us to achieve what we wanted.  NDepend 4 introduces a new linq-based replacement called CQLinq that offers a lot more flexibility, so I figured I would see if I could write the query that we needed using it.  It ended up being much easier than I thought &#8211; CQLinq gives us access to most (if not all) of the standard LINQ operators, and the same functions for querying code using attributes and history that we had with CQL.  This is the query I came up with:</p>
<pre>// &lt;Name&gt;Test Query for Contract Changes&lt;/Name&gt;
warnif count &gt; 0

let decoratedMethods = from m in JustMyCode.Methods
    where m.HasAttribute("NDependSample.TestAttribute")
        &amp;&amp; m.ParentNamespace.Name == "NDependSample.Services"
    select m

from t in JustMyCode.Types
where  t.ParentNamespace.Name == "NDependSample.Contracts"
  &amp;&amp; t.CodeWasChanged()
  &amp;&amp; decoratedMethods.Using(t).Any()
select t</pre>
<p>Once we have the query we can mark it as critical, so we will have a failing build after the changes are made.  Only the first build after making the changes should fail, but that would be enough to trigger an investigation that would result in communicating the changes to the other team.</p>
<p>CQL has always been my favorite feature of NDepend, so its no surprise that CQLinq is my favorite feature in this new release.  The LINQ based syntax feels much more natural to me when writing queries against a codebase than the SQL-like syntax of CQL, and still gives us all the same visualization goodies to foster quick understanding of the query results.  I&#8217;m really excited to dig in a little more and see what else I can do with it.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/designingsoftware/getting-flexible-with-ndepend-4-and-cqlinq/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Adding User Emulation to an Application</title>
		<link>/index.php/architect/designingsoftware/adding-user-emulation-to-an/</link>
		<comments>/index.php/architect/designingsoftware/adding-user-emulation-to-an/#comments</comments>
		<pubDate>Wed, 27 Apr 2011 12:57:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Designing Software]]></category>

		<guid isPermaLink="false">/index.php/2011/04/adding-user-emulation-to-an/</guid>
		<description><![CDATA[One of the tricks I picked up from my last job (and our forum software, now that I think of it) is the idea of user emulation. I could log into the application, search for a user, and, at the push of a button, temporarily become that user. The only differences between emulating them and actually logging in as them were a black bar that indicated who I am (with a link to stop emulating), all audit records continued to reflect my own user id, and I didn't need to keep track of 30 different sample accounts and passwords.]]></description>
				<content:encoded><![CDATA[<p>One of the tricks I picked up from my last job (and our forum software, now that I think of it) is the idea of user emulation. I could log into the application, search for a user, and, at the push of a button, temporarily become that user. The only differences between emulating them and actually logging in as them were a black bar that indicated who I am (with a link to stop emulating), all audit records continued to reflect my own user id, and I didn&#8217;t need to keep track of 30 different sample accounts and passwords.</p>
<p>As I said, it&#8217;s a neat trick. </p>
<h2>Advantages</h2>
<p>Implemented consistently, this stops being just a trick and becomes a very powerful tool. Developers, QA, even customer service and support see benefits from being able to quickly emulate end users.</p>
<h3>Debugging</h3>
<p>As developers the largest benefit for us is the ability to debug our systems from a variety of viewpoints. Rather than going through the trouble of creating and managing sample users for every impacted role, we can use existing user records with real data behind them. This not only reduces the time to start debugging and remove the time involved in ongoing maintenance of test accounts, but may actually force out a few extra bugs that we wouldn&#8217;t catch with a new, vanilla user account.</p>
<h3>Support</h3>
<p>Duplicating a bug or answering a question becomes a lot easier when we can emulate the person on the other end of the bug report or phone. We can emulate the person in our production environment and in our development environment and verify that both environments break in the same way (or that development doesn&#8217;t break after we fix it). We also get firsthand clues, which can knock hours off the bug-hunting process.</p>
<h3>Customer Service</h3>
<p>Just as developers and support benefit on the technical side, in some cases Customer Service representatives (or selected members of the business) can use emulation to provide business or first level user support. When an end user has a complex question about an order or report, the service representative no longer needs to imagine their way through the issue, but instead can emulate that user, walk through the process, and see exactly what their user is seeing. This can be even more critical in systems where users see only a subset of the functionality or data available to service representatives.</p>
<h2>Implementation</h2>
<p>So emulation is a useful tool as well as a neat trick. Like many things, it is generally easier to bake this in from the beginning than to add it after the fact. If the user information is accessed in a consistent fashion in existing software, it is possible to squeeze in emulation logic and clean up the few places people cut corners and accessed users outside the normal context. If the user information is loaded and accessed at will throughout the application, adding emulation will be much harder (though there is some additional benefit in that it forces you to clean up your architecture a bit).</p>
<p><b>Sample Session Context Class</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="vbnet"><thead><tr><td colspan="2"  class="head">vb.net</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="de1"><pre class="de1"><span class="kw1">Public</span> <span class="kw1">Class</span> SessionContext
&nbsp;
&nbsp; &nbsp; <span class="kw1">Private</span> <span class="kw1">Property</span> EmulatedUser <span class="kw1">As</span> User
&nbsp; &nbsp; <span class="kw1">Private</span> <span class="kw1">Property</span> LoggedInUser <span class="kw1">As</span> User
&nbsp;
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">ReadOnly</span> <span class="kw1">Property</span> User <span class="kw1">As</span> User
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">If</span> <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span> <span class="kw1">IsNot</span> <span class="kw1">Nothing</span> <span class="kw1">Then</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Return</span> <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Else</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Return</span> <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">LoggedInUser</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">If</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Get</span>
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Property</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">ReadOnly</span> <span class="kw1">Property</span> IsEmulating <span class="kw1">As</span> <span class="kw2">Boolean</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Return</span> <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span> <span class="kw1">IsNot</span> <span class="kw1">Nothing</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Get</span>
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Property</span>
&nbsp;
&nbsp; &nbsp; <span class="co1">''' &lt;summary&gt;</span>
&nbsp; &nbsp; <span class="co1">''' Property used for accessing current's users information for auditing</span>
&nbsp; &nbsp; <span class="co1">''' &lt;/summary&gt;</span>
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">ReadOnly</span> <span class="kw1">Property</span> UserIdForAuditing <span class="kw1">As</span> <span class="kw2">Integer</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">If</span> <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">LoggedInUser</span> <span class="kw1">IsNot</span> <span class="kw1">Nothing</span> <span class="kw1">Then</span> <span class="kw1">Return</span> <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">LoggedInUser</span><span class="sy0">.</span><span class="me1">UserID</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Return</span> <span class="nu0">0</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Get</span>
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Property</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">Sub</span> LogInUser<span class="br0">&#40;</span><span class="kw1">ByVal</span> newUser <span class="kw1">As</span> User<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">LoggedInUser</span> <span class="sy0">=</span> newUser
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span> <span class="sy0">=</span> <span class="kw1">Nothing</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">' plus other login logic stuff</span>
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">Sub</span> LogOutUser<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">LoggedInUser</span> <span class="sy0">=</span> <span class="kw1">Nothing</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span> <span class="sy0">=</span> <span class="kw1">Nothing</span>
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">Sub</span> StartEmulating<span class="br0">&#40;</span><span class="kw1">ByVal</span> selectedUser <span class="kw1">As</span> User<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span> <span class="sy0">=</span> selectedUser
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">Sub</span> StopEmulating<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Me</span><span class="sy0">.</span><span class="me1">EmulatedUser</span> <span class="sy0">=</span> <span class="kw1">Nothing</span>
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Sub</span>
<span class="kw1">End</span> <span class="kw1">Class</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Public Class SessionContext

	Private Property EmulatedUser As User
	Private Property LoggedInUser As User

	Public ReadOnly Property User As User
		Get
			If Me.EmulatedUser IsNot Nothing Then
				Return Me.EmulatedUser
			Else
				Return Me.LoggedInUser
			End If
		End Get
	End Property

	Public ReadOnly Property IsEmulating As Boolean
		Get
			Return Me.EmulatedUser IsNot Nothing
		End Get
	End Property

	''' &lt;summary&gt;
	''' Property used for accessing current's users information for auditing
	''' &lt;/summary&gt;
	Public ReadOnly Property UserIdForAuditing As Integer
		Get
			If Me.LoggedInUser IsNot Nothing Then Return Me.LoggedInUser.UserID
			Return 0
		End Get
	End Property

	Public Sub LogInUser(ByVal newUser As User)
		Me.LoggedInUser = newUser
		Me.EmulatedUser = Nothing
		' plus other login logic stuff
	End Sub

	Public Sub LogOutUser()
		Me.LoggedInUser = Nothing
		Me.EmulatedUser = Nothing
	End Sub

	Public Sub StartEmulating(ByVal selectedUser As User)
		Me.EmulatedUser = selectedUser
	End Sub

	Public Sub StopEmulating()
		Me.EmulatedUser = Nothing
	End Sub
End Class</pre></div></div>

<p>Altogether not that complex a code construct, although I&#8217;m sure it will grow more so over the lifetime of the application. </p>
<p>As long as we consistently access user information through the exposed User property in the session and user the exposed UserIdForAuditing property for auditing purposes, then most of the work is done for us. The only other piece we need is a button on the UI to start emulating and some logic to handle the danger below.</p>
<h2>Dangers</h2>
<p>There are two main dangers to watch for. The first danger is making sure emulation doesn&#8217;t grant users the ability to promote themselves. Either emulation needs to be reserved for administrative users, or logic needs to be added to make certain levels or roles unavailable for emulation (or assignment during emulation).</p>
<p>The other main danger is that you now have a much greater chance (probably guarantee) that you will have the same user &#8220;logged in&#8221; in two locations at once. Most applications handle this just fine, but there are also many that cannot. Examples of this behavior are enforcing single location sign-ons, coded security that assumes multiple location means an account has been compromised, and making the mistake of storing session data keyed only to a user id instead of a unique session.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/designingsoftware/adding-user-emulation-to-an/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>CQL From Visual Studio With NDepend 3</title>
		<link>/index.php/architect/designingsoftware/cql-from-visual-studio-with-ndepend-3/</link>
		<comments>/index.php/architect/designingsoftware/cql-from-visual-studio-with-ndepend-3/#comments</comments>
		<pubDate>Mon, 06 Sep 2010 20:29:00 +0000</pubDate>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
				<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[.net]]></category>
		<category><![CDATA[analysis]]></category>
		<category><![CDATA[c#]]></category>
		<category><![CDATA[ndepend]]></category>

		<guid isPermaLink="false">/index.php/2010/09/cql-from-visual-studio-with-ndepend-3/</guid>
		<description><![CDATA[For the last few months I've had the pleasure of working with NDepend version 3.  Most of my development at home is on linux these days, so I haven't used it as much as I'd like, but I have been using it to poke around in various codebases and see what&#8230;]]></description>
				<content:encoded><![CDATA[<p>For the last few months I&#8217;ve had the pleasure of working with <a href="http://ndepend.com/">NDepend</a> version 3.  Most of my development at home is on linux these days, so I haven&#8217;t used it as much as I&#8217;d like, but I have been using it to poke around in various codebases and see what the new Visual Studio integration is all about.  The last version integrated with Visual Studio, technically speaking, but it didn&#8217;t seem nearly as thorough as what I&#8217;ve seen in version 3.  I suspect the improved extensibility model in VS 2010 has a lot to do with this, but can&#8217;t confirm (I haven&#8217;t tried it with 2008 either).</p>
<p>My favorite feature of NDepend has always been CQL, the SQL-like query language that allows you to query your codebase using a variety of common metrics.  This is the same as it ever was (the integration with VS is even quite similar) but with the more thorough integration it seems much more useful.  I like how easy it is now to keep an eye on my CQL constraints when I rebuild.</p>
<p>My favorite CQL feature is the ability to set up CQL constraints <em>from now</em>.  This is really cool for older projects, where it&#8217;s unrealistic to think that your team will be able to fix everything right away.  But what you can do with this feature is ensure that all <em>new or modified</em> code does measure up to your team&#8217;s standards.  You may not be able to clean up all those 1,000 line methods right away, but you <em>can</em> ensure that newer methods fit in a more reasonable size limit (like 975 <img src="https://s.w.org/images/core/emoji/2/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> ).  This is one of the most useful features of the application, IMO.  The way it works is by allowing you to establish a baseline.  By comparing the code&#8217;s current state to this baseline, future analyses are able to determine which methods/types/etc are new or changed, and apply the constraint to only these methods/types/etc.  Sometimes I feel like this would be useful just to be able to concisely see which methods have been changed as well (version control logs aren&#8217;t the most friendly things to read, especially spread throughout a large codebase).  Below is a screenshot of this feature in action.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/CQL-VS-NDepend3/cqlexplorer.PNG" alt="CQL Explorer" title="CQL Explorer Screenshot" width="971" height="283" /></div>
<p>The first three queries listed are built in to NDepend.  I added the fourth, just to have a listing of new/changed methods ready.  The CQL for this query is simply

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="text"><thead><tr><td colspan="2"  class="head">Text</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">SELECT METHODS WHERE WasAdded OR CodeWasChanged</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT METHODS WHERE WasAdded OR CodeWasChanged</pre></div></div>

<p>Not a bad way to keep an eye on what is getting changed in the codebase.  To get in this state I added three new methods to the codebase I was looking at (in a place that I could remove them easily since they are not only low quality but useless as well). Two had 7 parameters, putting them in violation of the constraint for basic quality principles.  I didn&#8217;t add any tests, so all three were in violation of the test coverage constraint.  And finally they all showed up in the list of new methods.  It&#8217;s worth noting the yellow circle at the bottom right as well &#8211; the yellow means that warnings were encountered when running the CQL portion of the analysis.  Green would be good, and red would mean I have some bad queries that can&#8217;t be run.  </p>
<p>Double clicking a row in the CQL Explorer will take you to the CQL Editor &#8211; from here you can view the results of the query, and the CQL it contains.  From there you can easily navigate to the method definition in your source code by double-clicking.  </p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/CQL-VS-NDepend3/cqleditor.PNG" alt="CQL Editor" title="CQL Editor Screenshot" width="457" height="913" /></div>
<p>One of the things I really like here is the comments in the built-in queries.  They contain numerous links to metric definitions on the NDepend website, and sometimes even links to blog entries where the lead developer, <a href="http://codebetter.com/blogs/patricksmacchia/default.aspx">Patrick Smacchia</a> has explained features in greater detail.  I really like this form of documentation, it makes it easier to keep up to date and also minimizes what needs to be stored on the user&#8217;s computer.  </p>
<p>What I was happiest to find in the VS integration is the ability to superimpose CQL results onto the metrics view.  The metrics view consists of a grid where each block represents a unit of code (type, method, etc&#8230;) and they are sized according to their value for the metric in question.  When running CQL queries, the units of code matching your criteria are highlighted, giving a great visualization of how much code exhibits the properties you are looking for.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/CQL-VS-NDepend3/metricsexplorer.PNG" alt="Metrics Explorer" title="CQL Metrics Explorer" width="887" height="686" /></div>
<p>The selected query (about types having too many efferent couplings) is the currently selected query, and I had moused over the QueryParser class to highlight it in pink and show the metrics summary on the right.  I find that having this built right into visual studio really helps me figure out where to focus my refactoring energy.</p>
<p>It looks as if a lot of effort went into <a href="http://codebetter.com/blogs/patricksmacchia/archive/2010/08/29/validating-code-rules-in-visual-studio.aspx">making the CQL validation phase fast</a>:<br />
<blockquote>CQL rules validation phase is fast. The performance challenge was to make this happens almost instantly to avoid slowing the developer machine. Hopefully for a large 100K Lines of Code application, code gets re-analyzed and 200 CQL rules can get checked, all within 3 seconds after the (re)compilation of one or several .NET assemblies. These fast performances were made possible thanks to the development of a new technology of incremental code analysis. With incremental code analysis, only modified code gets re-analyzed. I can attest that this was extremely challenging and complex development!</p></blockquote>
<p>From what I&#8217;ve seen, the effort&#8217;s been a success.  I&#8217;ve mostly been using it to look at different versions of <a href="http://lucene.apache.org/lucene.net/">Lucene.net</a>, as I&#8217;ve got some work to do to get some of my code to build in VS2010.  For this size codebase (~23k lines) the analysis is completed very quickly, even if I disable the incremental analysis.  The CQL validation portion completes almost instantly, and memory usage doesn&#8217;t seem to get out of hand even when keeping VS open for days.  I&#8217;d imagine if your computer can handle running Visual Studio to begin with, it won&#8217;t have too much trouble with the NDepend integration. I could see some of the VS add-ins that don&#8217;t play well with others causing issues, especially with a very large codebase, so I hope to go back and test with a larger codebase and some other add-ins installed eventually.</p>
<p>Most of the other NDepend goodies are available in VS now as well (Dependency Graphs, Test Coverage Analysis, Class Browser, etc&#8230;) but I won&#8217;t get into all that here.  I really see CQL as the app&#8217;s killer feature, and that is what I spend the most time thinking about.  There is a good overview of the app&#8217;s capabilities <a href="http://www.ndepend.com/Features.aspx#Tour">here</a> if you&#8217;d like to read more.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/designingsoftware/cql-from-visual-studio-with-ndepend-3/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Model-View-Presenter: Looking at Passive View</title>
		<link>/index.php/architect/designingsoftware/model-view-presenter-looking-at-passive/</link>
		<comments>/index.php/architect/designingsoftware/model-view-presenter-looking-at-passive/#comments</comments>
		<pubDate>Thu, 15 Jul 2010 09:44:12 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[Introduction to Architecture and Design]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[model view presenter]]></category>
		<category><![CDATA[passive view]]></category>
		<category><![CDATA[patterns]]></category>

		<guid isPermaLink="false">/index.php/2010/07/model-view-presenter-looking-at-passive/</guid>
		<description><![CDATA[Model-View-Presenter is an architecture pattern that defines a structure for behavior and logic at the UI level. M-V-P separates the logic of the presentation, such as interacting with back-end services and the business layer, from the mechanics of disp&#8230;]]></description>
				<content:encoded><![CDATA[<p>Model-View-Presenter is an architecture pattern that defines a structure for behavior and logic at the UI level. M-V-P separates the logic of the presentation, such as interacting with back-end services and the business layer, from the mechanics of displaying buttons and interface components. </p>
<p>I often build small projects to help understand and grow my skills as a developer, architect, and all-around technologist (as may be apparent from the <a href="/index.php/All/?disp=authdir&amp;author=9" target="_blank" title="See all of my posts at LTD">wide range of topics I post on</a>). Today I worked with a combination of Visio and Visual Studio to build a sample project to play with the Passive View concept and to help grow my own understanding of the concept. This post will cover the Visio side of my learning-curve.</p>
<p>You can read more about Model View Presenter at <a href="http://en.wikipedia.org/wiki/Model-view-presenter" target="_blank" title="Model-View-Presenter at Wikipedia">Wikipedia</a> and <a href=http://msdn.microsoft.com/en-us/magazine/cc188690.aspx"" target="_blank" title="Model View Presenter by Jean-Paul Boodhoo on MSDN">MSDN</a>. Perhaps the best information can be found on Martin Fowler&#8217;s site, where he has separate write-ups on <a href="http://www.martinfowler.com/eaaDev/PassiveScreen.html" target=_blank" title="Passive View pattern">Passive View</a> and <a href="http://www.martinfowler.com/eaaDev/SupervisingPresenter.html" target=_blank" title="Supervising Controller Pattern">Supervising Controller</a>.</p>
<div style="background-color:#FFFFCC; padding: .5em; margin: .5em; border: 1px solid #DDDDAA; color: #333333; font-size: 80%;">Note: I know some people were waiting for another Virtual Lab entry this week, and here I am writing about Architecture instead. Don&#8217;t worry, the virtual lab series will continue, I just felt like doing a write-up while I was playing this past weekend.</div>
<h2>Passive View</h2>
<p>Passive View is a subset of the Model-View-Presenter pattern. In Passive View, the interface is responsible for handling interface-specific logic, such as figuring out how to put a value in a textbox or react to events from button clicks, but all actions and logic outside of the raw UI are sent to the Presenter to execute or manage. The Presenter is responsible for calling business methods in the Business model and updating the data that is available in the View. </p>
<div style="text-align: center; font-size: .8em; color: #666666;">
<img src="http://tiernok.com/LTDBlog/MVP/mvp.png" alt="Basic Model-View-Presenter diagram" /><br />
Basic Model-View-Presenter Diagram
</div>
<p>From the outside in, the architecture for Passive View looks something like this:</p>
<ul>
<li>UI &#8211; The User Interface reflects what is going on beneath it by implementing one or more View interfaces</li>
<li>Presenter &#8211; The Presenter receives interactions from the UI or Model and updates the Views it is attached to</li>
<li>Model &#8211; The model is a facade or black box in our diagram, behind which is a business logic layer and data layer</li>
</ul>
<p>In a flat architecture we would collect data from the interface, perhaps do some business and data validation, and then save it directly to a database using stored procedures or inline SQL. Defining a data access layer (or data model like entity framework) allows our application to operate on cohesive, defined objects that are meaningful to the application and stored and retrieved consistently. Defining a business logic layer allows us to centralize business rules that operate on entities in our application in a manner that is consistent with the business and internally consistent in the application, minimizing the risk that occurs when making changes to the business flow. Separating the logic of populating inputs and responding to button presses on the UI from the information being communicated to the end user and conceptual responses to their input allows the system to interact with the user consistently across any number of interfaces into the same application.</p>
<p>The definition of each level increases our ability to automate testing and supports greater <a href="http://en.wikipedia.org/wiki/Separation_of_concerns" title="Separation of Concerns at Wikipedia" target="_blank">Separation of Concerns</a>.</p>
<h2>Implementing a Sample Project</h2>
<p>My learning exercise has been the the creation of an ASP.Net search page that allows an end user (customer) to search for finished products from the AdventureWorks sample database. The architecture and design decisions were done as an exercise in Visio using simple shapes and layouts.</p>
<p>My example application has several functional and non-functional requirements:</p>
<ol>
<li>Functional &#8211; Display product number, name, list price, and available quantity in tabular format</li>
<li>Functional &#8211; Provide a basic search input and button to search product names</li>
<li>Non-Functional &#8211; Implement an M-V-P pattern &#8211; Obviously the purpose of this whole exercise</li>
<li>Non-Functional &#8211; Use a simple model stack that can be easily replaced with a Service-Oriented one at a later time</li>
<li>Non-Functional &#8211; Build with the idea that we will later create a Silverlight or WPF front-end</li>
<li>Non-Functional &#8211; Make pretty pictures for article</li>
</ol>
<p><i>My unwritten, final requirement was to finish the whole thing in half a day, though luckily I didn&#8217;t define whether I intended that to mean 4 hours or 12.</i></p>
<h3>Initial Architecture</h3>
<p>To start I created a diagram of the application architecture:</p>
<div style="text-align: center; font-size: .8em; color: #666666;">
<img src="http://tiernok.com/LTDBlog/MVP/mvp_arch_01.png" alt="More extensive M-V-P Diagram" /><br />
More Extensive Model-View-Presenter Diagram
</div>
<p>The purple layer is my presentation layer, which reflects the View. The blue layer is my Presenter layer which contains the logic for interacting between the end user and interface as well as a definition, or contract, of the information available in the View. The Green is the Model (or is behind the model, depending on your viewpoint) and exposes business functions and data entities for the Presenter to interact with.</p>
<h3>Class Layout</h3>
<p>Once the high level diagram was completed, I could approach the task of creating some base classes and interfaces to use in implementing the project.</p>
<ul>
<li>Model.IModel &#8211; Generic Model Interface to expose business calls to Presenters</li>
<li>Presenter.IView &#8211; Generic View Interface that all Presenters can interact with and all screens implement</li>
<li>Presenter.BasePresenter &#8211; Generic Presenter class that all Presenters will implement</li>
</ul>
<p>To keep the project to a single morning but also allow the ability to come back and build a more architecturally sound solution, I implemented the Model in a very basic fashion that was referenced locally by the Presenter project and makes direct calls to SQL Server using ADO and parametrized, inline SQL. This buys me the benefits of having a well-defined Model (via the interface) but allows me concentrate my time and effort on the learning part of the project (ie, the M-V-P interaction and structure). Defining the model interface also leaves me open to come back and replace it with better separated code and the ability to create a model that acts as a facade to a service stack, instead of local DLLs.</p>
<ul>
<li>Model.BasicModel.Model &#8211; Basic implementation of a model that will interact with AdventureWorks on SQL Server</li>
<li>Model.Entities.Product &#8211; A Product Entity that can be communicated between an IModel instance and Presenter
<li>Presenter.ProductSearchPresenter &#8211; A Presenter to manage product search interface</li>
<li>Presenter.IProductSearchView &#8211; A view of the data involved in a product search</li>
<li>ProductSearch.aspx &#8211; A web page that implements the IProductSearchView and interacts with the ProductSearchPresenter</li>
</li>
</ul>
<p>My final Visio diagram ended up looking like this:</p>
<div style="text-align: center; font-size: .8em; color: #666666;">
<img src="http://tiernok.com/LTDBlog/MVP/mvp_arch_02.png" alt="Example Application Diagram" /><br />
Diagram of Example Application
</div>
<p>In this case the left side represents basic components (bases classes and interfaces) that are used to define common structure or contracts on the right side. </p>
<h2>The Code</h2>
<p>For the purposes of the example project, my view has properties for Search Text, a Search Count (number of results), Results (a generic list of the Product entity), and a boolean indicating whether there are results to display. My Web Form implements these properties, tying them to elements on the screen.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">public</span> <span class="kw1">partial</span> <span class="kw4">class</span> WebForm1 <span class="sy0">:</span> <span class="kw5">System.<span class="me1">Web</span><span class="sy0">.</span><span class="me1">UI</span></span><span class="sy0">.</span><span class="me1">Page</span>, Presenter<span class="sy0">.</span><span class="me1">Views</span><span class="sy0">.</span><span class="me1">IProductSearchView</span> <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Presenter<span class="sy0">.</span><span class="me1">ProductSearchPresenter</span> _presenter<span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">protected</span> <span class="kw4">void</span> Page_Load<span class="br0">&#40;</span><span class="kw4">object</span> sender, EventArgs e<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; btnSearch<span class="sy0">.</span><span class="me1">Click</span> <span class="sy0">+=</span> <span class="kw3">new</span> EventHandler<span class="br0">&#40;</span>btnSearch_Click<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rptProducts<span class="sy0">.</span><span class="me1">ItemDataBound</span> <span class="sy0">+=</span> <span class="kw3">new</span> RepeaterItemEventHandler<span class="br0">&#40;</span>rptProducts_ItemDataBound<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _presenter <span class="sy0">=</span> <span class="kw3">new</span> Presenter<span class="sy0">.</span><span class="me1">ProductSearchPresenter</span><span class="br0">&#40;</span><span class="kw3">new</span> Model<span class="sy0">.</span><span class="me1">LocalModel</span><span class="sy0">.</span><span class="me1">BasicModel</span><span class="br0">&#40;</span><span class="kw5">System.<span class="me1">Configuration</span></span><span class="sy0">.</span><span class="me1">ConfigurationManager</span><span class="sy0">.</span><span class="me1">ConnectionStrings</span><span class="br0">&#91;</span><span class="st0">&quot;AdventureWorks&quot;</span><span class="br0">&#93;</span><span class="sy0">.</span><span class="me1">ConnectionString</span><span class="br0">&#41;</span>, <span class="kw1">this</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">void</span> btnSearch_Click<span class="br0">&#40;</span><span class="kw4">object</span> sender, EventArgs e<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_presenter<span class="sy0">.</span><span class="me1">ExecuteProductSearch</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> Presenter<span class="sy0">.</span><span class="me1">Views</span><span class="sy0">.</span><span class="me1">IProductSearchView</span><span class="sy0">.</span><span class="me1">SearchText</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">get</span> <span class="br0">&#123;</span> <span class="kw1">return</span> tbSearch<span class="sy0">.</span><span class="me1">Text</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">set</span> <span class="br0">&#123;</span> tbSearch<span class="sy0">.</span><span class="me1">Text</span> <span class="sy0">=</span> <span class="kw1">value</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">int</span> Presenter<span class="sy0">.</span><span class="me1">Views</span><span class="sy0">.</span><span class="me1">IProductSearchView</span><span class="sy0">.</span><span class="me1">ResultCount</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">set</span> <span class="br0">&#123;</span> lblResultCount<span class="sy0">.</span><span class="me1">Text</span> <span class="sy0">=</span> <span class="kw1">value</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; List<span class="sy0">&lt;</span>Model<span class="sy0">.</span><span class="me1">Entities</span><span class="sy0">.</span><span class="me1">Product</span><span class="sy0">&gt;</span> Presenter<span class="sy0">.</span><span class="me1">Views</span><span class="sy0">.</span><span class="me1">IProductSearchView</span><span class="sy0">.</span><span class="me1">SearchResults</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">set</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">value</span> <span class="sy0">!=</span> <span class="kw1">null</span> <span class="sy0">&amp;&amp;</span> <span class="kw1">value</span><span class="sy0">.</span><span class="me1">Count</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rptProducts<span class="sy0">.</span><span class="me1">DataSource</span> <span class="sy0">=</span> <span class="kw1">value</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rptProducts<span class="sy0">.</span><span class="me1">DataBind</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">bool</span> Presenter<span class="sy0">.</span><span class="me1">Views</span><span class="sy0">.</span><span class="me1">IProductSearchView</span><span class="sy0">.</span><span class="me1">DisplayResults</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">set</span> <span class="br0">&#123;</span> tblResults<span class="sy0">.</span><span class="me1">Visible</span> <span class="sy0">=</span> <span class="kw1">value</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="sy0">...</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> public partial class WebForm1 : System.Web.UI.Page, Presenter.Views.IProductSearchView {

        Presenter.ProductSearchPresenter _presenter;

        protected void Page_Load(object sender, EventArgs e) {
            btnSearch.Click += new EventHandler(btnSearch_Click);
            rptProducts.ItemDataBound += new RepeaterItemEventHandler(rptProducts_ItemDataBound);
            _presenter = new Presenter.ProductSearchPresenter(new Model.LocalModel.BasicModel(System.Configuration.ConfigurationManager.ConnectionStrings["AdventureWorks"].ConnectionString), this);
        }
        
        void btnSearch_Click(object sender, EventArgs e) {
            this._presenter.ExecuteProductSearch();
        }

        string Presenter.Views.IProductSearchView.SearchText {
            get { return tbSearch.Text; }
            set { tbSearch.Text = value; }
        }

        int Presenter.Views.IProductSearchView.ResultCount {
            set { lblResultCount.Text = value.ToString(); }
        }

        List&lt;Model.Entities.Product&gt; Presenter.Views.IProductSearchView.SearchResults {
            set {
                if (value != null &amp;&amp; value.Count &gt; 0) {
                    rptProducts.DataSource = value;
                    rptProducts.DataBind();
                }
            }
        }

        bool Presenter.Views.IProductSearchView.DisplayResults {
            set { tblResults.Visible = value; }
        }
...</pre></div></div>

<p>As the presenter populates properties in the view, the information is automatically reflected on the page. The actual logic of how the business functions are called and populate those properties are neatly packaged up in the Presenter and View interface and very little logic occurs in the actual web form.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">public</span> <span class="kw4">class</span> ProductSearchPresenter <span class="sy0">:</span> BasePresenter <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">protected</span> Views<span class="sy0">.</span><span class="me1">IProductSearchView</span> _view<span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> ProductSearchPresenter<span class="br0">&#40;</span>Model<span class="sy0">.</span><span class="me1">IModel</span> model, Views<span class="sy0">.</span><span class="me1">IProductSearchView</span> view<span class="br0">&#41;</span> <span class="sy0">:</span> <span class="kw1">base</span><span class="br0">&#40;</span>model<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view <span class="sy0">=</span> view<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">ResultCount</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">DisplayResults</span> <span class="sy0">=</span> <span class="kw1">false</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> ExecuteProductSearch<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; List<span class="sy0">&lt;</span>Model<span class="sy0">.</span><span class="me1">Entities</span><span class="sy0">.</span><span class="me1">Product</span><span class="sy0">&gt;</span> results<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; results <span class="sy0">=</span> <span class="kw1">this</span><span class="sy0">.</span>_model<span class="sy0">.</span><span class="me1">SearchProduct</span><span class="br0">&#40;</span><span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">SearchText</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>results<span class="sy0">.</span><span class="me1">Count</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">ResultCount</span> <span class="sy0">=</span> results<span class="sy0">.</span><span class="me1">Count</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">DisplayResults</span> <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">SearchResults</span> <span class="sy0">=</span> results<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">ResultCount</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">DisplayResults</span> <span class="sy0">=</span> <span class="kw1">false</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span>_view<span class="sy0">.</span><span class="me1">SearchResults</span> <span class="sy0">=</span> <span class="kw1">null</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> public class ProductSearchPresenter : BasePresenter {

        protected Views.IProductSearchView _view;

        public ProductSearchPresenter(Model.IModel model, Views.IProductSearchView view) : base(model) {
            this._view = view;
            this._view.ResultCount = 0;
            this._view.DisplayResults = false;
        }

        public void ExecuteProductSearch() {
            List&lt;Model.Entities.Product&gt; results;
            results = this._model.SearchProduct(this._view.SearchText);
            if (results.Count &gt; 0) {
                this._view.ResultCount = results.Count;
                this._view.DisplayResults = true;
                this._view.SearchResults = results;
            }
            else {
                this._view.ResultCount = 0;
                this._view.DisplayResults = false;
                this._view.SearchResults = null;
            }
        }
    }</pre></div></div>

<p>To create a unit test, we define a simple view that implements the view interface, execute the presenter logic, and verify the properties are populated the way we would expect when the same presenter calls are made from the interface.</p>
<h3>Extending the Architecture Further</h3>
<p>Extending the application to display product search in a different manner would only require the addition of a new interface that also implements the Product Search View. A Silverlight front-end would only require creating the basic project, implementing the product search View, and wiring the new interface controls to the view properties. To replace the direct mode reference with a service reference, we could create a service facade that implemented the IModel interface, connected to a local or remote WCF service behid the scenes to handle the real model logic. And finally, instead of counting on our QA department to test all of the application interactions, we can create unit tests directly against the Presenter and Views to ensure that all of the interactions below the top surface of the application are happening consistently and to our expectation.</p>
<h2>Your Turn</h2>
<p>Getting this much of the architecture working is a good first step. I took a number of shortcuts on the BasicModel class in my example, but I now have a functional Model-View-Presenter application to play with. Hopefully there was enough information in the article to interest you in trying this out on your own. I urge you to read the articles linked in the top of the post (or several more in my <a href="http://delicious.com/tarwn/model-view-presenter" title="Eli's Delicious bookmarks for M-V-P" target="_blank">Model-View-Presentation bookmarks</a>) and come up with your own diagrams and sample project. Even doing a small project will force you to run into questions and considerations you wouldn&#8217;t have had by simply reading about it, not to mention unrelated tidbits you will pick up along the way (for instance, I also learned about <a href="http://msdn.microsoft.com/en-us/library/ms668604.aspx" title="ObservableCollection at MSDN" target="_blank">ObservableCollections</a> today).</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/designingsoftware/model-view-presenter-looking-at-passive/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>
		</item>
		<item>
		<title>MSDN Ultimate Subscription giveaway +1</title>
		<link>/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/</link>
		<comments>/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/#respond</comments>
		<pubDate>Tue, 06 Jul 2010 21:35:00 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Designing Multi-Application Solutions]]></category>
		<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[Enterprise Architecture]]></category>
		<category><![CDATA[Hardware and Infrastructure Design]]></category>
		<category><![CDATA[Information and Integration Architecture]]></category>
		<category><![CDATA[Introduction to Architecture and Design]]></category>
		<category><![CDATA[giveaway]]></category>
		<category><![CDATA[msdn]]></category>
		<category><![CDATA[visual studio 2010]]></category>

		<guid isPermaLink="false">/index.php/2010/07/msdn-ultimate-subscription-giveaway-2/</guid>
		<description><![CDATA[I was fortunate enough to receive MSDN Ultimate Subscriptions as well as SQLDenis.  I Think Denis's idea and contest to see who we can give these to is excellent.  To support Denis and his idea, I'm adding another subscription that will be handed over once we read over the responses.  That means your chances just got much better to enjoy the subscriptions and the benefits Visual Studio 2010 has to offer!]]></description>
				<content:encoded><![CDATA[<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/msdn_notforresale.gif" alt="" title="" width="250" height="145" align="left" /></div>
<p>I was fortunate enough to receive MSDN Ultimate Subscriptions as well as SQLDenis (<a href="/index.php/All/?disp=authdir&amp;author=4">blog</a> | <a href="http://twitter.com/denisgobo/">Twitter</a>).  I Think Denis&#8217;s idea and contest to see who we can give these to is excellent.  To support Denis and his idea, I&#8217;m adding another subscription that will be handed over once we read over the responses.  That means your chances just got much better to enjoy the subscriptions and the benefits Visual Studio 2010 has to offer!</p>
<p>
</p>
<p>To go over what the response should consist of againâ€¦</p>
<ol>
<li>Why do you need this, what are you going to build with this, will it help other people&#8217;s lives?</li>
<li>What specific functionality that is only part of Ultimate are you going to use?</li>
<li>You need to have a technical blog and provide the URL to that blog, if you are an active member of the technical community (stackoverflow, msdn forums etc etc) then also include those links.</li>
</ol>
<p>Leave a comment <a href="/index.php/Architect/HardwareInfrastructureDesign/msdn-ultimate-subscription-giveaway">here</a>, you will also have to join the forums, that way I will have your email to contact you and I will able to ask you questions about your answers if needed. I created a thread in the forums here: http://forum.lessthandot.com/viewtopic.php?f=121&amp;t=11456</p>
<blockquote><p><span class="MT_red">Note: Click, <a href="/index.php/Architect/HardwareInfrastructureDesign/msdn-ultimate-subscription-giveaway">here</a> to leave your comment on the original blog post and add a comment to the forums to indicate you have done so.  Do not put your comment on this blog post</span></p></blockquote>
<p><i>And as in the original blog post, the results will be judged by the LessThanDot owners/management group</i></p>
<p>
These MSDN Subscriptions are more than just something you will leave to start playing with 6 months from now.  I can honestly say, even with the price tag they come with retail on the shelf, they are worth it.  The Visual Studio and .NET Framework product team are really outdoing themselves this time by sending these out to us so we can find community members that will really take advantage of them.
</p>
<p><strong>Good luck and I look forward to reading your responses!</strong></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Validating Architecture with Visual Studio 2010</title>
		<link>/index.php/architect/designingsoftware/validating-architecture-with-visual-stud-2010/</link>
		<comments>/index.php/architect/designingsoftware/validating-architecture-with-visual-stud-2010/#comments</comments>
		<pubDate>Fri, 29 Jan 2010 11:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
				<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[Introduction to Architecture and Design]]></category>
		<category><![CDATA[ndepend]]></category>
		<category><![CDATA[visual studio 2010]]></category>

		<guid isPermaLink="false">/index.php/2010/01/validating-architecture-with-visual-stud-2010/</guid>
		<description><![CDATA[I went to a local MS launch event for Visual Studio today, mainly to see what was new with Team Foundation Server, but what really impressed me was some of the new architecture tools they've added.  I admittedly haven't read too much about this before t&#8230;]]></description>
				<content:encoded><![CDATA[<p>I went to a local MS launch event for Visual Studio today, mainly to see what was new with Team Foundation Server, but what really impressed me was some of the new architecture tools they&#8217;ve added.  I admittedly haven&#8217;t read too much about this before today (my needs have been well-served by <a href="http://ndepend.com/">NDepend</a>) but I&#8217;m happy to see some improved architecture tools find their way into Visual Studio.  Looking at the <a href="http://www.microsoft.com/visualstudio/en-us/products/2010/default.mspx#compare">version comparison chart</a>, it appears this is only available in the <em>Ultimate</em> version.</p>
<p>For this example, I&#8217;ll use a Layer Diagram for an imaginary application with Web, Business and Data tiers, and some shared model objects.  This is an intentionally oversimplified example.</p>
<p>Anyway here&#8217;s what the diagram looks like:</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/Validating-Architecture-VS2010/ArchitectureDiagramExample.PNG" alt="Sample Architecture Diagram" title="Diagram" width="428" height="372" /></div>
<p>Nothing really special here &#8211; the words are the name of the tier, and the numbers are the number of units of code (in this case projects, but you can add individual namespaces or classes as well).  To create the diagram, we need to first create a new Visual Studio Modeling Project.  A new layer diagram can then be added to this project.  I used the designer to add the shapes and dependency lines, and all looks good.  But we want to do more than look at it!</p>
<p>This is where things get interesting.  To place modules into one of the tiers, you can drag and drop either from the Solution Explorer or from the new Architecture Explorer.  Both have different ways of finding the objects you are looking for, but the result is the same.  Once all modules are allocated to the right layer, you can right click the diagram and choose &#8220;Validate Architecture&#8221;.</p>
<p>Visual Studio will then build your solution and validate its architecture.  If all goes well, you&#8217;ll see something like this in the output window:</p>
<blockquote><p>1/28/2010 4:04:17 PM: Architecture validation is starting.<br />
1/28/2010 4:04:23 PM: Architecture validation succeeded (0 suppressed).
</p></blockquote>
<p>Now, let&#8217;s try adding an illegal call, in this case from the data tier to a caching provider found in the web tier (I first tried adding a reference to the &#8220;Biz&#8221; project, but was not allowed because it would introduce a cyclic dependency &#8211; I guess this was in previous versions but I never ran into it before &#8211; pretty cool).</p>
<p>After this call is added, try validating the architecture again.  The solution will be rebuilt, and you&#8217;ll see something like this: </p>
<blockquote><p>1/28/2010 4:19:46 PM: Architecture validation is starting.<br />
1/28/2010 4:19:55 PM: Architecture validation failed with 3 violation(s) (0 suppressed).</p></blockquote>
<p>Ok, so we have violations, just as expected.  Clicking over to the error list you can find what exactly the errors are.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/Validating-Architecture-VS2010/ArchitectureValidationErrors.PNG" alt="Architecture Validation Errors" title="ArchitectureValidationErrors" width="862" height="233" /></div>
<p>So, not only do the undesirable calls added to the Data Layer&#8217;s code trigger violations, but the reference itself does as well.  There are a few things of interest that we can do with the errors from here.  </p>
<p>When right clicking the error, you can choose &#8220;Manage Validation Errors&#8221; from the context menu, and then &#8220;Suppress Errors&#8221;.  Well, as long as you&#8217;re willing to do it at your own risk ;).  Then you&#8217;d end up with a build output like this:</p>
<blockquote><p>1/28/2010 4:25:03 PM: Architecture validation is starting.<br />
1/28/2010 4:25:09 PM: Architecture validation succeeded (3 suppressed).</p></blockquote>
<p>Knowing our readership, I doubt this will be an option though.  So what can be done about this?  If you want to fix the error immediately, you can double click the error message and be taken to the offending code, just as you would for a syntax error if a normal build failed.  If you use Team Foundation Server, you can also select &#8220;Create Work Item&#8221; to create a new TFS work item based on the error.</p>
<p>This can also be included as part of your local build process by setting the &#8220;Validate Architecture&#8221; property of the Modeling Project.  TFS users can also add this step to their team build by opening the Compilation tab and adding the following to the MSBuild arguments section:</p>
<blockquote><p>/p:ValidateArchitecture=true</p></blockquote>
<p>Adding this to the team build is especially cool, because you can actually block check-ins that introduce these kinds of architectural problems.</p>
<p>I am <strong>really</strong> excited to see this kind of stuff getting more attention in Visual Studio.  I&#8217;m not sure if these new components will be able to do everything I&#8217;ve come to expect (and love) from NDepend, but their presence is a huge step forward for Visual Studio, and I think for the .net community in general.  I&#8217;m a big believer in the use of static code analysis as a tool for better understanding the code we work with, and I think that making these tools available to more developers (especially those in shops that are reluctant to use non-Microsoft components or tooling) will really help us continue to improve as a group.  </p>
<p>I noticed while writing this post that <a href="http://codebetter.com/blogs/patricksmacchia/archive/2010/01/28/ndepend-v3-is-now-100-integrated-in-visual-studio.aspx">the latest beta of NDepend 3 is now fully integrated with Visual Studio</a>.  I&#8217;d meant to do a future post comparing the DGQL queries available in Visual Studio 2010 with NDepend&#8217;s CQL, but perhaps a more thorough comparison will be in order.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/designingsoftware/validating-architecture-with-visual-stud-2010/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Danger in Design: Why bother with Architecture ?</title>
		<link>/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/</link>
		<comments>/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/#comments</comments>
		<pubDate>Mon, 30 Jun 2008 10:36:11 +0000</pubDate>
		<dc:creator><![CDATA[damber]]></dc:creator>
				<category><![CDATA[Designing Multi-Application Solutions]]></category>
		<category><![CDATA[Designing Software]]></category>
		<category><![CDATA[Enterprise Architecture]]></category>
		<category><![CDATA[Hardware and Infrastructure Design]]></category>
		<category><![CDATA[Information and Integration Architecture]]></category>
		<category><![CDATA[Introduction to Architecture and Design]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[methodologies]]></category>
		<category><![CDATA[rationale]]></category>

		<guid isPermaLink="false">/index.php/2008/06/why-bother-with-architecture/</guid>
		<description><![CDATA[Creativity is a wonderful thing. It&#8217;s also something different for each of us, which is why sometimes our perspectives on the world can produce conflicting ideas on what is the right way and the wrong way to do things. This is a very common facet of the IT world, in particular making computer software, solutions [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Creativity is a wonderful thing.  It&#8217;s also something different for each of us, which is why sometimes our perspectives on the world can produce conflicting ideas on what is the right way and the wrong way to do things.  This is a very common facet of the IT world, in particular making computer software, solutions and services.  </p>
<h1>We don&#8217;t need architects!  &#8230;Do we ?</h1>
<p>It&#8217;s important for us to remember that we develop software to &#8220;do something&#8221; that we want it to do. In which case we need to continually review the success of that software or solution by evaluating it&#8217;s ability to meet our needs.  But who gets to say what those needs are, and how well they are met?  More importantly, what makes IT solutions good or bad ?  Is it how big they are ? Or how easy to use they are ?  Or maybe how efficiently they operate ? Or what about how well measured and managed they are ?  Or even how easy it is to change the way they work ?  What about all of the above, and much more&#8230;?</p>
<p>Getting to a point where a) you understand what success looks like, and b) you have a solution that delivers that success, can be achieved by using an Architect to facilitate and coordinate the construction of a design and resulting solution.  But that&#8217;s not always what happens. Apart from the many varying definitions of an architect&#8217;s role (and the different types of architects.. e.g. Enterprise Architect, Solutions Architect, Application Architect, Technical Architect,etc), there&#8217;s also often a perception from developers that architects are generally away with the fairies, dreaming up blue sky designs that are just not grounded in reality or worthwhile bothering with.  Additionally, a lot of businesses (too many unfortunately), just don&#8217;t understand the value of using an architect&#8230; Why pay someone to design the solution, when you&#8217;ve got business systems analysts and developers that can work it out between themselves ?</p>
<p> </p>
<h1>Winchester Mystery House, San Jose, CA</h1>
<p>Why indeed&#8230;  well, I thought it may be useful to post a little analogy with the &#8216;real world&#8217; &#8211; where architects and builders have been working together for many years to produce wonderful (and not so wonderful) buildings.</p>
<p>Firstly, let me introduce the Winchester Mystery House, of the Winchester Guns family fame:</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/images/winchesterhouse.png" alt="" title="" width="440" height="286" /></div>
<p></p>
<h2>Functionally Rich</h2>
<ul>
<li>160 Rooms</li>
<li>47 Fireplaces</li>
<li>17 Chimneys</li>
<li>6 kitchens</li>
<li>10,000 windows</li>
</ul>
<p></p>
<h2>State of the Art Technology (at the time)</h2>
<ul>
<li>Wall Insulation</li>
<li>Push button gas lights</li>
<li>No-clog sink patent</li>
<li>Intercoms</li>
<li>Modern Heating &amp; Sewage</li>
</ul>
<p></p>
<h2>Total Cost</h2>
<p style="font-size: 1em;">$5.5m (~<span style="font-weight:800;">$300m</span> today) over <span style="font-weight: 800;">38 years</span> (1884 &#8211; 1922)</p>
<p></p>
<h2>But&#8230; <span style="color:#ff0000;">No Interoperability</span></h2>
<ul>
<li>65 doors to blank walls</li>
<li>13 abandoned staircases</li>
<li>24 skylights in floors</li>
<li>Rooms &#8220;build-around&#8221; other rooms</li>
<li>Enough keys to fill 2 large buckets</li>
</ul>
<p></p>
<p>Ouch.</p>
<p></p>
<h2>Due to the division of labour</h2>
<ul>
<li>Builders: 147</li>
<li>Architects: <span style="font-weight:800;text-decoration:underline;">0</span></li>
</ul>
<p></p>
<h2>Sound Familiar ?</h2>
<p>We&#8217;ve all worked on a project with something like this.  Usually because the system wasn&#8217;t really &#8216;designed&#8217; it just &#8216;happened&#8217;.  Maybe if we spent a little more time designing, and a little less building things would work a little better.  I bet they had some very talented builders working on this too &#8211; but their perspective wasn&#8217;t to make a solid overall design, it was to simply get on and do what they were tasked with.. sound familiar ?  How often do users come to a technical forum and ask for a solution to their problem to be faced with answers like &#8220;you need to normalise your database&#8221; etc, to which they simply retort &#8220;that&#8217;s not part of this project&#8221; ?  Too many, but sadly understandably so.</p>
<p>
A favourite Project Manager quote is &#8220;Failing to Plan is Planning to Fail&#8221;.  And they are generally right &#8211; not having a consistent, well thought out and planned design can lead to very complicated and difficult to manage, change or even use software.  Most architects will have come across solutions or applications that weren&#8217;t &#8216;designed&#8217; and just evolved, and will know just how much of a problem those applications really are.  This is <a href="http://www.sciam.com/article.cfm?id=softwares-dirty-little-secret&amp;sc=rss">Software&#8217;s Dirty Little Secret</a> &#8211; many systems have just &#8220;happened&#8221; without real thought to the design of the software.  And for that matter, haven&#8217;t thought about the application as part of a composite solution either &#8211; this is actually quite rare, even today with all the SOA hype of the last few years.
</p>
<h3>The Architect&#8217;s hand</h3>
<p>
Sometimes it might seem strange to developers that an architect wants to make a project use standards compliant technologies, standardised, re-usable or existing components, such as a Business Rules Engine, Reporting &amp; BI, Service Bus, Messaging Gateway, Portlets, etc &#8211; but this is what architecture is all about &#8211; not thinking about the one, single application or issue, but thinking about it&#8217;s co-existence in a much bigger world &#8211; not just the here and now functional requirements, but tomorrows new direction and demands.  Simplifying and standardising, Rationalising and Re-Using, Conceptualising and Componentising&#8230; the best architectures are easily understood, simple solutions that achieve a kind of elegance in concept and practicality in implementation.
</p>
<p>
There are several methodologies to use for developing an architecture &#8211; personally I use TOGAF which is more for generalist Enterprise &amp; Solutions Architecture development but the <acronym title="Architecture Development Methodology">ADM</acronym> can be applied in concept to designing most solutions/systems/applications.
</p>
<h2>So we do need to &#8220;do architecture&#8221; then?</h2>
<p>In short, Yes.  But how you actually &#8220;do architecture&#8221; depends greatly on the context.  There is a simple lesson here &#8211; architecture is all about simplifying and standardising the problem domain to provide an efficient, re-usable and consistent answer.  The important difference between a formal &#8220;architect&#8221; and a &#8220;builder&#8221; is not of technical expertise, but of perspective, so don&#8217;t assume that your most expert Java Programmer is naturally the architect to your solutions.  This doesn&#8217;t mean that an architect of all types shouldn&#8217;t possess good technical abilities and experience.</p>
<p>There is a nice <a href="http://msdn.microsoft.com/en-us/arcjournal/cc505968.aspx">overview of the different types of Architects</a> at the Microsoft Architecture Journal (which is often surprisingly not MS biased) written by IASA Sweden, however this misses out the technical/infrastructure architect from their Roles diagram, which is a key architect in any IT implementation.  Also, another article on the Architect Journal talks about <a href="http://msdn.microsoft.com/en-us/arcjournal/cc505974.aspx">what an architect actually is</a>, however is a little Software Architect focused.  Both interesting reads, especially for non-architects to understand how to &#8216;use&#8217; an architect (well, work with one effectively at least <img src="https://s.w.org/images/core/emoji/2/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> ). </p>
<h3>Some Exceptions..</h3>
<p>There are times when a formal architecture process is more of a hindrance than a help, and that is in R &amp; D contexts where rapid prototyping and proof of concept solutions are all about unrestricted creativity &#8211; in these cases architecture experience and knowledge is a good backdrop to help organise and focus ideas and channel that creativity into creating something unique.  (But&#8230; Remember that this is not production ready, it is a prototype in need of architectural design to create a production capable solution.  This is where too many rapid prototyping approaches get a bad name.)</p>
<p>
One thing I will write about soon is the risk of &#8216;over-designing&#8217; a solution, because sometimes it is easy to get carried away with design-pattern addiction and framework-itis and actually miss the whole point of the exercise.  Doing &#8216;too much&#8217; architecture can be as bad, and even worse than doing none.
</p>
<h2>And Finally&#8230;</h2>
<p>So&#8230; Yes &#8211; Sometimes it&#8217;s nice to just set out in your car and drive wherever the wind takes you until the fuel runs out.  But other times, and almost always when it is on &#8216;business time&#8217;, wandering aimlessly in the hope of finding something that might be useful is just not acceptable.  Having that vision, aspiration, direction and roadmap an architecture can bring to your project might seem like a chore and &#8220;impossible&#8221; to achieve to some people.. but how else will you get there, without ever actively and knowingly moving toward it ? Chance ?  Good Luck with that&#8230;</p>
<p>So, the next time you think about just winging it, and not bothering with architecture, just think about your software product as your own house that you wish to build &#8211; would you really just start building ?  Or even just draw up your own plans on visio and ask the builders to &#8216;sort it out&#8217; ?  </p>
<p><em>N.B. In the Winchester House example, strange as it may seem, the design actually met the brief &#8211; the needs of the owner weren&#8217;t really to design an architecturally great building, but just to have something creative to do.. it doesn&#8217;t matter that it wasn&#8217;t consistent, or standardised or even usable &#8211; it was the pleasure of doing that was needed, not the objective of greatness in form and function.  But have a think about that&#8230; when was the last time your boss suggested you design something for the fun of it, at the company&#8217;s expense, regardless of whether it results in some sort of throw-away chimera ? </em></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
