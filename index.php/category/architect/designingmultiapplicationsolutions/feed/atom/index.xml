<?xml version="1.0" encoding="UTF-8"?><feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en-US"
  xml:base="/wp-atom.php"
   >
	<title type="text">Designing Multi-Application Solutions &#8211; LessthanDot</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-03-09T12:50:36Z</updated>

	<link rel="alternate" type="text/html" href="/" />
	<id>/index.php/feed/atom/</id>
	<link rel="self" type="application/atom+xml" href="/index.php/category/architect/designingmultiapplicationsolutions/feed/atom/" />

	<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<author>
			<name>damber</name>
					</author>
		<title type="html"><![CDATA[Software Development Survey 2017]]></title>
		<link rel="alternate" type="text/html" href="/index.php/webdev/software-development-survey-2017/" />
		<id>/?p=8651</id>
		<updated>2017-05-30T19:28:11Z</updated>
		<published>2017-05-31T17:10:36Z</published>
		<category scheme="/" term="All Blogs" /><category scheme="/" term="Architecture, Design and Strategy" /><category scheme="/" term="Data Management" /><category scheme="/" term="Designing Multi-Application Solutions" /><category scheme="/" term="Designing Software" /><category scheme="/" term="Enterprise Architecture" /><category scheme="/" term="Enterprise Developer" /><category scheme="/" term="Enterprise Development" /><category scheme="/" term="IT Professionals" /><category scheme="/" term="Management" /><category scheme="/" term="Web Developer" />		<summary type="html"><![CDATA[&#160; So, youâ€™re a developer? or an architect? or maybe even a technical delivery manager? GreatÂ ðŸ™‚ I need you! Iâ€™m currently doing some research for an upcoming book, and for a new software product, and who better to ask than those that are building and delivering software solutions each and every day? So Iâ€™d like [&#8230;]]]></summary>
		<content type="html" xml:base="/index.php/webdev/software-development-survey-2017/"><![CDATA[<p class="graf graf--p graf-after--figure"><img class="aligncenter size-large wp-image-8652" src="/wp-content/uploads/2017/05/shutterstock_374219557-small-1024x683.jpg" alt="Person having a bright idea" width="800" height="533" srcset="/wp-content/uploads/2017/05/shutterstock_374219557-small-1024x683.jpg 1024w, /wp-content/uploads/2017/05/shutterstock_374219557-small-300x200.jpg 300w, /wp-content/uploads/2017/05/shutterstock_374219557-small-768x512.jpg 768w, /wp-content/uploads/2017/05/shutterstock_374219557-small.jpg 1440w" sizes="(max-width: 800px) 100vw, 800px" /></p>
<p>&nbsp;</p>
<p id="f163" class="graf graf--p graf-after--figure">So, youâ€™re a developer? or an architect? or maybe even a technical delivery manager?</p>
<p id="654c" class="graf graf--p graf-after--p">GreatÂ <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p id="e525" class="graf graf--p graf-after--p">I need you!</p>
<p id="4ba4" class="graf graf--p graf-after--p">Iâ€™m currently doing some research for an upcoming book, and for a new software product, and who better to ask than those that are building and delivering software solutions each and every day?</p>
<p id="4b38" class="graf graf--p graf-after--p">So Iâ€™d like you to share the wisdom of your experience, by filling in a survey that will take you about 10â€“15 minutes to complete, about your experiences with designing, building, running and managing software. Start-ups and Enterprises both welcome.</p>
<p id="5c00" class="graf graf--p graf-after--p">There is a prize draw for an Amazon Echo, which you can opt into, as a thank-you for taking the time.</p>
<p id="8b54" class="graf graf--p graf-after--p">So, if you design, build or manage software on a regular basis, I would like to hear from youâ€¦</p>
<p id="3ecf" class="graf graf--p graf-after--p">Do you think you can help?</p>
<p id="1415" class="graf graf--p graf-after--p graf--trailing"><a class="markup--anchor markup--p-anchor" href="https://enterprisecore.io/page/making-systems-work-survey-2017" target="_blank" rel="noopener">https://enterprisecore.io/page/making-systems-work-survey-2017</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/webdev/software-development-survey-2017/#comments" thr:count="2"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/webdev/software-development-survey-2017/feed/atom/" thr:count="2"/>
		<thr:total>2</thr:total>
		</entry>
		<entry>
		<author>
			<name>Ted Krueger (onpnt)</name>
					</author>
		<title type="html"><![CDATA[MSDN Ultimate Subscription giveaway +1]]></title>
		<link rel="alternate" type="text/html" href="/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/" />
		<id>/index.php/2010/07/msdn-ultimate-subscription-giveaway-2/</id>
		<updated>2010-07-06T21:35:00Z</updated>
		<published>2010-07-06T21:35:00Z</published>
		<category scheme="/" term="Designing Multi-Application Solutions" /><category scheme="/" term="Designing Software" /><category scheme="/" term="Enterprise Architecture" /><category scheme="/" term="Hardware and Infrastructure Design" /><category scheme="/" term="Information and Integration Architecture" /><category scheme="/" term="Introduction to Architecture and Design" /><category scheme="/" term="giveaway" /><category scheme="/" term="msdn" /><category scheme="/" term="visual studio 2010" />		<summary type="html"><![CDATA[I was fortunate enough to receive MSDN Ultimate Subscriptions as well as SQLDenis.  I Think Denis's idea and contest to see who we can give these to is excellent.  To support Denis and his idea, I'm adding another subscription that will be handed over once we read over the responses.  That means your chances just got much better to enjoy the subscriptions and the benefits Visual Studio 2010 has to offer!]]></summary>
		<content type="html" xml:base="/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/"><![CDATA[<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/msdn_notforresale.gif" alt="" title="" width="250" height="145" align="left" /></div>
<p>I was fortunate enough to receive MSDN Ultimate Subscriptions as well as SQLDenis (<a href="/index.php/All/?disp=authdir&amp;author=4">blog</a> | <a href="http://twitter.com/denisgobo/">Twitter</a>).  I Think Denis&#8217;s idea and contest to see who we can give these to is excellent.  To support Denis and his idea, I&#8217;m adding another subscription that will be handed over once we read over the responses.  That means your chances just got much better to enjoy the subscriptions and the benefits Visual Studio 2010 has to offer!</p>
<p>
</p>
<p>To go over what the response should consist of againâ€¦</p>
<ol>
<li>Why do you need this, what are you going to build with this, will it help other people&#8217;s lives?</li>
<li>What specific functionality that is only part of Ultimate are you going to use?</li>
<li>You need to have a technical blog and provide the URL to that blog, if you are an active member of the technical community (stackoverflow, msdn forums etc etc) then also include those links.</li>
</ol>
<p>Leave a comment <a href="/index.php/Architect/HardwareInfrastructureDesign/msdn-ultimate-subscription-giveaway">here</a>, you will also have to join the forums, that way I will have your email to contact you and I will able to ask you questions about your answers if needed. I created a thread in the forums here: http://forum.lessthandot.com/viewtopic.php?f=121&amp;t=11456</p>
<blockquote><p><span class="MT_red">Note: Click, <a href="/index.php/Architect/HardwareInfrastructureDesign/msdn-ultimate-subscription-giveaway">here</a> to leave your comment on the original blog post and add a comment to the forums to indicate you have done so.  Do not put your comment on this blog post</span></p></blockquote>
<p><i>And as in the original blog post, the results will be judged by the LessThanDot owners/management group</i></p>
<p>
These MSDN Subscriptions are more than just something you will leave to start playing with 6 months from now.  I can honestly say, even with the price tag they come with retail on the shelf, they are worth it.  The Visual Studio and .NET Framework product team are really outdoing themselves this time by sending these out to us so we can find community members that will really take advantage of them.
</p>
<p><strong>Good luck and I look forward to reading your responses!</strong></p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/architect/hardwareinfrastructuredesign/msdn-ultimate-subscription-giveaway-2/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>damber</name>
					</author>
		<title type="html"><![CDATA[Danger in Design: Why bother with Architecture ?]]></title>
		<link rel="alternate" type="text/html" href="/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/" />
		<id>/index.php/2008/06/why-bother-with-architecture/</id>
		<updated>2008-06-30T10:36:11Z</updated>
		<published>2008-06-30T10:36:11Z</published>
		<category scheme="/" term="Designing Multi-Application Solutions" /><category scheme="/" term="Designing Software" /><category scheme="/" term="Enterprise Architecture" /><category scheme="/" term="Hardware and Infrastructure Design" /><category scheme="/" term="Information and Integration Architecture" /><category scheme="/" term="Introduction to Architecture and Design" /><category scheme="/" term="architecture" /><category scheme="/" term="methodologies" /><category scheme="/" term="rationale" />		<summary type="html"><![CDATA[Creativity is a wonderful thing. It&#8217;s also something different for each of us, which is why sometimes our perspectives on the world can produce conflicting ideas on what is the right way and the wrong way to do things. This is a very common facet of the IT world, in particular making computer software, solutions [&#8230;]]]></summary>
		<content type="html" xml:base="/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/"><![CDATA[<p>Creativity is a wonderful thing.  It&#8217;s also something different for each of us, which is why sometimes our perspectives on the world can produce conflicting ideas on what is the right way and the wrong way to do things.  This is a very common facet of the IT world, in particular making computer software, solutions and services.  </p>
<h1>We don&#8217;t need architects!  &#8230;Do we ?</h1>
<p>It&#8217;s important for us to remember that we develop software to &#8220;do something&#8221; that we want it to do. In which case we need to continually review the success of that software or solution by evaluating it&#8217;s ability to meet our needs.  But who gets to say what those needs are, and how well they are met?  More importantly, what makes IT solutions good or bad ?  Is it how big they are ? Or how easy to use they are ?  Or maybe how efficiently they operate ? Or what about how well measured and managed they are ?  Or even how easy it is to change the way they work ?  What about all of the above, and much more&#8230;?</p>
<p>Getting to a point where a) you understand what success looks like, and b) you have a solution that delivers that success, can be achieved by using an Architect to facilitate and coordinate the construction of a design and resulting solution.  But that&#8217;s not always what happens. Apart from the many varying definitions of an architect&#8217;s role (and the different types of architects.. e.g. Enterprise Architect, Solutions Architect, Application Architect, Technical Architect,etc), there&#8217;s also often a perception from developers that architects are generally away with the fairies, dreaming up blue sky designs that are just not grounded in reality or worthwhile bothering with.  Additionally, a lot of businesses (too many unfortunately), just don&#8217;t understand the value of using an architect&#8230; Why pay someone to design the solution, when you&#8217;ve got business systems analysts and developers that can work it out between themselves ?</p>
<p> </p>
<h1>Winchester Mystery House, San Jose, CA</h1>
<p>Why indeed&#8230;  well, I thought it may be useful to post a little analogy with the &#8216;real world&#8217; &#8211; where architects and builders have been working together for many years to produce wonderful (and not so wonderful) buildings.</p>
<p>Firstly, let me introduce the Winchester Mystery House, of the Winchester Guns family fame:</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/Architect/images/winchesterhouse.png" alt="" title="" width="440" height="286" /></div>
<p></p>
<h2>Functionally Rich</h2>
<ul>
<li>160 Rooms</li>
<li>47 Fireplaces</li>
<li>17 Chimneys</li>
<li>6 kitchens</li>
<li>10,000 windows</li>
</ul>
<p></p>
<h2>State of the Art Technology (at the time)</h2>
<ul>
<li>Wall Insulation</li>
<li>Push button gas lights</li>
<li>No-clog sink patent</li>
<li>Intercoms</li>
<li>Modern Heating &amp; Sewage</li>
</ul>
<p></p>
<h2>Total Cost</h2>
<p style="font-size: 1em;">$5.5m (~<span style="font-weight:800;">$300m</span> today) over <span style="font-weight: 800;">38 years</span> (1884 &#8211; 1922)</p>
<p></p>
<h2>But&#8230; <span style="color:#ff0000;">No Interoperability</span></h2>
<ul>
<li>65 doors to blank walls</li>
<li>13 abandoned staircases</li>
<li>24 skylights in floors</li>
<li>Rooms &#8220;build-around&#8221; other rooms</li>
<li>Enough keys to fill 2 large buckets</li>
</ul>
<p></p>
<p>Ouch.</p>
<p></p>
<h2>Due to the division of labour</h2>
<ul>
<li>Builders: 147</li>
<li>Architects: <span style="font-weight:800;text-decoration:underline;">0</span></li>
</ul>
<p></p>
<h2>Sound Familiar ?</h2>
<p>We&#8217;ve all worked on a project with something like this.  Usually because the system wasn&#8217;t really &#8216;designed&#8217; it just &#8216;happened&#8217;.  Maybe if we spent a little more time designing, and a little less building things would work a little better.  I bet they had some very talented builders working on this too &#8211; but their perspective wasn&#8217;t to make a solid overall design, it was to simply get on and do what they were tasked with.. sound familiar ?  How often do users come to a technical forum and ask for a solution to their problem to be faced with answers like &#8220;you need to normalise your database&#8221; etc, to which they simply retort &#8220;that&#8217;s not part of this project&#8221; ?  Too many, but sadly understandably so.</p>
<p>
A favourite Project Manager quote is &#8220;Failing to Plan is Planning to Fail&#8221;.  And they are generally right &#8211; not having a consistent, well thought out and planned design can lead to very complicated and difficult to manage, change or even use software.  Most architects will have come across solutions or applications that weren&#8217;t &#8216;designed&#8217; and just evolved, and will know just how much of a problem those applications really are.  This is <a href="http://www.sciam.com/article.cfm?id=softwares-dirty-little-secret&amp;sc=rss">Software&#8217;s Dirty Little Secret</a> &#8211; many systems have just &#8220;happened&#8221; without real thought to the design of the software.  And for that matter, haven&#8217;t thought about the application as part of a composite solution either &#8211; this is actually quite rare, even today with all the SOA hype of the last few years.
</p>
<h3>The Architect&#8217;s hand</h3>
<p>
Sometimes it might seem strange to developers that an architect wants to make a project use standards compliant technologies, standardised, re-usable or existing components, such as a Business Rules Engine, Reporting &amp; BI, Service Bus, Messaging Gateway, Portlets, etc &#8211; but this is what architecture is all about &#8211; not thinking about the one, single application or issue, but thinking about it&#8217;s co-existence in a much bigger world &#8211; not just the here and now functional requirements, but tomorrows new direction and demands.  Simplifying and standardising, Rationalising and Re-Using, Conceptualising and Componentising&#8230; the best architectures are easily understood, simple solutions that achieve a kind of elegance in concept and practicality in implementation.
</p>
<p>
There are several methodologies to use for developing an architecture &#8211; personally I use TOGAF which is more for generalist Enterprise &amp; Solutions Architecture development but the <acronym title="Architecture Development Methodology">ADM</acronym> can be applied in concept to designing most solutions/systems/applications.
</p>
<h2>So we do need to &#8220;do architecture&#8221; then?</h2>
<p>In short, Yes.  But how you actually &#8220;do architecture&#8221; depends greatly on the context.  There is a simple lesson here &#8211; architecture is all about simplifying and standardising the problem domain to provide an efficient, re-usable and consistent answer.  The important difference between a formal &#8220;architect&#8221; and a &#8220;builder&#8221; is not of technical expertise, but of perspective, so don&#8217;t assume that your most expert Java Programmer is naturally the architect to your solutions.  This doesn&#8217;t mean that an architect of all types shouldn&#8217;t possess good technical abilities and experience.</p>
<p>There is a nice <a href="http://msdn.microsoft.com/en-us/arcjournal/cc505968.aspx">overview of the different types of Architects</a> at the Microsoft Architecture Journal (which is often surprisingly not MS biased) written by IASA Sweden, however this misses out the technical/infrastructure architect from their Roles diagram, which is a key architect in any IT implementation.  Also, another article on the Architect Journal talks about <a href="http://msdn.microsoft.com/en-us/arcjournal/cc505974.aspx">what an architect actually is</a>, however is a little Software Architect focused.  Both interesting reads, especially for non-architects to understand how to &#8216;use&#8217; an architect (well, work with one effectively at least <img src="https://s.w.org/images/core/emoji/2/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> ). </p>
<h3>Some Exceptions..</h3>
<p>There are times when a formal architecture process is more of a hindrance than a help, and that is in R &amp; D contexts where rapid prototyping and proof of concept solutions are all about unrestricted creativity &#8211; in these cases architecture experience and knowledge is a good backdrop to help organise and focus ideas and channel that creativity into creating something unique.  (But&#8230; Remember that this is not production ready, it is a prototype in need of architectural design to create a production capable solution.  This is where too many rapid prototyping approaches get a bad name.)</p>
<p>
One thing I will write about soon is the risk of &#8216;over-designing&#8217; a solution, because sometimes it is easy to get carried away with design-pattern addiction and framework-itis and actually miss the whole point of the exercise.  Doing &#8216;too much&#8217; architecture can be as bad, and even worse than doing none.
</p>
<h2>And Finally&#8230;</h2>
<p>So&#8230; Yes &#8211; Sometimes it&#8217;s nice to just set out in your car and drive wherever the wind takes you until the fuel runs out.  But other times, and almost always when it is on &#8216;business time&#8217;, wandering aimlessly in the hope of finding something that might be useful is just not acceptable.  Having that vision, aspiration, direction and roadmap an architecture can bring to your project might seem like a chore and &#8220;impossible&#8221; to achieve to some people.. but how else will you get there, without ever actively and knowingly moving toward it ? Chance ?  Good Luck with that&#8230;</p>
<p>So, the next time you think about just winging it, and not bothering with architecture, just think about your software product as your own house that you wish to build &#8211; would you really just start building ?  Or even just draw up your own plans on visio and ask the builders to &#8216;sort it out&#8217; ?  </p>
<p><em>N.B. In the Winchester House example, strange as it may seem, the design actually met the brief &#8211; the needs of the owner weren&#8217;t really to design an architecturally great building, but just to have something creative to do.. it doesn&#8217;t matter that it wasn&#8217;t consistent, or standardised or even usable &#8211; it was the pleasure of doing that was needed, not the objective of greatness in form and function.  But have a think about that&#8230; when was the last time your boss suggested you design something for the fun of it, at the company&#8217;s expense, regardless of whether it results in some sort of throw-away chimera ? </em></p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/#comments" thr:count="3"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/architect/hardwareinfrastructuredesign/why-bother-with-architecture/feed/atom/" thr:count="3"/>
		<thr:total>3</thr:total>
		</entry>
		<entry>
		<author>
			<name>damber</name>
					</author>
		<title type="html"><![CDATA[Information Unity in the Canonical Form]]></title>
		<link rel="alternate" type="text/html" href="/index.php/architect/designingmultiapplicationsolutions/information-unity-in-the-canonical-form/" />
		<id>/index.php/2008/06/information-unity-in-the-canonical-form/</id>
		<updated>2008-06-02T06:50:28Z</updated>
		<published>2008-06-02T06:50:28Z</published>
		<category scheme="/" term="Designing Multi-Application Solutions" /><category scheme="/" term="Enterprise Architecture" /><category scheme="/" term="Information and Integration Architecture" /><category scheme="/" term="canonical" /><category scheme="/" term="data modelling" /><category scheme="/" term="integration" /><category scheme="/" term="standards" />		<summary type="html"><![CDATA[So what is a CDM ?&#8230; A Canonical Data Model is most simply explained as a standardised way of representing data that generically applies to multiple systems and data models &#8211; kind of like the master data model, but for semantics aswell as content. It can be used as a data model standard template for [&#8230;]]]></summary>
		<content type="html" xml:base="/index.php/architect/designingmultiapplicationsolutions/information-unity-in-the-canonical-form/"><![CDATA[<h2>So what is a CDM ?&#8230; </h2>
<p>A Canonical Data Model is most simply explained as a standardised way of representing data that generically applies to multiple systems and data models &#8211; kind of like the master data model, but for semantics aswell as content.  It can be used as a data model standard template for new systems development, or as an intermediary serialised data format &#8211; which is the aspect I&#8217;ll focus on mostly here.</p>
<p>Here&#8217;s an Example of using the CDM as an intermediary data format to integrate six systems with different data format requirements: Canonical Data Model</p>
<p><img src="http://www.damber.net/blog/files/imgs/canonical_diagram_simple.gif" alt="CDM Example" /></p>
<p>In this example, where serialised data is being passed between systems, it uses the standardised format as a middle ground, meaning that each adapter only needs to be able to translate into or out of the CDM format (rather than each individual target/source) for it to be able to understand (and therefore integrate) with other systems &#8216;talking&#8217; in the same context (e.g. a specific functional domain, like shipments, invoices, orders etc).  This creates semantic interoperability between the system by abstracting the differences at the perimeter of the integration solution, and re-using existing components.</p>
<h2>So what ?</h2>
<p>It&#8217;s not always clear when first thinking about this design why it is so important to the implementation of upstream architectures such as SOA, or why this has such impact on everyday integration.. even the more traditional hub based point-to-point integration patterns.   But hopefully that realisation is starting to emerge, because it really is key to building truly flexible, seamless and invisible integration solutions.</p>
<h2>Some of the key objectives</h2>
<ul>
<li>Maximise Re-Use of Components</li>
<li>Minimise Redundant Code</li>
<li>Facilitate the concept of &#8216;Plug-And-Play&#8217; interfaces</li>
<li>Standardise knowledge, terminology and domain concepts (talk the same language)</li>
<li>Facilitate SOA through an information architecture (IOA) foundation</li>
</ul>
<h2>Some of the Key Benefits and Advantages</h2>
<p><span style="font-weight:800;text-decoration:underline;">Connect Once, Integrate Many</span> &#8211; once connected to the information network via the canonical adapter, you can communicate with any other connected system as long as it is in context (e.g. order requests aren&#8217;t likely to work with Proof of Delivery)&#8230; but having said that, things do become somewhat adaptable, even out of context&#8230; for example: an order quite often contains customer information and product information, as well as being an outline of the shipment.  With this in mind you *could* (and that doesn&#8217;t mean *should* <img src="https://s.w.org/images/core/emoji/2/72x72/1f600.png" alt="ðŸ˜€" class="wp-smiley" style="height: 1em; max-height: 1em;" /> ) feed a customer master or CRM application with the customer information, a Product Master or Stock Management application with the product information &#8216;just-in-time&#8217; for the order to be processed should the information not have been provided before (unlikely for the product master, but you get the idea).  You could even feed a shipment scheduling system, shipment event tracking system and plenty of others just from that single message (the most valuable might be your data warehouse).</p>
<p>Here&#8217;s a comparison of point to point integration versus a canonical model:</p>
<p><img src="http://www.damber.net/blog/files/imgs/ptp_v_cdm.gif" alt="point to point vs Canonical" /></p>
<h2>CDM v Point to Point Comparison</h2>
<p>As you can see, the point to point method (bottom image) creates a LOT of components and complexity.  Taking this example and doing the Math:</p>
<h5>Point-To-Point Integration for 3 sending systems and 3 receiving systems:</h5>
<p>3 (sources) * 3 (targets) = 9 (components)</p>
<h5>CDM Based Integration for 3 sending systems and 3 receiving systems:</h5>
<p>3 (sources) * 1 (adapter &#8211; the CDM is now the virtual target)  +  3 (targets) * 1 (adapter &#8211; the CDM is now the virtual source) = 6 (components)</p>
<p>Or put more simply:<br />
PTP Integration: sources MULTIPLIED by targets<br />
CDM Integration: sources PLUS targets
</p>
<p>This starts to demonstrate itself very quickly when you look at 10 sources and 10 targets&#8230; would you prefer to build 20 components, or 100 ?</p>
<p><span style="font-weight:800;text-decoration:underline;">Standardised Information Architecture Foundation</span> &#8211; the concept and importance of an Information Oriented Architecture (IOA) should not be understated.  Architecture within an IT environment is mostly about abstraction, generalisation and standardisation of concepts to deliver sustainable, re-usable solutions and technology.  One of the most popular architectures in previous years has been the N-Tier architecture where layers of the solution are packaged into abstracted levels that are &#8216;theoretically&#8217; interchangeable etc.  Furthermore, the more recent Service Oriented Architecture (SOA) expands / explodes that concept somewhat (there&#8217;s a bit more to it, but for examples sake..) into a distributed network oriented environment, with the addition of a bus to provide the glue that binds all the interchangeable parts together.  In both of these concepts, information should be standardised, or if not possible (e.g. from multiple sources, which SOA is very prone to) then to abstract the differences between the data sources and present (e.g. via the Data Access Tier, Business Data Objects, Composite Services etc) a standardised version.</p>
<p>There are products that will help to do this on a READ basis &#8211; generally called data federation, it allows multiple sources of data to be combined into a single &#8216;view&#8217; despite the underlying technologies (e.g. RDBMS, XML, CSV, Web Service, etc).  This is great, and a useful tool, but it is not enough to satisfy the needs of a true SOA environment.  There are also technologies that will help do this on a more general basis, which are much more applicable, such as business data objects, which can be used to &#8216;mimic&#8217; a SOA like environment without all the standards stack.  Then you have the SOA concept, which implements data and functionality as services, but really is founded on those data sources, and their role within the solution (sometimes data sources are not the authority on the data).  Hence, a solid information architecture is the foundation of your SOA.</p>
<p>Whichever way you look at it, having this standard model helps to bring your enterprise solutions together whilst minimising diversity and maximising re-use.</p>
<p>For example, you could implement a Data Warehouse by simply adding a canonical adapter for the data warehouse feeds, and directing existing data (coming via other canonical adapters) to this point &#8211; if you have 20 or so systems that are already in your network you can start to see how this would make your life easier !</p>
<p>It also helps when designing and developing new applications &amp; data sources, as you can simply implement the CDM template, and you have 80-90% of your data model (there are always application specific data tables required by a system). </p>
<h2>Some Things to Consider About the Design of a CDM</h2>
<ul>
<li>Version Control needs to be closely managed</li>
<li>You should be able to change the CDM Format without &#8216;breaking&#8217; existing adapters &#8211; otherwise changes will become more and more of a risk/impact</li>
<li>Data content (as well as the syntax and semantics) should be standardised within the CDM boundaries  (transformed on entry) &#8211; this is where Master Data Management becomes essential &#8211; for example, you want to ensure that timezones are clearly included with time/dates, customer IDs are the same, country codes, currency codes and so on are all the same</li>
<li>Technology needs to support then dynamic and flexible nature of this &#8211; XML is a prime candidate, coupled with XSLT, Xpath and Xquery</li>
<li>Data Models should be based on REAL LIFE &#8211; not on existing applications or the buzz-de-jour &#8211; speaking to the business is an essential part of building lasting and truly representational models</li>
<li>Use Standards where possible &#8211; but don&#8217;t think there is an off the shelf model and solution that will fit your business perfectly.  Things like BODs are interesting and useful, but not necessarily what you need</li>
<li>Consider the data serialisation approach &#8211; message centric (like an EDI Message) or entity centric (like a database) &#8211; how normalised do you want that serialised format ?  For example a Customer would appear in both orders and invoices (plus many other things) &#8211; do you want &#8216;Customers&#8217; to be a separate entity, or an embedded entity ?  An entity centric approach is more appropriately served by developing a Semantic Ontology, using technologies such as RDF and OWL.</li>
</ul>
<h2>So, what next ?</h2>
<p>Delivering a CDM can be challenging &#8211; especially when delivered as part of a full information architecture overhaul.  My advice ?  Take little steps.</p>
<p>Start with a vision &#8211; think about (and ask) what the business really needs from information, then conceptualise, agree and communicate it.</p>
<p>Then (ideally) you want to define an information architecture strategy as thoroughly as possible upfront, so you have a good framework to work from.  Try to be as far reaching (in terms of your business units etc) as possible with the analysis for this, but don&#8217;t get bogged down in specifics &#8211; just get the framework for how things should be done and the strategy around managing, governing, delivering etc. </p>
<p>Once you have a good framework and strategy, you can start analysing the detail and pulling together a Requirements Analysis Spec and the Architecture/Design for the solution.   BUT.. this bit should be done in small manageable chunks &#8211; that way a) you minimise risk of failure  b) minimise impact if things do go wrong and c) show fast, measurable results to encourage people to continue to take-up this strategy.  I&#8217;ll post again soon with more detailed steps to this approach</p>
<p>I hope this has either inspired you to look at implementing a Canonical Data Model as part of your enterprise Information Architecture strategy, or enraged you enough to think of some better way&#8230; </p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/architect/designingmultiapplicationsolutions/information-unity-in-the-canonical-form/#comments" thr:count="2"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/architect/designingmultiapplicationsolutions/information-unity-in-the-canonical-form/feed/atom/" thr:count="2"/>
		<thr:total>2</thr:total>
		</entry>
	</feed>
