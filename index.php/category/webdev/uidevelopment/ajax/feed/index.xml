<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>AJAX &#8211; LessthanDot</title>
	<atom:link href="/index.php/category/webdev/uidevelopment/ajax/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>ASP.NET MVC 4 Razor Starter Guide &#8211; How to avoid punching your Laptop to Death</title>
		<link>/index.php/webdev/uidevelopment/ajax/asp-net-mvc-4-razor-starter/</link>
		<comments>/index.php/webdev/uidevelopment/ajax/asp-net-mvc-4-razor-starter/#comments</comments>
		<pubDate>Mon, 02 Dec 2013 01:16:00 +0000</pubDate>
		<dc:creator><![CDATA[Tahir Khalid]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[$ not defined]]></category>
		<category><![CDATA[asp.net]]></category>
		<category><![CDATA[c#]]></category>
		<category><![CDATA[mvc 4]]></category>
		<category><![CDATA[razor]]></category>
		<category><![CDATA[starter guide]]></category>

		<guid isPermaLink="false">/index.php/2013/12/asp-net-mvc-4-razor-starter/</guid>
		<description><![CDATA[Hello and welcome to my seocond blog post for LessThanDot (I think) and in this post I will discuss how to setup a working ASP.NET MVC 4 (with Razor) project using the Empty Template.
That's right, a blank project, I didn't want the templates doing the&#8230;]]></description>
				<content:encoded><![CDATA[<p>Hello and welcome to my blog post for LessThanDot and in this post I will discuss how to setup a working ASP.NET MVC 4 (with Razor) project using the Empty Template.</p>
<p>That&#8217;s right, a blank project, I didn&#8217;t want the templates doing the work for me, I wanted to create a lean project that I had control over and I thought this would be easy enough but I was very wrong and tripped over a couple of times so hopefully this post will avoid any confusion and pain for newbies to the world of ASP.NET MVC (and avoid having to punch their laptop to death).</p>
<p>&#8220;Wait you punched your laptop to death?!&#8221;</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/punchedmylaptoptodeath.jpg" alt="Punched My Laptop To Death @ vurso.co.uk" width="350" height="85" /></p>
<p>Yes, metaphorically speaking as per my above tweet&#8230;I came close to actually doing it in real life, that&#8217;s how frustrated I was but alas frustration can often lead to lots of fun learning which I did in between the random expletives and &#8220;WTF!&#8221; shouts throughout this process.</p>
<p>So lets start, the first thing you want to do is <span style="background-color: #ffcc00;">NOT USE THE TEMPLATES!</span> I know I know, sounds crazy but trust me you want to do it right and this is the best way my friends.</p>
<p>Start Visual Studio 2012 and then select the ASP.NET MVC 4 project type:</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/aspdotnetmvc4projtype.JPG" alt="ASP.NET MVC 4 Project Type" width="350" height="35" /></p>
<p>Give the project a meaningful name and then left-click the OK button to continue. You will then be presented with the following screen (Project Tempaltes), select the <span style="background-color: #99ccff;">Empty</span> Project type and left-click OK to continue.</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/projecttemplates.jpg" alt="ASP.NET MVC 4 Project Templates" width="280" height="165" /></p>
<p>If everything goes to plan Visual Studio will start generating your project folders and files and present you with the Empty Solution:</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/emptysolution.jpg" alt="ASP.NET MVC 4 Empty Solution" width="185" height="180" /></p>
<p>You will need to do a few things first before the project can actually work (i.e. if you want to use any kind of JavaScript/jquery/ajax and Web Content).  First we need to add some folders so right-click the project name (MvcApplication3 fro example) and select <span style="background-color: #99ccff;">Add &gt; </span><span style="background-color: #99ccff;">New Folder</span> and label it <span style="background-color: #99ccff;">Scripts</span> (or alternatively if you have created another template based MVC site such as the Internet one just drag the Scripts folder from Windws Explorer into your Visual Studio 2012 IDE and drop it onto the project name which will cause Visual Studio 2012 to take a copy of the folder and create it locally with files below your project).</p>
<p>Expand the Views folder which currently only has the web.config file.  Right-click the Views folder and select <span style="background-color: #99ccff;">Add &gt; </span><span style="background-color: #99ccff;">New Folder</span> labelling it <span style="background-color: #99ccff;">Home</span>.  Create another one and call it <span style="background-color: #99ccff;">Shared</span>, these two folders will contain the default views Index.cshtml and _Layout.cshtml (the shared view is like the MasterPage from the previous ASP.NET Form development days, it is used as a global view providing common page structure and other features across your views).</p>
<p>Now the important bit, you need to download the correct Web.Optimization package as its not included in your project and trying to create, build and compile any kind of web enabled page will cause no end of grief no less messages such as:</p>
<p><span style="font-size: 14px; line-height: 18px; background-color: #eeeeee;"><span style="font-family: 'courier new', courier;">Compiler Error Message: CS0103: The name &#8216;Scripts&#8217; does not exist in the current context</span></span></p>
<p>You may also see initial errors such as:</p>
<p><span style="font-size: 14px; line-height: 18px; background-color: #eeeeee;"><span style="font-family: 'courier new', courier;">$ is not defined</span></span></p>
<p>All these can be avoided by running the following command from the nuget package manager command line.  To access the command line you need to display the command window:</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/nugetcommandline.jpg" alt="nuget Package Manager Command Line" width="434" height="185" /></p>
<p>Left-clicking the Command Line option will display a new command window at the bottom of your IDE which lets you enter nuget package manager specific commands.  Enter the following command to download the correct package for your project:</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/nugetpackageget.jpg" alt="Get nuget package from Visual Studio 2012" width="321" height="100" /></p>
<p>Once the package has been downloaded you will need to configure your <span style="background-color: #99ccff;">Web.Config</span> files, <span style="background-color: #99ccff;">Global.asax</span> file and add a new class in the <span style="background-color: #99ccff;">App_Start</span> folder so lets do this now.</p>
<p>Open up your root Web.config file and add the following line below the other namespaces (in the pages &gt; namespaces section):</p>
<pre style="font-family: Consolas; font-size: 13; color: #dfdfbf; background: #333333;"><span style="font-size: small;">&lt;<span style="color: #efc986;">add</span> namespace="<span style="color: #dfaf8f;">System.Web.WebPages</span>" /&gt;</span><span style="font-family: Consolas;">
</span></pre>
<p>You will also need to do the same for your other web.config file located in the root of the Views folder.</p>
<p>Next you need to modify your <span style="background-color: #99ccff;">Global.asax</span> file located in the root of the project and add the following line below the other statements in the <span style="background-color: #99ccff;">Application_Start()</span> method:</p>
<pre style="font-family: Consolas; font-size: 13; color: #dfdfbf; background: #333333;"><span style="font-size: small;"><span style="color: #8acccf;">BundleConfig</span>.RegisterBundles(<span style="color: #8acccf;">BundleTable</span>.Bundles);</span><span style="font-family: Consolas;">
</span></pre>
<p>Now you need to add a new class called BundleConfig.cs in the App_Start folder.  Modify the using block to look like this:</p>
<pre style="color: #dfdfbf; background-color: #333333; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: small;"><span style="color: #efc986;">using</span> System.Web;
<span style="color: #efc986;">using</span> System.Web.Optimization;</span></pre>
<p>Modify the contents of the class block to look like this:</p>
<pre style="color: #dfdfbf; background-color: #333333; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: small;"><span style="color: #7a987a;">// For more information on Bundling, visit http://go.microsoft.com/fwlink/?LinkId=254725</span>
<span style="color: #efc986;">public</span> <span style="color: #efc986;">static</span> <span style="color: #efc986;">void</span> RegisterBundles(<span style="color: #8acccf;">BundleCollection</span> bundles)
{
    bundles.Add(<span style="color: #efc986;">new</span> <span style="color: #8acccf;">ScriptBundle</span>(<span style="color: #dfaf8f;">"~/bundles/jquery"</span>).Include(
                <span style="color: #dfaf8f;">"~/Scripts/jquery-{version}.js"</span>));
 
    bundles.Add(<span style="color: #efc986;">new</span> <span style="color: #8acccf;">ScriptBundle</span>(<span style="color: #dfaf8f;">"~/bundles/jqueryui"</span>).Include(
                <span style="color: #dfaf8f;">"~/Scripts/jquery-ui-{version}.js"</span>));
 
    bundles.Add(<span style="color: #efc986;">new</span> <span style="color: #8acccf;">ScriptBundle</span>(<span style="color: #dfaf8f;">"~/bundles/jqueryval"</span>).Include(
                <span style="color: #dfaf8f;">"~/Scripts/jquery.unobtrusive*"</span>,
                <span style="color: #dfaf8f;">"~/Scripts/jquery.validate*"</span>));
 
    <span style="color: #7a987a;">// Use the development version of Modernizr to develop with and learn from. Then, when you're</span>
    <span style="color: #7a987a;">// ready for production, use the build tool at http://modernizr.com to pick only the tests you need./</span>
    bundles.Add(<span style="color: #efc986;">new</span> <span style="color: #8acccf;">ScriptBundle</span>(<span style="color: #dfaf8f;">"~/bundles/modernizr"</span>).Include(
                <span style="color: #dfaf8f;">"~/Scripts/modernizr-*"</span>));
}</span></pre>
<p>Now save the file and we need to create a controller file and two view pages.  Right-click the Controllers folder and left-click on <span style="background-color: #99ccff;">Add &gt; Controller&#8230;</span> to display the New Controller dialog:</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/newcontroller.jpg" alt="New MVC 4 Controller" width="280" height="145" /></p>
<p>Give it the name <span style="background-color: #99ccff;">HomeController</span> and left-click on Add to continue.  Now we need to create the Index view the controller will work with.  Before we do that we need to create a view that will <a title="ASP.NET MVC 3: Layouts with Razor" href="http://weblogs.asp.net/scottgu/archive/2010/10/22/asp-net-mvc-3-layouts.aspx" target="_blank">&#8220;automagically&#8221; assign the same razor layout</a> to all your views so right-click the <span style="background-color: #99ccff;">Views</span> folder and left-click on <span style="background-color: #99ccff;">Add &gt; View&#8230;</span> (VS 2012 is clever enough to recognise the context you&#8217;re in, in this case the Views folder).  The Add View dialog box will appear:</p>
<p><img src="http://www.vurso.co.uk/ltd/mvc-4-with-razor-starter-guide/addview.jpg" alt="ASP.NET MVC 4 Add View" width="200" height="252" /></p>
<p>Make sure you un-tick the &#8220;Use a layout or master page:&#8221; checkbox (as all your views will be using this <span style="background-color: #99ccff;">_ViewStart</span> file).</p>
<p>Now modify the file to look like this:</p>
<pre style="color: #dfdfbf; background-color: #333333; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: small;">@{
    Layout = <span style="color: #dfaf8f;">"~/Views/Shared/_Layout.cshtml"</span>;
}</span></pre>
<p>Next we need to create the Index View so right-click the Home folder (the one you created earlier) and select <span style="background-color: #99ccff;">Add &gt; View&#8230;</span> to display the Add View dialog box and label this view page <span style="background-color: #99ccff;">Index</span> and finally left-click Add to create it.</p>
<p>Modify the contents of the file to look like this:</p>
<pre style="color: #dfdfbf; background-color: #333333; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: small;">@{
    ViewBag.Title = <span style="color: #dfaf8f;">"My first LTD Mvc 4 Index Page"</span>;
}
@<span style="color: #efc986;">using</span> (Html.BeginForm())
{
     &lt;<span style="color: #efc986;">h1</span>&gt;Hello, World!&lt;/<span style="color: #efc986;">h1</span>&gt;
}</span></pre>
<p>Finally you need to create the shared layout view page, right-click the <span style="background-color: #99ccff;">Shared</span> folder and left-click <span style="background-color: #99ccff;">Add &gt; View&#8230;</span> to display the Add View dialog box, label the view page as <span style="background-color: #99ccff;">_Layout</span> and ensure as with the previous pages the &#8220;Use a layout or master page&#8221; checkbox is un-ticked.</p>
<p>Modify the <span style="background-color: #99ccff;">_Layout.cshtml</span> view page to look like this:</p>
<pre style="color: #dfdfbf; background-color: #333333; background-position: initial initial; background-repeat: initial initial;"><span style="font-size: small;">&lt;!<span style="color: #efc986;">DOCTYPE</span> html&gt;
&lt;<span style="color: #efc986;">html</span> lang=<span style="color: #dfaf8f;">"en"</span>&gt;
&lt;<span style="color: #efc986;">head</span>&gt;
    &lt;<span style="color: #efc986;">meta</span> name=<span style="color: #dfaf8f;">"viewport"</span> content=<span style="color: #dfaf8f;">"width=device-width"</span> /&gt;
    &lt;<span style="color: #efc986;">title</span>&gt;@ViewBag.Title&lt;/<span style="color: #efc986;">title</span>&gt;
&lt;/<span style="color: #efc986;">head</span>&gt;
&lt;<span style="color: #efc986;">body</span>&gt;
    &lt;<span style="color: #efc986;">div</span>&gt;
        @RenderBody()
    &lt;/<span style="color: #efc986;">div</span>&gt;
    @<span style="color: #8acccf;">Scripts</span>.Render(<span style="color: #dfaf8f;">"~/bundles/jquery"</span>)
    @RenderSection(<span style="color: #dfaf8f;">"scripts"</span>, required: <span style="color: #efc986;">false</span>)
&lt;/<span style="color: #efc986;">body</span>&gt;
&lt;/<span style="color: #efc986;">html</span>&gt;</span></pre>
<p>This should be enough for you to compile the project however it will still cause you pain unless you save your project and restart Visual Studio 2012, after which the references and page helpers should kick into life.</p>
<p>Build and Compile your project and then press <span style="background-color: #99ccff;">F5</span> or click on the <span style="background-color: #99ccff;">Debug</span> button to fire up your project, if all has gone well you should see a simple page with the words &#8220;Hello, World!&#8221; across the top left.</p>
<p>Well done, now go make a cup of tea and eat some digestives.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/uidevelopment/ajax/asp-net-mvc-4-razor-starter/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>ASP.NET MVC project with Modal dialogs and Flexigrid</title>
		<link>/index.php/webdev/uidevelopment/ajax/asp-net-mvc-project-with/</link>
		<comments>/index.php/webdev/uidevelopment/ajax/asp-net-mvc-project-with/#comments</comments>
		<pubDate>Sun, 27 Jan 2013 20:24:00 +0000</pubDate>
		<dc:creator><![CDATA[Naomi Nosonovsky]]></dc:creator>
				<category><![CDATA[AJAX]]></category>

		<guid isPermaLink="false">/index.php/2013/01/asp-net-mvc-project-with/</guid>
		<description><![CDATA[In the last few months I started working on my first ASP.NET MVC project. I already had a Visual FoxPro application I wrote in a few days and I wanted to replicate it for the Web using ASP.NET MVC. This project is still in its infancy, but I want to sha&#8230;]]></description>
				<content:encoded><![CDATA[<p>In the last few months I started working on my first ASP.NET MVC project. I already had a Visual FoxPro application I wrote in a few days and I wanted to replicate it for the Web using ASP.NET MVC. This project is still in its infancy, but I want to share my experience and some success I have with it.</p>
<p>I also first want to thank people who helped me to get where I am now with this project: Viv Phillips and Paul Mrozowski from UniversalThread, Darin Dimitrov from stackoverflow, Alex Ullrich and Sergey Kosik and also Jazzen Chen from MS. I also want to thank authors of many blogs and articles I read while working on this project.</p>
<p>I started my project from defining my models using Entity Framework Code first pattern since I already had the database defined. I am going to discuss only one model &#8220;Client&#8221; for the Clients table.</p>
<p>This is how the table looks in the database:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span><span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="kw1">IDENTITY</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">smallint</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">30</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>Address<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="kw2">max</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">char</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">6</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">smalldatetime</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">char</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">6</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">smalldatetime</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>PK_Clients_ClientID<span class="br0">&#93;</span> <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">CLUSTERED</span> 
<span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span> <span class="kw1">ASC</span>
<span class="br0">&#41;</span><span class="kw1">WITH</span> <span class="br0">&#40;</span>PAD_<span class="sy0">IN</span>DEX &nbsp;<span class="sy0">=</span> <span class="kw1">OFF</span>, STATISTICS_N<span class="sy0">OR</span>ECOMPUTE &nbsp;<span class="sy0">=</span> <span class="kw1">OFF</span>, IGN<span class="sy0">OR</span>E_DUP_KEY <span class="sy0">=</span> <span class="kw1">OFF</span>, <span class="sy0">ALL</span>OW_ROW_LOCKS &nbsp;<span class="sy0">=</span> <span class="kw1">ON</span>, <span class="sy0">ALL</span>OW_PAGE_LOCKS &nbsp;<span class="sy0">=</span> <span class="kw1">ON</span><span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span>
<span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span> TEXTIMAGE_ON <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span>
GO
<span class="kw1">SET</span> ANSI_PADD<span class="sy0">IN</span>G <span class="kw1">OFF</span>
GO
<span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> <span class="br0">&#91;</span>idxClients_Client_No<span class="br0">&#93;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> 
<span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span> <span class="kw1">ASC</span>
<span class="br0">&#41;</span><span class="kw1">WITH</span> <span class="br0">&#40;</span>PAD_<span class="sy0">IN</span>DEX &nbsp;<span class="sy0">=</span> <span class="kw1">OFF</span>, STATISTICS_N<span class="sy0">OR</span>ECOMPUTE &nbsp;<span class="sy0">=</span> <span class="kw1">OFF</span>, S<span class="sy0">OR</span>T_<span class="sy0">IN</span>_TEMPDB <span class="sy0">=</span> <span class="kw1">OFF</span>, IGN<span class="sy0">OR</span>E_DUP_KEY <span class="sy0">=</span> <span class="kw1">OFF</span>, DROP_EXIST<span class="sy0">IN</span>G <span class="sy0">=</span> <span class="kw1">OFF</span>, ONL<span class="sy0">IN</span>E <span class="sy0">=</span> <span class="kw1">OFF</span>, <span class="sy0">ALL</span>OW_ROW_LOCKS &nbsp;<span class="sy0">=</span> <span class="kw1">ON</span>, <span class="sy0">ALL</span>OW_PAGE_LOCKS &nbsp;<span class="sy0">=</span> <span class="kw1">ON</span><span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span>
&nbsp;
<span class="coMULTI">/****** Object: &nbsp;Default [DF_Clients_EnteredBy] &nbsp; &nbsp;Script Date: 12/19/2012 07:00:35 ******/</span>
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>DF_Clients_EnteredBy<span class="br0">&#93;</span> &nbsp;<span class="kw1">DEFAULT</span> <span class="br0">&#40;</span><span class="st0">'ADMIN'</span><span class="br0">&#41;</span> <span class="kw1">FOR</span> <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>
GO
<span class="coMULTI">/****** Object: &nbsp;Default [DF_Clients_EnteredOn] &nbsp; &nbsp;Script Date: 12/19/2012 07:00:35 ******/</span>
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>DF_Clients_EnteredOn<span class="br0">&#93;</span> &nbsp;<span class="kw1">DEFAULT</span> <span class="br0">&#40;</span><span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">FOR</span> <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>
GO
<span class="coMULTI">/****** Object: &nbsp;Check [CK_Clients_C1_Phone] &nbsp; &nbsp;Script Date: 12/19/2012 07:00:35 ******/</span>
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> &nbsp;<span class="kw1">WITH</span> <span class="kw1">CHECK</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>CK_Clients_C1_Phone<span class="br0">&#93;</span> <span class="kw1">CHECK</span> &nbsp;<span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span> like <span class="st0">'[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">CHECK</span> <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>CK_Clients_C1_Phone<span class="br0">&#93;</span>
GO
<span class="coMULTI">/****** Object: &nbsp;Check [CK_Clients_C2_Phone] &nbsp; &nbsp;Script Date: 12/19/2012 07:00:35 ******/</span>
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> &nbsp;<span class="kw1">WITH</span> <span class="kw1">CHECK</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>CK_Clients_C2_Phone<span class="br0">&#93;</span> <span class="kw1">CHECK</span> &nbsp;<span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span> like <span class="st0">'[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">CHECK</span> <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>CK_Clients_C2_Phone<span class="br0">&#93;</span>
GO
<span class="coMULTI">/****** Object: &nbsp;ForeignKey [FK_Clients_Operators_EnteredBy] &nbsp; &nbsp;Script Date: 12/19/2012 07:00:35 ******/</span>
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> &nbsp;<span class="kw1">WITH</span> <span class="kw1">CHECK</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_Clients_Operators_EnteredBy<span class="br0">&#93;</span> <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span><span class="br0">&#40;</span><span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="kw1">REFERENCES</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Operators<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>op_code<span class="br0">&#93;</span><span class="br0">&#41;</span>
GO
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">CHECK</span> <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_Clients_Operators_EnteredBy<span class="br0">&#93;</span>
GO
<span class="coMULTI">/****** Object: &nbsp;ForeignKey [FK_Clients_Operators_ModifiedBy] &nbsp; &nbsp;Script Date: 12/19/2012 07:00:35 ******/</span>
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> &nbsp;<span class="kw1">WITH</span> <span class="kw1">CHECK</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_Clients_Operators_ModifiedBy<span class="br0">&#93;</span> <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span><span class="br0">&#40;</span><span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="kw1">REFERENCES</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Operators<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>op_code<span class="br0">&#93;</span><span class="br0">&#41;</span>
GO
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">CHECK</span> <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_Clients_Operators_ModifiedBy<span class="br0">&#93;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE [dbo].[Clients](
	[ClientID] [int] IDENTITY(1,1) NOT NULL,
	[client_no] [smallint] NOT NULL,
	[client_name] [varchar](30) NULL,
	[Contact1] [varchar](100) NULL,
	[C1_Email] [varchar](100) NULL,
	[Contact2] [varchar](100) NULL,
	[C2_Email] [varchar](100) NULL,
	[C1_Phone] [varchar](10) NULL,
	[C1_Ext] [varchar](5) NULL,
	[C2_Phone] [varchar](10) NULL,
	[C2_Ext] [varchar](5) NULL,
	[Address] [varchar](max) NULL,
	[EnteredBy] [char](6) NOT NULL,
	[EnteredOn] [smalldatetime] NULL,
	[ModifiedBy] [char](6) NULL,
	[ModifiedOn] [smalldatetime] NULL,
 CONSTRAINT [PK_Clients_ClientID] PRIMARY KEY CLUSTERED 
(
	[ClientID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [idxClients_Client_No] ON [dbo].[Clients] 
(
	[client_no] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]

/****** Object:  Default [DF_Clients_EnteredBy]    Script Date: 12/19/2012 07:00:35 ******/
ALTER TABLE [dbo].[Clients] ADD  CONSTRAINT [DF_Clients_EnteredBy]  DEFAULT ('ADMIN') FOR [EnteredBy]
GO
/****** Object:  Default [DF_Clients_EnteredOn]    Script Date: 12/19/2012 07:00:35 ******/
ALTER TABLE [dbo].[Clients] ADD  CONSTRAINT [DF_Clients_EnteredOn]  DEFAULT (getdate()) FOR [EnteredOn]
GO
/****** Object:  Check [CK_Clients_C1_Phone]    Script Date: 12/19/2012 07:00:35 ******/
ALTER TABLE [dbo].[Clients]  WITH CHECK ADD  CONSTRAINT [CK_Clients_C1_Phone] CHECK  (([C1_Phone] like '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'))
GO
ALTER TABLE [dbo].[Clients] CHECK CONSTRAINT [CK_Clients_C1_Phone]
GO
/****** Object:  Check [CK_Clients_C2_Phone]    Script Date: 12/19/2012 07:00:35 ******/
ALTER TABLE [dbo].[Clients]  WITH CHECK ADD  CONSTRAINT [CK_Clients_C2_Phone] CHECK  (([C2_Phone] like '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'))
GO
ALTER TABLE [dbo].[Clients] CHECK CONSTRAINT [CK_Clients_C2_Phone]
GO
/****** Object:  ForeignKey [FK_Clients_Operators_EnteredBy]    Script Date: 12/19/2012 07:00:35 ******/
ALTER TABLE [dbo].[Clients]  WITH CHECK ADD  CONSTRAINT [FK_Clients_Operators_EnteredBy] FOREIGN KEY([EnteredBy])
REFERENCES [dbo].[Operators] ([op_code])
GO
ALTER TABLE [dbo].[Clients] CHECK CONSTRAINT [FK_Clients_Operators_EnteredBy]
GO
/****** Object:  ForeignKey [FK_Clients_Operators_ModifiedBy]    Script Date: 12/19/2012 07:00:35 ******/
ALTER TABLE [dbo].[Clients]  WITH CHECK ADD  CONSTRAINT [FK_Clients_Operators_ModifiedBy] FOREIGN KEY([ModifiedBy])
REFERENCES [dbo].[Operators] ([op_code])
GO
ALTER TABLE [dbo].[Clients] CHECK CONSTRAINT [FK_Clients_Operators_ModifiedBy]
GO</pre></div></div>

<p>Last 2 constraints in the above script refer to the Operators table I am not showing here.</p>
<p>Let&#8217;s add some data to insert:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1">GO
<span class="kw1">SET</span> <span class="kw1">IDENTITY_INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="kw1">ON</span>
&nbsp;
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">3</span>, <span class="nu0">8096</span>, N<span class="st0">'Wachusett'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">4</span>, <span class="nu0">6700</span>, N<span class="st0">'Buck Hill'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">5</span>, <span class="nu0">6238</span>, N<span class="st0">'Jamz'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">7</span>, <span class="nu0">8363</span>, N<span class="st0">'Okemo'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">8</span>, <span class="nu0">1161</span>, N<span class="st0">'Shawnee Mountain'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">9</span>, <span class="nu0">7497</span>, N<span class="st0">'Southern Star Obs Wheel'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">10</span>, <span class="nu0">1636</span>, N<span class="st0">'Mount Rose'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Clients<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>ClientID<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_no<span class="br0">&#93;</span>, <span class="br0">&#91;</span>client_name<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact1<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Contact2<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Email<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C1_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Phone<span class="br0">&#93;</span>, <span class="br0">&#91;</span>C2_Ext<span class="br0">&#93;</span>, <span class="br0">&#91;</span>Address<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>EnteredOn<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedBy<span class="br0">&#93;</span>, <span class="br0">&#91;</span>ModifiedOn<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">11</span>, <span class="nu0">3951</span>, N<span class="st0">'Crystal Mtn Washington'</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, N<span class="st0">'ADMIN '</span>, <span class="kw1">CAST</span><span class="br0">&#40;</span>0x9F9002DD <span class="kw1">AS</span> <span class="kw1">SmallDateTime</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">GO
SET IDENTITY_INSERT [dbo].[Clients] ON

INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (3, 8096, N'Wachusett', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (4, 6700, N'Buck Hill', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (5, 6238, N'Jamz', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (7, 8363, N'Okemo', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (8, 1161, N'Shawnee Mountain', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (9, 7497, N'Southern Star Obs Wheel', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (10, 1636, N'Mount Rose', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)
INSERT [dbo].[Clients] ([ClientID], [client_no], [client_name], [Contact1], [C1_Email], [Contact2], [C2_Email], [C1_Phone], [C1_Ext], [C2_Phone], [C2_Ext], [Address], [EnteredBy], [EnteredOn], [ModifiedBy], [ModifiedOn]) VALUES (11, 3951, N'Crystal Mtn Washington', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'ADMIN ', CAST(0x9F9002DD AS SmallDateTime), NULL, NULL)</pre></div></div>

<p>It took me many iterations and consultations with various blogs about Entity Framework to come up with the following model:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">using</span> <span class="co3">System.ComponentModel.DataAnnotations</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.ComponentModel</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">using</span> <span class="co3">DataAnnotationsExtensions</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.ComponentModel.DataAnnotations.Schema</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections.Generic</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> CardNumbers<span class="sy0">.</span><span class="me1">Objects</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>ComplexType<span class="br0">&#93;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> PhoneInfo
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DataType<span class="br0">&#40;</span>DataType<span class="sy0">.</span><span class="me1">PhoneNumber</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Phone&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>RegularExpression<span class="br0">&#40;</span><span class="st_h">@&quot;^(((d{3})|d{3})s?)?d{3}[-s]?d{4}s*$&quot;</span>, ErrorMessage <span class="sy0">=</span> <span class="st0">&quot;Please enter valid Phone Number&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">string</span> Phone <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>StringLength<span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Ext&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">string</span> Ext <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">bool</span> HasValue
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="br0">&#40;</span>Phone <span class="sy0">!=</span> <span class="kw1">null</span> <span class="sy0">||</span> Ext <span class="sy0">!=</span> <span class="kw1">null</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>ComplexType<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> ContactDetail
&nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Constructor</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> ContactDetail<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phoneInfo <span class="sy0">=</span> <span class="kw3">new</span> PhoneInfo<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>StringLength<span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Contact Name&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayFormat<span class="br0">&#40;</span>NullDisplayText <span class="sy0">=</span> <span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">string</span> Contact <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>Email<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>StringLength<span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DataType<span class="br0">&#40;</span>DataType<span class="sy0">.</span><span class="me1">EmailAddress</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Email&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">string</span> Email <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> PhoneInfo phoneInfo <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">bool</span> HasValue
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="br0">&#40;</span>Contact <span class="sy0">!=</span> <span class="kw1">null</span> <span class="sy0">||</span> Email <span class="sy0">!=</span> <span class="kw1">null</span> <span class="sy0">||</span> phoneInfo<span class="sy0">.</span><span class="me1">HasValue</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
<span class="co1">/// &lt;summary&gt;</span>
<span class="co1">/// Client class (Client No, Client Name, Address, Contact1, Contact2 info, Created By, Modified By (operator and date)</span>
<span class="co1">/// &lt;/summary&gt;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> Client
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> Client<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Contact1 <span class="sy0">=</span> <span class="kw3">new</span> ContactDetail<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Contact2 <span class="sy0">=</span> <span class="kw3">new</span> ContactDetail<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp;<span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>Key<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>Editable<span class="br0">&#40;</span><span class="kw1">false</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>Column<span class="br0">&#40;</span><span class="st0">&quot;ClientId&quot;</span>,TypeName <span class="sy0">=</span> <span class="st0">&quot;int&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">int</span> Id <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//[Required]</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Client No&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span> &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>Column<span class="br0">&#40;</span><span class="st0">&quot;client_no&quot;</span>, TypeName <span class="sy0">=</span> <span class="st0">&quot;smallint&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> Int16 Number <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//[Required]</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>Column<span class="br0">&#40;</span><span class="st0">&quot;client_name&quot;</span>, TypeName <span class="sy0">=</span> <span class="st0">&quot;varchar&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Client Name&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>MaxLength<span class="br0">&#40;</span><span class="nu0">30</span>, ErrorMessage <span class="sy0">=</span> <span class="st0">&quot;Client Name should not be longer than 30 characters&quot;</span> <span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>MinLength<span class="br0">&#40;</span><span class="nu0">3</span>, ErrorMessage <span class="sy0">=</span> <span class="st0">&quot;Client Name is too short&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">string</span> Name <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DataType<span class="br0">&#40;</span>DataType<span class="sy0">.</span><span class="me1">MultilineText</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw4">string</span> Address <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> ContactDetail Contact1 <span class="br0">&#123;</span><span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span><span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> ContactDetail Contact2 <span class="br0">&#123;</span><span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span><span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>ForeignKey<span class="br0">&#40;</span><span class="st0">&quot;EnteredByOperator&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">string</span> EnteredBy <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>InverseProperty<span class="br0">&#40;</span><span class="st0">&quot;ClientsEnteredBy&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw1">Operator</span> EnteredByOperator <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>ForeignKey<span class="br0">&#40;</span><span class="st0">&quot;ModifiedByOperator&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">string</span> ModifiedBy <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>InverseProperty<span class="br0">&#40;</span><span class="st0">&quot;ClientsUpdatedBy&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> <span class="kw1">Operator</span> ModifiedByOperator <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DataType<span class="br0">&#40;</span>DataType<span class="sy0">.</span><span class="me1">DateTime</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Created on&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> DateTime EnteredOn <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DataType<span class="br0">&#40;</span>DataType<span class="sy0">.</span><span class="me1">DateTime</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>DisplayName<span class="br0">&#40;</span><span class="st0">&quot;Modified on&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> DateTime<span class="sy0">?</span> ModifiedOn <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> ICollection<span class="sy0">&lt;</span>ClientOrder<span class="sy0">&gt;</span> ClientOrders <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">virtual</span> ICollection<span class="sy0">&lt;</span>Reorder<span class="sy0">&gt;</span> Reorders <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System;

using System.ComponentModel.DataAnnotations;
using System.ComponentModel;

using DataAnnotationsExtensions;
using System.ComponentModel.DataAnnotations.Schema;
using System.Collections.Generic;

namespace CardNumbers.Objects
{
    [ComplexType]
    public class PhoneInfo
    {
        [DataType(DataType.PhoneNumber)]
        
        [DisplayName("Phone")]
        [RegularExpression(@"^(((d{3})|d{3})s?)?d{3}[-s]?d{4}s*$", ErrorMessage = "Please enter valid Phone Number")]
        public virtual string Phone { get; set; }

        [StringLength(5)]
        [DisplayName("Ext")]
        public virtual string Ext { get; set; }

        public bool HasValue
        {
            get
            {
                return (Phone != null || Ext != null);
            }
        }

    }

      [ComplexType]
      public class ContactDetail
      {
          //Constructor
          public ContactDetail()
          {
              phoneInfo = new PhoneInfo();
          }

          [StringLength(100)]
          [DisplayName("Contact Name")]
          [DisplayFormat(NullDisplayText = "")]
          public virtual string Contact { get; set; }

          [Email]
          [StringLength(100)]
          [DataType(DataType.EmailAddress)]
          [DisplayName("Email")]
          public virtual string Email { get; set; }

          public virtual PhoneInfo phoneInfo { get; set; }
          public bool HasValue
          {
              get
              {
                  return (Contact != null || Email != null || phoneInfo.HasValue);
              }
          }
      }

/// &lt;summary&gt;
/// Client class (Client No, Client Name, Address, Contact1, Contact2 info, Created By, Modified By (operator and date)
/// &lt;/summary&gt;
    public class Client
    {
        public Client()
        {
            Contact1 = new ContactDetail();
            Contact2 = new ContactDetail();
     }

        [Key]
        [Editable(false)]
        [Column("ClientId",TypeName = "int")]
        public virtual int Id { get; set; }
        
        //[Required]
        [DisplayName("Client No")]      
        [Column("client_no", TypeName = "smallint")]
        public virtual Int16 Number { get; set; }
        
        //[Required]
        [Column("client_name", TypeName = "varchar")]
        [DisplayName("Client Name")]
        [MaxLength(30, ErrorMessage = "Client Name should not be longer than 30 characters" )]
        [MinLength(3, ErrorMessage = "Client Name is too short")]

        public virtual string Name { get; set; }

        [DataType(DataType.MultilineText)]
        public virtual string Address { get; set; }

        public virtual ContactDetail Contact1 {get; set;}
        public virtual ContactDetail Contact2 {get; set;}

        [ForeignKey("EnteredByOperator")]
        public string EnteredBy { get; set; }

        [InverseProperty("ClientsEnteredBy")]
        public virtual Operator EnteredByOperator { get; set; }

        [ForeignKey("ModifiedByOperator")]
        public string ModifiedBy { get; set; }

        [InverseProperty("ClientsUpdatedBy")]
        public virtual Operator ModifiedByOperator { get; set; }

        [DataType(DataType.DateTime)]
        [DisplayName("Created on")]
        public DateTime EnteredOn { get; set; }

        [DataType(DataType.DateTime)]
        [DisplayName("Modified on")]
        public DateTime? ModifiedOn { get; set; }

        public virtual ICollection&lt;ClientOrder&gt; ClientOrders { get; set; }
        
        public virtual ICollection&lt;Reorder&gt; Reorders { get; set; }
    }
}</pre></div></div>

<p>The interesting thing in this model is 2 Complex Types. Originally this model didn&#8217;t have Complex Types, but I found later that I need them in order to create one Editor for each Contact information (as we see, the table is not properly normalized and contains 2 contacts columns). </p>
<p>I created all my models in one project called CardNumbers.Objects. I later was criticized for such project name, but I used the same naming convention that was used by our 3 days course teacher and therefore left it as is. In my next project I am going to be more thoughtful in regards to project names.</p>
<p>I also created another project called CardNumbers.Data where I placed repository objects. I also originally built them the same way we were taught by the instructor, but as I found later it was not the best way, so I re-designed based on some blog posts and StackOverflow questions this way:</p>
<p>IClientRepository.cs:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">CardNumbers.Objects</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections.Generic</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Linq</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> CardNumbers<span class="sy0">.</span><span class="me1">Data</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">interface</span> IClientRepository<span class="sy0">:</span>IDisposable
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; IQueryable<span class="sy0">&lt;</span>Client<span class="sy0">&gt;</span> Clients <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; Client GetClientById<span class="br0">&#40;</span><span class="kw4">int</span> clientId<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">void</span> Commit<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">void</span> AddClient<span class="br0">&#40;</span>Client client, <span class="kw4">bool</span> autoCommit <span class="sy0">=</span> <span class="kw1">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">void</span> DeleteClient<span class="br0">&#40;</span>Client client, <span class="kw4">bool</span> autoCommit <span class="sy0">=</span> <span class="kw1">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">void</span> DeleteClient<span class="br0">&#40;</span><span class="kw4">int</span> clientId<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">void</span> UpdateClient<span class="br0">&#40;</span>Client client, <span class="kw4">bool</span> autoCommit <span class="sy0">=</span> <span class="kw1">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using CardNumbers.Objects;
using System;
using System.Collections.Generic;
using System.Linq;
 
namespace CardNumbers.Data
{
    public interface IClientRepository:IDisposable
    {
        IQueryable&lt;Client&gt; Clients { get; }
        Client GetClientById(int clientId);
        void Commit();

        void AddClient(Client client, bool autoCommit = true);

        void DeleteClient(Client client, bool autoCommit = true);
        
        void DeleteClient(int clientId);

        void UpdateClient(Client client, bool autoCommit = true);
    }
}</pre></div></div>

<p>and the actual implementation of the above interface:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections.Generic</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data.Entity</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Linq</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">CardNumbers.Objects</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> CardNumbers<span class="sy0">.</span><span class="me1">Data</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> ClientRepository <span class="sy0">:</span> IClientRepository, IDisposable 
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">private</span> CardNumbersContext context<span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> ClientRepository<span class="br0">&#40;</span>CardNumbersContext context<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span> <span class="sy0">=</span> context<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span> &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; IQueryable<span class="sy0">&lt;</span>Client<span class="sy0">&gt;</span> IClientRepository<span class="sy0">.</span><span class="me1">Clients</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">get</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">Clients</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> Commit<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">SaveChanges</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> AddClient<span class="br0">&#40;</span>Client client, <span class="kw4">bool</span> autoCommit <span class="sy0">=</span> <span class="kw1">true</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client<span class="sy0">.</span><span class="me1">EnteredOn</span> <span class="sy0">=</span> DateTime<span class="sy0">.</span><span class="me1">Now</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">Clients</span><span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span>client<span class="br0">&#41;</span> &nbsp; <span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>autoCommit<span class="br0">&#41;</span> <span class="kw1">this</span><span class="sy0">.</span><span class="me1">Commit</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> DeleteClient<span class="br0">&#40;</span>Client client, <span class="kw4">bool</span> autoCommit <span class="sy0">=</span> <span class="kw1">true</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">Clients</span><span class="sy0">.</span><span class="kw1">Remove</span><span class="br0">&#40;</span>client<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>autoCommit<span class="br0">&#41;</span> <span class="kw1">this</span><span class="sy0">.</span><span class="me1">Commit</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> DeleteClient<span class="br0">&#40;</span><span class="kw4">int</span> id<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">Clients</span><span class="sy0">.</span><span class="kw1">Remove</span><span class="br0">&#40;</span><span class="kw1">this</span><span class="sy0">.</span><span class="me1">GetClientById</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">Commit</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> Client GetClientById<span class="br0">&#40;</span><span class="kw4">int</span> id<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">Clients</span><span class="sy0">.</span><span class="me1">Find</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> UpdateClient<span class="br0">&#40;</span>Client client, <span class="kw4">bool</span> autoCommit <span class="sy0">=</span> <span class="kw1">true</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client<span class="sy0">.</span><span class="me1">ModifiedOn</span> <span class="sy0">=</span> DateTime<span class="sy0">.</span><span class="me1">Now</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">context</span><span class="sy0">.</span><span class="me1">Entry</span><span class="br0">&#40;</span>client<span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">State</span> <span class="sy0">=</span> EntityState<span class="sy0">.</span><span class="me1">Modified</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>autoCommit<span class="br0">&#41;</span> <span class="kw1">this</span><span class="sy0">.</span><span class="me1">Commit</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">private</span> <span class="kw4">bool</span> disposed <span class="sy0">=</span> <span class="kw1">false</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">protected</span> <span class="kw1">virtual</span> <span class="kw4">void</span> Dispose<span class="br0">&#40;</span><span class="kw4">bool</span> disposing<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="kw1">this</span><span class="sy0">.</span><span class="me1">disposed</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>disposing<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; context<span class="sy0">.</span><span class="me1">Dispose</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span><span class="sy0">.</span><span class="me1">disposed</span> <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> Dispose<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Dispose<span class="br0">&#40;</span><span class="kw1">true</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GC<span class="sy0">.</span><span class="me1">SuppressFinalize</span><span class="br0">&#40;</span><span class="kw1">this</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using CardNumbers.Objects;

namespace CardNumbers.Data
{
    public class ClientRepository : IClientRepository, IDisposable 
    {
        private CardNumbersContext context;

        public ClientRepository(CardNumbersContext context)
        {
            this.context = context;
        }        

        IQueryable&lt;Client&gt; IClientRepository.Clients
        {
            get { return this.context.Clients; }
        }
       
        public void Commit()
        {
            this.context.SaveChanges();
        }

        public void AddClient(Client client, bool autoCommit = true)
        {
            client.EnteredOn = DateTime.Now;
            this.context.Clients.Add(client)   ;
            if (autoCommit) this.Commit();
        }

        public void DeleteClient(Client client, bool autoCommit = true)
        {
            this.context.Clients.Remove(client);
            if (autoCommit) this.Commit();
        }

        public void DeleteClient(int id)
        {
            this.context.Clients.Remove(this.GetClientById(id));
            this.Commit();
        }

        public Client GetClientById(int id)
        {
            return this.context.Clients.Find(id);
        }

        public void UpdateClient(Client client, bool autoCommit = true)
        {
            client.ModifiedOn = DateTime.Now;
            this.context.Entry(client).State = EntityState.Modified;
            if (autoCommit) this.Commit();
        }

        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!this.disposed)
            {
                if (disposing)
                {
                    context.Dispose();
                }
            }
            this.disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }
        
    }
}</pre></div></div>

<p>and I show CardNumbersContext.cs for completion:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections.Generic</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data.Entity</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">CardNumbers.Objects</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data.Entity.ModelConfiguration.Conventions</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">CardNumbers.Objects.Mapping</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> CardNumbers<span class="sy0">.</span><span class="me1">Data</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> CardNumbersContext <span class="sy0">:</span> DbContext
&nbsp;
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> DbSet<span class="sy0">&lt;</span>Client<span class="sy0">&gt;</span> Clients <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> DbSet<span class="sy0">&lt;</span><span class="kw1">Operator</span><span class="sy0">&gt;</span> Operators <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> DbSet<span class="sy0">&lt;</span>Reorder<span class="sy0">&gt;</span> Reorders <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> DbSet<span class="sy0">&lt;</span>ClientOrder<span class="sy0">&gt;</span> ClientOrders <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="kw1">set</span><span class="sy0">;</span> <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">protected</span> <span class="kw1">override</span> <span class="kw4">void</span> OnModelCreating<span class="br0">&#40;</span>DbModelBuilder modelBuilder<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">// base.OnModelCreating(modelBuilder);</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; modelBuilder<span class="sy0">.</span><span class="me1">Configurations</span><span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span><span class="kw3">new</span> ClientMap<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; modelBuilder<span class="sy0">.</span><span class="me1">Configurations</span><span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span><span class="kw3">new</span> OperatorMap<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; modelBuilder<span class="sy0">.</span><span class="me1">Configurations</span><span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span><span class="kw3">new</span> ClientOrdersMap<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; modelBuilder<span class="sy0">.</span><span class="me1">Configurations</span><span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span><span class="kw3">new</span> ReorderMap<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System;
using System.Collections.Generic;
using System.Data.Entity;
using CardNumbers.Objects;
using System.Data.Entity.ModelConfiguration.Conventions;
using CardNumbers.Objects.Mapping;

namespace CardNumbers.Data
{
    public class CardNumbersContext : DbContext

    {
        public DbSet&lt;Client&gt; Clients { get; set; }
        public DbSet&lt;Operator&gt; Operators { get; set; }
        public DbSet&lt;Reorder&gt; Reorders { get; set; }
        public DbSet&lt;ClientOrder&gt; ClientOrders { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
           // base.OnModelCreating(modelBuilder);
            modelBuilder.Configurations.Add(new ClientMap());
            modelBuilder.Configurations.Add(new OperatorMap());
            modelBuilder.Configurations.Add(new ClientOrdersMap());            
            modelBuilder.Configurations.Add(new ReorderMap());
        }
    }
}</pre></div></div>

<p>So, the above two projects describe my models and means to work with them.</p>
<p>Now I am going to describe the CardNumbers.Web project. </p>
<p>I started from designing the view for working with the Clients. Here I didn&#8217;t want to go with the standard shown in all tutorials ways of displaying all clients information in a one page grid with inline Edit/Delete buttons. I didn&#8217;t like this interface much. So, I started my research as what existing grids I may try to implement. I looked up a few different grid implementations and at some point someone suggested me to look into <a href="http://flexigrid.info/">flexigrid</a> CodePlex project. I really liked its look and decided to go with it. Also, I believe that same person suggested me <a href="http://mvc4beginner.com/Sample-Code/Insert-Update-Delete/Asp-.Net-MVC-Ajax-Insert-Update-Delete-Using-Flexigrid.html">his site</a> which was enough to get me started. I got the Clients view working relatively quickly based on that information.</p>
<p>However, I didn&#8217;t want to start from displaying all Clients. I wanted to simulate my current VFP application where I started from the empty grid, typed some letters in the client name search textbox and based on that show only small subset of rows initially.</p>
<p>This took me a while to figure out. I was almost ready to give up, but finally found addFormData method (which was there all the time) and figured out how to use it for my purpose. It may seem silly to most of the experienced jquery developers, but for me it was my first mini-success.</p>
<p>So, I will show you how my Client View now looks and the relevant portions of Clients.js script file and the ClientController.cs file:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="de1"><pre class="de1">@model CardNumbers.Models.ClientViewModel
&nbsp;
@section scripts {
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">script</span> <span class="kw3">src</span><span class="sy0">=</span><span class="st0">&quot;@Url.Content(&quot;</span>~<span class="sy0">/</span>Scripts<span class="sy0">/</span>Clients.js<span class="st0">&quot;)&quot;</span> <span class="kw3">type</span><span class="sy0">=</span><span class="st0">&quot;text/javascript&quot;</span> &gt;&lt;<span class="sy0">/</span><span class="kw2">script</span>&gt;</span>
}
&nbsp;
<span class="sc2">&lt;<span class="kw2">form</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;frmClientsSearch&quot;</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">label</span> <span class="kw3">for</span><span class="sy0">=</span><span class="st0">&quot;clientNo&quot;</span>&gt;</span>Client No: <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">label</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">input</span> <span class="kw3">type</span><span class="sy0">=</span><span class="st0">&quot;number&quot;</span> <span class="kw3">name</span><span class="sy0">=</span><span class="st0">&quot;searchClientNo&quot;</span> <span class="kw3">class</span><span class="sy0">=</span><span class="st0">&quot;numericOnly&quot;</span> <span class="sy0">/</span>&gt;&lt;<span class="kw2">br</span> <span class="sy0">/</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">label</span> <span class="kw3">for</span><span class="sy0">=</span><span class="st0">&quot;clientName&quot;</span>&gt;</span>Client Name: <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">label</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">input</span> <span class="kw3">type</span><span class="sy0">=</span><span class="st0">&quot;search&quot;</span> <span class="kw3">size</span><span class="sy0">=</span><span class="st0">&quot;25&quot;</span> <span class="kw3">value</span><span class="sy0">=</span><span class="st0">&quot;Please enter the search value&quot;</span> <span class="kw3">class</span><span class="sy0">=</span><span class="st0">&quot;SelectOnEntry&quot;</span></span>
<span class="sc2"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw3">name</span><span class="sy0">=</span><span class="st0">&quot;searchClientName&quot;</span> <span class="sy0">/</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">input</span> <span class="kw3">type</span><span class="sy0">=</span><span class="st0">&quot;button&quot;</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;btnClientsSearch&quot;</span> <span class="kw3">value</span><span class="sy0">=</span><span class="st0">&quot;Find / Refresh&quot;</span> <span class="sy0">/</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">form</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">style</span><span class="sy0">=</span><span class="st0">&quot;padding-left: 150px; padding-top: 50px; padding-bottom: 50px;&quot;</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;ClientsResults&quot;</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">table</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;flexClients&quot;</span> <span class="kw3">style</span><span class="sy0">=</span><span class="st0">&quot;display: none&quot;</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span>
&nbsp;
&nbsp;<span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;add-edit-dialog&quot;</span> <span class="kw3">style</span><span class="sy0">=</span><span class="st0">&quot;display: none&quot;</span> <span class="kw3">title</span><span class="sy0">=</span><span class="st0">&quot;Add / Edit Client&quot;</span>&gt;</span> 
&nbsp; &nbsp; @Html.Partial(&quot;_ClientForm&quot;, Model)
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">@model CardNumbers.Models.ClientViewModel

@section scripts {
    &lt;script src="@Url.Content("~/Scripts/Clients.js")" type="text/javascript" &gt;&lt;/script&gt;
}

&lt;form id="frmClientsSearch"&gt;
    &lt;label for="clientNo"&gt;Client No: &lt;/label&gt;
    &lt;input type="number" name="searchClientNo" class="numericOnly" /&gt;&lt;br /&gt;
    &lt;label for="clientName"&gt;Client Name: &lt;/label&gt;
    &lt;input type="search" size="25" value="Please enter the search value" class="SelectOnEntry"
        name="searchClientName" /&gt;

    &lt;input type="button" id="btnClientsSearch" value="Find / Refresh" /&gt;
&lt;/form&gt;
&lt;div style="padding-left: 150px; padding-top: 50px; padding-bottom: 50px;" id="ClientsResults"&gt;
    &lt;table id="flexClients" style="display: none"&gt;
    &lt;/table&gt;
&lt;/div&gt;

 &lt;div id="add-edit-dialog" style="display: none" title="Add / Edit Client"&gt; 
    @Html.Partial("_ClientForm", Model)
&lt;/div&gt;</pre></div></div>

<p>As you can see, this main view has just few controls and lines of code. At the top I display two search controls and at the bottom the flexigrid placeholder and the dialog (invisible initially) for my modal Add/Edit dialogs.</p>
<p>Now I want to show the Clients.js part that is responsible for the flexigrid and passing Search form data to the controller through form&#8217;s collection:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="javascript"><thead><tr><td colspan="2"  class="head">Javascript</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
</pre></td><td class="de1"><pre class="de1">$<span class="br0">&#40;</span><span class="st0">&quot;#flexClients&quot;</span><span class="br0">&#41;</span>.<span class="me1">flexigrid</span><span class="br0">&#40;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; url<span class="sy0">:</span> <span class="st0">'/Client/Client/'</span><span class="sy0">,</span>
&nbsp; &nbsp; dataType<span class="sy0">:</span> <span class="st0">'json'</span><span class="sy0">,</span>
&nbsp; &nbsp; colModel<span class="sy0">:</span> <span class="br0">&#91;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> display<span class="sy0">:</span> <span class="st0">'Client Id'</span><span class="sy0">,</span> name<span class="sy0">:</span> <span class="st0">'Id'</span><span class="sy0">,</span> width<span class="sy0">:</span> <span class="nu0">100</span><span class="sy0">,</span> sortable<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span> align<span class="sy0">:</span> <span class="st0">'center'</span><span class="sy0">,</span> hide<span class="sy0">:</span> <span class="kw2">true</span> <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> display<span class="sy0">:</span> <span class="st0">'Client #'</span><span class="sy0">,</span> name<span class="sy0">:</span> <span class="st0">'Number'</span><span class="sy0">,</span> width<span class="sy0">:</span> <span class="nu0">100</span><span class="sy0">,</span> sortable<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span> align<span class="sy0">:</span> <span class="st0">'center'</span> <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> display<span class="sy0">:</span> <span class="st0">'Name'</span><span class="sy0">,</span> name<span class="sy0">:</span> <span class="st0">'Name'</span><span class="sy0">,</span> width<span class="sy0">:</span> <span class="nu0">350</span><span class="sy0">,</span> sortable<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span> align<span class="sy0">:</span> <span class="st0">'center'</span> <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> display<span class="sy0">:</span> <span class="st0">'Contact 1'</span><span class="sy0">,</span> name<span class="sy0">:</span> <span class="st0">'Contact1'</span><span class="sy0">,</span> width<span class="sy0">:</span> <span class="nu0">350</span><span class="sy0">,</span> sortable<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span> align<span class="sy0">:</span> <span class="st0">'center'</span> <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#93;</span><span class="sy0">,</span>
&nbsp; &nbsp; buttons<span class="sy0">:</span> <span class="br0">&#91;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> name<span class="sy0">:</span> <span class="st0">'Add'</span><span class="sy0">,</span> bclass<span class="sy0">:</span> <span class="st0">'add'</span><span class="sy0">,</span> onpress<span class="sy0">:</span> add <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> name<span class="sy0">:</span> <span class="st0">'Edit'</span><span class="sy0">,</span> bclass<span class="sy0">:</span> <span class="st0">'edit'</span><span class="sy0">,</span> onpress<span class="sy0">:</span> edit <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> name<span class="sy0">:</span> <span class="st0">'Delete'</span><span class="sy0">,</span> bclass<span class="sy0">:</span> <span class="st0">'delete'</span><span class="sy0">,</span> onpress<span class="sy0">:</span> del <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> separator<span class="sy0">:</span> <span class="kw2">true</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#93;</span><span class="sy0">,</span>
&nbsp; &nbsp; searchitems<span class="sy0">:</span> <span class="br0">&#91;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> display<span class="sy0">:</span> <span class="st0">'Client Name'</span><span class="sy0">,</span> name<span class="sy0">:</span> <span class="st0">'Name'</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#93;</span><span class="sy0">,</span>
&nbsp; &nbsp; sortname<span class="sy0">:</span> <span class="st0">&quot;Name&quot;</span><span class="sy0">,</span>
&nbsp; &nbsp; sortorder<span class="sy0">:</span> <span class="st0">&quot;asc&quot;</span><span class="sy0">,</span>
&nbsp; &nbsp; usepager<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span>
&nbsp; &nbsp; title<span class="sy0">:</span> <span class="st0">'Clients'</span><span class="sy0">,</span>
&nbsp; &nbsp; useRp<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span>
&nbsp; &nbsp; rp<span class="sy0">:</span> <span class="nu0">15</span><span class="sy0">,</span>
&nbsp; &nbsp; rpOptions<span class="sy0">:</span> <span class="br0">&#91;</span><span class="nu0">5</span><span class="sy0">,</span> <span class="nu0">10</span><span class="sy0">,</span> <span class="nu0">15</span><span class="sy0">,</span> <span class="nu0">20</span><span class="sy0">,</span> <span class="nu0">25</span><span class="sy0">,</span> <span class="nu0">40</span><span class="br0">&#93;</span><span class="sy0">,</span>
&nbsp; &nbsp; showTableToggleBtn<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span>
&nbsp; &nbsp; width<span class="sy0">:</span> <span class="nu0">900</span><span class="sy0">,</span>
&nbsp; &nbsp; onSuccess<span class="sy0">:</span> bindDblClick<span class="sy0">,</span>
&nbsp; &nbsp; onSubmit<span class="sy0">:</span> addFormData<span class="sy0">,</span>
&nbsp; &nbsp; hideOnSubmit<span class="sy0">:</span> <span class="kw2">false</span><span class="sy0">,</span>
&nbsp; &nbsp; height<span class="sy0">:</span> <span class="st0">'auto'</span><span class="sy0">,</span>
&nbsp; &nbsp; singleSelect<span class="sy0">:</span> <span class="kw2">true</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//$('.flexigrid').on('dblclick', 'tr[id*=&quot;row&quot;]', function () {</span>
<span class="co1">// &nbsp; &nbsp;// console.log('mouseenter rowId: ' + $(this).attr('id').substr(3));</span>
<span class="co1">// &nbsp; &nbsp;alert($(this).attr('id').substr(3));</span>
<span class="co1">// &nbsp; &nbsp;//Edit();</span>
<span class="co1">//});</span>
&nbsp;
<span class="kw1">function</span> bindDblClick<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'#flexClients tr'</span><span class="br0">&#41;</span>.<span class="me1">dblclick</span><span class="br0">&#40;</span><span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp;edit<span class="br0">&#40;</span><span class="st0">'Edit'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="co1">//This function adds parameters to the post of flexigrid. You can add a verification as well by return to false if you don't want flexigrid to submit &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>
<span class="kw1">function</span> addFormData<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; <span class="co1">//passing a form object to serializeArray will get the valid data from all the objects, but, if the you pass a non-form object, you have to specify the input elements that the data will come from</span>
&nbsp; &nbsp; <span class="kw1">var</span> dt <span class="sy0">=</span> $<span class="br0">&#40;</span><span class="st0">&quot;#add-edit-form&quot;</span><span class="br0">&#41;</span>.<span class="me1">serializeArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; dt <span class="sy0">=</span> dt.<span class="me1">concat</span><span class="br0">&#40;</span>$<span class="br0">&#40;</span><span class="st0">'#frmClientsSearch'</span><span class="br0">&#41;</span>.<span class="me1">serializeArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; 
&nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">&quot;#flexClients&quot;</span><span class="br0">&#41;</span>.<span class="me1">flexOptions</span><span class="br0">&#40;</span><span class="br0">&#123;</span> params<span class="sy0">:</span> dt <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">$("#flexClients").flexigrid({
    url: '/Client/Client/',
    dataType: 'json',
    colModel: [
    { display: 'Client Id', name: 'Id', width: 100, sortable: true, align: 'center', hide: true },
    { display: 'Client #', name: 'Number', width: 100, sortable: true, align: 'center' },
    { display: 'Name', name: 'Name', width: 350, sortable: true, align: 'center' },
    { display: 'Contact 1', name: 'Contact1', width: 350, sortable: true, align: 'center' },
    ],
    buttons: [
    { name: 'Add', bclass: 'add', onpress: add },
    { name: 'Edit', bclass: 'edit', onpress: edit },
    { name: 'Delete', bclass: 'delete', onpress: del },
    { separator: true }
    ],
    searchitems: [
    { display: 'Client Name', name: 'Name' }
    ],
    sortname: "Name",
    sortorder: "asc",
    usepager: true,
    title: 'Clients',
    useRp: true,
    rp: 15,
    rpOptions: [5, 10, 15, 20, 25, 40],
    showTableToggleBtn: true,
    width: 900,
    onSuccess: bindDblClick,
    onSubmit: addFormData,
    hideOnSubmit: false,
    height: 'auto',
    singleSelect: true
});

//$('.flexigrid').on('dblclick', 'tr[id*="row"]', function () {
//    // console.log('mouseenter rowId: ' + $(this).attr('id').substr(3));
//    alert($(this).attr('id').substr(3));
//    //Edit();
//});

function bindDblClick()
{
    $('#flexClients tr').dblclick(function () {          
       edit('Edit');
    });
}

//This function adds parameters to the post of flexigrid. You can add a verification as well by return to false if you don't want flexigrid to submit			
function addFormData() {

    //passing a form object to serializeArray will get the valid data from all the objects, but, if the you pass a non-form object, you have to specify the input elements that the data will come from
    var dt = $("#add-edit-form").serializeArray();
    dt = dt.concat($('#frmClientsSearch').serializeArray());
  
    $("#flexClients").flexOptions({ params: dt });
    return true;
}</pre></div></div>

<p>So, the first part defines flexigrid (you can see that it used Client controller Client method to return its data). Then the next piece of code binds grid&#8217;s double click with the same method that is called by the Edit button (in other words, I want to either click on the Edit button or double click on the selected row in a grid to get the same behavior) and the last piece of code (addFormData) is used to pass both Search form and add-edit-form data back to my controller. </p>
<p>And this is how Client method of the controller looks like (I separated this method into 2 based on the idea I took from looking at the <a href="http://www.s4sme.com/Blog/Post/aspnet-mvc-4-application-with-flexigrid-jquery-ui-and-jquery-validation">following solution</a>)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
</pre></td><td class="de1"><pre class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>HttpPost<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> ActionResult Client<span class="br0">&#40;</span>FormCollection formValues<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Assume we want to select everything</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> clients <span class="sy0">=</span> Db<span class="sy0">.</span><span class="me1">Clients</span><span class="sy0">;</span> <span class="co1">// Should set type of clients to IQueryable&lt;Clients&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">int</span> searchClientNo <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">int</span><span class="sy0">.</span><span class="me1">TryParse</span><span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;searchClientNo&quot;</span><span class="br0">&#93;</span>, <span class="kw1">out</span> searchClientNo <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> searchClientName <span class="sy0">=</span> <span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;searchClientName&quot;</span><span class="br0">&#93;</span><span class="sy0">??</span><span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>searchClientNo <span class="sy0">==</span> <span class="nu0">0</span> <span class="sy0">&amp;&amp;</span> searchClientName <span class="sy0">==</span> <span class="st0">&quot;Please enter the search value&quot;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clients <span class="sy0">=</span> clients<span class="sy0">.</span><span class="kw1">Where</span><span class="br0">&#40;</span>c <span class="sy0">=&gt;</span> <span class="br0">&#40;</span>c<span class="sy0">.</span><span class="me1">Number</span> <span class="sy0">==</span> searchClientNo<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>searchClientNo <span class="sy0">!=</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="co1">//Number was supplied</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clients <span class="sy0">=</span> clients<span class="sy0">.</span><span class="kw1">Where</span><span class="br0">&#40;</span>c <span class="sy0">=&gt;</span> <span class="br0">&#40;</span>c<span class="sy0">.</span><span class="me1">Number</span> <span class="sy0">==</span> searchClientNo<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// If clientNo was supplied, clients is now filtered by that. If not, it still has the full list. The following will further filter it.</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="kw4">String</span><span class="sy0">.</span><span class="me1">IsNullOrWhiteSpace</span><span class="br0">&#40;</span>searchClientName<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="co1">// Part of the name was supplied</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clients <span class="sy0">=</span> clients<span class="sy0">.</span><span class="kw1">Where</span><span class="br0">&#40;</span>c <span class="sy0">=&gt;</span> <span class="br0">&#40;</span>c<span class="sy0">.</span><span class="me1">Name</span><span class="sy0">.</span><span class="me1">Contains</span><span class="br0">&#40;</span>searchClientName<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">int</span> page <span class="sy0">=</span> <span class="kw4">int</span><span class="sy0">.</span><span class="me1">Parse</span><span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;page&quot;</span><span class="br0">&#93;</span> <span class="sy0">??</span> <span class="st0">&quot;1&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">int</span> rp <span class="sy0">=</span> <span class="kw4">int</span><span class="sy0">.</span><span class="me1">Parse</span><span class="br0">&#40;</span><span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;rp&quot;</span><span class="br0">&#93;</span><span class="sy0">??</span><span class="st0">&quot;15&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> qtype <span class="sy0">=</span> <span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;qtype&quot;</span><span class="br0">&#93;</span><span class="sy0">??</span><span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> query <span class="sy0">=</span> <span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;query&quot;</span><span class="br0">&#93;</span> <span class="sy0">??</span> <span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> sortname <span class="sy0">=</span> <span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;sortname&quot;</span><span class="br0">&#93;</span> <span class="sy0">??</span> <span class="st0">&quot;Name&quot;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> sortorder <span class="sy0">=</span> <span class="br0">&#40;</span>formValues<span class="br0">&#91;</span><span class="st0">&quot;sortorder&quot;</span><span class="br0">&#93;</span> <span class="sy0">??</span> <span class="st0">&quot;asc&quot;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="kw4">string</span><span class="sy0">.</span><span class="me1">IsNullOrEmpty</span><span class="br0">&#40;</span>sortname<span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="sy0">!</span><span class="kw4">string</span><span class="sy0">.</span><span class="me1">IsNullOrEmpty</span><span class="br0">&#40;</span>sortorder<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clients <span class="sy0">=</span> clients<span class="sy0">.</span><span class="me1">OrderBy</span><span class="br0">&#40;</span>sortname, <span class="br0">&#40;</span>sortorder <span class="sy0">==</span> <span class="st0">&quot;asc&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="kw4">string</span><span class="sy0">.</span><span class="me1">IsNullOrEmpty</span><span class="br0">&#40;</span>qtype<span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="sy0">!</span><span class="kw4">string</span><span class="sy0">.</span><span class="me1">IsNullOrEmpty</span><span class="br0">&#40;</span>query<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clients <span class="sy0">=</span> clients<span class="sy0">.</span><span class="me1">Like</span><span class="br0">&#40;</span>qtype, query<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">int</span> Total <span class="sy0">=</span> clients<span class="sy0">.</span><span class="me1">Count</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clients <span class="sy0">=</span> clients<span class="sy0">.</span><span class="me1">Skip</span><span class="br0">&#40;</span><span class="br0">&#40;</span>page <span class="sy0">-</span> <span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">*</span> rp<span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">Take</span><span class="br0">&#40;</span>rp<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> CreateFlexiJson<span class="br0">&#40;</span>clients, page, Total<span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">private</span> JsonResult CreateFlexiJson<span class="br0">&#40;</span>IEnumerable<span class="sy0">&lt;</span>Client<span class="sy0">&gt;</span> items, <span class="kw4">int</span> page, <span class="kw4">int</span> total<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> Json<span class="br0">&#40;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">new</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; page,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; total,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rows <span class="sy0">=</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; items
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="kw1">Select</span><span class="br0">&#40;</span>x <span class="sy0">=&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">new</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; id <span class="sy0">=</span> x<span class="sy0">.</span><span class="me1">Id</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// either use GetPropertyList(x) method to get all columns </span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cell <span class="sy0">=</span> <span class="kw3">new</span> <span class="br0">&#123;</span> Id <span class="sy0">=</span> x<span class="sy0">.</span><span class="me1">Id</span>, Number <span class="sy0">=</span> x<span class="sy0">.</span><span class="me1">Number</span>, Name <span class="sy0">=</span> x<span class="sy0">.</span><span class="me1">Name</span>, Contact1 <span class="sy0">=</span> x<span class="sy0">.</span><span class="me1">Contact1</span><span class="sy0">.</span><span class="me1">Contact</span> <span class="sy0">??</span> <span class="kw4">String</span><span class="sy0">.</span><span class="me1">Empty</span> <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>, JsonRequestBehavior<span class="sy0">.</span><span class="me1">AllowGet</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">        [HttpPost]
        public ActionResult Client(FormCollection formValues)
        {
            // Assume we want to select everything
            var clients = Db.Clients; // Should set type of clients to IQueryable&lt;Clients&gt;
            int searchClientNo = 0;
            
            int.TryParse(formValues["searchClientNo"], out searchClientNo );
            string searchClientName = (formValues["searchClientName"]??"").ToString();

            if (searchClientNo == 0 &amp;&amp; searchClientName == "Please enter the search value")
                clients = clients.Where(c =&gt; (c.Number == searchClientNo));
            else
            {
                if (searchClientNo != 0) //Number was supplied
                    clients = clients.Where(c =&gt; (c.Number == searchClientNo));

                // If clientNo was supplied, clients is now filtered by that. If not, it still has the full list. The following will further filter it.
                if (!String.IsNullOrWhiteSpace(searchClientName)) // Part of the name was supplied
                    clients = clients.Where(c =&gt; (c.Name.Contains(searchClientName)));

            }
            int page = int.Parse(formValues["page"] ?? "1");

            int rp = int.Parse((formValues["rp"]??"15"));
            string qtype = (formValues["qtype"]??"").ToString();

            string query = (formValues["query"] ?? "").ToString();

            string sortname = (formValues["sortname"] ?? "Name").ToString();
            string sortorder = (formValues["sortorder"] ?? "asc").ToString();           

            if (!string.IsNullOrEmpty(sortname) &amp;&amp; !string.IsNullOrEmpty(sortorder))
            {
                clients = clients.OrderBy(sortname, (sortorder == "asc"));
            }

            if (!string.IsNullOrEmpty(qtype) &amp;&amp; !string.IsNullOrEmpty(query))
            {
                clients = clients.Like(qtype, query);
            }

            int Total = clients.Count();

            clients = clients.Skip((page - 1) * rp).Take(rp);
            return CreateFlexiJson(clients, page, Total);           

        }

        private JsonResult CreateFlexiJson(IEnumerable&lt;Client&gt; items, int page, int total)
        {
            return Json(
                    new
                    {
                        page,
                        total,
                        rows =
                            items
                            .Select(x =&gt;
                                new
                                {
                                    id = x.Id,
                                    // either use GetPropertyList(x) method to get all columns 
                                    cell = new { Id = x.Id, Number = x.Number, Name = x.Name, Contact1 = x.Contact1.Contact ?? String.Empty }
                                })
                    }, JsonRequestBehavior.AllowGet);
        }</pre></div></div>

<p>So far so good. Now I want to describe the modal dialogs implementation for Add and Edit buttons. This really took me a very long time to get working correctly and I was lucky to finally got this resolved with Jazzen Chen help.</p>
<p>First I want to show the partial view _ClientForm. There is nothing too interesting in that view besides using special EditorForm I implemented based on <a href="http://dotnetspeak.com/index.php/2012/10/asp-net-mvc-template-and-knockout-js/">this blog post</a> by Sergey Barskiy:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="de1"><pre class="de1">@using CardNumbers.Helper
@model CardNumbers.Models.ClientViewModel
&nbsp; <span class="sc2">&lt;<span class="kw2">form</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;add-edit-form&quot;</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">fieldset</span>&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">legend</span>&gt;</span>Client Info<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">legend</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; @Html.ValidationSummary(true)
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">input</span> <span class="kw3">type</span><span class="sy0">=</span><span class="st0">&quot;hidden&quot;</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;fntype&quot;</span> <span class="kw3">name</span><span class="sy0">=</span><span class="st0">&quot;fntype&quot;</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; @Html.HiddenFor(m =&gt; m.ClientId)
&nbsp; &nbsp; &nbsp; &nbsp; @Html.EditorFor(m =&gt; m.ClientNumber, EditorTemplate.TextBox)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; @Html.EditorFor(m =&gt; m.ClientName, EditorTemplate.TextBox)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; @Html.EditorFor(m =&gt; m.Client.Address, EditorTemplate.EditBox)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;ContactsInfo&quot;</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;Contact1&quot;</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Html.EditorFor(m =&gt; m.Client.Contact1)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;Contact2&quot;</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Html.EditorFor(m =&gt; m.Client.Contact2)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp;@* <span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;SaveCancel&quot;</span> <span class="kw3">class</span><span class="sy0">=</span><span class="st0">&quot;float-right&quot;</span>&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">button</span> <span class="kw3">id</span><span class="sy0">=</span><span class="st0">&quot;btnSave&quot;</span>&gt;</span>Save<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">button</span>&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">button</span> <span class="kw3">type</span><span class="sy0">=</span><span class="st0">&quot;reset&quot;</span> <span class="kw3">id</span> <span class="sy0">=</span><span class="st0">&quot;btnCancel&quot;</span> <span class="kw3">name</span><span class="sy0">=</span><span class="st0">&quot;Reset&quot;</span>&gt;</span>Cancel<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">button</span>&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span>*@
&nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">fieldset</span>&gt;</span>
&nbsp;
&nbsp;<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">form</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">@using CardNumbers.Helper
@model CardNumbers.Models.ClientViewModel
  &lt;form id="add-edit-form"&gt;
    &lt;fieldset&gt;
        &lt;legend&gt;Client Info&lt;/legend&gt;

        @Html.ValidationSummary(true)
       
        &lt;input type="hidden" id="fntype" name="fntype"&gt;

        @Html.HiddenFor(m =&gt; m.ClientId)
        @Html.EditorFor(m =&gt; m.ClientNumber, EditorTemplate.TextBox)

        @Html.EditorFor(m =&gt; m.ClientName, EditorTemplate.TextBox)

        @Html.EditorFor(m =&gt; m.Client.Address, EditorTemplate.EditBox)

        &lt;div id="ContactsInfo"&gt;

            &lt;div id="Contact1"&gt;

                @Html.EditorFor(m =&gt; m.Client.Contact1)

            &lt;/div&gt;

            &lt;div id="Contact2"&gt;

                @Html.EditorFor(m =&gt; m.Client.Contact2)
            &lt;/div&gt;
        &lt;/div&gt;

       @* &lt;div id="SaveCancel" class="float-right"&gt;
            &lt;button id="btnSave"&gt;Save&lt;/button&gt;
            &lt;button type="reset" id ="btnCancel" name="Reset"&gt;Cancel&lt;/button&gt;
        &lt;/div&gt;*@
    &lt;/fieldset&gt;

 &lt;/form&gt;</pre></div></div>

<p>This is the Clients.js relevant code which drives that Add, Edit and Delete (for completeness) buttons:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="javascript"><thead><tr><td colspan="2"  class="head">Javascript</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
</pre></td><td class="de1"><pre class="de1"><span class="kw1">function</span> del<span class="br0">&#40;</span>com<span class="sy0">,</span> grid<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">try</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> clientName <span class="sy0">=</span> $<span class="br0">&#40;</span><span class="st0">'.trSelected td:eq(2)'</span><span class="br0">&#41;</span>.<span class="me1">text</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>clientName<span class="br0">&#41;</span> <span class="co1">//Variable is defined and not empty</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>confirm<span class="br0">&#40;</span><span class="st0">&quot;Are you sure you want to delete &quot;</span> <span class="sy0">+</span> $.<span class="me1">trim</span><span class="br0">&#40;</span>clientName<span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">&quot;?&quot;</span><span class="br0">&#41;</span><span class="sy0">===</span><span class="kw2">false</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'.trSelected'</span><span class="sy0">,</span> grid<span class="br0">&#41;</span>.<span class="me1">each</span><span class="br0">&#40;</span><span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> id <span class="sy0">=</span> $<span class="br0">&#40;</span><span class="kw1">this</span><span class="br0">&#41;</span>.<span class="me1">attr</span><span class="br0">&#40;</span><span class="st0">'id'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; id <span class="sy0">=</span> id.<span class="me1">substring</span><span class="br0">&#40;</span>id.<span class="me1">lastIndexOf</span><span class="br0">&#40;</span><span class="st0">'row'</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">3</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addFormData<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> $<span class="br0">&#40;</span><span class="st0">'#flexClients'</span><span class="br0">&#41;</span>.<span class="me1">flexOptions</span><span class="br0">&#40;</span><span class="br0">&#123;</span> url<span class="sy0">:</span> <span class="st0">'/Client/Delete/'</span><span class="sy0">+</span> id <span class="br0">&#125;</span><span class="br0">&#41;</span>.<span class="me1">flexReload</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="kw1">catch</span><span class="br0">&#40;</span>e<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; alert<span class="br0">&#40;</span><span class="st0">'Error '</span> <span class="sy0">+</span> e<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">var</span> validator <span class="sy0">=</span> $<span class="br0">&#40;</span><span class="st0">&quot;#add-edit-form&quot;</span><span class="br0">&#41;</span>.<span class="me1">validate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">var</span> $dlg <span class="sy0">=</span> $<span class="br0">&#40;</span><span class="st0">&quot;#add-edit-dialog&quot;</span><span class="br0">&#41;</span>.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; autoOpen<span class="sy0">:</span> <span class="kw2">false</span><span class="sy0">,</span>
&nbsp; &nbsp; show<span class="sy0">:</span> <span class="st0">&quot;blind&quot;</span><span class="sy0">,</span>
&nbsp; &nbsp; closeOnEscape<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span>
&nbsp; &nbsp; resizable<span class="sy0">:</span> <span class="kw2">true</span><span class="sy0">,</span>
&nbsp; &nbsp; width<span class="sy0">:</span> <span class="nu0">1200</span><span class="sy0">,</span>
&nbsp; &nbsp; height<span class="sy0">:</span> <span class="nu0">750</span><span class="sy0">,</span>
&nbsp; &nbsp; minHeight<span class="sy0">:</span> <span class="nu0">600</span><span class="sy0">,</span>
&nbsp; &nbsp; minWidth<span class="sy0">:</span> <span class="nu0">950</span><span class="sy0">,</span>
&nbsp; &nbsp; buttons<span class="sy0">:</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">&quot;Save&quot;</span><span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>$<span class="br0">&#40;</span><span class="st0">&quot;#add-edit-form&quot;</span><span class="br0">&#41;</span>.<span class="me1">valid</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// jobPost.setVals(txtId.val(), txtRole.val(), txtLocation.val(), txtJobType.val(), txtDescription.val()); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $.<span class="me1">ajax</span><span class="br0">&#40;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; type<span class="sy0">:</span> <span class="st0">'POST'</span><span class="sy0">,</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//data: JSON.stringify(clientInformation),</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; url<span class="sy0">:</span> <span class="st0">'/Client/Save'</span><span class="sy0">,</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dataType<span class="sy0">:</span> <span class="st0">'json'</span><span class="sy0">,</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentType<span class="sy0">:</span> <span class="st0">'application/json'</span><span class="sy0">,</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; success<span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span>result<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// insert new list into grid</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'#flexClients'</span><span class="br0">&#41;</span>.<span class="me1">flexAddData</span><span class="br0">&#40;</span>result<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="kw1">this</span><span class="br0">&#41;</span>.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="st0">'close'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; &nbsp; &nbsp; Cancel<span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="kw1">this</span><span class="br0">&#41;</span>.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="st0">&quot;close&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clearForm<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>validator<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; validator.<span class="me1">resetForm</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; close<span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> clearForm<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; open<span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//$(&quot;#add-edit-dialog&quot;).parent().appendTo($(&quot;#add-edit-form&quot;));</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">function</span> RunModalDialog<span class="br0">&#40;</span>title<span class="sy0">,</span> url<span class="br0">&#41;</span>
<span class="br0">&#123;</span> &nbsp; &nbsp;
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>title<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; $dlg.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="st0">&quot;option&quot;</span><span class="sy0">,</span> <span class="br0">&#123;</span><span class="st0">&quot;title&quot;</span><span class="sy0">:</span> title <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>url<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span> &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; $dlg.<span class="me1">load</span><span class="br0">&#40;</span>url<span class="br0">&#41;</span>.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="st0">&quot;option&quot;</span><span class="sy0">,</span> <span class="br0">&#123;</span> <span class="st0">&quot;title&quot;</span><span class="sy0">:</span> title <span class="br0">&#125;</span><span class="br0">&#41;</span>.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="st0">&quot;open&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//$dlg.load(url, function () {</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// &nbsp; &nbsp;var validator = $(&quot;#sform&quot;).validate();</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// &nbsp; &nbsp;if (validator)</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// &nbsp; &nbsp; &nbsp; &nbsp; validator.resetForm();</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// &nbsp; &nbsp;$dlg.dialog(&quot;option&quot;, { &quot;title&quot;: title }).dialog(&quot;open&quot;);</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//});</span>
&nbsp; &nbsp; <span class="kw1">else</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; $dlg.<span class="me1">dialog</span><span class="br0">&#40;</span><span class="st0">&quot;open&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">function</span> add<span class="br0">&#40;</span>com<span class="sy0">,</span> grid<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'#fntype'</span><span class="br0">&#41;</span>.<span class="me1">val</span><span class="br0">&#40;</span><span class="st0">'Add'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw1">var</span> url <span class="sy0">=</span> <span class="st0">'/Client/Add/'</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="co1">//location.replace(url);</span>
&nbsp; &nbsp; RunModalDialog<span class="br0">&#40;</span><span class="st0">&quot;Create New Client&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp;<span class="co1">// clearForm(); &nbsp; &nbsp;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">function</span> edit<span class="br0">&#40;</span>com<span class="sy0">,</span> grid<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'.trSelected'</span><span class="sy0">,</span> grid<span class="br0">&#41;</span>.<span class="me1">each</span><span class="br0">&#40;</span><span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> id <span class="sy0">=</span> $<span class="br0">&#40;</span><span class="kw1">this</span><span class="br0">&#41;</span>.<span class="me1">attr</span><span class="br0">&#40;</span><span class="st0">'id'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; id <span class="sy0">=</span> id.<span class="me1">substring</span><span class="br0">&#40;</span>id.<span class="me1">lastIndexOf</span><span class="br0">&#40;</span><span class="st0">'row'</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">3</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; currentId <span class="sy0">=</span> id<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'#fntype'</span><span class="br0">&#41;</span>.<span class="me1">val</span><span class="br0">&#40;</span><span class="st0">'Edit'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> ClientName<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClientName <span class="sy0">=</span>$<span class="br0">&#40;</span><span class="st0">'.trSelected td:eq(2)'</span><span class="br0">&#41;</span>.<span class="me1">text</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> url <span class="sy0">=</span> <span class="st0">'/Client/Edit/'</span> <span class="sy0">+</span> id <span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $.<span class="kw1">get</span><span class="br0">&#40;</span>url<span class="sy0">,</span> <span class="kw1">function</span> <span class="br0">&#40;</span>html<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// &nbsp;setFormControls(data.Id, data.Role, data.Location, data.JobType, data.Description);</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// alert(data);</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span>$dlg<span class="br0">&#41;</span>.<span class="me1">html</span><span class="br0">&#40;</span>html<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">//location.replace(url);</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;RunModalDialog<span class="br0">&#40;</span><span class="st0">&quot;Edit Client: &quot;</span> <span class="sy0">+</span> ClientName<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">function del(com, grid) {
    try {
        var clientName = $('.trSelected td:eq(2)').text();
        if (clientName) //Variable is defined and not empty
        {
            if (confirm("Are you sure you want to delete " + $.trim(clientName) + "?")===false)
                return false;            

            $('.trSelected', grid).each(function () {
                var id = $(this).attr('id');
                id = id.substring(id.lastIndexOf('row') + 3);

                addFormData(); $('#flexClients').flexOptions({ url: '/Client/Delete/'+ id }).flexReload();
            });
        }
    }
    catch(e) {
        alert('Error ' + e);
    }
}

var validator = $("#add-edit-form").validate();

var $dlg = $("#add-edit-dialog").dialog({
    autoOpen: false,
    show: "blind",
    closeOnEscape: true,
    resizable: true,
    width: 1200,
    height: 750,
    minHeight: 600,
    minWidth: 950,
    buttons: {
        "Save": function () {

            if ($("#add-edit-form").valid()) {
                // jobPost.setVals(txtId.val(), txtRole.val(), txtLocation.val(), txtJobType.val(), txtDescription.val());                            

                $.ajax({
                    type: 'POST',
                    //data: JSON.stringify(clientInformation),
                    url: '/Client/Save',
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (result) {
                        // insert new list into grid
                        $('#flexClients').flexAddData(result);
                    }
                });
                $(this).dialog('close');
            } else return false;

        },
        Cancel: function () {
            $(this).dialog("close");
            clearForm();
            if (validator)
                validator.resetForm();
        }
    },
    close: function () { clearForm(); },
    open: function () {
        //$("#add-edit-dialog").parent().appendTo($("#add-edit-form"));
    }
});

function RunModalDialog(title, url)
{    
    if (title)
        $dlg.dialog("option", {"title": title });

    if (url)
    {        
        $dlg.load(url).dialog("option", { "title": title }).dialog("open");
    }
        //$dlg.load(url, function () {
        //    var validator = $("#sform").validate();
        //    if (validator)
        //         validator.resetForm();
        //    $dlg.dialog("option", { "title": title }).dialog("open");
        //});
    else {
        
        $dlg.dialog("open");
    }
}

function add(com, grid) {
    $('#fntype').val('Add');
    var url = '/Client/Add/';
    //location.replace(url);
    RunModalDialog("Create New Client");
   // clearForm();    
}
 
function edit(com, grid)
{
        $('.trSelected', grid).each(function () {
          
                var id = $(this).attr('id');
                id = id.substring(id.lastIndexOf('row') + 3);
                currentId = id;
                $('#fntype').val('Edit');
                var ClientName;
                ClientName =$('.trSelected td:eq(2)').text();
                var url = '/Client/Edit/' + id ;

                $.get(url, function (html) {
                    //  setFormControls(data.Id, data.Role, data.Location, data.JobType, data.Description);
                    // alert(data);
                    $($dlg).html(html);
                });
               //location.replace(url);
               RunModalDialog("Edit Client: " + ClientName);
        });

    }</pre></div></div>

<p>The most complicated part in the above script was to figure out how to make a server trip to get data for the Edit button and return that page back for editing.<br />
This is done with these two lines of code:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="javascript"><thead><tr><td colspan="2"  class="head">Javascript</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1">$.<span class="kw1">get</span><span class="br0">&#40;</span>url<span class="sy0">,</span> <span class="kw1">function</span> <span class="br0">&#40;</span>html<span class="br0">&#41;</span> <span class="br0">&#123;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span>$dlg<span class="br0">&#41;</span>.<span class="me1">html</span><span class="br0">&#40;</span>html<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">$.get(url, function (html) {                   
                    $($dlg).html(html);
                });</pre></div></div>

<p>And to make the whole picture complete I&#8217;ll show the Edit method of my controller that returns the above data:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> ActionResult Edit<span class="br0">&#40;</span><span class="kw4">int</span> id<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ClientViewModel model <span class="sy0">=</span> <span class="kw3">new</span> ClientViewModel<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> client <span class="sy0">=</span> Db<span class="sy0">.</span><span class="me1">GetClientById</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; model<span class="sy0">.</span><span class="me1">Client</span> <span class="sy0">=</span> client<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> PartialView<span class="br0">&#40;</span><span class="st0">&quot;_ClientForm&quot;</span>,model<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public ActionResult Edit(int id)
        {
            ClientViewModel model = new ClientViewModel(); 
            var client = Db.GetClientById(id);
            model.Client = client;
            
            return PartialView("_ClientForm",model);
        }</pre></div></div>

<p>As you can see, just a few lines of code to return the model data and the partial view.</p>
<p>This all may seem very easy now, but I can tell you it was not easy to figure all the pieces out.</p>
<p>I am not showing certain functionality here such as my view model or EditorFor custom editors. I also don&#8217;t show the RemoteValidator used to provide uniqueness of the client number and client name. If there will be an interest, I may discuss these details in the separate blog post.</p>
<p>Hope this blog post can help people struggling with the modal dialogs implementation in ASP.NET MVC application.</p>
<p>
*** <strong>Remember, if you have a Web application related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=6&amp;sid=ebc29b65310d77fa409af74cf8d5cd70">Web Developer</a> forum.</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/uidevelopment/ajax/asp-net-mvc-project-with/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>SquishIt and Nancy</title>
		<link>/index.php/webdev/serverprogramming/aspnet/squishit-and-nancy/</link>
		<comments>/index.php/webdev/serverprogramming/aspnet/squishit-and-nancy/#comments</comments>
		<pubDate>Fri, 11 Jan 2013 13:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[ASP.NET]]></category>
		<category><![CDATA[nancy]]></category>
		<category><![CDATA[squishit]]></category>

		<guid isPermaLink="false">/index.php/2013/01/squishit-and-nancy/</guid>
		<description><![CDATA[Everybody's favorite LTD blogger / Belgian tweeter Chris asked me last week how he could get SquishIt working with the Nancy web framework.  I had to admit, I had no idea.  But couldn't imagine it would be that much more difficult than making it work wi&#8230;]]></description>
				<content:encoded><![CDATA[<p>Everybody&#8217;s favorite <a href="/index.php/All/?disp=authdir&amp;author=7">LTD blogger</a> / <a href="http://twitter.com/chrissie1">Belgian tweeter</a> Chris asked me last week how he could get SquishIt working with the <a href="http://nancyfx.org/">Nancy web framework</a>. I had to admit, I had no idea. But couldn&#8217;t imagine it would be that much more difficult than making it work with ASP.net MVC. So I decided to look into it. It turned out to be pretty much the same, with one extra step. I started out by installing the packages I needed from NuGet to an empty asp.net application:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="text"><thead><tr><td colspan="2"  class="head">Text</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1">&gt; install-package SquishIt
&gt; install-package Nancy
&gt; install-package Nancy.Hosting.AspNet
&gt; install-package Nancy.Viewengines.Razor</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&gt; install-package SquishIt
&gt; install-package Nancy
&gt; install-package Nancy.Hosting.AspNet
&gt; install-package Nancy.Viewengines.Razor</pre></div></div>

<p>Once installed, there is a little bit of setup work we need to do.</p>
<h3>Configuring Nancy&#8217;s View Engine</h3>
<p>This was infinitely more complex than using a referenced library in a razor view with MVC. Translation: this was as simple as adding a &#8220;razor&#8221; section to the web.config:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1">&nbsp; <span class="sc3"><span class="re1">&lt;configSections<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;section</span> <span class="re0">name</span>=<span class="st0">&quot;razor&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;Nancy.ViewEngines.Razor.RazorConfigurationSection, Nancy.ViewEngines.Razor&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/configSections<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;razor</span> <span class="re0">disableAutoIncludeModelNamespace</span>=<span class="st0">&quot;false&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;assemblies<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;add</span> <span class="re0">assembly</span>=<span class="st0">&quot;System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;add</span> <span class="re0">assembly</span>=<span class="st0">&quot;SquishIt.Framework&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/assemblies<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;namespaces<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;add</span> <span class="re0">namespace</span>=<span class="st0">&quot;SquishIt.Framework&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/namespaces<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/razor<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">  &lt;configSections&gt;
    &lt;section name="razor" type="Nancy.ViewEngines.Razor.RazorConfigurationSection, Nancy.ViewEngines.Razor" /&gt;
  &lt;/configSections&gt;
  &lt;razor disableAutoIncludeModelNamespace="false"&gt;
    &lt;assemblies&gt;
      &lt;add assembly="System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /&gt;
      &lt;add assembly="SquishIt.Framework" /&gt;
    &lt;/assemblies&gt;
    &lt;namespaces&gt;
      &lt;add namespace="SquishIt.Framework" /&gt;
    &lt;/namespaces&gt;
  &lt;/razor&gt;</pre></div></div>

<p>Its worth noting that when I added SquishIt.Framework to the namespaces section it <strong>worked</strong>, but didn&#8217;t help with intellisense. So I ended up adding the @using directives in my views anyway. So if you want intellisense, don&#8217;t bother with the namespaces if redundancy bothers you.</p>
<h3>Static Bundles</h3>
<p>The typical SquishIt use involves writing a new css or javascript file to the server&#8217;s file system. At least I think it does &#8211; this is certainly what I would consider typical. So I looked at that first. First thing I needed to do was figure out how to get Nancy to render a view for me. It wasn&#8217;t terribly difficult, just had to set up a module with the routes involved:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">Nancy</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> SquishIt<span class="sy0">.</span><span class="me1">NancySample</span><span class="sy0">.</span><span class="me1">Modules</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> HomeModule <span class="sy0">:</span> NancyModule
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> HomeModule<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span><span class="br0">&#91;</span><span class="st0">&quot;/&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> parameters <span class="sy0">=&gt;</span> View<span class="br0">&#91;</span><span class="st0">&quot;Hello.cshtml&quot;</span><span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using Nancy;

namespace SquishIt.NancySample.Modules
{
    public class HomeModule : NancyModule
    {
        public HomeModule()
        {
            Get["/"] = parameters =&gt; View["Hello.cshtml"];
        }
    }
}</pre></div></div>

<p>By convention, Nancy locates the view in Views/Home. I assume it would look in Views/Shared next, but didn&#8217;t bother to confirm. So I added couple javascript files in Content/js, and then added a view with a bundle:</p>
<pre>@using SquishIt.Framework
&lt;!DOCTYPE html&gt;

&lt;html lang="en"&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8" /&gt;
        &lt;title&gt;Hello World Page&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Hello World Page&lt;/h1&gt;
        &lt;p&gt;Hello World!&lt;/p&gt;
        &lt;p&gt;This page will include a javascript bundle that is rendered to the file system and served as a static asset.&lt;/p&gt;
        @Html.Raw(Bundle.JavaScript()
            .Add("~/Content/js/js1.js")
            .Add("~/Content/js/js2.js")
            .Render("~/Content/combined/bundle.js"))
    &lt;/body&gt;
&lt;/html&gt;</pre>
<p>As long as I disabled debugging, a single tag was rendered into my page for bundle.js. That was easy.</p>
<h3>Cached Bundles</h3>
<p>SquishIt also has the ability to render bundles to an internal cache instead of the file system. This is useful for shared hosting environments. You can read the initial documentation <a href="https://github.com/jetheredge/SquishIt/wiki/Using-SquishIt-programmatically-without-the-file-system">here</a>. Getting this to work with Nancy was not really that different &#8211; we just needed to create a module to handle serving the assets:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System.IO</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Text</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">Nancy</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">SquishIt.Framework</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> SquishIt<span class="sy0">.</span><span class="me1">NancySample</span><span class="sy0">.</span><span class="me1">Modules</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> AssetsModule <span class="sy0">:</span> NancyModule
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> AssetsModule<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">:</span> <span class="kw1">base</span><span class="br0">&#40;</span><span class="st0">&quot;/assets&quot;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span><span class="br0">&#91;</span><span class="st0">&quot;/js/{name}&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> parameters <span class="sy0">=&gt;</span> CreateResponse<span class="br0">&#40;</span>Bundle<span class="sy0">.</span><span class="me1">JavaScript</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">RenderCached</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#41;</span>parameters<span class="sy0">.</span><span class="me1">name</span><span class="br0">&#41;</span>, Configuration<span class="sy0">.</span><span class="me1">Instance</span><span class="sy0">.</span><span class="me1">JavascriptMimeType</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span><span class="br0">&#91;</span><span class="st0">&quot;/css/{name}&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> parameters <span class="sy0">=&gt;</span> CreateResponse<span class="br0">&#40;</span>Bundle<span class="sy0">.</span><span class="me1">Css</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">RenderCached</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#41;</span>parameters<span class="sy0">.</span><span class="me1">name</span><span class="br0">&#41;</span>, Configuration<span class="sy0">.</span><span class="me1">Instance</span><span class="sy0">.</span><span class="me1">CssMimeType</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Response CreateResponse<span class="br0">&#40;</span><span class="kw4">string</span> content, <span class="kw4">string</span> contentType<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> Response
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="me1">FromStream</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">=&gt;</span> <span class="kw3">new</span> MemoryStream<span class="br0">&#40;</span>Encoding<span class="sy0">.</span><span class="me1">UTF8</span><span class="sy0">.</span><span class="me1">GetBytes</span><span class="br0">&#40;</span>content<span class="br0">&#41;</span><span class="br0">&#41;</span>, contentType<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="me1">WithHeader</span><span class="br0">&#40;</span><span class="st0">&quot;Cache-Control&quot;</span>, <span class="st0">&quot;max-age=45&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System.IO;
using System.Text;
using Nancy;
using SquishIt.Framework;

namespace SquishIt.NancySample.Modules
{
    public class AssetsModule : NancyModule
    {
        public AssetsModule()
            : base("/assets")
        {
            Get["/js/{name}"] = parameters =&gt; CreateResponse(Bundle.JavaScript().RenderCached((string)parameters.name), Configuration.Instance.JavascriptMimeType);
            Get["/css/{name}"] = parameters =&gt; CreateResponse(Bundle.Css().RenderCached((string)parameters.name), Configuration.Instance.CssMimeType);
        }

        Response CreateResponse(string content, string contentType)
        {
            return Response
                .FromStream(() =&gt; new MemoryStream(Encoding.UTF8.GetBytes(content)), contentType)
                .WithHeader("Cache-Control", "max-age=45");
        }
    }
}</pre></div></div>

<p>This module renders a cached bundle by name using SquishIt&#8217;s globally configured MIME types to render the content. It also sets a cache-control header on the response, just because I wanted to see how to set headers with Nancy.</p>
<p>We then need to add a Global.asax and build a bundle:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">protected</span> <span class="kw4">void</span> Application_Start<span class="br0">&#40;</span><span class="kw4">object</span> sender, EventArgs e<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; Bundle<span class="sy0">.</span><span class="me1">JavaScript</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span><span class="st0">&quot;~/Content/js/js1.js&quot;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="kw1">Add</span><span class="br0">&#40;</span><span class="st0">&quot;~/Content/js/js2.js&quot;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="me1">AsCached</span><span class="br0">&#40;</span><span class="st0">&quot;hello&quot;</span>, <span class="st0">&quot;~/assets/js/hello&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">protected void Application_Start(object sender, EventArgs e)
{
    Bundle.JavaScript()
        .Add("~/Content/js/js1.js")
        .Add("~/Content/js/js2.js")
        .AsCached("hello", "~/assets/js/hello");
}</pre></div></div>

<p>The second parameter here is called filePath, but actually represents the path to the assets controller, including the &#8220;name&#8221; parameter. This is what gets used in the src attribute of the rendered tag.</p>
<p>Finally we can add a view. Note that the cached bundle is rendered by name into the page:</p>
<pre>@using SquishIt.Framework
&lt;!DOCTYPE html&gt;

&lt;html lang="en"&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8" /&gt;
        &lt;title&gt;Hello World Page&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Hello World Page&lt;/h1&gt;
        &lt;p&gt;Hello World!&lt;/p&gt;
        &lt;p&gt;This page will include a javascript bundle that is rendered into memory in Global.asax and served through the Assets Module&lt;/p&gt;
        @Html.Raw(Bundle.JavaScript()
            .RenderCachedAssetTag("hello"))
    &lt;/body&gt;
&lt;/html&gt;</pre>
<p>and change our HomeModule to serve the route:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">Nancy</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> SquishIt<span class="sy0">.</span><span class="me1">NancySample</span><span class="sy0">.</span><span class="me1">Modules</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> HomeModule <span class="sy0">:</span> NancyModule
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> HomeModule<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span><span class="br0">&#91;</span><span class="st0">&quot;/&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> parameters <span class="sy0">=&gt;</span> View<span class="br0">&#91;</span><span class="st0">&quot;Hello.cshtml&quot;</span><span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span><span class="br0">&#91;</span><span class="st0">&quot;/cached&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> parameters <span class="sy0">=&gt;</span> View<span class="br0">&#91;</span><span class="st0">&quot;HelloCached.cshtml&quot;</span><span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using Nancy;

namespace SquishIt.NancySample.Modules
{
    public class HomeModule : NancyModule
    {
        public HomeModule()
        {
            Get["/"] = parameters =&gt; View["Hello.cshtml"];
            Get["/cached"] = parameters =&gt; View["HelloCached.cshtml"];
        }
    }
}</pre></div></div>

<p>Piece of cake.</p>
<h3>Conclusion</h3>
<p>This was my first exposure to Nancy, and I came away pretty impressed. Its no-nonsense approach reminds me of other projects I&#8217;ve messed around with in the past like <a href="http://manosdemono.org/">manos</a> and <a href="http://servicestack.net/">ServiceStack</a>. I hope to get a chance to play around with it at least a little bit more.</p>
<p>I&#8217;ll think about putting together a package to help with integration (similar to <a href="http://nuget.org/packages/SquishIt.Mvc/">SquishIt.Mvc</a> but its so easy to get going that I&#8217;m not sure its needed (that package is only a controller and a few extension methods that return MvcHtmlStrings instead of strings). I guess I will have to see if there is any demand, or if there are any issues preventing Nancy from being used in shared hosting environments to see if it&#8217;d be worth it.</p>
<p>The sample project can be downloaded in its&#8217; entirety at <a href="https://github.com/AlexCuse/SquishIt.NancySample/tree/blog-20130111">github</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/serverprogramming/aspnet/squishit-and-nancy/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Preprocessor Extensibility in SquishIt 0.9</title>
		<link>/index.php/webdev/serverprogramming/preprocessor-extensibility-in-squishit-0-9/</link>
		<comments>/index.php/webdev/serverprogramming/preprocessor-extensibility-in-squishit-0-9/#respond</comments>
		<pubDate>Fri, 05 Oct 2012 12:38:00 +0000</pubDate>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[ASP.NET]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[Server Programming]]></category>
		<category><![CDATA[XHTML and CSS]]></category>
		<category><![CDATA[asp.net]]></category>
		<category><![CDATA[squishit]]></category>

		<guid isPermaLink="false">/index.php/2012/10/preprocessor-extensibility-in-squishit-0-9/</guid>
		<description><![CDATA[For the past couple years, .net developers have been embracing various content preprocessors as they become more accessible.  For the same couple of years, we've been trying to keep up.  The dotLess port of the popular .less CSS extension has been getti&#8230;]]></description>
				<content:encoded><![CDATA[<p>For the past couple years, .net developers have been embracing various content preprocessors as they become more accessible.  For the same couple of years, we&#8217;ve been trying to keep up.  The <a href="http://www.dotlesscss.org/">dotLess</a> port of the popular .less CSS extension has been getting better by leaps and bounds. It has become almost trivial to embed a javascript compiler in .net these days (thanks to projects like <a href="http://jurassic.codeplex.com/">Jurassic</a>), enabling us to support things like coffeescript.  So we&#8217;re doing the obvious thing &#8211; stripping preprocessor support from our core library.</p>
<p>There are some good reasons for this.  Why force people to download things like Jurassic or dotLess if they don&#8217;t have the need?  The flipside of this is that we&#8217;d been deliberately avoiding adding support for SASS/SCSS because of concerns about linking to IronRuby &#8211; these concerns largely disappear when preprocessing becomes an opt-in behavior.  Some of these libraries don&#8217;t even work on Mono (I think .less might be the only one that works currently) so I feel extra bitter downloading code that won&#8217;t run on my platform of choice.  Finally, the growth in adoption has been so fast that frankly, we&#8217;re unable to keep up.</p>
<p>So let&#8217;s take a look at some of the original code (well not original as some of our refactorings did find their way to the 0.8.x branch).</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">internal</span> <span class="kw1">override</span> <span class="kw4">string</span> PreprocessForDebugging<span class="br0">&#40;</span><span class="kw4">string</span> filename<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span>filename<span class="sy0">.</span><span class="me1">ToLower</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">EndsWith</span><span class="br0">&#40;</span><span class="st0">&quot;.coffee&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> js <span class="sy0">=</span> ProcessCoffee<span class="br0">&#40;</span>filename<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; filename <span class="sy0">+=</span> debugExtension<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">using</span><span class="br0">&#40;</span><span class="kw1">var</span> fileWriter <span class="sy0">=</span> fileWriterFactory<span class="sy0">.</span><span class="me1">GetFileWriter</span><span class="br0">&#40;</span>filename<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span>js<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="kw1">return</span> filename<span class="sy0">;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">internal override string PreprocessForDebugging(string filename)
{
    if(filename.ToLower().EndsWith(".coffee"))
    {
        string js = ProcessCoffee(filename);
        filename += debugExtension;
        using(var fileWriter = fileWriterFactory.GetFileWriter(filename))
        {
            fileWriter.Write(js);
        }
    }
    return filename;
}</pre></div></div>

<p>As you can see, the trigger for preprocessing is the extension.  This is the desired behavior, but the way it was coded left it very brittle and made adding new preprocessors unwieldy.  So we set out to find a way to break this code out of the core library.  </p>
<p>The approach that we used was plugin based &#8211; we defined an interface and exposed a mechanism to register implementations of this interface with the core library.  Our original interface actually checked a file name to see if it needed preprocessing, so you could define any logic you wanted to determine whether to preprocess &#8211; we ended up eschewing this to go back to the extension-based decisions, for reasons that will be discussed later.  The interface looks like this:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> <span class="kw4">interface</span> IPreprocessor
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw4">bool</span> ValidFor<span class="br0">&#40;</span><span class="kw4">string</span> extension<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; IProcessResult Process<span class="br0">&#40;</span><span class="kw4">string</span> filePath, <span class="kw4">string</span> content<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> Extensions <span class="br0">&#123;</span> <span class="kw1">get</span><span class="sy0">;</span> <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public interface IPreprocessor
{
    bool ValidFor(string extension);
    IProcessResult Process(string filePath, string content);
    string[] Extensions { get; }
}</pre></div></div>

<p>The &#8220;ValidFor&#8221; method does exactly what it says &#8211; check if the preprocessor should be used with the supplied extension.  &#8220;Process&#8221; is where the actual preprocessing happens.  The array of extensions is exposed publicly to be used in registering the preprocessor &#8211; this is because each type of content bundle has a list of allowed extensions that is used to filter what gets included when we add a directory full of files.  Finally, the ProcessResult type includes a string representing preprocessed content and a list of any dependent files that were changed.  This last part was added by <a href="http://twitter.com/SimonPStevens">Simon Stevens</a> to enable <a href="https://github.com/jetheredge/SquishIt/pull/211">inclusion of .less imports as dependent files</a>.</p>
<p>Preprocessors can be registered two ways &#8211; both statically and with a particular bundle instance.  For the instance level configuration there is a method in the bundle&#8217;s fluent API called &#8220;WithPreprocessor&#8221; that allows inclusion of a preprocessor with that bundle instance.  Globally, we used the static &#8220;Bundle&#8221; class to allow preprocessor registration &#8211; methods exist there for registering script, style, and global preprocessors.  If preprocessors of the same type are registered both statically and with a bundle instance, the instance-level preprocessor will be used.</p>
<p>Now, back to why we decided to make preprocessor selection based on extension rather than the complete file name.  To understand, I guess all you have to do is read about the <a href="http://guides.rubyonrails.org/asset_pipeline.html">Asset Pipeline</a> in Ruby on Rails, but I will attempt to summarize here.  The beautiful thing about the pipeline approach is the ability to chain preprocessing steps.  This allows you to use ERB&#8217;s helper methods in your file <strong>prior to</strong> other preprocessing.  For example, if you wanted to use ERB helpers in a coffeescript file you can name your file file.js.coffee.erb &#8211; when an asset has the .coffee and .erb extensions, both preprocessors will be applied.  The order they are applied is driven by the reverse order of extensions, so *.coffee.erb would be preprocessed first by ERB and then by the coffeescript compiler.  Our goal was to emulate this behavior in SquishIt, and without matching preprocessors to extensions rather than filenames we wouldn&#8217;t have been able to.</p>
<p>Enabling this behavior is mostly a matter of finding preprocessors correctly.  We find them like so:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">protected</span> IPreprocessor<span class="br0">&#91;</span><span class="br0">&#93;</span> FindPreprocessors<span class="br0">&#40;</span><span class="kw4">string</span> file<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">return</span> file<span class="sy0">.</span><span class="me1">Split</span><span class="br0">&#40;</span><span class="st0">'.'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="me1">Skip</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="me1">Reverse</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="kw1">Select</span><span class="br0">&#40;</span>FindPreprocessor<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="kw1">Where</span><span class="br0">&#40;</span>p <span class="sy0">=&gt;</span> p <span class="sy0">!=</span> <span class="kw1">null</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">.</span><span class="me1">ToArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">protected IPreprocessor[] FindPreprocessors(string file)
{
    return file.Split('.')
        .Skip(1)
        .Reverse()
        .Select(FindPreprocessor)
        .Where(p =&gt; p != null)
        .ToArray();
}</pre></div></div>

<p>It&#8217;s important to note here that &#8220;FindPreprocessor&#8221; uses the firstpreprocessor it finds for a given extension &#8211; so we need to take care if implementing preprocessors for common file extensions like &#8220;.js&#8221;.  We can then use the preprocessors in the default order to process our content:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="de1"><pre class="de1"><span class="kw1">protected</span> <span class="kw4">string</span> PreprocessFile<span class="br0">&#40;</span><span class="kw4">string</span> file, IPreprocessor<span class="br0">&#91;</span><span class="br0">&#93;</span> preprocessors<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">return</span> directoryWrapper<span class="sy0">.</span><span class="me1">ExecuteInDirectory</span><span class="br0">&#40;</span>Path<span class="sy0">.</span><span class="me1">GetDirectoryName</span><span class="br0">&#40;</span>file<span class="br0">&#41;</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">=&gt;</span> PreprocessContent<span class="br0">&#40;</span>file, preprocessors, ReadFile<span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">protected</span> <span class="kw4">string</span> PreprocessContent<span class="br0">&#40;</span><span class="kw4">string</span> file, IPreprocessor<span class="br0">&#91;</span><span class="br0">&#93;</span> preprocessors, <span class="kw4">string</span> content<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">return</span> preprocessors<span class="sy0">.</span><span class="me1">NullSafeAny</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">?</span> preprocessors<span class="sy0">.</span><span class="me1">Aggregate</span><span class="br0">&#40;</span>content, <span class="br0">&#40;</span>cntnt, pp<span class="br0">&#41;</span> <span class="sy0">=&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> result <span class="sy0">=</span> pp<span class="sy0">.</span><span class="me1">Process</span><span class="br0">&#40;</span>file, cntnt<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bundleState<span class="sy0">.</span><span class="me1">DependentFiles</span><span class="sy0">.</span><span class="me1">AddRange</span><span class="br0">&#40;</span>result<span class="sy0">.</span><span class="me1">Dependencies</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> result<span class="sy0">.</span><span class="me1">Result</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">:</span> content<span class="sy0">;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">protected string PreprocessFile(string file, IPreprocessor[] preprocessors)
{
    return directoryWrapper.ExecuteInDirectory(Path.GetDirectoryName(file),
        () =&gt; PreprocessContent(file, preprocessors, ReadFile(file)));
}

protected string PreprocessContent(string file, IPreprocessor[] preprocessors, string content)
{
    return preprocessors.NullSafeAny()
               ? preprocessors.Aggregate(content, (cntnt, pp) =&gt;
                                                      {
                                                          var result = pp.Process(file, cntnt);
                                                          bundleState.DependentFiles.AddRange(result.Dependencies);
                                                          return result.Result;
                                                      })
               : content;
}</pre></div></div>

<p>Despite the fact that we have totally broken everything users have come to depend on, we really do want to make the transition easier for people who were using .less or coffeescript with SquishIt.  This is where the tremendous <a href="http://nuget.org/packages/WebActivator">WebActivator</a> library comes in.  By including this library in our project, it allows us to define bits of code to run when the application starts up, like so:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="br0">&#91;</span>assembly<span class="sy0">:</span> WebActivator<span class="sy0">.</span><span class="me1">PreApplicationStartMethod</span><span class="br0">&#40;</span><span class="kw3">typeof</span><span class="br0">&#40;</span>$rootnamespace$<span class="sy0">.</span><span class="me1">App_Start</span><span class="sy0">.</span><span class="me1">SquishItHogan</span><span class="br0">&#41;</span>, <span class="st0">&quot;Start&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp;
<span class="kw1">namespace</span> $rootnamespace$<span class="sy0">.</span><span class="me1">App_Start</span>
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">using</span> <span class="co3">SquishIt.Framework</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw1">using</span> <span class="co3">SquishIt.Hogan</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">class</span> SquishItHogan
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">void</span> Start<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Bundle<span class="sy0">.</span><span class="me1">RegisterScriptPreprocessor</span><span class="br0">&#40;</span><span class="kw3">new</span> HoganPreprocessor<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">[assembly: WebActivator.PreApplicationStartMethod(typeof($rootnamespace$.App_Start.SquishItHogan), "Start")]

namespace $rootnamespace$.App_Start
{
    using SquishIt.Framework;
    using SquishIt.Hogan;

    public class SquishItHogan
    {
        public static void Start()
        {
            Bundle.RegisterScriptPreprocessor(new HoganPreprocessor());
        }
    }
}</pre></div></div>

<p>Thanks to this snippet, you don&#8217;t actually need to do anything to hook up global preprocessing &#8211; just reference the dll containing your preprocessor and WebActivator.  This example is from the Hogan preprocessor, submitted by <a href="https://twitter.com/jincod">Abdrashitov Vadim</a>.  This pull request made me smile more than any I&#8217;ve seen in recent memory &#8211; a big part of the reason we moved to this model was to make it easier for people to define their own preprocessors and share them with the community.  To have one submitted by a user before we even had a production-ready release was just so cool.</p>
<p>I think this covers most of the changes, at least at a cursory level.  I hope to find the time to put together a bit of proper documentation in the next few months, but hopefully this will help in the meantime.  I&#8217;d like to extend a huge thanks to everyone who reported bugs in our pre-release versions, and to <a href="https://twitter.com/rlsdumont">Rodrigo Dumont</a> who provided the spark to get started on this stuff late last year.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/serverprogramming/preprocessor-extensibility-in-squishit-0-9/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Handling Unauthenticated AJAX Requests</title>
		<link>/index.php/webdev/uidevelopment/handling-unauthenticated-ajax-requests/</link>
		<comments>/index.php/webdev/uidevelopment/handling-unauthenticated-ajax-requests/#respond</comments>
		<pubDate>Wed, 15 Feb 2012 11:12:00 +0000</pubDate>
		<dc:creator><![CDATA[Alex Ullrich]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[ASP.NET]]></category>
		<category><![CDATA[UI Development]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[asp.net mvc]]></category>
		<category><![CDATA[jquery]]></category>

		<guid isPermaLink="false">/index.php/2012/02/handling-unauthenticated-ajax-requests/</guid>
		<description><![CDATA[A common pattern that I use in creating ajaxy applications is to return a small HTML fragment from the request, and then inject this fragment into the DOM in the callback executed after a successful request.  This tends to be a bit simpler than returnin&#8230;]]></description>
				<content:encoded><![CDATA[<p>A common pattern that I use in creating ajaxy applications is to return a small HTML fragment from the request, and then inject this fragment into the DOM in the callback executed after a successful request.  This tends to be a bit simpler than returning JSON and picking it apart to update the page, but it has one major problem, at least when using normal forms authentication.  If the user gets logged out (either by logging out from another tab or an expiring session), the AJAX request gets redirected to the login page, which is then returned and inserted into the page.  You can see how hideous this can become in the picture below.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/WebDev/handling-unauthenticated-ajax-requests/bad-logon.PNG?mtime=1328983889"><img alt="" src="/wp-content/uploads/blogs/WebDev/handling-unauthenticated-ajax-requests/bad-logon.PNG?mtime=1328983889" width="941" height="644" /></a></div>
<p>In this case, when you sign up for a task it is supposed to return the updated task, and use this task to replace the notecard into the DOM on the right hand side.  It can actually get uglier, as we support signing up for multiple tasks at a time.  However, if the session expires we get a big, ugly login page displayed in the midst of all our pretty notecards.  What I&#8217;d like to find is a way to retain the convenience of using forms authentication, but handle scenarios like this more gracefully.</p>
<p>Adding a piece of metadata to the login page seemed like a good way to get this done without making things any harder on the user.  I initially wanted to get the login page classified as an error, so that redirection could be accomplished on the client side using the error callback available when using jQuery for AJAX requests.  This would be nice, but in jQuery 1.5 and above a &#8220;statusCode&#8221; callback has been added that is even nicer.  You can use the callback like this:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="javascript"><thead><tr><td colspan="2"  class="head">Javascript</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1">$.<span class="me1">ajax</span><span class="br0">&#40;</span><span class="br0">&#123;</span>
&nbsp; statusCode<span class="sy0">:</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="nu0">404</span><span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; alert<span class="br0">&#40;</span><span class="st0">'page not found'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">$.ajax({
  statusCode: {
    404: function() {
      alert('page not found');
    }
  }
});</pre></div></div>

<p>The ease with which this allows you to define behavior for different status codes is fantastic.  As I set off down this path, the most obvious choice seemed to be adding a 401 (unauthorized) status code to the login page, but this got us into a weird redirect loop because forms authentication redirects all 401&#8217;s to the login page &#8211; causing you lose the return URL, and redirect users back to the login page once they are authenticated.  Not exactly a paragon of usability.</p>
<p>Having found this out the hard way, I decided a custom status code might be better.  It&#8217;s easy enough to add the custom status code to the login page with a single line of C#:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">Response<span class="sy0">.</span><span class="me1">StatusCode</span> <span class="sy0">=</span> <span class="nu0">999</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Response.StatusCode = 999;</pre></div></div>

<p>We can then make our requests using something along these lines:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="javascript"><thead><tr><td colspan="2"  class="head">Javascript</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1">$.<span class="me1">ajax</span><span class="br0">&#40;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; type<span class="sy0">:</span> <span class="st0">'POST'</span><span class="sy0">,</span>
&nbsp; &nbsp; url<span class="sy0">:</span> <span class="st0">'/Task/SignUp'</span><span class="sy0">,</span>
&nbsp; &nbsp; data<span class="sy0">:</span> <span class="st0">'projectId='</span> <span class="sy0">+</span> pid <span class="sy0">+</span> <span class="st0">'&amp;storyId='</span> <span class="sy0">+</span> sid <span class="sy0">+</span> <span class="st0">'&amp;id='</span> <span class="sy0">+</span> id <span class="sy0">+</span> <span class="st0">'&amp;initials='</span> <span class="sy0">+</span> initials<span class="sy0">,</span>
&nbsp; &nbsp; success<span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span>html<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; $<span class="br0">&#40;</span><span class="st0">'#'</span> <span class="sy0">+</span> id<span class="br0">&#41;</span>.<span class="me1">replaceWith</span><span class="br0">&#40;</span>html<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span><span class="sy0">,</span>
&nbsp; &nbsp; statusCode<span class="sy0">:</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="nu0">999</span><span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; location.<span class="me1">href</span> <span class="sy0">=</span> <span class="st0">'/Account/LogOn?returnUrl='</span> <span class="sy0">+</span> location.<span class="me1">href</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">$.ajax({
    type: 'POST',
    url: '/Task/SignUp',
    data: 'projectId=' + pid + '&amp;storyId=' + sid + '&amp;id=' + id + '&amp;initials=' + initials,
    success: function (html) {
        $('#' + id).replaceWith(html);
    },
    statusCode: {
        999: function() {
            location.href = '/Account/LogOn?returnUrl=' + location.href;
        }
    }
});</pre></div></div>

<p>This works well enough, at least from cassini.  When deployed to an IIS server however, we noticed that the 999 status code was getting picked up by the error handling modules, and of course we did not have an error page set up for that code.  To get around that we had to add the following to the code to display our login view:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">Response<span class="sy0">.</span><span class="me1">TrySkipIisCustomErrors</span> <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Response.TrySkipIisCustomErrors = true;</pre></div></div>

<p>That&#8217;s kind of nasty, but it seems to allow us to accomplish our goal.  I think I can stomach it on this one page in the name of improving the user&#8217;s experience on the site.  </p>
<p>There&#8217;s one more thing we can do to make our lives easier.  There is no special behavior in our statusCode handler, so it would be nice define it only once.  Luckily, the folks at jQuery are a step ahead of us.  We can define our statusCode handler using the ajaxSetup method in our master page:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="javascript"><thead><tr><td colspan="2"  class="head">Javascript</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1">$.<span class="me1">ajaxSetup</span><span class="br0">&#40;</span><span class="br0">&#123;</span>
&nbsp; &nbsp; statusCode<span class="sy0">:</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="nu0">999</span><span class="sy0">:</span> <span class="kw1">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; location.<span class="me1">href</span> <span class="sy0">=</span> <span class="st0">'/Account/LogOn?returnUrl='</span> <span class="sy0">+</span> location.<span class="me1">href</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">$.ajaxSetup({
    statusCode: {
        999: function () {
            location.href = '/Account/LogOn?returnUrl=' + location.href;
        }
    }
});</pre></div></div>

<p>Now that everything is set up, we are properly redirected to the login page:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/WebDev/handling-unauthenticated-ajax-requests/good-logon.PNG?mtime=1328987447"><img alt="" src="/wp-content/uploads/blogs/WebDev/handling-unauthenticated-ajax-requests/good-logon.PNG?mtime=1328987447" width="557" height="435" /></a></div>
<p>I&#8217;m not sure this is the best solution to our problem, but it is certainly a solution.  It allows us to keep leveraging ASP.net&#8217;s built in error handling and authentication (I know they aren&#8217;t perfect, but they are good enough for us in this scenario) while making the user&#8217;s life a bit easier in the event something goes wrong.  In this case, my team is the primary user of the application so it makes our lives easier <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Complete source code for the application in question is available on <a href="https://github.com/jawsthegame/PivotalExtension">github</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/uidevelopment/handling-unauthenticated-ajax-requests/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Firefox heading for 15% market share?</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/firefox-heading-for-15-market/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/firefox-heading-for-15-market/#comments</comments>
		<pubDate>Sat, 11 Feb 2012 14:57:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[XHTML and CSS]]></category>
		<category><![CDATA[browers]]></category>
		<category><![CDATA[chrome]]></category>
		<category><![CDATA[firefox]]></category>

		<guid isPermaLink="false">/index.php/2012/02/firefox-heading-for-15-market/</guid>
		<description><![CDATA[I decided to take a look at my Has FireFox lost its Mojo, are FireFox user jumping ship to Chrome? post to compare the browser stats. In that post I wrote the following 

So what will happen to FireFox will they ever pass 25% or is this a downward spi&#8230;]]></description>
				<content:encoded><![CDATA[<p>I decided to take a look at my <a href="/index.php/WebDev/WebDesignGraphicsStyling/has-firefox-lost-its-mojo-are-firefox-us">Has FireFox lost its Mojo, are Firefox user jumping ship to Chrome?</a> post to compare the browser stats. In that post I wrote the following </p>
<blockquote><p>So what will happen to Firefox will they ever pass 25% or is this a downward spiral and within a year Chrome will have that 25% and Firefox will be at 15% or so? With all the new stuff like the Google&#8217;s App Store that Google is adding to Chrome its usage will have to grow fast.</p></blockquote>
<p>Well Firefox never reached 25%, as a matter of fact Firefox  is at less than 20% market share today. Here is what the stats look like for the last 12 months according to <a href="http://marketshare.hitslink.com/browser-market-share.aspx?qprid=1">NetMarket Share</a></p>
<div class="image_block"><a href="/wp-content/uploads/blogs/WebDev/BrowserStats.PNG?mtime=1328978705"><img alt="" src="/wp-content/uploads/blogs/WebDev/BrowserStats.PNG?mtime=1328978705" width="805" height="235" /></a></div>
<p>As you can see Chrome has almost surpassed Firefox, I think that in 2 or 3 months Google will have surpassed Firefox. A lot of people still use Firefox because of the fact that some extensions don&#8217;t exist on Chrome. NoScript is a big one, Chrome has actually somethign similar, it is called <a href="https://chrome.google.com/webstore/detail/oiigbmnaadbkfbmpbfijlflahbdbdgdf">ScriptNo</a>. FireBug is another reason that people stick with FireFox for now. Even Germany&#8217;s Federal Office for Information Security (BSI) is <a href="http://www.theverge.com/2012/2/5/2771834/german-agency-google-chrome-safety">recommending Chrome</a> now, they did not pick FireFox.</p>
<p>A lot of people are ranting about the fact that Firefox has become bloated, yes compared to Internet Explorer it might look lean but compared to Chrome it certainly does not. We have to wait and see what happens, I will revisit this again early next year. </p>
<p>I also wonder if the release of Windows 8 will do anything to make Internet Explorer gain some market share again?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/firefox-heading-for-15-market/feed/</wfw:commentRss>
		<slash:comments>13</slash:comments>
		</item>
		<item>
		<title>Google realizes that JavaScript is a dead end programming language, to be replaced by Dart a new language</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/google-realizes-that-javascript-is/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/google-realizes-that-javascript-is/#comments</comments>
		<pubDate>Sun, 11 Sep 2011 20:57:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[dart]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[programming]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">/index.php/2011/09/google-realizes-that-javascript-is/</guid>
		<description><![CDATA[All the way back in 2010 Google realized that JavaScript is a dead end programming language.

Here is what was posted on the com.googlegroups.google-caja-discuss list

Javascript has fundamental flaws that cannot be fixed merely by evolving the
lan&#8230;]]></description>
				<content:encoded><![CDATA[<p>All the way back in 2010 Google realized that JavaScript is a dead end programming language.</p>
<p>Here is what was posted on the <a href="http://markmail.org/message/uro3jtoitlmq6x7t">com.googlegroups.google-caja-discuss</a> list</p>
<blockquote><p>Javascript has fundamental flaws that cannot be fixed merely by evolving the<br />
language.  We&#8217;ll adopt a two-pronged strategy for the future of Javascript:</p>
<p>   &#8211; Harmony (low risk/low reward): continue working in conjunction with<br />
   TC39 (the EcmaScript standards body) to evolve Javascript<br />
   &#8211; Dash (high risk/high reward): Develop a new language (called Dash) that<br />
   aims to maintain the dynamic nature of Javascript but have a better<br />
   performance profile and be amenable to tooling for large projects. Push for<br />
   Dash to become an open standard and be adopted by other browsers. Developers<br />
   using Dash tooling will be able to use a cross-compiler to target Javascript<br />
   for browsers that do not support Dash natively.</p></blockquote>
<p>A new language will be announced at the goto conference named Dart, the keynote will be:  <a href="http://gotocon.com/aarhus-2011/presentation/Opening%20Keynote:%20Dart,%20a%20new%20programming%20language%20for%20structured%20web%20programming">Opening Keynote: Dart, a new programming language for structured web programming</a></p>
<p>Assuming that Dash is now called Dart, here is what it is supposed to do, again according to the posting on the com.googlegroups.google-caja-discuss list</p>
<blockquote><p>Dash is the leapfrog effort that is designed to be a clean break from<br />
Javascript.  It will seek to keep the parts that have made the Internet so<br />
successful, but fill in holes everyone agrees it has.</p>
<p>Dash is designed with three perspectives in mind:</p>
<p>   &#8211; Performance &#8212; Dash is designed with performance characteristics in<br />
   mind, so that it is possible to create VMs that do not have the performance<br />
   problems that all EcmaScript VMs must have.<br />
   &#8211; Developer Usability &#8212; Dash is designed to keep the dynamic,<br />
   easy-to-get-started, no-compile nature of Javascript that has made the web<br />
   platform the clear winner for hobbyist developers.<br />
   &#8211; Ability to be Tooled &#8212; Dash is designed to be more easily tooled (e.g.<br />
   with optional types) for large-scale projects that require<br />
   code-comprehension features such as refactoring and finding callsites.<br />
    Dash, however, does not require tooling to be effective&#8211;small-scale<br />
   developers may still be satisfied with a text editor.</p>
<p>Dash is also designed to be securable, where that ability does not seriously<br />
conflict with the three main goals.</p>
<p>Dash will be designed to be consumed in a number of locations:</p>
<p>   &#8211; Browser VM &#8212; Our aspiration is that Dash will ultimately be a viable<br />
   substitute for Javascript as the native client-side language of choice<br />
   across all browsers.<br />
   &#8211; Front-end Server &#8212; Dash will be designed as a language that can be<br />
   used server-side for things up to the size of Google-scale Front Ends.  This<br />
   will allow large scale applications to unify on a single language for client<br />
   and front end code.<br />
   &#8211; Dash Cross Compiler &#8212; Dash will be designed so that a large subset of<br />
   it can be compiled to target legacy Javascript platforms so teams that<br />
   commit to using Dash do not have to seriously limit their reach.  Platforms<br />
   that have a Dash VM can operate on the original Dash code without<br />
   translation and take advantage of the increased performance.  One of the<br />
   ways we will evolve Harmony is to be a better target for such compiled Dash<br />
   code.</p></blockquote>
<p>So far we don&#8217;t know much about this new language except for what they say about Dash, we can assume that it will address some of the points that were posted in the list which I shared in this post earlier</p>
<p>Even if this new language is better than JavaScript will all the other browser vendors be on board? Remember that Google launched the <a href="http://golang.org/">Go language</a> last year, what happened to that?</p>
<p>I am skeptical about all of this but of course I could be dead wrong</p>
<p>Time will tell&#8230;&#8230;&#8230;</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/google-realizes-that-javascript-is/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>What Does a Web Developer Need To Know</title>
		<link>/index.php/webdev/uidevelopment/what-does-a-web-developer/</link>
		<comments>/index.php/webdev/uidevelopment/what-does-a-web-developer/#comments</comments>
		<pubDate>Tue, 28 Jun 2011 09:54:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[Server Programming]]></category>
		<category><![CDATA[UI Development]]></category>
		<category><![CDATA[XHTML and CSS]]></category>
		<category><![CDATA[asp.net]]></category>
		<category><![CDATA[competency]]></category>
		<category><![CDATA[css]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[jsp]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[seo]]></category>
		<category><![CDATA[table layout]]></category>
		<category><![CDATA[w3c]]></category>

		<guid isPermaLink="false">/index.php/2011/06/what-does-a-web-developer/</guid>
		<description><![CDATA[What is a web developer? Recently I was involved in a discussion about the skills a web developer is expected to have and how interesting it has been to watch common bad practices (like table layout and SQL injection) continue to spread. So in the nature of Denis's What does a SQL Server developer need to know? post, I present the web developer breakdown.]]></description>
				<content:encoded><![CDATA[<p>What is a web developer? Recently I was involved in a discussion about the skills a web developer is expected to have and how interesting it has been to watch common bad practices (like table layout and SQL injection) continue to spread. So in the nature of Denis&#8217;s <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/what-does-a-sql-server" title="Read Denis's post">What does a SQL Server developer need to know?</a> post, I present the web developer breakdown.</p>
<h2>What Level Am I?</h2>
<p>Rather than try and attach years of experience to this scale, I&#8217;m going to present a list of major areas and skills, questions, or topics in each area. I&#8217;ve tried to capture whether I feel a skill is required to be an Intermediate or Advanced web developer. </p>
<p>I put this list together based on my own experience, 20-30 web developer interview lists, and some feedback from others.</p>
<p>Beginner: Knows some of the items on the list<br />
Intermediate: Knows most intermediate items and some advanced<br />
Advanced: Knows almost everything on the list</p>
<style>
.oneshottable { border: 1px solid #444444; border-collapse: collapse; width: 100%; margin-bottom: 12px; }
.oneshottable th { background-color: #444444; color: white; text-transform: uppercase; font-weight: bold; padding: 4px;font-size: 90%; }
.oneshottable td{ padding: 1px 2px; min-width: 20px; border-bottom: 1px solid #999999; font-size: 80%;}
.oneshottable td.summary:first-child{ text-align: left; font-weight: normal; padding: 3px;}
.oneshottable td:first-child{ text-align: center; font-weight: bold }
</style>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">HTML</th>
</tr>
<tr>
<td colspan="2" class="summary">The ability to produce clean, valid, maintainable HTML is critical for a web developer. Current standards include HTML 4.01 (1999), XHTML 1 (2000), and the beginning of HTML 5 (2011)</td>
</tr>
<tr>
<td>I</td>
<td>The effect of doctypes, can code a mostly valid site without looking up the rules</td>
</tr>
<tr>
<td>A</td>
<td>The effect of content-types and how to set or debug them</td>
</tr>
<tr>
<td>I</td>
<td>Knows (and use) all of these without looking them up:  html, head, title, meta, script, style, link, body, a, strong, em, ul, ol, li, table, tr, th, td, h1-5, input, select, option, img, p, span, div, pre, textarea</td>
</tr>
<tr>
<td>A</td>
<td>And most of these: dl/dt/dd, thead, tbody, tfoot, abbr, acronym, applet, object, blockquote, iframe, label, map, optgroup, sup, sub, base, fieldset</td>
</tr>
<tr>
<td>A</td>
<td>Can name/explain at least 15 of the new HTML5 tags</td>
</tr>
<tr>
<td>I</td>
<td>Knows the escapes for &amp;, &lt;, &gt;, &copy;, ASCII characters (though you may have to look up the character code)</td>
</tr>
<tr>
<td>A</td>
<td>Can explain how HTTP works (headers, redirects, header requests, clientside caching)</td>
</tr>
<tr>
<td>I</td>
<td>Knows how to link to a position in a page</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">CSS</th>
</tr>
<tr>
<td colspan="2" class="summary">Cascading Style Sheets are used to describe the way an HTML documented should be presented. CSS 1 was released in 1996 and the latest published recommendation is CSS 3. </td>
</tr>
<tr>
<td>I</td>
<td>Difference between display inline, block, and inline-block and what the default value is for div, span, a, b</td>
</tr>
<tr>
<td>I</td>
<td>Difference between position static, relative, fixed, absolute</td>
</tr>
<tr>
<td>I</td>
<td>What z-index is and how to use it</td>
</tr>
<tr>
<td>A</td>
<td>How z-index is calculated by individual browsers</td>
</tr>
<tr>
<td>I</td>
<td>Difference between padding and margin</td>
</tr>
<tr>
<td>I</td>
<td>Difference between display: none and visibility: hidden</td>
</tr>
<tr>
<td>I</td>
<td>Purpose and use of &#8220;media&#8221;</td>
</tr>
<tr>
<td>I</td>
<td>Able to describe and calculate specificity</td>
</tr>
<tr>
<td>I</td>
<td>Knows at least a few attribute selectors</td>
</tr>
<tr>
<td>A</td>
<td>Can describe pseudo-classes and know many without looking them up</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Javascript</th>
</tr>
<tr>
<td colspan="2" class="summary">Javascript has become the defacto scripting language for web browsers, one of only a few ways to create client-side interactions consistently across available browsers. JavaScript was first shipped in 1995 as part of the Netscape browser.</td>
</tr>
<tr>
<td>I</td>
<td>How to write a basic function, inline event handler, and a non-inline event handler (raw or w/ a package)</td>
</tr>
<tr>
<td>I</td>
<td>Can write one or or more methods to make an AJAX call with reference material</td>
</tr>
<tr>
<td>A</td>
<td>Can write one or or more methods to make an AJAX call without reference material</td>
</tr>
<tr>
<td>I</td>
<td>Knows at least one framework (jQuery, Prototype, YUI, Dojo, MooTools, …)</td>
</tr>
<tr>
<td>I</td>
<td>Can create classes (function or literal)</td>
</tr>
<tr>
<td>A</td>
<td>Knows and can use prototype (little &#8216;p&#8217;, not the framework)</td>
</tr>
<tr>
<td>I</td>
<td>Can dynamically find and add elements to the page using DOM or a framework (without looking it up)</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Tools</th>
</tr>
<tr>
<td colspan="2" class="summary">Along with standard languages, there are numerous tools available to help validate, evaluate, and improve existing websites. Similar to a spell-checking tool in a word processing application, these tools can help us catch errors and oversights in our websites.</td>
</tr>
<tr>
<td>A</td>
<td>Can name at least one site, application, or organization that has an HTML validation tool</td>
</tr>
<tr>
<td>A</td>
<td>Can name at least one site, application, or organization that has an CSS validation tool</td>
</tr>
<tr>
<td>A</td>
<td>Can name at least one site, application, or organization that has an SEO scoring tool</td>
</tr>
<tr>
<td>A</td>
<td>Can name at least one site, application, or organization that has an Accessibility evaluation tool</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Server-Side Programming</th>
</tr>
<tr>
<td colspan="2" class="summary">The shift to dynamic, server-generated websites in the mid-to-late 90&#8217;s was responsible for shifting the focus of the web from document retrieval to interactivity, commerce, and services.</td>
</tr>
<tr>
<td>I</td>
<td>Knows at least 2 server-side technologies &#8211; Perl, PHP, ASP 3, JSP, Java Servlets, CFM, ASP.Net (WebPages, Web Forms, MVC), Ruby on Rails, Python (WSGI, CGI, mod_python), etc</td>
</tr>
<tr>
<td>A</td>
<td>Knows more than 4 of the above list</td>
</tr>
<tr>
<td>I</td>
<td>Can explain difference between stateful and stateless development</td>
</tr>
<tr>
<td>I</td>
<td>Can explain how sessions work</td>
</tr>
<tr>
<td>I</td>
<td>Can explain how cookies work</td>
</tr>
<tr>
<td>I</td>
<td>Difference between GET and POST and how known languages present this information</td>
</tr>
<tr>
<td>I</td>
<td>Pros and cons of client-side vs server-side validation</td>
</tr>
<tr>
<td>A</td>
<td>Understands the basics of (SOAP) web services, how to implement them, and how they work</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Data</th>
</tr>
<tr>
<td colspan="2" class="summary">Most web applications have some form of data store behind them. Several forms of storage and caching mechanisms exist and being able to build a basic system often requires at least a basic level of knowledge in these areas.</td>
</tr>
<tr>
<td>I</td>
<td>Can build databases, define queries, and debug on at least one major RDBMS</td>
</tr>
<tr>
<td>A</td>
<td>Knows basics for normalization and can create a basic data model to describe their database</td>
</tr>
<tr>
<td>I</td>
<td>Can work with at least one NoSQL database or data cache</td>
</tr>
<tr>
<td>I</td>
<td>Can write match and search regular expressions</td>
</tr>
<tr>
<td>A</td>
<td>Can write match and search regular expressions without a reference in more than one language</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Web Server</th>
</tr>
<tr>
<td colspan="2" class="summary">Using a server-side technology to generate HTML generally requires a web server. The two largest install bases are Microsoft IIS 7.5 and Apache 2.2.</td>
</tr>
<tr>
<td>I</td>
<td>Understands the basics of how the web server (Apache or IIS) works and can create a new site</td>
</tr>
<tr>
<td>A</td>
<td>Can explain URL rewriting and implement on at least one system</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Performance</th>
</tr>
<tr>
<td colspan="2" class="summary">Tuning a website to run in an optimal fashion can sometimes be the difference between paying for a single server or multiple servers, between a responsive site and one that fails under load. </td>
</tr>
<tr>
<td>A</td>
<td>Understands and can implement data caching</td>
</tr>
<tr>
<td>A</td>
<td>Understands and can implement page caching</td>
</tr>
<tr>
<td>A</td>
<td>Can use one or more page performance or load testing tools</td>
</tr>
<tr>
<td>I</td>
<td>Tools/methods and purpose of minification of JS and CSS</td>
</tr>
<tr>
<td>A</td>
<td>Understands and uses CDNs when possible</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Testing</th>
</tr>
<tr>
<td colspan="2" class="summary">As the technology behind the web has developed, tools to help automate some of the repetition involved in testing websites has likewise evolved.</td>
</tr>
<tr>
<td>A</td>
<td>Can use one or more automated tools for interface testing</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Security</th>
</tr>
<tr>
<td colspan="2" class="summary">As recent news stories have reminded us, security is an ongoing requirement for websites. Understanding the basics of security can help us build security in from day one rather than trying to squeeze it in at the end.</td>
</tr>
<tr>
<td>I</td>
<td>SQL Injection &#8211; what it is, how to prevent it</td>
</tr>
<tr>
<td>I</td>
<td>Cross site scripting &#8211; what it is, how to prevent it</td>
</tr>
<tr>
<td>A</td>
<td>Cross Site Request Forgery &#8211; what it is, how to prevent it</td>
</tr>
<tr>
<td>I</td>
<td>Understand hashing, salting, and importance of storing critical information in hashed or encrypted formats</td>
</tr>
<tr>
<td>I</td>
<td>Cookies &#8211; Understand session hijacking and dangers of storing user information or identification</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Design Principles</th>
</tr>
<tr>
<td colspan="2" class="summary">Being able to implement common design patterns without restoring to hacks is an important part of being a web developer (as opposed to a hobbiest). While it may prove impossible to build a site without some form of hack, hacks should not be the only tool in the toolbox.</td>
</tr>
<tr>
<td>I</td>
<td>Table Layout &#8211; what it is, why it&#8217;s bad (at least three reasons)</td>
</tr>
<tr>
<td>A</td>
<td>Can implement multi-column fixed, fluid, and elastic layouts without reference material</td>
</tr>
<tr>
<td>A</td>
<td>Table Layout &#8211; and why using CSS for table layout (display: table, table-cell, etc) is not bad</td>
</tr>
<tr>
<td>A</td>
<td>Can explain and implement fixed, fluid (liquid), and elastic layouts</td>
</tr>
<tr>
<td>A</td>
<td>Can implement multi-column fixed, fluid, and elastic layouts without reference material</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Meta</th>
</tr>
<tr>
<td colspan="2" class="summary">Metadata (data about data) is critical to helping people and search engines find resources in our sites and applications.</td>
</tr>
<tr>
<td>I</td>
<td>Knows purpose of description, keyword tags</td>
</tr>
<tr>
<td>I</td>
<td>Knows purpose of robots.txt file</td>
</tr>
<tr>
<td>A</td>
<td>Knows purpose and can implement sitemap.xml file</td>
</tr>
<tr>
<td>A</td>
<td>You know the basics for SEO</td>
</tr>
<tr>
<td>A</td>
<td>You&#8217;ve implemented some form of browser analytics</td>
</tr>
<tr>
<td>A</td>
<td>Microformats </td>
</tr>
<tr>
<td>A</td>
<td>You know what WCAG is and how to test conformance</td>
</tr>
<tr>
<td>A</td>
<td>You know what semantic markup is</td>
</tr>
</tbody>
</table>
<table class="oneshottable">
<tbody>
<tr>
<th colspan="2">Disqualifiers/Limiters</th>
</tr>
<tr>
<td colspan="2" class="summary">These are topics I consider to be critical to advancement. They reflect common misunderstandings or bad practices that an experienced web developer has to grow past in order to advance their skillset.</td>
</tr>
<tr>
<td>B</td>
<td>Backbutton doesn&#8217;t work w/ your sites, would prefer to disable it altogether</td>
</tr>
<tr>
<td>B</td>
<td>You protect images from download by implementing right click intercepts, layering transparent images in top, etc</td>
</tr>
<tr>
<td>I</td>
<td>Implement performance tuning without before/after measurements</td>
</tr>
<tr>
<td>B</td>
<td>Table layout</td>
</tr>
</tbody>
</table>
<p><em>Note: Disqualifiers indicate that you won&#8217;t progress past [B]eginner or [I]ntermediate levels until you stop doing them and understand why doing them was a bad idea</em></p>
<h2>What&#8217;s Missing</h2>
<p>There are several things that were intentionally left out of this list. Some were hard to quantity in a general manner, others I was unsure how relevant they were. And I&#8217;m sure people will be kind enough to add additional oversights and revisions below.</p>
<p>Missing Categories:</p>
<ul>
<li>Level of knowledge with server-side languages</li>
<li>Project management skills</li>
<li>Documentation and Modeling skills</li>
<li>Design and Graphics skills</li>
<li>Application Lifecycle Management &#8211; Source Control, Deployment, etc</li>
</ul>
<p>Extra items that didn&#8217;t make it in:</p>
<ul>
<li>Can implement RSS and ATOM feeds</li>
<li>Can implement a web farm</li>
<li>Implemented single-signon (openID, SAML, etc)</li>
<li>Knows how to implement XML data islands (still relevant?)</li>
<li>Knows how to create DTDs and/or XSDs</li>
<li>Can write regular expressions without a reference</li>
<li>Knows relevant tools for Yahoo (SiteExplorer), Google, Bing for managing site information</li>
<li>Schema.org &#8211; it belongs in the Meta category but I didn&#8217;t know what level of skill, knowledge, or adoption I should include considering it&#8217;s newness and several other factors</li>
</ul>
<p>There is also the fact that we often get caught up maintaining or even adding on to a site that violates many of the skills and standards you see in this list. This doesn&#8217;t prevent us from writing good, clean, semantic sites the rest of the time and being forced to write poor code does not make on inherently less skilled.</p>
<h2>A Brief Digression, or Why an App Dev is Not a Web Dev</h2>
<p>At one point web development was seen as less exciting and far less complex than application development. It is still seen as extremely similar to application development, so much so that it is quite normal to hire a good or great application developer and expect them to be a good or great web developer. </p>
<p>Unfortunately it doesn&#8217;t quite work that way, as web development has grown extremely complex since the first dynamic sites started showing up in the late 90&#8217;s. Doubly unfortunately, web development is based on a stateless model instead of the stateful one most application developers are used to, uses a fluid layout instead of the grid layout, and sneaks a lot of extra communications and caching into the mix. This is a series of paradigm shifts not unlike the one between procedural, object oriented, and functional programming.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/uidevelopment/what-does-a-web-developer/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
		</item>
		<item>
		<title>HTML5 Support for the Visual Studio 2010 Editor available for download</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/html5-support-for-the-visual/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/html5-support-for-the-visual/#comments</comments>
		<pubDate>Thu, 16 Jun 2011 08:45:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[XHTML and CSS]]></category>
		<category><![CDATA[html5]]></category>
		<category><![CDATA[intellisense]]></category>
		<category><![CDATA[visual studio 2010]]></category>
		<category><![CDATA[web standards]]></category>

		<guid isPermaLink="false">/index.php/2011/06/html5-support-for-the-visual/</guid>
		<description><![CDATA[The first Web Standards Update for Visual Studio 2010 SP1 is available for download, you can get it here: http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83

We just released the first Web Standards Update for Visual St&#8230;]]></description>
				<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/denisgobo/5839107848/" title="HTML5 Support for the Visual Studio 2010 Editor by Denis Gobo, on Flickr"><img src="http://farm3.static.flickr.com/2734/5839107848_96b77582ac_m.jpg" width="240" height="201" alt="HTML5 Support for the Visual Studio 2010 Editor" /></a><br />
The first Web Standards Update for Visual Studio 2010 SP1 is available for download, you can get it here: http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83</p>
<blockquote><p>We just released the first Web Standards Update for Visual Studio 2010 SP1. Despite its name, the update also works for Visual Web Developer Express 2010 SP1. You can read more on our team blog.</p>
<p> In this first release of the update, we have focused on bringing the HTML5 support up-to-date, adding CSS 3 support and bring more new API’s to the JavaScript intellisense. The plan is to make a release about every 3 months to keep Visual Studio updated with the changes made by W3C.</p></blockquote>
<p>Here are some of the features that the Visual Studio Web Standards Update provides you with intellisense and validation for<br />
<strong>HTML 5 features</strong></p>
<p>Video &amp; related tags<br />
Audio &amp; related tag<br />
New input types like email, url, date etc<br />
Drag &amp; Drop support<br />
Accessibility standard WAI-ARIA<br />
Microdata<br />
Schema.org </p>
<p><strong>CSS3</strong></p>
<p>2D Transforms<br />
3D Transforms<br />
Animations<br />
Background &amp; Borders<br />
Basic Box Model<br />
Basic UI<br />
Behavior<br />
Color<br />
Flexible Box Layout<br />
Fonts<br />
Generated Content for Paged Media<br />
Hyperlink Presentation<br />
Line<br />
Lists<br />
Marquee<br />
Media Queries<br />
Multi Column<br />
Namespaces<br />
Paged Media<br />
Presentations Levels<br />
Ruby<br />
Selectors<br />
Speech<br />
Syntax<br />
Template Layout<br />
Text<br />
Transitions</p>
<p>Download it here: http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83</p>
<p>Read more about it here: http://blogs.msdn.com/b/webdevtools/archive/2011/06/15/web-standards-update-for-visual-studio-2010-sp1.aspx</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/html5-support-for-the-visual/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Bing, Google and Yahoo! announce Schema.org</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/bing-google-and-yahoo-announce/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/bing-google-and-yahoo-announce/#comments</comments>
		<pubDate>Thu, 02 Jun 2011 15:32:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[XHTML and CSS]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[markup]]></category>

		<guid isPermaLink="false">/index.php/2011/06/bing-google-and-yahoo-announce/</guid>
		<description><![CDATA[Bing, Google and Yahoo! have announced Schema.org

Here is the info


Today we’re announcing schema.org, a new initiative from Yahoo!, Bing, and Google, to create and support a common set of schemas for structured data markup on web pages. With sch&#8230;]]></description>
				<content:encoded><![CDATA[<p>Bing, Google and Yahoo! have announced <a href="http://schema.org/">Schema.org</a></p>
<p>Here is the info</p>
<p>Today we’re announcing schema.org, a new initiative from Yahoo!, Bing, and Google, to create and support a common set of schemas for structured data markup on web pages. With schema.org, webmasters and developers can learn about structured data and improve how their sites appear in search results on Bing, Google, and Yahoo!. Information and tips are available on schema.org, a one-stop resource for webmasters looking to add markup to make their pages better understood by search engines.</p>
<h2>What is Schema.org?</h2>
<p>This site provides a collection of schemas, i.e., html tags, that webmasters can use to markup their pages in ways recognized by major search providers. Search engines including Bing, Google and Yahoo! rely on this markup to improve the display of search results, making it easier for people to find the right web pages.<br />
Many sites are generated from structured data, which is often stored in databases. When this data is formatted into HTML, it becomes very difficult to recover the original structured data. Many applications, especially search engines, can benefit greatly from direct access to this structured data. On-page markup enables search engines to understand the information on web pages and provide richer search results in order to make it easier for users to find relevant information on the web. Markup can also enable new tools and applications that make use of the structure.<br />
A shared markup vocabulary makes easier for webmasters to decide on a markup schema and get the maximum benefit for their efforts. So, in the spirit of sitemaps.org, Bing, Google and Yahoo! have come together to provide a shared collection of schemas that webmasters can use.</p>
<p>Main site here: http://schema.org/</p>
<p>getting started site is here: http://schema.org/docs/gs.html</p>
<p>An example</p>
<p>Orginal HTML</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="de1"><pre class="de1">Jane Doe
<span class="sc2">&lt;<span class="kw2">img</span> <span class="kw3">src</span><span class="sy0">=</span><span class="st0">&quot;janedoe.jpg&quot;</span> <span class="sy0">/</span>&gt;</span>
&nbsp;
Professor
20341 Whitworth Institute
405 Whitworth
Seattle WA 98052
(425) 123-4567
<span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;mailto:jane-doe@xyz.edu&quot;</span>&gt;</span>jane-doe@illinois.edu<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
&nbsp;
Jane's home page:
<span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;www.janedoe.com&quot;</span>&gt;</span>janedoe.com<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
&nbsp;
Graduate students:
<span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;www.xyz.edu/students/alicejones.html&quot;</span>&gt;</span>Alice Jones<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;www.xyz.edu/students/bobsmith.html&quot;</span>&gt;</span>Bob Smith<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Jane Doe
&lt;img src="janedoe.jpg" /&gt;

Professor
20341 Whitworth Institute
405 Whitworth
Seattle WA 98052
(425) 123-4567
&lt;a href="mailto:jane-doe@xyz.edu"&gt;jane-doe@illinois.edu&lt;/a&gt;

Jane's home page:
&lt;a href="www.janedoe.com"&gt;janedoe.com&lt;/a&gt;

Graduate students:
&lt;a href="www.xyz.edu/students/alicejones.html"&gt;Alice Jones&lt;/a&gt;
&lt;a href="www.xyz.edu/students/bobsmith.html"&gt;Bob Smith&lt;/a&gt;</pre></div></div>

<p>With MicroData</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="de1"><pre class="de1"><span class="sc2">&lt;<span class="kw2">div</span> itemscope itemtype<span class="sy0">=</span><span class="st0">&quot;http://schema.org/Person&quot;</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;name&quot;</span>&gt;</span>Jane Doe<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="kw2">img</span> <span class="kw3">src</span><span class="sy0">=</span><span class="st0">&quot;janedoe.jpg&quot;</span> itemprop<span class="sy0">=</span><span class="st0">&quot;image&quot;</span> <span class="sy0">/</span>&gt;</span>
&nbsp;
&nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;jobTitle&quot;</span>&gt;</span>Professor<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="kw2">div</span> itemprop<span class="sy0">=</span><span class="st0">&quot;address&quot;</span> itemscope itemtype<span class="sy0">=</span><span class="st0">&quot;http://schema.org/PostalAddress&quot;</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;streetAddress&quot;</span>&gt;</span>
&nbsp; &nbsp; &nbsp; 20341 Whitworth Institute
&nbsp; &nbsp; &nbsp; 405 N. Whitworth
&nbsp; &nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;addressLocality&quot;</span>&gt;</span>Seattle<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>,
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;addressRegion&quot;</span>&gt;</span>WA<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>
&nbsp; &nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;postalCode&quot;</span>&gt;</span>98052<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="kw2">span</span> itemprop<span class="sy0">=</span><span class="st0">&quot;telephone&quot;</span>&gt;</span>(425) 123-4567<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">span</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;mailto:jane-doe@xyz.edu&quot;</span> itemprop<span class="sy0">=</span><span class="st0">&quot;email&quot;</span>&gt;</span>
&nbsp; &nbsp; jane-doe@xyz.edu<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
&nbsp;
&nbsp; Jane's home page:
&nbsp; <span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;www.janedoe.com&quot;</span> itemprop<span class="sy0">=</span><span class="st0">&quot;url&quot;</span>&gt;</span>janedoe.com<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
&nbsp;
&nbsp; Graduate students:
&nbsp; <span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;www.xyz.edu/students/alicejones.html&quot;</span> itemprop<span class="sy0">=</span><span class="st0">&quot;colleagues&quot;</span>&gt;</span>
&nbsp; &nbsp; Alice Jones<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
&nbsp; <span class="sc2">&lt;<span class="kw2">a</span> <span class="kw3">href</span><span class="sy0">=</span><span class="st0">&quot;www.xyz.edu/students/bobsmith.html&quot;</span> itemprop<span class="sy0">=</span><span class="st0">&quot;colleagues&quot;</span>&gt;</span>
&nbsp; &nbsp; Bob Smith<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">a</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;div itemscope itemtype="http://schema.org/Person"&gt;
  &lt;span itemprop="name"&gt;Jane Doe&lt;/span&gt;
  &lt;img src="janedoe.jpg" itemprop="image" /&gt;

  &lt;span itemprop="jobTitle"&gt;Professor&lt;/span&gt;
  &lt;div itemprop="address" itemscope itemtype="http://schema.org/PostalAddress"&gt;
    &lt;span itemprop="streetAddress"&gt;
      20341 Whitworth Institute
      405 N. Whitworth
    &lt;/span&gt;
    &lt;span itemprop="addressLocality"&gt;Seattle&lt;/span&gt;,
    &lt;span itemprop="addressRegion"&gt;WA&lt;/span&gt;
    &lt;span itemprop="postalCode"&gt;98052&lt;/span&gt;
  &lt;/div&gt;
  &lt;span itemprop="telephone"&gt;(425) 123-4567&lt;/span&gt;
  &lt;a href="mailto:jane-doe@xyz.edu" itemprop="email"&gt;
    jane-doe@xyz.edu&lt;/a&gt;

  Jane's home page:
  &lt;a href="www.janedoe.com" itemprop="url"&gt;janedoe.com&lt;/a&gt;

  Graduate students:
  &lt;a href="www.xyz.edu/students/alicejones.html" itemprop="colleagues"&gt;
    Alice Jones&lt;/a&gt;
  &lt;a href="www.xyz.edu/students/bobsmith.html" itemprop="colleagues"&gt;
    Bob Smith&lt;/a&gt;
&lt;/div&gt;</pre></div></div>

<p>What do you think, will you start implementing this?<br /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/bing-google-and-yahoo-announce/feed/</wfw:commentRss>
		<slash:comments>12</slash:comments>
		</item>
	</channel>
</rss>
