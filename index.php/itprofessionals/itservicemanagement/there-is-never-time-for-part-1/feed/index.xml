<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: There Is Never Time For &#8230; (Part 1)</title>
	<atom:link href="/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: SQLDenis</title>
		<link>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/#comment-2620</link>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
		<pubDate>Thu, 01 Apr 2010 13:36:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/there-is-never-time-for-part-1/#comment-2620</guid>
		<description><![CDATA[That is a nice list, I do have some comments though&lt;br /&gt;
&lt;br /&gt;
First, if you consider that technology is mostly work then you will always feel that you don&#039;t have enough time. I do  most of my learning after/before work. If I had to wait for my job to install SQL Server 2008 before I could bang around on it I would be hopelessly behind. No, I do this stuff on my own, then when we do implement the latest and greatest at work I already know most of the stuff and don&#039;t have to waste my time at work. But you have to love technology in order to be willing to spend 10 - 20 extra hours a week on programming/learning. Also, what is better for your career, watching the latest episode of some dumb show or messing around with code?&lt;br /&gt;
&lt;br /&gt;
I would also include podcasts in your list, the advantage of podcast is that you can listen to them while you commute/workout and in most cases you will learn something&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Answering question is one of the best ways to keep your skills razer sharp, you will also be exposed to things much earlier than you would at your job, this will take the pain of figuring it out on your own later since you already saw this problem. If you don&#039;t know the answer to the questions then don&#039;t worry, keep lurking, you will learn from reading in the beginning, after a while you will notice a pattern, there are 50 or so questions that pop up every so often, these you will be able to answer after a while and then it all becomes easier, after some time you will notice that you probably can answer more than 60% of all questions&lt;br /&gt;
&lt;br /&gt;]]></description>
		<content:encoded><![CDATA[<p>That is a nice list, I do have some comments though</p>
<p>First, if you consider that technology is mostly work then you will always feel that you don&#8217;t have enough time. I do  most of my learning after/before work. If I had to wait for my job to install SQL Server 2008 before I could bang around on it I would be hopelessly behind. No, I do this stuff on my own, then when we do implement the latest and greatest at work I already know most of the stuff and don&#8217;t have to waste my time at work. But you have to love technology in order to be willing to spend 10 &#8211; 20 extra hours a week on programming/learning. Also, what is better for your career, watching the latest episode of some dumb show or messing around with code?</p>
<p>I would also include podcasts in your list, the advantage of podcast is that you can listen to them while you commute/workout and in most cases you will learn something</p>
<p>
Answering question is one of the best ways to keep your skills razer sharp, you will also be exposed to things much earlier than you would at your job, this will take the pain of figuring it out on your own later since you already saw this problem. If you don&#8217;t know the answer to the questions then don&#8217;t worry, keep lurking, you will learn from reading in the beginning, after a while you will notice a pattern, there are 50 or so questions that pop up every so often, these you will be able to answer after a while and then it all becomes easier, after some time you will notice that you probably can answer more than 60% of all questions</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: sqlsister</title>
		<link>/index.php/itprofessionals/itservicemanagement/there-is-never-time-for-part-1/#comment-2619</link>
		<dc:creator><![CDATA[sqlsister]]></dc:creator>
		<pubDate>Thu, 01 Apr 2010 12:59:37 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2010/04/there-is-never-time-for-part-1/#comment-2619</guid>
		<description><![CDATA[I think the biggest thing that needs to change is that managers need to fix how they estimate time. Projects are assumed to be worked on 8 hours a day and the deadline is created from that. However, no one actually puts in 8-hour days on direct work every day through the year. You have to attend non-project meetings (the intro to the new HR performance rating system for instance), you have to read and respond to non-project realted email, you have to take vacation and sick days, you have unavoidable delay (I can&#039;t work because my pc died and I need a replacement and then I need to spend a full day or so configuring it). Training should also be part of this planned indirect time.&lt;br /&gt;
&lt;br /&gt;
When you are always behind (as you will be when the estimates depend on something that is not physically possible) there is no time for other tasks. Even other direct tasks that can be put off because the manager forgot to allow time to do something besides the project he was estimating. And you know what, when you assume there is indirect time, it is figured into the per hour cost charging as well just like benefits so you don&#039;t lose money on the indirect time, the customer ultimately pays for it.]]></description>
		<content:encoded><![CDATA[<p>I think the biggest thing that needs to change is that managers need to fix how they estimate time. Projects are assumed to be worked on 8 hours a day and the deadline is created from that. However, no one actually puts in 8-hour days on direct work every day through the year. You have to attend non-project meetings (the intro to the new HR performance rating system for instance), you have to read and respond to non-project realted email, you have to take vacation and sick days, you have unavoidable delay (I can&#8217;t work because my pc died and I need a replacement and then I need to spend a full day or so configuring it). Training should also be part of this planned indirect time.</p>
<p>When you are always behind (as you will be when the estimates depend on something that is not physically possible) there is no time for other tasks. Even other direct tasks that can be put off because the manager forgot to allow time to do something besides the project he was estimating. And you know what, when you assume there is indirect time, it is figured into the per hour cost charging as well just like benefits so you don&#8217;t lose money on the indirect time, the customer ultimately pays for it.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
