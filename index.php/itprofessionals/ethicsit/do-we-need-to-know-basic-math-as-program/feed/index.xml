<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Do we need to know basic math as programmers?</title>
	<atom:link href="/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/feed/" rel="self" type="application/rss+xml" />
	<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Tue, 26 Feb 2019 12:40:14 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>By: Tahir Khalid</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1928</link>
		<dc:creator><![CDATA[Tahir Khalid]]></dc:creator>
		<pubDate>Sat, 09 Jul 2011 14:53:17 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1928</guid>
		<description><![CDATA[And I wanted to chime the poster above called Chris - I hear you my friend.&lt;br /&gt;
&lt;br /&gt;
I have no formal education yet I managed to keep up with many a developers in the IT field but I found I wasn&#039;t chained down and have always been able to think freely outside of the box.&lt;br /&gt;
&lt;br /&gt;
Design has always been my passion, my creative flair and artistic side has really added value to my development roles.&lt;br /&gt;
&lt;br /&gt;
Logic is important, as long as you use common sense you can develop a solution.&lt;br /&gt;
&lt;br /&gt;
There is a distinct divide though... You have &quot;software engineers&quot; on one side, and then modern developers on the other side.&lt;br /&gt;
&lt;br /&gt;
I sit kind of in the middle as I am a tinkerer at heart and mechanically minded.&lt;br /&gt;
&lt;br /&gt;
Personally I am finding software engineers live in the realms of computer science and precise solutions like PLC controllers and custom research and design while the majority of programmers and developers are business solution orientated - focusing on integrating technologies together to create a solution as opposed to actually engineering one.&lt;br /&gt;
&lt;br /&gt;
And yes, I separated programmers and developers, they are two different things in my book.]]></description>
		<content:encoded><![CDATA[<p>And I wanted to chime the poster above called Chris &#8211; I hear you my friend.</p>
<p>I have no formal education yet I managed to keep up with many a developers in the IT field but I found I wasn&#8217;t chained down and have always been able to think freely outside of the box.</p>
<p>Design has always been my passion, my creative flair and artistic side has really added value to my development roles.</p>
<p>Logic is important, as long as you use common sense you can develop a solution.</p>
<p>There is a distinct divide though&#8230; You have &#8220;software engineers&#8221; on one side, and then modern developers on the other side.</p>
<p>I sit kind of in the middle as I am a tinkerer at heart and mechanically minded.</p>
<p>Personally I am finding software engineers live in the realms of computer science and precise solutions like PLC controllers and custom research and design while the majority of programmers and developers are business solution orientated &#8211; focusing on integrating technologies together to create a solution as opposed to actually engineering one.</p>
<p>And yes, I separated programmers and developers, they are two different things in my book.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Tahir Khalid</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1927</link>
		<dc:creator><![CDATA[Tahir Khalid]]></dc:creator>
		<pubDate>Sat, 09 Jul 2011 14:41:40 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1927</guid>
		<description><![CDATA[I know only basic maths.&lt;br /&gt;
&lt;br /&gt;
I had learning difficulties at school so I am mostly self taught all the way (and quite proud of it).&lt;br /&gt;
&lt;br /&gt;
However I do agree, as a developer, that programming is important, at least how to create formulas, algorithms to workout solutions because doing that stuff is no different to programming (maths is just a purer form).&lt;br /&gt;
&lt;br /&gt;
Which is why I am taking a course at a University to get a decent education in Mathematics to benefit my new development career path.&lt;br /&gt;
&lt;br /&gt;
My kids are smarter than me]]></description>
		<content:encoded><![CDATA[<p>I know only basic maths.</p>
<p>I had learning difficulties at school so I am mostly self taught all the way (and quite proud of it).</p>
<p>However I do agree, as a developer, that programming is important, at least how to create formulas, algorithms to workout solutions because doing that stuff is no different to programming (maths is just a purer form).</p>
<p>Which is why I am taking a course at a University to get a decent education in Mathematics to benefit my new development career path.</p>
<p>My kids are smarter than me</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: ZerviDesk Systems</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1890</link>
		<dc:creator><![CDATA[ZerviDesk Systems]]></dc:creator>
		<pubDate>Fri, 07 Jan 2011 08:53:19 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1890</guid>
		<description><![CDATA[The problem is compounded because Basic Sciences are always ignored in Engineering classes.]]></description>
		<content:encoded><![CDATA[<p>The problem is compounded because Basic Sciences are always ignored in Engineering classes.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Rob Earl</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1934</link>
		<dc:creator><![CDATA[Rob Earl]]></dc:creator>
		<pubDate>Fri, 27 Aug 2010 09:30:44 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1934</guid>
		<description><![CDATA[The other day I felt really stupid because I had to look on mathsiffun.com to remember basic trig and triangle solving.&lt;br /&gt;
&lt;br /&gt;
Having read this I don&#039;t feel so bad!]]></description>
		<content:encoded><![CDATA[<p>The other day I felt really stupid because I had to look on mathsiffun.com to remember basic trig and triangle solving.</p>
<p>Having read this I don&#8217;t feel so bad!</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Erik</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1887</link>
		<dc:creator><![CDATA[Erik]]></dc:creator>
		<pubDate>Mon, 22 Mar 2010 01:01:48 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1887</guid>
		<description><![CDATA[Dear Mr. Dude,&lt;br /&gt;
&lt;br /&gt;
You said:&lt;br /&gt;
&lt;br /&gt;
&gt; As for this effort from Jason, it will only work for making positive numbers negative.&lt;br /&gt;
&gt; Its not even an anti-ABS because at least ABS makes no change to positive numbers.&lt;br /&gt;
&gt; Credit for thinking about it a little.&lt;br /&gt;
&gt;&lt;br /&gt;
&gt; &gt; numberToInvertSign = numberToInvertSign - 2 * numberToInvertSign&lt;br /&gt;
&lt;br /&gt;
Are you sure you want to stand by your claim that this only works for positive numbers? Right now you&#039;re providing a shining example of someone who isn&#039;t too strong at that math stuff. Look:&lt;br /&gt;
&lt;br /&gt;
f(x) = x - 2 * x&lt;br /&gt;
f(x) = 1x - 2x&lt;br /&gt;
f(x) = (1 - 2)x&lt;br /&gt;
f(x) = -1x&lt;br /&gt;
f(x) = -x&lt;br /&gt;
&lt;br /&gt;
His function works just fine for positive or negative numbers, dude. Er, Dude.]]></description>
		<content:encoded><![CDATA[<p>Dear Mr. Dude,</p>
<p>You said:</p>
<p>> As for this effort from Jason, it will only work for making positive numbers negative.<br />
> Its not even an anti-ABS because at least ABS makes no change to positive numbers.<br />
> Credit for thinking about it a little.<br />
><br />
> > numberToInvertSign = numberToInvertSign &#8211; 2 * numberToInvertSign</p>
<p>Are you sure you want to stand by your claim that this only works for positive numbers? Right now you&#8217;re providing a shining example of someone who isn&#8217;t too strong at that math stuff. Look:</p>
<p>f(x) = x &#8211; 2 * x<br />
f(x) = 1x &#8211; 2x<br />
f(x) = (1 &#8211; 2)x<br />
f(x) = -1x<br />
f(x) = -x</p>
<p>His function works just fine for positive or negative numbers, dude. Er, Dude.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: jason II</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1933</link>
		<dc:creator><![CDATA[jason II]]></dc:creator>
		<pubDate>Tue, 13 Oct 2009 18:40:44 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1933</guid>
		<description><![CDATA[This is not so much about math as human nature.  Most problems have many answers but rarely do we arrive at the simplest solution. &lt;br /&gt;
&lt;br /&gt;
Apply simple refactoring techniques to these code samples and you will arrive at your suggested final solution.]]></description>
		<content:encoded><![CDATA[<p>This is not so much about math as human nature.  Most problems have many answers but rarely do we arrive at the simplest solution. </p>
<p>Apply simple refactoring techniques to these code samples and you will arrive at your suggested final solution.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Chris</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1932</link>
		<dc:creator><![CDATA[Chris]]></dc:creator>
		<pubDate>Mon, 12 Oct 2009 15:29:07 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1932</guid>
		<description><![CDATA[I learned programming before math.  I managed to out program all my little friends at the time, including the math geeks who were in high math classes and a year ahead.  Not only that, but by learning programming I was able to better understand math.  For someone who learns math, functions/procedures are more like f(x) but for someone who learned programming first f(x) is like a function.&lt;br /&gt;
&lt;br /&gt;
Also in my professional career I don&#039;t use advanced math.  I don&#039;t use more than algebra.  I know for engineering/video game development/systems simulation more advanced math is involved.  But in a normal business basic algebra is fine.  Usually plugging in numbers for financial equations. Even advanced algorithms are not required with most of the libraries pre-written.  Basically business logic is mostly a series of decisions.  The most advanced math I use is the occasional topological sort because it is useful for figuring out the order to do things given a bunch of dependencies (ie the order to perform a sequence of calculations that a user specifies).&lt;br /&gt;
&lt;br /&gt;
And on logic, if you need a course on that then you have problems.  and = traditional definition of and, both items or it is false. or = traditional definition of or (a, b, or both).  XOR is a little new but still easy enough to master with a knowledge of and/or.  Basically the truth tables for these operations are intuitive.  After that, without anything else most SQL queries are easy and intuitive too.  Add some set theory such as union and intersection and you are all set.  I learned SQL long before I ever had a discrete mathematics course, it was easy.  And I wrote some queries that are still used at my first internship even today...and I had that job before my freshman year of college.&lt;br /&gt;
&lt;br /&gt;
Anyway you people need to stop with the holier than thou get off my lawn stuff, it makes me sick.  Also on the guy with the degree in music, I had heard that from more than one person that music majors often make great programmers.  And to the guy who says everyone needs a degree in science/engineering here is your counterexample.  Also there are a lot of non-degree programmers who are absolutely great.  I know one guy who dropped out of college due to failing out who could outprogram the entire class.  His programs were the stuff of legends, but unfortunately his exam scores not...&lt;br /&gt;
&lt;br /&gt;
And on negating, I would think it is more efficient to do 0 - number.  Generally addition/subtraction have a cost of log(32) while multiplication has a cost of log(32)^2 when using 32 bit ints.  Now if you are using higher bits it will take more time.  If you are using arbitrarily long numbers, this makes a difference....What if they are 10000 bits or something.  your Pi computation may slow to a crawl.....&lt;br /&gt;
&lt;br /&gt;
But I think it depends what you want to do.  Graphics programmers will be doing all sorts of advanced math, linear algebra, interpolation, etc...  so will someone making a nuclear simulation.  But the guy at a normal business probably just basic algebra.  Even accounting software will mostly be plugging numbers into standard equations.  Although it does help to have some idea of the asymtotic complexity of your library.  ie is that list you are using o(n) per operation or lg(n)?  Then if you run into performance problems you have some ideas for improvement.  I did take someone&#039;s o(n^3) algorithm and turn it into O(nlogn) for a big performance improvement.  If it wasn&#039;t taking so long I probably wouldn&#039;t have bothered with it....]]></description>
		<content:encoded><![CDATA[<p>I learned programming before math.  I managed to out program all my little friends at the time, including the math geeks who were in high math classes and a year ahead.  Not only that, but by learning programming I was able to better understand math.  For someone who learns math, functions/procedures are more like f(x) but for someone who learned programming first f(x) is like a function.</p>
<p>Also in my professional career I don&#8217;t use advanced math.  I don&#8217;t use more than algebra.  I know for engineering/video game development/systems simulation more advanced math is involved.  But in a normal business basic algebra is fine.  Usually plugging in numbers for financial equations. Even advanced algorithms are not required with most of the libraries pre-written.  Basically business logic is mostly a series of decisions.  The most advanced math I use is the occasional topological sort because it is useful for figuring out the order to do things given a bunch of dependencies (ie the order to perform a sequence of calculations that a user specifies).</p>
<p>And on logic, if you need a course on that then you have problems.  and = traditional definition of and, both items or it is false. or = traditional definition of or (a, b, or both).  XOR is a little new but still easy enough to master with a knowledge of and/or.  Basically the truth tables for these operations are intuitive.  After that, without anything else most SQL queries are easy and intuitive too.  Add some set theory such as union and intersection and you are all set.  I learned SQL long before I ever had a discrete mathematics course, it was easy.  And I wrote some queries that are still used at my first internship even today&#8230;and I had that job before my freshman year of college.</p>
<p>Anyway you people need to stop with the holier than thou get off my lawn stuff, it makes me sick.  Also on the guy with the degree in music, I had heard that from more than one person that music majors often make great programmers.  And to the guy who says everyone needs a degree in science/engineering here is your counterexample.  Also there are a lot of non-degree programmers who are absolutely great.  I know one guy who dropped out of college due to failing out who could outprogram the entire class.  His programs were the stuff of legends, but unfortunately his exam scores not&#8230;</p>
<p>And on negating, I would think it is more efficient to do 0 &#8211; number.  Generally addition/subtraction have a cost of log(32) while multiplication has a cost of log(32)^2 when using 32 bit ints.  Now if you are using higher bits it will take more time.  If you are using arbitrarily long numbers, this makes a difference&#8230;.What if they are 10000 bits or something.  your Pi computation may slow to a crawl&#8230;..</p>
<p>But I think it depends what you want to do.  Graphics programmers will be doing all sorts of advanced math, linear algebra, interpolation, etc&#8230;  so will someone making a nuclear simulation.  But the guy at a normal business probably just basic algebra.  Even accounting software will mostly be plugging numbers into standard equations.  Although it does help to have some idea of the asymtotic complexity of your library.  ie is that list you are using o(n) per operation or lg(n)?  Then if you run into performance problems you have some ideas for improvement.  I did take someone&#8217;s o(n^3) algorithm and turn it into O(nlogn) for a big performance improvement.  If it wasn&#8217;t taking so long I probably wouldn&#8217;t have bothered with it&#8230;.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: CreativeSmarts</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1931</link>
		<dc:creator><![CDATA[CreativeSmarts]]></dc:creator>
		<pubDate>Sun, 11 Oct 2009 23:24:35 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1931</guid>
		<description><![CDATA[Sorry. I am one of those people that you all are lambasting.  I hate math.  Have since the day I was born.  I failed it in almost every grade I took it. However I have a great creative mind and somehow I seem to figure things out even if it takes me a couple of hours longer to do things than my programmer buddy next to me. I don&#039;t think you have to know how to do math - you just have to have the right resources to show you how to do the math you need to do.  Whether that is a textbook, googling it, copying it from code you&#039;ve used before or whatever.  As long as you can get the job done, who cares?]]></description>
		<content:encoded><![CDATA[<p>Sorry. I am one of those people that you all are lambasting.  I hate math.  Have since the day I was born.  I failed it in almost every grade I took it. However I have a great creative mind and somehow I seem to figure things out even if it takes me a couple of hours longer to do things than my programmer buddy next to me. I don&#8217;t think you have to know how to do math &#8211; you just have to have the right resources to show you how to do the math you need to do.  Whether that is a textbook, googling it, copying it from code you&#8217;ve used before or whatever.  As long as you can get the job done, who cares?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Dude</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1930</link>
		<dc:creator><![CDATA[Dude]]></dc:creator>
		<pubDate>Sun, 11 Oct 2009 09:13:50 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1930</guid>
		<description><![CDATA[The scary thing is they didn&#039;t explain why they wanted to reverse the sign. Problems don&#039;t exist in isolation. Maybe they only wanted to do it for negative numbers in which case &#124;ABS&#124; would be appropriate. Its not safe to multiply by -1 in this case. &lt;br /&gt;
&lt;br /&gt;
As for this effort from Jason, it will only work for making positive numbers negative. Its not even an anti-ABS because at least ABS makes no change to positive numbers. Credit for thinking about it a little.&lt;br /&gt;
//&lt;br /&gt;
numberToInvertSign = numberToInvertSign - 2 * numberToInvertSign &lt;br /&gt;
//&lt;br /&gt;
&lt;br /&gt;
The problem with the question is not that they are stupid or don&#039;t know maths, its that people are too quick to post questions for which a quick googling on a maths website would provide the answer.]]></description>
		<content:encoded><![CDATA[<p>The scary thing is they didn&#8217;t explain why they wanted to reverse the sign. Problems don&#8217;t exist in isolation. Maybe they only wanted to do it for negative numbers in which case |ABS| would be appropriate. Its not safe to multiply by -1 in this case. </p>
<p>As for this effort from Jason, it will only work for making positive numbers negative. Its not even an anti-ABS because at least ABS makes no change to positive numbers. Credit for thinking about it a little.<br />
//<br />
numberToInvertSign = numberToInvertSign &#8211; 2 * numberToInvertSign <br />
//</p>
<p>The problem with the question is not that they are stupid or don&#8217;t know maths, its that people are too quick to post questions for which a quick googling on a maths website would provide the answer.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: paranoiq</title>
		<link>/index.php/itprofessionals/ethicsit/do-we-need-to-know-basic-math-as-program/#comment-1929</link>
		<dc:creator><![CDATA[paranoiq]]></dc:creator>
		<pubDate>Fri, 09 Oct 2009 12:25:46 +0000</pubDate>
		<guid isPermaLink="false">/index.php/2009/10/do-we-need-to-know-basic-math-as-program/#comment-1929</guid>
		<description><![CDATA[for anybody, who dares to do programming without a basic knowledge of mathematics i have a message: http://piv.pivpiv.dk/&lt;br /&gt;
&lt;br /&gt;
&quot;nother example is ORM....people hate writing queries&quot; - generalization stinks. for example i love writing queries and hate ORM :]]]></description>
		<content:encoded><![CDATA[<p>for anybody, who dares to do programming without a basic knowledge of mathematics i have a message: <a href="http://piv.pivpiv.dk/" rel="nofollow">http://piv.pivpiv.dk/</a></p>
<p>&#8220;nother example is ORM&#8230;.people hate writing queries&#8221; &#8211; generalization stinks. for example i love writing queries and hate ORM :]</p>
]]></content:encoded>
	</item>
</channel>
</rss>
