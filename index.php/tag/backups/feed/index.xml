<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>backups &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/backups/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Diagnostic Manager &#8211; Custom Alerts</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/diagnostic-manager-custom-alerts/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/diagnostic-manager-custom-alerts/#respond</comments>
		<pubDate>Fri, 13 Apr 2012 09:43:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[backups]]></category>
		<category><![CDATA[diagnostic manager]]></category>
		<category><![CDATA[idera]]></category>
		<category><![CDATA[monitoring]]></category>
		<category><![CDATA[sql]]></category>

		<guid isPermaLink="false">/index.php/2012/04/diagnostic-manager-custom-alerts/</guid>
		<description><![CDATA[One of the great things about Diagnostic Manager is the ability to create custom alerts.  This is something I believe needs a bit more work, but even in its current state, it is really useful.]]></description>
				<content:encoded><![CDATA[<p>One of the great things about Diagnostic Manager is the ability to create custom alerts.  This is something I believe needs a bit more work, but even in its current state, it is really useful.</p>
<p>The example that we&#8217;ll walk through is something that would actually make a great built in alert.  We will create an alert based on the time of our oldest current database backup.</p>
<p>To start off, click on &#8220;Administration&#8221; in the bottom right hand corner:</p>
<p style="text-align: left;"><a href="/media/users/kconan/DM - Administration Menu.JPG?mtime=1332527611"><img src="/wp-content/uploads/users/kconan/DM - Administration Menu.JPG?mtime=1332527611" alt="" width="302" height="203" /></a></p>
<p>Next Click on Custom Counters (there are two spots that you can click on for it):</p>
<div class="image_block">
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Administration Menu2.JPG?mtime=1332527857"><img src="/wp-content/uploads/users/kconan/DM - Administration Menu2.JPG?mtime=1332527857" alt="" width="603" height="310" /></a></div>
</div>
<div class="image_block" style="text-align: left;">Now in the menu ribbon, click on Add.</div>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Add.jpg?mtime=1332528329"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Add.jpg?mtime=1332528329" alt="" width="364" height="161" /></a></div>
<p>On the first screen of the wizard, click on Next at the bottom.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 1.JPG?mtime=1332528009"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 1.JPG?mtime=1332528009" alt="" width="633" height="564" /></a></div>
<p>We are going to base our Custom Counter/Alert on a SQL Query, so choose the 3rd option: Custom SQL Script.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 2.JPG?mtime=1332528329"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 2.JPG?mtime=1332528329" alt="" width="630" height="558" /></a></div>
<p>On the next screen we add the SQL Query.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 3.JPG?mtime=1332529354"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 3.JPG?mtime=1332529354" alt="" width="639" height="564" /></a></div>
<p><!-- codeblock="tsql" -->
<pre>&lt;code&gt;
SELECT ROUND(MAX(DATEDIFF(MINUTE,LastBackUpTaken,GETDATE()))/60.0,2)  
FROM  
( 
SELECT sdb.Name AS DatabaseName
,COALESCE(MAX(bus.backup_finish_date),GETDATE()-100) AS LastBackUpTaken    
FROM master..sysdatabases sdb    
LEFT OUTER JOIN msdb.dbo.backupset bus    
ON bus.database_name = sdb.name    
WHERE sdb.Name NOT IN ('tempdb','model')   
AND bus.type = 'L'   
GROUP BY sdb.Name  
) 
DBList;</pre>
<p>*Note the code provided above is different from the screenshot. While proof reading this article, I realized that I forgot include the backup type in the query.</p>
<p>On the next screen we want to leave the Customize Calculation Type set to "Use collected value".  We are doing this because we want to base the alert off the most recent value.  If we had chosen to set it to "Use per second value since last collection" then it would base the alert on the difference between the most recent two results of our query.</p>
<p>On the same screen we also want to leave the Customize Scale Factor at 1.  We are doing this because we've already set our query to return the number of hours since the latest current backup was completed.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 4.JPG?mtime=1332529893"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 4.JPG?mtime=1332529893" alt="" width="633" height="563" /></a></div>
<p>If we click on the test button we can run the query on all or some of our monitored instances to ensure it works.  When you are finished testing, click on Done and then Next.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Test.jpg?mtime=1332529893"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Test.jpg?mtime=1332529893" alt="" width="644" height="549" /></a></div>
<p>You want to be sure to put a meaningful and descriptive name on the next screen.  This is the name that will appear in the alerts screen.</p>
<p>For my case, I don't have many custom alerts so I keep keep the category set to Custom for all of them.</p>
<p>I setthe description that you see in the screenshot below so that I include the code to find which databases need to be backed up is at my fingertips.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 5.JPG?mtime=1332531299"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 5.JPG?mtime=1332531299" alt="" width="635" height="563" /></a></div>
<p>On the next screen, we want to choose the option of "Higher values are worse than lower values" because a higher number means it's been longer since the last backup.</p>
<p>I like to set the informational warning at 24 hours.  At that point it is not a problem, but something I want to be aware of.  The warning is set at 26 hours because it could just be that a backup is running long for some reason.  When we hit 28 hours that means that something is definately not right.</p>
<p>This is the type of counter that I want on every instance no matter it is used for, so I check the bottom check box.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 6.JPG?mtime=1332531299"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 6.JPG?mtime=1332531299" alt="" width="634" height="563" /></a></div>
<p>The next screen just tells you that you have completed the wizard and warns you that you still need to link the custom counter to your monitored SQL Instances.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 7.JPG?mtime=1332531299"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 7.JPG?mtime=1332531299" alt="" width="633" height="555" /></a></div>
<p>On the next screen you can select whether or not you want to link this new customer counter your monitored SQL Instances right away.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter Wizard 8.JPG?mtime=1332531784"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter Wizard 8.JPG?mtime=1332531784" alt="" width="624" height="141" /></a></div>
<p>The other way to link the custom counter is to select the counter and choose link from the menu above it.</p>
<div class="image_block" style="text-align: left;"><a href="/media/users/kconan/DM - Custom Counter List.jpg?mtime=1332531784"><img src="/wp-content/uploads/users/kconan/DM - Custom Counter List.jpg?mtime=1332531784" alt="" width="595" height="172" /></a></div>
<p>I won't do any screenshots of the screen where you choose which servers to link because it is a very straight forward screen where you select the SQL Instance from the left side and click on the add button.</p>
<p>At the start of this blog post, I mentioned that there are some change that would be really helpful.  What I meant by that is adding the option to include a second query that would be executed and the results displayed as a "drill in" option for the counter.</p>
<p>You can also easily turn this counter into one for log backups</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/diagnostic-manager-custom-alerts/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Do You Get A Benefit From Compressing Backups If You Already Have Compressed Data?</title>
		<link>/index.php/datamgmt/datadesign/do-you-get-a-benefit-from-compressing-ba/</link>
		<comments>/index.php/datamgmt/datadesign/do-you-get-a-benefit-from-compressing-ba/#comments</comments>
		<pubDate>Tue, 02 Mar 2010 16:07:27 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[backups]]></category>
		<category><![CDATA[compression]]></category>
		<category><![CDATA[restores]]></category>

		<guid isPermaLink="false">/index.php/2010/03/do-you-get-a-benefit-from-compressing-ba/</guid>
		<description><![CDATA[Do you benefit from compressed backups if your data is compressed already? This was a question that was asked recently; I thought that the question was interesting and decided to do some testing. Here is what we will do; we will create two databases with only one table. In one database we will use page [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Do you benefit from compressed backups if your data is compressed already? This was a question that was asked recently; I thought that the question was interesting and decided to do some testing.</p>
<p>Here is what we will do; we will create two databases with only one table. In one database we will use page level compression and in the other database we won&#8217;t use compression. After that we will backup each database twice, once with backup compression and once without backup compression. After that, we will do restore from these backups. After doing all these, we will find out if data compression makes backup compression faster. We will also find out if using backup compression on a database that uses data compression will result in a smaller backup file. At the bottom of this post you will see a table that has all these numbers in one spot.</p>
<p>
<h1>Setup scripts</h1>
<p>Let&#8217;s get started, first we will create the database that will not use compression</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>master<span class="br0">&#93;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestUncompressed<span class="br0">&#93;</span> <span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestUncompressed_Data'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DbTestTestUncompressed_Data.mdf'</span> &nbsp; <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestUncompressed_Log'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DbTestTestUncompressed_Log.ldf'</span> &nbsp;<span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestUncompressed<span class="br0">&#93;</span> <span class="kw1">SET</span> RECOVERY &nbsp;SIMPLE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [master]
GO

CREATE DATABASE [TestUncompressed] ON  PRIMARY 
( NAME = N'TestUncompressed_Data', FILENAME = N'C:DbTestTestUncompressed_Data.mdf'   )
 LOG ON 
( NAME = N'TestUncompressed_Log', FILENAME = N'C:DbTestTestUncompressed_Log.ldf'  )
GO

ALTER DATABASE [TestUncompressed] SET RECOVERY  SIMPLE
GO</pre></div></div>

<p>Now we will create the database that will use data compression</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>master<span class="br0">&#93;</span>
GO
<span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestCompressed<span class="br0">&#93;</span> <span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestCompressed_Data'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DbTestTestCompressed_Data.mdf'</span> &nbsp; <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestCompressed_Log'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DbTestTestCompressed_Log.ldf'</span> &nbsp;<span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestCompressed<span class="br0">&#93;</span> <span class="kw1">SET</span> RECOVERY &nbsp;SIMPLE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [master]
GO
CREATE DATABASE [TestCompressed] ON  PRIMARY 
( NAME = N'TestCompressed_Data', FILENAME = N'C:DbTestTestCompressed_Data.mdf'   )
 LOG ON 
( NAME = N'TestCompressed_Log', FILENAME = N'C:DbTestTestCompressed_Log.ldf'  )
GO

ALTER DATABASE [TestCompressed] SET RECOVERY  SIMPLE
GO</pre></div></div>

<p>The following block of code will create a table with 3 million rows in the database that will not use compression</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>TestUncompressed<span class="br0">&#93;</span>
GO
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Test <span class="br0">&#40;</span>SomeCol <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeDate <span class="kw1">DATETIME</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeChar <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">30</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeGuid <span class="kw1">UNIQUEIDENTIFIER</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">CLUSTERED</span> <span class="kw1">INDEX</span> ci_test <span class="kw1">ON</span> Test<span class="br0">&#40;</span>SomeCol, SomeDate, SomeChar<span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">INSERT</span> Test <span class="br0">&#40;</span>SomeCol, SomeDate, SomeChar, SomeGuid<span class="br0">&#41;</span>
<span class="kw1">SELECT</span> x.<span class="me1">Number</span>, 
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATE</span>,<span class="kw2">DATEADD</span><span class="br0">&#40;</span>mi,Number,<span class="st0">'20100101'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="kw2">DATENAME</span><span class="br0">&#40;</span><span class="kw1">MONTH</span>,<span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATE</span>,<span class="kw2">DATEADD</span><span class="br0">&#40;</span>hh,Number,<span class="st0">'20100101'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">'2010'</span>,
&nbsp; &nbsp; NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp;<span class="kw1">FROM</span> <span class="br0">&#40;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">3000000</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span> <span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> s.<span class="me1">id</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Number
&nbsp;<span class="kw1">FROM</span> master..<span class="me1">sysobjects</span> s 
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> master..<span class="me1">sysobjects</span> s2<span class="br0">&#41;</span> x</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [TestUncompressed]
GO


CREATE TABLE Test (SomeCol INT NOT NULL,
					SomeDate DATETIME NOT NULL,
					SomeChar CHAR(30) NOT NULL,
					SomeGuid UNIQUEIDENTIFIER NOT NULL)
					
					
GO

CREATE CLUSTERED INDEX ci_test ON Test(SomeCol, SomeDate, SomeChar)
GO

INSERT Test (SomeCol, SomeDate, SomeChar, SomeGuid)
SELECT x.Number, 
	CONVERT(DATE,DATEADD(mi,Number,'20100101')),
	DATENAME(MONTH,(CONVERT(DATE,DATEADD(hh,Number,'20100101')))) + '2010',
	NEWID()
	
	 FROM (					
SELECT TOP 3000000 ROW_NUMBER() OVER (ORDER BY s.id) AS Number
 FROM master..sysobjects s 
CROSS JOIN master..sysobjects s2) x</pre></div></div>

<p>The following block of code will create a table with 3 million rows in the database that will use data compression</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>TestCompressed<span class="br0">&#93;</span>
GO
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Test <span class="br0">&#40;</span>SomeCol <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeDate <span class="kw1">DATETIME</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeChar <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">30</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeGuid <span class="kw1">UNIQUEIDENTIFIER</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
GO
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
<span class="kw1">CREATE</span> <span class="kw1">CLUSTERED</span> <span class="kw1">INDEX</span> ci_test <span class="kw1">ON</span> Test<span class="br0">&#40;</span>SomeCol, SomeDate, SomeChar<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span>DATA_COMPRESSION <span class="sy0">=</span> PAGE<span class="br0">&#41;</span>
GO
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;
<span class="kw1">INSERT</span> Test <span class="br0">&#40;</span>SomeCol, SomeDate, SomeChar, SomeGuid<span class="br0">&#41;</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> <span class="br0">&#91;</span>TestUncompressed<span class="br0">&#93;</span>..<span class="me1">Test</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [TestCompressed]
GO


CREATE TABLE Test (SomeCol INT NOT NULL,
					SomeDate DATETIME NOT NULL,
					SomeChar CHAR(30) NOT NULL,
					SomeGuid UNIQUEIDENTIFIER NOT NULL)
GO
					
CREATE CLUSTERED INDEX ci_test ON Test(SomeCol, SomeDate, SomeChar)
WITH (DATA_COMPRESSION = PAGE)
GO
					
					

INSERT Test (SomeCol, SomeDate, SomeChar, SomeGuid)
SELECT * FROM [TestUncompressed]..Test</pre></div></div>

<p>
<h1>Backups</h1>
<p>Now it is time to do the backups, we will do 4 backups. Each database will be backed up compressed and uncompressed. Here is the code that will do that. I use the <em>C:DbTest</em> folder, if you want to run this, code make sure that you create that folder.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> TestCompressed <span class="kw1">TO</span> <span class="kw1">DISK</span><span class="sy0">=</span><span class="st0">'C:DbTestTestCompressedBackupCompressed.bak'</span> 
<span class="kw1">WITH</span> &nbsp;COMPRESSION
GO
&nbsp;
&nbsp;
<span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> TestCompressed <span class="kw1">TO</span> <span class="kw1">DISK</span><span class="sy0">=</span><span class="st0">'C:DbTestTestCompressedBackupUnCompressed.bak'</span> 
GO
&nbsp;
&nbsp;
<span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> TestUncompressed <span class="kw1">TO</span> <span class="kw1">DISK</span><span class="sy0">=</span><span class="st0">'C:DbTestTestUncompressedBackupCompressed.bak'</span> 
<span class="kw1">WITH</span> &nbsp;COMPRESSION
GO
&nbsp;
&nbsp;
<span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> TestUncompressed <span class="kw1">TO</span> <span class="kw1">DISK</span><span class="sy0">=</span><span class="st0">'C:DbTestTestUncompressedBackupUnCompressed.bak'</span> 
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BACKUP DATABASE TestCompressed TO DISK='C:DbTestTestCompressedBackupCompressed.bak' 
WITH  COMPRESSION
GO


BACKUP DATABASE TestCompressed TO DISK='C:DbTestTestCompressedBackupUnCompressed.bak' 
GO


BACKUP DATABASE TestUncompressed TO DISK='C:DbTestTestUncompressedBackupCompressed.bak' 
WITH  COMPRESSION
GO


BACKUP DATABASE TestUncompressed TO DISK='C:DbTestTestUncompressedBackupUnCompressed.bak' 
GO</pre></div></div>

<p>Here are the times that each backup took.<br />
<span class="MT_smaller"><em>Processed 11640 pages FOR DATABASE &#8216;TestCompressed&#8217;, FILE &#8216;TestCompressed_Data&#8217; ON FILE 1.<br />
Processed 2 pages FOR DATABASE &#8216;TestCompressed&#8217;, FILE &#8216;TestCompressed_Log&#8217; ON FILE 1.<br />
<strong>BACKUP DATABASE successfully processed 11642 pages IN 5.483 seconds (16.587 MB/sec).</strong></p>
<p>Processed 11640 pages FOR DATABASE &#8216;TestCompressed&#8217;, FILE &#8216;TestCompressed_Data&#8217; ON FILE 1.<br />
Processed 1 pages FOR DATABASE &#8216;TestCompressed&#8217;, FILE &#8216;TestCompressed_Log&#8217; ON FILE 1.<br />
<strong>BACKUP DATABASE successfully processed 11641 pages IN 6.461 seconds (14.076 MB/sec).</strong></p>
<p>Processed 25496 pages FOR DATABASE &#8216;TestUncompressed&#8217;, FILE &#8216;TestUncompressed_Data&#8217; ON FILE 1.<br />
Processed 2 pages FOR DATABASE &#8216;TestUncompressed&#8217;, FILE &#8216;TestUncompressed_Log&#8217; ON FILE 1.<br />
<strong>BACKUP DATABASE successfully processed 25498 pages IN 9.167 seconds (21.729 MB/sec).</strong></p>
<p>Processed 25496 pages FOR DATABASE &#8216;TestUncompressed&#8217;, FILE &#8216;TestUncompressed_Data&#8217; ON FILE 1.<br />
Processed 1 pages FOR DATABASE &#8216;TestUncompressed&#8217;, FILE &#8216;TestUncompressed_Log&#8217; ON FILE 1.<br />
<strong>BACKUP DATABASE successfully processed 25497 pages IN 14.243 seconds (13.985 MB/sec).</strong><br />
</em></span></p>
<p>Here is also a chart showing you the backup times in seconds.<br />
<img src="/wp-content/uploads/blogs/DataMgmt//BackupChart4.PNG" alt="" title="" width="554" height="409" /><br />
<em>1 = TestCompressedBackupCompressed.bak<br />
2 = TestCompressedBackupUnCompressed.bak<br />
3 = TestUncompressedBackupCompressed.bak<br />
4 = TestUncompressedBackupUnCompressed.bak</em></p>
<p>Below is an image showing the sizes of the backups. As you can see, the compressed backup is only a third of the size of the uncompressed backup from the database that had the uncompressed table. When using a compressed backup against a table that was already using data compression the size of the backup drops from 90MB to 60MB. in this case the size is 66% of the uncompressed size.</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//CompressedSizes.PNG" alt="" title="" width="445" height="152" /></p>
<p>
<h1>Restores</h1>
<p>Now let&#8217;s do the restores.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master 
GO
&nbsp;
<span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestCompressed<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'C:DbTestTestCompressedBackupCompressed.bak'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">10</span>
GO
&nbsp;
<span class="co1">--RESTORE DATABASE successfully processed 11642 pages in 22.601 seconds (4.024 MB/sec).</span>
&nbsp;
<span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestCompressed<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'C:DbTestTestCompressedBackupUnCompressed.bak'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">10</span>
GO
&nbsp;
<span class="co1">--RESTORE DATABASE successfully processed 11641 pages in 23.593 seconds (3.854 MB/sec).</span>
&nbsp;
&nbsp;
<span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestUncompressed<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'C:DbTestTestUncompressedBackupCompressed.bak'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">10</span>
GO
<span class="co1">--RESTORE DATABASE successfully processed 25498 pages in 29.337 seconds (6.789 MB/sec)</span>
&nbsp;
<span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestUncompressed<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'C:DbTestTestUncompressedBackupUnCompressed.bak'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">10</span>
GO
<span class="co1">--RESTORE DATABASE successfully processed 25497 pages in 32.358 seconds (6.155 MB/sec).</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master 
GO

RESTORE DATABASE [TestCompressed] 
FROM  DISK = N'C:DbTestTestCompressedBackupCompressed.bak' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 10
GO

--RESTORE DATABASE successfully processed 11642 pages in 22.601 seconds (4.024 MB/sec).

RESTORE DATABASE [TestCompressed] 
FROM  DISK = N'C:DbTestTestCompressedBackupUnCompressed.bak' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 10
GO

--RESTORE DATABASE successfully processed 11641 pages in 23.593 seconds (3.854 MB/sec).


RESTORE DATABASE [TestUncompressed] 
FROM  DISK = N'C:DbTestTestUncompressedBackupCompressed.bak' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 10
GO
--RESTORE DATABASE successfully processed 25498 pages in 29.337 seconds (6.789 MB/sec)

RESTORE DATABASE [TestUncompressed] 
FROM  DISK = N'C:DbTestTestUncompressedBackupUnCompressed.bak' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 10
GO
--RESTORE DATABASE successfully processed 25497 pages in 32.358 seconds (6.155 MB/sec).</pre></div></div>

<p>As you can see from the times in the comments in the code block above, the restores are faster when you use compression.</p>
<p>Here is a chart with the restore times in seconds.</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//BackupChart3.PNG" alt="" title="" width="554" height="409" /></p>
<p><em>1 = TestCompressedBackupCompressed.bak<br />
2 = TestCompressedBackupUnCompressed.bak<br />
3 = TestUncompressedBackupCompressed.bak<br />
4 = TestUncompressedBackupUnCompressed.bak</em></p>
<p>
<h2>Conclusion</h2>
<p>To finish up, here is a table that shows all restore and backup times for the 4 different backups</p>
<div style="border:5px dotted red;">
<table cellpadding="5" cellspacing="2">
<tr>
<td><strong>Name&nbsp;</strong></td>
<td><strong>Backup time&nbsp;</strong></td>
<td><strong>Backup MB/sec&nbsp;</strong></td>
<td><strong>Restore time</strong></td>
<td><strong>Restore MB/sec&nbsp;</strong></td>
<td><strong>File size&nbsp;</strong></td>
</tr>
<tr>
<td><strong>TestCompressedBackupCompressed</strong></td>
<td>5.483</td>
<td>16.587 MB/sec</td>
<td>22.601</td>
<td>4.024 MB/sec</td>
<td>65,646 kb</td>
</tr>
<tr>
<td><strong>TestCompressedBackupUnCompressed</strong></td>
<td>6.461</td>
<td>14.076 MB/sec</td>
<td>23.593</td>
<td>3.854 MB/sec</td>
<td>93,484 kb</td>
</tr>
<tr>
<td><strong>TestUncompressedBackupCompressed</strong></td>
<td>9.167</td>
<td>21.729 MB/sec</td>
<td>29.337</td>
<td>6.789 MB/sec</td>
<td>65,679 kb</td>
</tr>
<tr>
<td><strong>TestUncompressedBackupUnCompressed</strong></td>
<td>14.243</td>
<td>13.985 MB/sec</td>
<td>32.358</td>
<td>6.155 MB/sec</td>
<td>205,108 kb</td>
</tr>
</table>
</div>
<p>As you can see compression is a great way to keep your backups small and it also makes your backup and restore process finish faster as well.</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/do-you-get-a-benefit-from-compressing-ba/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>Testing backup compression in SQL Server 2008</title>
		<link>/index.php/datamgmt/dbadmin/testing-backup-compression-in-sql-server-2008/</link>
		<comments>/index.php/datamgmt/dbadmin/testing-backup-compression-in-sql-server-2008/#comments</comments>
		<pubDate>Sun, 22 Nov 2009 16:15:40 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[backups]]></category>
		<category><![CDATA[compression]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2009/11/testing-backup-compression-in-sql-server-2008/</guid>
		<description><![CDATA[I got a brand new SQL Server 2008 test server and decided to test backup compression. I picked 2 databases to do this test; the smaller database is 4.8GB in size the bigger database is about 44 GB in size.
Let's start with the smaller database.
First&#8230;]]></description>
				<content:encoded><![CDATA[<p>I got a brand new SQL Server 2008 test server and decided to test backup compression. I picked 2 databases to do this test; the smaller database is 4.8GB in size the bigger database is about 44 GB in size.<br />
Let&#8217;s start with the smaller database.<br />
First I backed the database up, one backup used compression while the other one did not.</p>
<p>Let&#8217;s look at some code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>SmallDB<span class="br0">&#93;</span> <span class="kw1">TO</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:SmallDB_Compressed.BAK'</span> 
<span class="kw1">WITH</span> NOF<span class="sy0">OR</span>MAT, NO<span class="sy0">IN</span>IT, &nbsp;
NAME <span class="sy0">=</span> N<span class="st0">'SmallDB-Full Database Backup'</span>, SKIP, N<span class="sy0">OR</span>EW<span class="sy0">IN</span>D, NOUNLOAD, COMPRESSION, &nbsp;
STATS <span class="sy0">=</span> <span class="nu0">2</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BACKUP DATABASE [SmallDB] TO  DISK = N'V:SmallDB_Compressed.BAK' 
WITH NOFORMAT, NOINIT,  
NAME = N'SmallDB-Full Database Backup', SKIP, NOREWIND, NOUNLOAD, COMPRESSION,  
STATS = 2
GO</pre></div></div>

<p>The compressed backup took 34.313 seconds (138.881 MB/sec) to complete.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>SmallDB<span class="br0">&#93;</span> <span class="kw1">TO</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:SmallDB_UnCompressed.BAK'</span> 
<span class="kw1">WITH</span> NOF<span class="sy0">OR</span>MAT, NO<span class="sy0">IN</span>IT, &nbsp;
NAME <span class="sy0">=</span> N<span class="st0">'SmallDB-Full Database Backup'</span>, SKIP, N<span class="sy0">OR</span>EW<span class="sy0">IN</span>D, NOUNLOAD, &nbsp; 
STATS <span class="sy0">=</span> <span class="nu0">2</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BACKUP DATABASE [SmallDB] TO  DISK = N'V:SmallDB_UnCompressed.BAK' 
WITH NOFORMAT, NOINIT,  
NAME = N'SmallDB-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,   
STATS = 2
GO</pre></div></div>

<p>The uncompressed backup took 41.716 seconds (114.235 MB/sec) to complete.</p>
<p>As you can see the compressed backup was a little faster. The size of the backup was 1.25 GB for the compressed backup and 4.8 GB for the uncompressed backup</p>
<p>After I did the backups I decided to do the restores.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>SmallDB<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:SmallDB_Compressed.BAK'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">1</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">RESTORE DATABASE [SmallDB] 
FROM  DISK = N'V:SmallDB_Compressed.BAK' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 1
GO</pre></div></div>

<p>RESTORE DATABASE successfully processed 609980 pages in 23.524 seconds (202.578 MB/sec).</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>SmallDB<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:SmallDB_UnCompressed.BAK'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">1</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">RESTORE DATABASE [SmallDB] 
FROM  DISK = N'V:SmallDB_UnCompressed.BAK' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 1
GO</pre></div></div>

<p>RESTORE DATABASE successfully processed 609977 pages in 38.951 seconds (122.344 MB/sec).</p>
<p>The restores had a bigger difference in time than the backups.</p>
<p>After I was done with the small database I decided to take a bigger database, this database is 44 GB, I wanted to see if using a bigger database would make a bigger or a smaller difference when using compressed backups compared to uncompressed backups.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> MediumDB <span class="kw1">TO</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:MediumDB_Compressed.BAK'</span> 
<span class="kw1">WITH</span> NOF<span class="sy0">OR</span>MAT, NO<span class="sy0">IN</span>IT, &nbsp;
NAME <span class="sy0">=</span> N<span class="st0">'MediumDB-Full Database Backup'</span>, SKIP, N<span class="sy0">OR</span>EW<span class="sy0">IN</span>D, NOUNLOAD, COMPRESSION, &nbsp;
STATS <span class="sy0">=</span> <span class="nu0">2</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BACKUP DATABASE MediumDB TO  DISK = N'V:MediumDB_Compressed.BAK' 
WITH NOFORMAT, NOINIT,  
NAME = N'MediumDB-Full Database Backup', SKIP, NOREWIND, NOUNLOAD, COMPRESSION,  
STATS = 2
GO</pre></div></div>

<p>The compressed backup took 303.113 seconds (142.845 MB/sec) to complete.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BACKUP</span> <span class="kw1">DATABASE</span> MediumDB <span class="kw1">TO</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:MediumDB_UnCompressed.BAK'</span> 
<span class="kw1">WITH</span> NOF<span class="sy0">OR</span>MAT, NO<span class="sy0">IN</span>IT, &nbsp;
NAME <span class="sy0">=</span> N<span class="st0">'MediumDB-Full Database Backup'</span>, SKIP, N<span class="sy0">OR</span>EW<span class="sy0">IN</span>D, NOUNLOAD, &nbsp; 
STATS <span class="sy0">=</span> <span class="nu0">2</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BACKUP DATABASE MediumDB TO  DISK = N'V:MediumDB_UnCompressed.BAK' 
WITH NOFORMAT, NOINIT,  
NAME = N'MediumDB-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,   
STATS = 2
GO</pre></div></div>

<p>The uncompressed backup took 395.740 seconds (109.410 MB/sec) to complete.</p>
<p>Just as before with the small database, the compressed backup was a little faster. The size of the backup was 9.725 GB for the compressed backup and 44.338 GB for the uncompressed backup</p>
<p>Now let&#8217;s take a look at the restore.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>MediumDB<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:MediumDB_Compressed.BAK'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">1</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">RESTORE DATABASE [MediumDB] 
FROM  DISK = N'V:MediumDB_Compressed.BAK' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 1
GO</pre></div></div>

<p>RESTORE DATABASE successfully processed 5542183 pages in 215.319 seconds (201.089 MB/sec).</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">RESTORE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>MediumDB<span class="br0">&#93;</span> 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">DISK</span> <span class="sy0">=</span> N<span class="st0">'V:MediumDB_UnCompressed.BAK'</span> 
<span class="kw1">WITH</span> &nbsp;<span class="kw1">FILE</span> <span class="sy0">=</span> <span class="nu0">1</span>, &nbsp;NOUNLOAD, &nbsp;<span class="kw2">REPLACE</span>, &nbsp;STATS <span class="sy0">=</span> <span class="nu0">1</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">RESTORE DATABASE [MediumDB] 
FROM  DISK = N'V:MediumDB_UnCompressed.BAK' 
WITH  FILE = 1,  NOUNLOAD,  REPLACE,  STATS = 1
GO</pre></div></div>

<p>RESTORE DATABASE successfully processed 5542177 pages in 456.590 seconds (94.829 MB/sec)</p>
<p>The restore of the compressed backup took less than half the time of the uncompressed backup</p>
<p>To sum it all up:</p>
<ol>
<li>Backups are faster if you use compression</li>
<li>Restore are significantly faster if you restore from a compressed backup</li>
<li>Since the files are small you can store a lot more backups on the server and if you have to move it to another server it will be much faster also.</li>
</ol>
<p>Another good thing is that with SQL Server 2008 R2 backup compression will be available in the standard edition as well, until now backup compression was only an Enterprise Edition feature</p>
<p>All in all I was impressed with backup compression and I can&#8217;t see a reason why you would not want to use it. It does use more CPU to backup when using compression but I am more RAM bound than CPU bound.</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/testing-backup-compression-in-sql-server-2008/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>Site is no more after they discover they did not have SQL Server backups</title>
		<link>/index.php/datamgmt/datadesign/site-is-no-more-after-they-discover-they/</link>
		<comments>/index.php/datamgmt/datadesign/site-is-no-more-after-they-discover-they/#comments</comments>
		<pubDate>Sun, 04 Jan 2009 11:31:37 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[availability]]></category>
		<category><![CDATA[backups]]></category>
		<category><![CDATA[best practice]]></category>
		<category><![CDATA[recovery]]></category>

		<guid isPermaLink="false">/index.php/2009/01/site-is-no-more-after-they-discover-they/</guid>
		<description><![CDATA[Oops, that sucks Journalspace is no more. Here is what they have said about this on their blog It was the guy handling the IT (and, yes, the same guy who I caught stealing from the company, and who did a slash-and-burn on some servers on his way out) who made the choice to rely [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Oops, that sucks <a href="http://journalspace.com/this_is_the_way_the_world_ends/not_with_a_bang_but_a_whimper.html">Journalspace</a> is no more.<br />
Here is what they have said about this on their <a href="http://journalspace.com/blog/">blog</a></p>
<blockquote><p>It was the guy handling the IT (and, yes, the same guy who I caught stealing from the company, and who did a slash-and-burn on some servers on his way out) who made the choice to rely on RAID as the only backup mechanism for the SQL server. He had set up automated backups for the HTTP server which contains the PHP code, but, inscrutibly, had no backup system in place for the SQL data. The ironic thing here is that one of his hobbies was telling everybody how smart he was.</p>
<p>This doesn&#8217;t excuse what happened, though: I should have taken a better look at what he&#8217;d left behind, and fixed all of the things that needed fixing.</p></blockquote>
<p>That is just bizarre, to set up backups is one of the easiest things to do in SQL Server and should also be one of the first things you do. You also have to make sure that you test these backups because if you can&#8217;t recover from them then you do NOT have backups<br />
Another thing that you should be aware of is that the backup should never ever be in the same location as your server. It should be stored in another location preferably at least 50 miles from the original location. We had our servers in WTC building one and the backups in WTC building 2, you already know how that ended&#8230;&#8230;..</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/site-is-no-more-after-they-discover-they/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
	</channel>
</rss>
