<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>c# .net bug &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/c-net-bug/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Always Double Check Your Work</title>
		<link>/index.php/desktopdev/mstech/always-double-check-your-work/</link>
		<comments>/index.php/desktopdev/mstech/always-double-check-your-work/#comments</comments>
		<pubDate>Tue, 29 Jun 2010 19:32:13 +0000</pubDate>
		<dc:creator><![CDATA[chaospandion]]></dc:creator>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Microsoft Technologies]]></category>
		<category><![CDATA[c# .net bug]]></category>

		<guid isPermaLink="false">/index.php/2010/06/always-double-check-your-work/</guid>
		<description><![CDATA[I just finished a 2 session bug hunt and I feel quite foolish. See if you can spot the bug. Algorithm The abstract operation IsWordChar takes an integer parameter e and performs the following: If e == –1 or e == InputLength, return false. Let c be the character Input[e]. If c is one of [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I just finished a 2 session bug hunt and I feel quite foolish. See if you can spot the bug.</p>
<p><strong>Algorithm</strong></p>
<p>The abstract operation IsWordChar takes an integer parameter e and performs the following: </p>
<ol>
<li>If e == –1 or e == InputLength, return false.</li>
<li>Let c be the character Input[e].</li>
<li>
        <span>If c is one of the sixty-three characters below, return true.</span><br />
            <em><br />
            a b  c  d  e  f  g  h  i  j  k  l m n o p q r s t u v w x y  z<br />
            A  B  C  D  E  F  G  H  I  J  K  L M N O P Q R S T U V W X Y  Z<br />
            0  1  2  3  4  5  6  7  8  9  _<br />
            </em>
    </li>
<li>Return false.</li>
</ol>
<p><strong>Code</strong></p>
<pre>private Expression&lt;IsWordChar&gt; CreateIsWordCharExpression()
{
    var e = Expression.Parameter(typeof(int), "e");
    var c = Expression.Variable(typeof(char), "c");
    var returnLabel = Expression.Label(Expression.Label(typeof(bool)), _falseConstant);
    var lambda = Expression.Lambda&lt;IsWordChar&gt;(
        Expression.Block(
            new[] { c },
            Expression.IfThen(
                Expression.OrElse(
                    Expression.Equal(e, Expression.Constant(-1)),
                    Expression.Equal(e, _inputLengthVar)
                ),
                Expression.Return(returnLabel.Target, _falseConstant)
            ),
            Expression.Assign(c, Expression.MakeIndex(_str, _stringCharsPropertyInfo, new[] { e })),
            Expression.IfThenElse(
                Expression.OrElse(
                    Expression.OrElse(
                        Expression.OrElse(
                            Expression.AndAlso(
                                Expression.GreaterThanOrEqual(c, Expression.Constant('a')),
                                Expression.LessThanOrEqual(c, Expression.Constant('z'))
                            ),
                            Expression.AndAlso(
                                Expression.GreaterThanOrEqual(c, Expression.Constant('A')),
                                Expression.LessThanOrEqual(c, Expression.Constant('Z'))
                            )
                        ),
                        Expression.AndAlso(
                            Expression.GreaterThanOrEqual(c, Expression.Constant('0')),
                            Expression.LessThanOrEqual(c, Expression.Constant('1'))
                        )
                    ),
                    Expression.Equal(c, Expression.Constant('_'))
                ),
                Expression.Return(returnLabel.Target, _trueConstant),
                Expression.Return(returnLabel.Target, _falseConstant)
            ),
            returnLabel
        ),
        "IsWordChar",
        new[] { e }
    );
    return lambda;
}</pre>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/always-double-check-your-work/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
	</channel>
</rss>
