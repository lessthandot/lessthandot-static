<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>sql server &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/sql-server/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Overview of Published Articles &#8211; 2015Q2</title>
		<link>/index.php/webdev/business-intelligence/overview-of-published-articles-2015q2/</link>
		<comments>/index.php/webdev/business-intelligence/overview-of-published-articles-2015q2/#respond</comments>
		<pubDate>Thu, 09 Jul 2015 12:31:10 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[articles]]></category>
		<category><![CDATA[mds]]></category>
		<category><![CDATA[power bi]]></category>
		<category><![CDATA[power query]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=3479</guid>
		<description><![CDATA[Here is an overview of the articles I published in the second quarter of 2015. INTENSE SCHOOL Book Review: Query Tuning &#38; Optimization by Benjamin Nevarez MSSQLTIPS I&#8217;ve been busy writing tips! Purging Entity Members in SQL Server Master Data Services Using the Transaction History in SQL Server Master Data Services Introduction to Power Query for [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="color: #2f2f2f">Here is an overview of the articles I published in the second quarter of 2015.</p>
<p style="color: #2f2f2f"><strong>INTENSE SCHOOL</strong></p>
<ul style="color: #2f2f2f">
<li><a href="http://resources.intenseschool.com/book-review-query-tuning-optimization-by-benjamin-nevarez/">Book Review: Query Tuning &amp; Optimization by Benjamin Nevarez</a></li>
</ul>
<p><strong style="color: #2f2f2f">MSSQLTIPS</strong></p>
<p>I&#8217;ve been busy writing tips!</p>
<ul style="color: #2f2f2f">
<li><a href="https://www.mssqltips.com/sqlservertip/3646/purging-entity-members-in-sql-server-master-data-services/">Purging Entity Members in SQL Server Master Data Services</a></li>
<li><a href="https://www.mssqltips.com/sqlservertip/3645/using-the-transaction-history-in-sql-server-master-data-services/">Using the Transaction History in SQL Server Master Data Services</a></li>
<li><a href="https://www.mssqltips.com/sqlservertip/3588/introduction-to-power-query-for-excel/">Introduction to Power Query for Excel</a></li>
<li><a href="https://www.mssqltips.com/sqlservertip/3625/extracting-a-sharepoint-list-with-power-query/">Extracting a SharePoint List with Power Query</a></li>
<li><a href="https://www.mssqltips.com/sqlservertip/3635/query-folding-in-power-query-to-improve-performance-/">Query Folding in Power Query to Improve Performance</a></li>
<li><a href="https://www.mssqltips.com/sqlservertip/3667/sql-server-2016-features-in-ctp2/">SQL Server 2016 Features in CTP2</a></li>
</ul>
<p>More tips about SQL Server 2016 are in the pipeline!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/business-intelligence/overview-of-published-articles-2015q2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to drop a Temporal Table</title>
		<link>/index.php/uncategorized/how-to-drop-a-temporal-table/</link>
		<comments>/index.php/uncategorized/how-to-drop-a-temporal-table/#comments</comments>
		<pubDate>Fri, 03 Jul 2015 07:39:59 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[business intelligence]]></category>
		<category><![CDATA[sql 2016]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>
		<category><![CDATA[temporal table]]></category>

		<guid isPermaLink="false">/?p=3465</guid>
		<description><![CDATA[No no, I didn&#8217;t say temporary, but temporal! SQL Server 2016 introduces a great new feature called Temporal Tables. Or in other words, system-versioned tables. We&#8217;ll see what catches on. In a gist, such a table keeps track of the history of its rows by the use of some audit columns (start and end date) [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">No no, I didn&#8217;t say <em>temporary</em>, but <strong>temporal</strong>! SQL Server 2016 introduces a great new feature called <strong>Temporal Tables</strong>. Or in other words, system-versioned tables. We&#8217;ll see what catches on. In a gist, such a table keeps track of the history of its rows by the use of some audit columns (start and end date) and a history table. Sounds a bit like the love child of Change Data Capture and a Type 2 dimension.</p>
<p style="text-align: justify">Anyway, I was testing this feature a bit (more specifically if they supported computed columns as promised in CTP 2.1) and I created a temporal table with the following query:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestTemporal</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span>ID <span class="kw1">int</span> <span class="kw1">primary</span> <span class="kw1">key</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,A <span class="kw1">int</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,B <span class="kw1">int</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,C <span class="kw1">AS</span> A <span class="sy0">*</span> B
&nbsp; &nbsp; &nbsp; &nbsp; ,SysStartTime datetime2 GENERATED ALWAYS <span class="kw1">AS</span> <span class="kw1">ROW</span> <span class="kw1">START</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,SysEndTime datetime2 GENERATED ALWAYS <span class="kw1">AS</span> <span class="kw1">ROW</span> <span class="kw1">END</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,PERIOD <span class="kw1">FOR</span> SYSTEM_TIME <span class="br0">&#40;</span>SysStartTime,SysEndTime<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">WITH</span><span class="br0">&#40;</span>SYSTEM_VERSION<span class="sy0">IN</span>G <span class="sy0">=</span> <span class="kw1">ON</span><span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE dbo.TestTemporal
		(ID int primary key
		,A int
		,B int
		,C AS A * B
		,SysStartTime datetime2 GENERATED ALWAYS AS ROW START NOT NULL
		,SysEndTime datetime2 GENERATED ALWAYS AS ROW END NOT NULL
		,PERIOD FOR SYSTEM_TIME (SysStartTime,SysEndTime)) WITH(SYSTEM_VERSIONING = ON);</pre></div></div>

<p style="text-align: justify">This code only works in CTP2.1, not in earlier versions of SQL 2016 because of the computed column specification.<br />
Anyway, of course I forgot to set my database so this table was created in the master database. I wanted to drop it, but I was greeted with this lovely message:</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2015/07/errormessage.png"><img class="alignnone size-full wp-image-3466" src="/wp-content/uploads/2015/07/errormessage.png" alt="errormessage" width="716" height="151" srcset="/wp-content/uploads/2015/07/errormessage.png 716w, /wp-content/uploads/2015/07/errormessage-300x63.png 300w" sizes="(max-width: 716px) 100vw, 716px" /></a></p>
<p style="text-align: justify">Even the <em>Delete</em> action was missing from the table&#8217;s context menu.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2015/07/nodelete.png"><img class="alignnone size-full wp-image-3467" src="/wp-content/uploads/2015/07/nodelete.png" alt="nodelete" width="312" height="364" srcset="/wp-content/uploads/2015/07/nodelete.png 312w, /wp-content/uploads/2015/07/nodelete-257x300.png 257w" sizes="(max-width: 312px) 100vw, 312px" /></a></p>
<p style="text-align: justify">A quick look on the MSDN page <a href="https://msdn.microsoft.com/en-us/library/dn935015.aspx">Temporal Tables</a> teaches us that dropping a system-versioned table is a <em>disallowed Alter Schema operation</em>. No luck there. The answer came, as usual, through Twitter:</p>
<blockquote class="twitter-tweet" lang="en">
<p dir="ltr" lang="en"><a href="https://twitter.com/Ko_Ver">@Ko_Ver</a> did you try to remove temporal setting before dropping it?</p>
<p>— Janos Berke (@JanosBerke) <a href="https://twitter.com/JanosBerke/status/615491933146861568">June 29, 2015</a></p></blockquote>
<p style="text-align: justify">Turning the system-versioning off and dropping the table is the answer to our question (and to about any schema operation you want to do on a system-versioned table). If we execute such an ALTER TABLE script, we get the following:</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2015/07/after_alter.png"><img class="alignnone size-full wp-image-3468" src="/wp-content/uploads/2015/07/after_alter.png" alt="after_alter" width="830" height="99" srcset="/wp-content/uploads/2015/07/after_alter.png 830w, /wp-content/uploads/2015/07/after_alter-300x35.png 300w" sizes="(max-width: 830px) 100vw, 830px" /></a></p>
<p style="text-align: justify">The temporal table is reduced to a normal table, which means it can be dropped as a normal table. But the history table is kept as well. This means you can always re-enable system-versioning if you want to.<br />
The name of the history table is dbo.MSSQL_TemporalHistoryFor_xxx, where xxx is the object id of the main table. Something to keep in mind if you want to automate scripts. Or just specify a friendly name when enabling system-versioning.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/how-to-drop-a-temporal-table/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>SQL Server 2016 CTP 2.1 has been released</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/sql-server-2016-ctp-2-1-has-been-released/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/sql-server-2016-ctp-2-1-has-been-released/#respond</comments>
		<pubDate>Mon, 29 Jun 2015 12:59:52 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[sql 2016]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=3432</guid>
		<description><![CDATA[Microsoft is all about rapid release cycles nowadays. We already experienced this with Power BI, where monthly new features and improvements have been added. Now SQL Server appears to get the same treatment: SQL Server 2016 CTP 2.1 has just been released. There is nothing groundbreaking in this release &#8211; which can be considered as an [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Microsoft is all about rapid release cycles nowadays. We already experienced this with Power BI, where monthly new features and improvements have been added.<br />
Now SQL Server appears to get the same treatment: <a href="http://blogs.technet.com/b/dataplatforminsider/archive/2015/06/24/sql-server-2016-community-technology-preview-2-1-is-available.aspx">SQL Server 2016 CTP 2.1 has just been released</a>. There is nothing groundbreaking in this release &#8211; which can be considered as an upgrade of CTP2 &#8211; but there are some additional functionalities and improvements in the database engine.</p>
<p>If you have already installed CTP2, you can just upgrade it to CTP2.1 following the usual upgrade procedure. Just spin-up the SQL Server set-up, go to Installation and choose <i>Upgrade from a previous version of SQL Server</i>. Hit Next a few times, choose which instance and which features you want to upgrade and you&#8217;re all done.</p>
<p>Before:</p>
<p><a href="/wp-content/uploads/2015/06/version_1.png"><img class="alignnone size-full wp-image-3433" src="/wp-content/uploads/2015/06/version_1.png" alt="version_1" width="350" height="141" srcset="/wp-content/uploads/2015/06/version_1.png 350w, /wp-content/uploads/2015/06/version_1-300x120.png 300w" sizes="(max-width: 350px) 100vw, 350px" /></a></p>
<p>After:</p>
<p><a href="/wp-content/uploads/2015/06/version_2.png"><img class="alignnone size-full wp-image-3434" src="/wp-content/uploads/2015/06/version_2.png" alt="version_2" width="317" height="145" srcset="/wp-content/uploads/2015/06/version_2.png 317w, /wp-content/uploads/2015/06/version_2-300x137.png 300w" sizes="(max-width: 317px) 100vw, 317px" /></a></p>
<p>One of the new features for example is the ability to use computed columns in a temporal table. Exciting! (OK, I&#8217;m just using this as an example that I actually upgraded my system)</p>
<p><a href="/wp-content/uploads/2015/06/temporal_before.png"><img class="alignnone size-full wp-image-3437" src="/wp-content/uploads/2015/06/temporal_before.png" alt="temporal_before" width="973" height="317" srcset="/wp-content/uploads/2015/06/temporal_before.png 973w, /wp-content/uploads/2015/06/temporal_before-300x97.png 300w" sizes="(max-width: 973px) 100vw, 973px" /></a></p>
<p>After the upgrade:</p>
<p><a href="/wp-content/uploads/2015/06/temporal_after-e1435582654552.png"><img class="alignnone size-full wp-image-3441" src="/wp-content/uploads/2015/06/temporal_after-e1435582654552.png" alt="temporal_after" width="640" height="231" srcset="/wp-content/uploads/2015/06/temporal_after-e1435582654552.png 640w, /wp-content/uploads/2015/06/temporal_after-e1435582654552-300x108.png 300w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>
<p>&nbsp;</p>
<p>Anyway, I hope we can see more incremental releases of SQL 2016 soon and dare I say with more exciting Business Intelligence features.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/sql-server-2016-ctp-2-1-has-been-released/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>My first SQL 2016 bug</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/my-first-sql-2016-bug/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/my-first-sql-2016-bug/#respond</comments>
		<pubDate>Mon, 29 Jun 2015 11:40:05 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[bug]]></category>
		<category><![CDATA[sql 216]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/?p=3429</guid>
		<description><![CDATA[A little while back SQL Server 2016 CTP2 was announced and I have spent some time playing with it (read: spent hours creating a VM because there were hundreds of Windows updates). It seems I have already found a very small bug while creating a new database: Apparently they forgot to rename the compatibility level 🙂]]></description>
				<content:encoded><![CDATA[<p>A little while back <a href="/index.php/datamgmt/dbprogramming/mssqlserver/sql-2016-preview-has-been-released/">SQL Server 2016 CTP2 was announced</a> and I have spent some time playing with it (read: spent hours creating a VM because there were hundreds of Windows updates).<br />
It seems I have already found a very small bug while creating a new database:</p>
<p><a href="/wp-content/uploads/2015/06/firstBug.png"><img class="alignnone size-full wp-image-3430" src="/wp-content/uploads/2015/06/firstBug.png" alt="firstBug" width="704" height="214" srcset="/wp-content/uploads/2015/06/firstBug.png 704w, /wp-content/uploads/2015/06/firstBug-300x91.png 300w" sizes="(max-width: 704px) 100vw, 704px" /></a></p>
<p>Apparently they forgot to rename the compatibility level <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/my-first-sql-2016-bug/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Demystifying Power BI &#8211; slidedeck</title>
		<link>/index.php/uncategorized/demystifying-power-bi-slidedeck/</link>
		<comments>/index.php/uncategorized/demystifying-power-bi-slidedeck/#respond</comments>
		<pubDate>Tue, 16 Jun 2015 10:15:31 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[excel]]></category>
		<category><![CDATA[itproceed]]></category>
		<category><![CDATA[power bi]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=3418</guid>
		<description><![CDATA[ITPROceed has come to an end and what a great event it was. Kudos to the organizers and all the other speakers! My session went pretty well, at least from my point of view, although I had to rush my demos a bit since there was only a 50 minute time slot. I prepared for [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="/index.php/webdev/business-intelligence/speaking-at-itproceed-2015/">ITPROceed </a>has come to an end and what a great event it was. Kudos to the organizers and all the other speakers!</p>
<p>My session went pretty well, at least from my point of view, although I had to rush my demos a bit since there was only a 50 minute time slot. I prepared for 1 hour of course <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
I saw some pretty interesting stuff about Azure SQL DB and I really liked the session about Azure Stream Analytics. And I won a Bose headphone, so that&#8217;s nice as well <img src="https://s.w.org/images/core/emoji/2/72x72/1f600.png" alt="😀" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Congrats <a href="https://twitter.com/Ko_Ver">@Ko_Ver</a> for winning the <a href="https://twitter.com/Derdack">@Derdack</a> customized Noise Cancelling <a href="https://twitter.com/Bose">@Bose</a> headphones! <a href="https://twitter.com/ITPROceed">@ITPROceed</a> <a href="https://twitter.com/EnterpriseAlert">@EnterpriseAlert</a> <a href="http://t.co/vPy7i8Lk2j">pic.twitter.com/vPy7i8Lk2j</a></p>
<p>&mdash; Stefanie Gerken (@StefanieGerken) <a href="https://twitter.com/StefanieGerken/status/608989760363884545">June 11, 2015</a></p></blockquote>
<p>Anyway, you can find the slidedeck here on <a href="http://www.slideshare.net/KoenVerbeeck/demystifying-power-bi">SlideShare</a>.<br />
You can download them and use them for your own use, but with proper attribution.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/demystifying-power-bi-slidedeck/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL 2016 Preview has been released!</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/sql-2016-preview-has-been-released/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/sql-2016-preview-has-been-released/#comments</comments>
		<pubDate>Thu, 28 May 2015 10:54:51 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[ctp2]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[sql2016]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[ssrs]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=3394</guid>
		<description><![CDATA[For those who haven&#8217;t noticed already: SQL Server 2016 CTP2 (or Preview as some call it) has just been released! This means it is play time! 🙂 You can either download a copy if you&#8217;re old school like me, or you can spin up a VM in Azure like all the cool kids. SQL Server [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>For those who haven&#8217;t noticed already:</p>
<p>SQL Server 2016 CTP2 (or Preview as some call it) has just been released!<br />
This means it is play time! <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>You can either download a copy if you&#8217;re old school like me, or you can spin up a VM in Azure like all the cool kids.</p>
<p><a href="http://blogs.technet.com/b/dataplatforminsider/archive/2015/05/27/sql-server-2016-first-public-preview-now-available.aspx">SQL Server 2016 first public preview now available!</a></p>
<p>Some of my favorite features (although some are not yet in the preview):</p>
<ul>
<li>SSIS incremental deployment model (aka deploy only 1 package to the SSIS catalog). Although I understand the reason of the SSIS team to first allow only deployments of full projects, there are a lot of customers that want this functionality.</li>
<li>Power Query in all the things! (more specifically: in SSIS and SSRS)</li>
<li>R integration in SSRS (this should allow you to do amazing things with SSRS)</li>
<li>SSRS revamp (still have to see it though, but I&#8217;m already excited!)</li>
<li><a href="https://msdn.microsoft.com/en-us/library/dn935015(v=sql.130).aspx">Temporal tables </a></li>
<li><a href="http://www.brentozar.com/archive/2015/05/announcing-live-query-execution-plans/">Live query plans</a> (seems pretty awesome)</li>
<li>DAX enhancements (many 2 many, median, percentiles, and so on)</li>
</ul>
<p>Here&#8217;s a good overview of what you can expect in SQL Server 2016:</p>
<p><a href="http://sqlblog.com/blogs/jorg_klein/archive/2015/05/22/bi-on-your-terms-with-sql-server-2016.aspx">BI on your terms with SQL Server 2016</a></p>
<p>Be careful, if you install Polybase, you apparently need the Oracle JRE. Boooo.</p>
<p><a href="/wp-content/uploads/2015/05/polybase_jre.jpg"><img class="alignnone size-full wp-image-3395" src="/wp-content/uploads/2015/05/polybase_jre.jpg" alt="polybase_jre" width="594" height="285" srcset="/wp-content/uploads/2015/05/polybase_jre.jpg 594w, /wp-content/uploads/2015/05/polybase_jre-300x143.jpg 300w" sizes="(max-width: 594px) 100vw, 594px" /></a></p>
<p>Anyway, a lot of goodness and I am very excited about this release.</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/sql-2016-preview-has-been-released/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>Solving a slow running query issue with UNION</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/solving-a-slow-running-query-issue-with-union/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/solving-a-slow-running-query-issue-with-union/#comments</comments>
		<pubDate>Wed, 25 Feb 2015 11:38:03 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>
		<category><![CDATA[t-sql]]></category>

		<guid isPermaLink="false">/?p=3253</guid>
		<description><![CDATA[That&#8217;s right! I will solve a performance issue by adding a UNION into the query. Interested? Read on! I recently encountered a curious issue with a query. The query itself wasn’t exactly rocket science: it read data from a few tables and calculated the start and the end dates of a contract in the SELECT [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>That&#8217;s right! I will solve a performance issue by adding a UNION into the query. Interested? Read on!</p>
<p>I recently encountered a curious issue with a query. The query itself wasn’t exactly rocket science: it read data from a few tables and calculated the start and the end dates of a contract in the SELECT statement. In an outer query there’s a range join with a date dimension to explode the data over the different months. Let me explain that last part. Suppose we have a contract with ID 5 that is valid between January 2015 and March 2015. The range join with the date dimension would thus return 3 rows:</p>
<p><a href="/wp-content/uploads/2015/02/Exploding.png"><img class="alignnone size-full wp-image-3257" src="/wp-content/uploads/2015/02/Exploding.png" alt="Exploding" width="187" height="97" /></a></p>
<p>The query looked something like this:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="kw1">WITH</span> CTE_Contracts <span class="kw1">AS</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c.<span class="me1">ContractID</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractFrom &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractTo &nbsp; &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> contracts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c
&nbsp; &nbsp; <span class="sy0">JOIN</span> contractsdetail&nbsp; &nbsp; cd <span class="kw1">ON</span> c.<span class="me1">ContractID</span> <span class="sy0">=</span> cd.<span class="me1">ContractID</span>
<span class="br0">&#41;</span>
<span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp;ContractID
&nbsp; &nbsp; ,ContractMonth <span class="sy0">=</span> d.<span class="br0">&#91;</span><span class="kw1">Month</span><span class="br0">&#93;</span>
<span class="kw1">FROM</span> CTE_Contracts&nbsp; c
<span class="sy0">JOIN</span> dateDim&nbsp; &nbsp; &nbsp; &nbsp; d <span class="kw1">ON</span>&nbsp; &nbsp; d.<span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span>&nbsp; &nbsp; <span class="sy0">BETWEEN</span> c.<span class="me1">ContractFrom</span> <span class="sy0">AND</span> c.<span class="me1">ContractTo</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> d.<span class="br0">&#91;</span><span class="kw1">Day</span><span class="br0">&#93;</span> &nbsp; &nbsp; <span class="sy0">=</span> <span class="nu0">1</span>; <span class="co1">-- only get the first of the month </span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">WITH CTE_Contracts AS
(
	SELECT
		 c.ContractID
		,ContractFrom	= IIF( ... some date logic)
		,ContractTo		= IIF( ... some date logic)
	FROM contracts			c
	JOIN contractsdetail	cd ON c.ContractID = cd.ContractID
)
SELECT
	 ContractID
	,ContractMonth = d.[Month]
FROM CTE_Contracts	c
JOIN dateDim		d ON	d.[Date]	BETWEEN c.ContractFrom AND c.ContractTo
						AND	d.[Day]		= 1; -- only get the first of the month </pre></div></div>

<p>The query is a bit more complex, but you get the idea. On the test server, the query took 1 minute and 24 seconds to return about 90,000 rows. That’s a tad slow if you ask me. I didn’t see anything wrong with the query (and indexes wouldn’t help), so I just blamed it on the server and on the standard edition of SQL Server. That was until I came across a very similar query. That query did about the same thing, but it also fetched data from another table and appended it to the first result set with a UNION. Something like this:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="de1"><pre class="de1"><span class="kw1">WITH</span> CTE_Contracts <span class="kw1">AS</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c.<span class="me1">ContractID</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractFrom &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractTo &nbsp; &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> contracts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c
&nbsp; &nbsp; <span class="sy0">JOIN</span> contractsdetail&nbsp; &nbsp; cd <span class="kw1">ON</span> c.<span class="me1">ContractID</span> <span class="sy0">=</span> cd.<span class="me1">ContractID</span>
&nbsp; &nbsp; <span class="kw1">UNION</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c.<span class="me1">ContractID</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractFrom &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractTo &nbsp; &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> contractsextra &nbsp; &nbsp; c
&nbsp; &nbsp; <span class="sy0">JOIN</span> contractsdetail&nbsp; &nbsp; cd <span class="kw1">ON</span> c.<span class="me1">ContractID</span> <span class="sy0">=</span> cd.<span class="me1">ContractID</span>
<span class="br0">&#41;</span>
<span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp;ContractID
&nbsp; &nbsp; ,ContractMonth <span class="sy0">=</span> d.<span class="br0">&#91;</span><span class="kw1">Month</span><span class="br0">&#93;</span>
<span class="kw1">FROM</span> CTE_Contracts&nbsp; c
<span class="sy0">JOIN</span> dateDim&nbsp; &nbsp; &nbsp; &nbsp; d <span class="kw1">ON</span>&nbsp; &nbsp; d.<span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span>&nbsp; &nbsp; <span class="sy0">BETWEEN</span> c.<span class="me1">ContractFrom</span> <span class="sy0">AND</span> c.<span class="me1">ContractTo</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> d.<span class="br0">&#91;</span><span class="kw1">Day</span><span class="br0">&#93;</span> &nbsp; &nbsp; <span class="sy0">=</span> <span class="nu0">1</span>; <span class="co1">-- only get the first of the month</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">WITH CTE_Contracts AS
(
	SELECT
		 c.ContractID
		,ContractFrom	= IIF( ... some date logic)
		,ContractTo		= IIF( ... some date logic)
	FROM contracts			c
	JOIN contractsdetail	cd ON c.ContractID = cd.ContractID
	UNION
	SELECT
		 c.ContractID
		,ContractFrom	= IIF( ... some date logic)
		,ContractTo		= IIF( ... some date logic)
	FROM contractsextra		c
	JOIN contractsdetail	cd ON c.ContractID = cd.ContractID
)
SELECT
	 ContractID
	,ContractMonth = d.[Month]
FROM CTE_Contracts	c
JOIN dateDim		d ON	d.[Date]	BETWEEN c.ContractFrom AND c.ContractTo
						AND	d.[Day]		= 1; -- only get the first of the month</pre></div></div>

<p>Now this query returned about 120,000 rows in 6 seconds. What? More rows in less time? How’s that possible? Time to take a look at the execution plans. The execution plan of the second query:</p>
<p><a href="/wp-content/uploads/2015/02/executionplan_1.png"><img class="alignnone size-full wp-image-3258" src="/wp-content/uploads/2015/02/executionplan_1.png" alt="executionplan_1" width="852" height="511" srcset="/wp-content/uploads/2015/02/executionplan_1.png 852w, /wp-content/uploads/2015/02/executionplan_1-300x179.png 300w" sizes="(max-width: 852px) 100vw, 852px" /></a></p>
<p>You can clearly see the two paths of the union being merged with the hash match after which the results are joined to the date dimension using the nested loops.</p>
<p>The execution plan of the first query is a bit different:</p>
<p><a href="/wp-content/uploads/2015/02/executionplan_2.png"><img class="alignnone size-full wp-image-3255" src="/wp-content/uploads/2015/02/executionplan_2.png" alt="executionplan_2" width="1013" height="340" srcset="/wp-content/uploads/2015/02/executionplan_2.png 1013w, /wp-content/uploads/2015/02/executionplan_2-300x100.png 300w" sizes="(max-width: 1013px) 100vw, 1013px" /></a></p>
<p>The nested loops now gives a warning that there is no join predicate. This results in about 5 million rows, which are filtered later on with the Filter operator to the desired 90,000 rows. A bit of unnecessary overhead it seems. So the execution plan of the first query is a bit silly, since it calculates the date columns for the inner select after the join (in the Compute Scalar operator between the Filter and the Nested Loops). In the second query, these columns are calculated before the join and so the Nested Loops can use them as join predicates.</p>
<p>The question is why does SQL Server change behavior? Well, the second query has a UNION operator in the inner query. This means that SQL Server has to compare the two result sets which each other, so the date columns have to be calculated directly in the inner query. Knowing this, we can easily optimize the first query by adding a “dummy UNION”:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="de1"><pre class="de1"><span class="kw1">WITH</span> CTE_Contracts <span class="kw1">AS</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c.<span class="me1">ContractID</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractFrom &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,ContractTo &nbsp; &nbsp; <span class="sy0">=</span> IIF<span class="br0">&#40;</span> ... <span class="me1">some</span> <span class="kw1">date</span> logic<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> contracts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c
&nbsp; &nbsp; <span class="sy0">JOIN</span> contractsdetail&nbsp; &nbsp; cd <span class="kw1">ON</span> c.<span class="me1">ContractID</span> <span class="sy0">=</span> cd.<span class="me1">ContractID</span>
&nbsp; &nbsp; <span class="kw1">UNION</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span> <span class="co1">-- just to enforce performance</span>
<span class="br0">&#41;</span>
<span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp;ContractID
&nbsp; &nbsp; ,ContractMonth <span class="sy0">=</span> d.<span class="br0">&#91;</span><span class="kw1">Month</span><span class="br0">&#93;</span>
<span class="kw1">FROM</span> CTE_Contracts&nbsp; c
<span class="sy0">JOIN</span> dateDim&nbsp; &nbsp; &nbsp; &nbsp; d <span class="kw1">ON</span>&nbsp; &nbsp; d.<span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span>&nbsp; &nbsp; <span class="sy0">BETWEEN</span> c.<span class="me1">ContractFrom</span> <span class="sy0">AND</span> c.<span class="me1">ContractTo</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> d.<span class="br0">&#91;</span><span class="kw1">Day</span><span class="br0">&#93;</span> &nbsp; &nbsp; <span class="sy0">=</span> <span class="nu0">1</span>; <span class="co1">-- only get the first of the month </span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">WITH CTE_Contracts AS
(
	SELECT
		 c.ContractID
		,ContractFrom	= IIF( ... some date logic)
		,ContractTo		= IIF( ... some date logic)
	FROM contracts			c
	JOIN contractsdetail	cd ON c.ContractID = cd.ContractID
	UNION
	SELECT NULL, NULL, NULL, NULL -- just to enforce performance
)
SELECT
	 ContractID
	,ContractMonth = d.[Month]
FROM CTE_Contracts	c
JOIN dateDim		d ON	d.[Date]	BETWEEN c.ContractFrom AND c.ContractTo
						AND	d.[Day]		= 1; -- only get the first of the month </pre></div></div>

<p>This extra row with all NULL values will be filtered out by the INNER JOIN with the date dimension. Now the query runs in 3 seconds!</p>
<p><a href="/wp-content/uploads/2015/02/executionplan_3.png"><img class="alignnone size-full wp-image-3256" src="/wp-content/uploads/2015/02/executionplan_3.png" alt="executionplan_3" width="769" height="168" srcset="/wp-content/uploads/2015/02/executionplan_3.png 769w, /wp-content/uploads/2015/02/executionplan_3-300x65.png 300w" sizes="(max-width: 769px) 100vw, 769px" /></a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/solving-a-slow-running-query-issue-with-union/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>
		</item>
		<item>
		<title>Overview of Published Articles – 2014Q4</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/overview-of-published-articles-2014q4/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/overview-of-published-articles-2014q4/#respond</comments>
		<pubDate>Wed, 07 Jan 2015 20:39:46 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSAS]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[SSRS]]></category>
		<category><![CDATA[mssqltips]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssas]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[ssrs]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=3145</guid>
		<description><![CDATA[Here is an overview of the articles I published in the last quarter of 2014. INTENSE SCHOOL MCSE Prep: Overview of T-SQL Windowing Functions Part 1 MCSE Prep: Overview of T-SQL Windowing Functions Part 2 The third and final part of this series will probably be published this month, so keep an eye on the site [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><span style="color: #2f2f2f">Here is an overview of the articles I published in the last quarter of 2014.</span></p>
<p><strong style="color: #2f2f2f">INTENSE SCHOOL</strong></p>
<ul>
<li><a href="http://resources.intenseschool.com/mcse-prep-overview-of-t-sql-windowing-functions-part-1/">MCSE Prep: Overview of T-SQL Windowing Functions Part 1</a></li>
<li><a href="http://resources.intenseschool.com/mcse-prep-overview-of-t-sql-windowing-functions-part-2/">MCSE Prep: Overview of T-SQL Windowing Functions Part 2</a></li>
</ul>
<p>The third and final part of this series will probably be published this month, so keep an eye on the site for more window functions awesomeness <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong style="color: #2f2f2f">MSSQLTIPS</strong></p>
<ul>
<li><a href="http://www.mssqltips.com/sqlservertip/3374/format-durations-in-sql-server-analysis-services/">Format Durations in SQL Server Analysis Services</a></li>
<li><a href="http://www.mssqltips.com/sqlservertip/3395/creating-a-box-plot-graph-in-sql-server-reporting-services/">Creating a box plot graph in SQL Server Reporting Services</a></li>
<li><a href="http://www.mssqltips.com/sqlservertip/3417/sql-server-reporting-services-add-calculated-series-to-a-graph/">SQL Server Reporting Services Add Calculated Series to a Graph</a></li>
<li><a href="http://www.mssqltips.com/sqlservertip/3432/add-a-linear-trendline-to-a-graph-in-sql-server-reporting-services/">Add a linear trendline to a graph in SQL Server Reporting Services</a></li>
</ul>
<p>Yes, I had quite some SSRS inspiration the past months. Regarding the first tip about formatting durations: I wrote about potential issues with NULL values in the blog post <a href="/index.php/webdev/business-intelligence/formatting-durations-in-ssas-caveat/">Formatting Durations in SSAS: Caveat</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/overview-of-published-articles-2014q4/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>PASS BI VC recording is available now</title>
		<link>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/</link>
		<comments>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/#respond</comments>
		<pubDate>Fri, 05 Dec 2014 12:18:57 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[business intelligence]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[etl]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[virtual chapter]]></category>

		<guid isPermaLink="false">/?p=3115</guid>
		<description><![CDATA[The recording of the webinar I did for the PASS BI virtual chapter is live! (Quick reminder: it was the same session as on the SQLServerDays: How to (not) torment your fellow SSIS developer?) I&#8217;m quite pleased with the recording, although I sound like a drunk German scientist sometimes. The slides can be downloaded here. Let [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The recording of the <a href="/index.php/datamgmt/ssis/pass-bi-vc-how-to-not-torment-your-fellow-ssis-developer/">webinar </a>I did for the PASS BI virtual chapter is live!<br />
(Quick reminder: it was the same session as on the SQLServerDays: <a style="color: #c04623" href="/index.php/uncategorized/speaking-at-sql-server-days-2014/">How to (not) torment your fellow SSIS developer?</a>)</p>
<p>I&#8217;m quite pleased with the recording, although I sound like a drunk German scientist sometimes.</p>
<p><iframe width="500" height="281" src="https://www.youtube.com/embed/-N7gxmAdceM?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>The slides can be downloaded <a href="http://www.slideshare.net/KoenVerbeeck/sql-server-days-2014-how-to-not-torment-your">here</a>.</p>
<p>Let me know in the comments if you like it or not!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Beware the defaults! (in windowing functions) &#8211; The Movie!</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/beware-the-defaults-in-windowing-functions-the-movie/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/beware-the-defaults-in-windowing-functions-the-movie/#comments</comments>
		<pubDate>Thu, 27 Nov 2014 14:30:53 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[online training]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>
		<category><![CDATA[t-sql]]></category>
		<category><![CDATA[webucator]]></category>
		<category><![CDATA[windowing functions]]></category>

		<guid isPermaLink="false">/?p=3071</guid>
		<description><![CDATA[I was recently contacted by the fine gents of Webucator, an online training services provider. In order to promote their SQL Server classes, they are doing a free series called SQL Server Solutions from the Web where they show different SQL Server solutions found in blog posts around the web. Essentially, they are turning blog posts [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;">I was recently contacted by the fine gents of <a href="https://www.webucator.com/">Webucator</a>, an online training services provider. In order to promote their <a href="https://www.webucator.com/database/mssql.cfm">SQL Server classes</a>, they are doing a free series called <em>SQL Server Solutions from the Web</em> where they show different SQL Server solutions found in blog posts around the web. Essentially, they are turning blog posts into videos. They asked me if they could turn my blog post <a href="/index.php/datamgmt/dbprogramming/mssqlserver/beware-the-defaults-in-windowing-functions/">Beware the defaults! (in windowing functions)</a> into such a video and &#8211; humble as I am &#8211; I gave them permission to do so. And the result is now here for everyone to watch:</p>
<p><iframe width="500" height="281" src="https://www.youtube.com/embed/nBUnoVRjVSA?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p style="text-align: justify;"><a href="https://www.youtube.com/watch?v=nBUnoVRjVSA">URL to Youtube video</a></p>
<p style="text-align: justify;">I&#8217;m quite pleased with the video &#8211; excellent <a href="http://technet.microsoft.com/en-us/sysinternals/bb897434.aspx">Zoomit </a>use by the way &#8211; as it highlights the most important aspects of my blog post:</p>
<ul style="text-align: justify;">
<li>For regular aggregation functions using the OVER clause, do not use the ORDER BY unless necessary because this invokes the horrible default of RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW.</li>
<li>If you do use the ORDER BY specify a correct sorting order.</li>
</ul>
<p style="text-align: justify;">Or even better, specify ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW or another framing option. Just not the default <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
The one thing missing in the video &#8211; and I must confess I didn&#8217;t highlight it enough in my blog post &#8211; is the massive performance difference between ROWS and RANGE. I&#8217;m re-reading the excellent book by Itzik Ben-Gan about the <a href="http://www.amazon.com/Microsoft-High-Performance-Functions-Developer-Reference/dp/0735658366/ref=sr_1_1?ie=UTF8&amp;qid=1417091814&amp;sr=8-1&amp;keywords=windowing+functions">T-SQL windowing functions</a> and there Itzik explains why this is the case. In a nutshell:</p>
<p style="text-align: justify;">When using the ROWS window frame extent, the window spool operator can use an optimized in-memory work table which speeds things up tremendously. However, when using RANGE the typical on-disk work table has to be used, which is of course much slower. In theory, RANGE is equal to ROWS when the ordering values are unique within the partition, but the optimizer doesn&#8217;t check for uniqueness so RANGE will always default to the on-disk work table.</p>
<p style="text-align: justify;">If you were not convinced to always specify ROWS instead of the default RANGE, I hope you now are.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/beware-the-defaults-in-windowing-functions-the-movie/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
	</channel>
</rss>
