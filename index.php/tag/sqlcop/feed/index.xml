<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>sqlcop &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/sqlcop/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Getting file size, space used and space free information for a SQL Server database</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/getting-file-size-space-used/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/getting-file-size-space-used/#comments</comments>
		<pubDate>Wed, 13 Feb 2013 18:14:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/getting-file-size-space-used/</guid>
		<description><![CDATA[Sometimes you want to quickly see how many files a database has, how much space a file is using and how much space is free. You can use the sysfiles/sys.files views or compatible views for that. From SQL Server 2005 onward you can also use the sys.datab&#8230;]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see how many files a database has, how much space a file is using and how much space is free. You can use the sysfiles/sys.files views or compatible views for that. From SQL Server 2005 onward you can also use the sys.database_files catalog view. </p>
<p>The sizes in these files are stored in 8k pages, in order to get the size in MB you need to divide by 128. If something is 131072 8K pages and you divide it by 128 you will get 1024</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">131072</span><span class="sy0">/</span><span class="nu0">128.0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 131072/128.0</pre></div></div>

<p>That query gives you 1024</p>
<p>For SQL Server 2000 and up you can use this query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; a.<span class="me1">FILEID</span> <span class="kw1">AS</span> <span class="kw2">file_id</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>file_size_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>space_used_mb<span class="br0">&#93;</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>free_space_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; a.<span class="me1">NAME</span> <span class="kw1">AS</span> name,
&nbsp; &nbsp; a.<span class="me1">FILENAME</span> <span class="kw1">AS</span> physical_name
<span class="kw1">FROM</span>
&nbsp; &nbsp; sysfiles a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	a.FILEID AS file_id,
	CONVERT(DECIMAL(12,2),ROUND(a.size/128.000,2)) AS [file_size_mb],
	CONVERT(DECIMAL(12,2),ROUND(FILEPROPERTY(a.name,'SpaceUsed')/128.000,2)) AS [space_used_mb] ,
	CONVERT(DECIMAL(12,2),ROUND((a.size-FILEPROPERTY(a.name,'SpaceUsed'))/128.000,2)) AS [free_space_mb],
	a.NAME AS name,
	a.FILENAME AS physical_name
FROM
	sysfiles a</pre></div></div>

<p>For SQL Server 2005 and up you can use the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; a.<span class="me1">FILEID</span> <span class="kw1">AS</span> <span class="kw2">file_id</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>file_size_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>space_used_mb<span class="br0">&#93;</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>free_space_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; a.<span class="me1">NAME</span> <span class="kw1">AS</span> name,
&nbsp; &nbsp; a.<span class="me1">FILENAME</span> <span class="kw1">AS</span> physical_name
<span class="kw1">FROM</span>
&nbsp; &nbsp; sys.<span class="me1">sysfiles</span> a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	a.FILEID AS file_id,
	CONVERT(DECIMAL(12,2),ROUND(a.size/128.000,2)) AS [file_size_mb],
	CONVERT(DECIMAL(12,2),ROUND(FILEPROPERTY(a.name,'SpaceUsed')/128.000,2)) AS [space_used_mb] ,
	CONVERT(DECIMAL(12,2),ROUND((a.size-FILEPROPERTY(a.name,'SpaceUsed'))/128.000,2)) AS [free_space_mb],
	a.NAME AS name,
	a.FILENAME AS physical_name
FROM
	sys.sysfiles a</pre></div></div>

<p>The only difference between the two queries is that the top query uses the system table sysfiles  while the query below it uses the sys.sysfiles compatibility view</p>
<p>You can also use the sys.database_files catalog view from SQL Server 2005 onward. Here is what the query looks like, it is mostly the same except for some column names</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; a.<span class="kw2">file_id</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>file_size_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>space_used_mb<span class="br0">&#93;</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>free_space_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; name,
&nbsp; &nbsp; a.<span class="me1">physical_name</span>
<span class="kw1">FROM</span>
&nbsp;sys.<span class="me1">database_files</span> a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	a.file_id ,
	CONVERT(DECIMAL(12,2),ROUND(a.size/128.000,2)) AS [file_size_mb],
	CONVERT(DECIMAL(12,2),ROUND(FILEPROPERTY(a.name,'SpaceUsed')/128.000,2)) AS [space_used_mb] ,
	CONVERT(DECIMAL(12,2),ROUND((a.size-FILEPROPERTY(a.name,'SpaceUsed'))/128.000,2)) AS [free_space_mb],
	name,
	a.physical_name
FROM
 sys.database_files a</pre></div></div>

<p>This post will be added to the informational section of SQLCop</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/getting-file-size-space-used/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Discovering new things (for me) in SSMS</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/#comments</comments>
		<pubDate>Sun, 10 Feb 2013 12:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[ssms]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/discovering-new-things-for-me/</guid>
		<description><![CDATA[One of the good things about working in technology is that you always will discover new things. The other day I created a blog post: Listing all your SQL Server databases ordered by size. Buck Woody replied to me on twitter that this is also built into&#8230;]]></description>
				<content:encoded><![CDATA[<p>One of the good things about working in technology is that you always will discover new things. The other day I created a blog post: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/listing-all-your-sql-server">Listing all your SQL Server databases ordered by size</a>. Buck Woody replied to me on twitter that this is also built into SSMS. He tweeted the following link: <a href="http://blogs.msdn.com/b/buckwoody/archive/2008/09/02/selecting-columns-to-display-in-ssms.aspx">Selecting Columns to Display in SSMS</a></p>
<p>I decided to check it out. I knew already about the details pane, I use it all the time if I need to script more than one object. I blogged about it here as well: <a href="/index.php/DataMgmt/DBProgramming/scripting-all-jobs-on-sql-server-2005-20">Scripting all jobs on SQL Server 2005/2008 into one file</a></p>
<p>What I did not know is that you can change the columns that are shown. Click on he databases folder in SSMS and press F7, this will bring up the details pane, it looks somewhat like the image below</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails.PNG?mtime=1360507029"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails.PNG?mtime=1360507029" width="926" height="343" /></a></div>
<p>Right click on any of the columns and you will see the following menu</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTailsChoose.PNG?mtime=1360507043"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTailsChoose.PNG?mtime=1360507043" width="247" height="497" /></a></div>
<p>Now I don&#8217;t care for some of the things that are shown by default, I unchecked some of them and checked others. Here is what it looks like now, much better for what I need to see at a glance</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails2.PNG?mtime=1360507051"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails2.PNG?mtime=1360507051" width="860" height="342" /></a></div>
<p>You can sort the results by clicking on a column, click it again and it is sorted in the reversed order<br />
Did you know that if you do CTRL + A, CTRL + C, it copies it as TAB delimited, just paste it into Excel</p>
<p>What about you, what &#8216;new&#8217; things have you discovered in SSMS?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Getting the tables with the most rows from your database</title>
		<link>/index.php/datamgmt/dbprogramming/getting-the-tables-with-the/</link>
		<comments>/index.php/datamgmt/dbprogramming/getting-the-tables-with-the/#respond</comments>
		<pubDate>Fri, 08 Feb 2013 15:50:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/getting-the-tables-with-the/</guid>
		<description><![CDATA[Sometimes you want to quickly see what tables have the most rows in your database. This is especially rue if you inherited a new database and you want to know some stats about this database. Instead of doing a count(*) against every table, I usually just use the sp_spaceused stored procedure. this will run many times faster, usually it is instantaneous.]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see what tables have the most rows in your database. This is especially true if you inherited a new database and you want to know some stats about this database. Instead of doing a count(*) against every table, I usually just use the sp_spaceused stored procedure. this will run many times faster, usually it is instantaneous. </p>
<p>Just be aware of these remarks from Books On Line</p>
<blockquote><p>When you drop or rebuild large indexes, or drop or truncate large tables, the Database Engine defers the actual page deallocations, and their associated locks, until after the transaction commits. Deferred drop operations do not release allocated space immediately. Therefore, the values returned by sp_spaceused immediately after dropping or truncating a large object may not reflect the actual disk space available. </p></blockquote>
<p>You could use updateusage but I don&#8217;t bother, I just want to get a rough count</p>
<p>Here is the query that will give you that</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">rows</span> <span class="kw1">int</span>,reserved <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">data</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,index_size &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,unused &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #loop <span class="br0">&#40;</span>id <span class="kw1">int</span> <span class="kw1">identity</span>, name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #loop
<span class="kw1">SELECT</span> SCHEMA_NAME<span class="br0">&#40;</span>schema_id<span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">'.'</span> <span class="sy0">+</span> name 
<span class="kw1">FROM</span> sys.<span class="me1">tables</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'U'</span>
&nbsp;
&nbsp;
<span class="kw1">SET</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>
<span class="kw1">DECLARE</span> @LoopId <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @MaxID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @cmd <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1100</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @TableName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> @LoopId<span class="sy0">=</span> <span class="nu0">1</span>
<span class="kw1">SELECT</span> @MaxID <span class="sy0">=</span> <span class="kw2">max</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">from</span> #loop
&nbsp;
<span class="kw1">WHILE</span> @LoopId <span class="sy0">&lt;=</span> @MaxID
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> <span class="st0">'insert #temp exec sp_spaceused '</span><span class="st0">''</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @TableName <span class="sy0">=</span> name <span class="kw1">from</span> #loop <span class="kw1">where</span> id <span class="sy0">=</span> @LoopId
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> @cmd <span class="sy0">+</span> @TableName <span class="sy0">+</span> <span class="st0">''</span><span class="st0">''</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">EXEC</span><span class="br0">&#40;</span> @cmd <span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SET</span> @LoopId <span class="sy0">=</span> @LoopId <span class="sy0">+</span> <span class="nu0">1</span>
<span class="kw1">END</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> name, <span class="kw1">rows</span> 
<span class="kw1">FROM</span> #temp
<span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="kw1">rows</span> <span class="kw1">DESC</span>
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #temp, #loop</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #temp (name varchar(100), rows int,reserved varchar(100), data varchar(100),index_size  varchar(100),unused  varchar(100))

CREATE TABLE #loop (id int identity, name varchar(1000))
INSERT #loop
SELECT SCHEMA_NAME(schema_id) +'.' + name 
FROM sys.tables
WHERE type = 'U'


SET NOCOUNT ON
DECLARE @LoopId int
DECLARE @MaxID int
DECLARE @cmd varchar(1100)
DECLARE @TableName varchar(1000)


SELECT @LoopId= 1
SELECT @MaxID = max(id) from #loop

WHILE @LoopId &lt;= @MaxID
BEGIN
	SELECT @cmd = 'insert #temp exec sp_spaceused '''
	SELECT @TableName = name from #loop where id = @LoopId
	SELECT @cmd = @cmd + @TableName + ''''

	EXEC( @cmd )


	SET @LoopId = @LoopId + 1
END


SELECT TOP 10 name, rows 
FROM #temp
ORDER BY rows DESC

DROP TABLE #temp, #loop</pre></div></div>

<p>This post is part of the informational section of SQLCop. I have written the SQL in this way because I want SQLCop to be able to run this against a SQL Server 2000 instance</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/getting-the-tables-with-the/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Listing all your SQL Server databases ordered by size</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/listing-all-your-sql-server/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/listing-all-your-sql-server/#respond</comments>
		<pubDate>Fri, 08 Feb 2013 11:51:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[databases]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>

		<guid isPermaLink="false">/index.php/2013/02/listing-all-your-sql-server/</guid>
		<description><![CDATA[To see all the databases with their size on an instance, you can use sp_helpdb. That works but returns the results in some random order. In my case I see master, model and
msdb followed by a couple of user database, then tempdb and then again some user&#8230;]]></description>
				<content:encoded><![CDATA[<p>To see all the databases with their size on an instance, you can use sp_helpdb. That works but returns the results in some random order. In my case I see master, model and<br />
msdb followed by a couple of user database, then tempdb and then again some user databases. What if I want to get the list returned order by size descending? This is pretty easy if you dump the results into a table and then do the sorting when doing the SELECT query against this table. The one thing you have to do is taking out MB from the db_size column and converting it to something numeric.</p>
<p>Here is what the query looks like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #test <span class="br0">&#40;</span>name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, db_size <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,owner <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,<span class="kw2">db_id</span> <span class="kw1">int</span>,created <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,status <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,compatibility_level <span class="kw1">int</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> #test 
<span class="kw1">EXEC</span> <span class="kw3">sp_helpdb</span>
&nbsp;
<span class="kw1">SELECT</span> name,db_size,owner,<span class="kw2">db_id</span>,created,compatibility_level 
<span class="kw1">FROM</span> #test
<span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">float</span>,<span class="kw2">REPLACE</span><span class="br0">&#40;</span>db_size,<span class="st0">' MB'</span>,<span class="st0">''</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">DESC</span>
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #test </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #test (name varchar(100), db_size varchar(100),owner varchar(100),db_id int,created varchar(100),status varchar(1000),compatibility_level int)
 
INSERT #test 
EXEC sp_helpdb
 
SELECT name,db_size,owner,db_id,created,compatibility_level 
FROM #test
ORDER BY CONVERT(float,REPLACE(db_size,' MB','')) DESC

DROP TABLE #test </pre></div></div>

<p>And here is what you would see</p>
<pre>name		     db_size	owner		db_id	created	    compatibility_level
TestBigger	    988.31 MB	DenisDenis	8	Nov 26 2012	110
TestSmaller	    710.31 MB	DenisDenis	9	Nov 26 2012	110
msdb		     38.00 MB	sa		4	Feb 10 2012	110
master		     18.63 MB	sa		1	Apr  8 2003	110
ReportServer	     12.94 MB	DenisDenis	5	Aug 16 2012	110</pre>
<p>This &#8220;check&#8221; will be part of the informational section of SQLCop</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/listing-all-your-sql-server/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Getting the biggest tables in your SQL Server database</title>
		<link>/index.php/datamgmt/dbprogramming/getting-the-biggest-tables-in/</link>
		<comments>/index.php/datamgmt/dbprogramming/getting-the-biggest-tables-in/#comments</comments>
		<pubDate>Fri, 08 Feb 2013 08:07:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/getting-the-biggest-tables-in/</guid>
		<description><![CDATA[Sometimes you want to quickly see what the biggest tables are in your database. Maybe someone just gave you a brand new database and you want to see which tables take up the most space. I usually use the sp_spaceused stored procedure, it runs quickly and gives me the data that I need. Just be aware of these remarks]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see what the biggest tables are in your database. Maybe someone just gave you a brand new database and you want to see which tables take up the most space. I usually use the sp_spaceused stored procedure, it runs quickly and gives me the data that I need. Just be aware of these remarks</p>
<blockquote><p>When you drop or rebuild large indexes, or drop or truncate large tables, the Database Engine defers the actual page deallocations, and their associated locks, until after the transaction commits. Deferred drop operations do not release allocated space immediately. Therefore, the values returned by sp_spaceused immediately after dropping or truncating a large object may not reflect the actual disk space available. </p></blockquote>
<p>You could use updateusage but I don&#8217;t bother, I just want to get a rough size</p>
<p>Here is the query that will give you the 10 biggest tables in your SQL Server database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">rows</span> <span class="kw1">int</span>,reserved <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">data</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,index_size &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,unused &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #loop <span class="br0">&#40;</span>id <span class="kw1">int</span> <span class="kw1">identity</span>, name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #loop
<span class="kw1">SELECT</span> SCHEMA_NAME<span class="br0">&#40;</span>schema_id<span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">'.'</span> <span class="sy0">+</span> name 
<span class="kw1">FROM</span> sys.<span class="me1">tables</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'U'</span>
&nbsp;
&nbsp;
<span class="kw1">SET</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>
<span class="kw1">DECLARE</span> @LoopId <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @MaxID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @cmd <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1100</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @TableName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> @LoopId<span class="sy0">=</span> <span class="nu0">1</span>
<span class="kw1">SELECT</span> @MaxID <span class="sy0">=</span> <span class="kw2">max</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">from</span> #loop
&nbsp;
<span class="kw1">WHILE</span> @LoopId <span class="sy0">&lt;=</span> @MaxID
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> <span class="st0">'insert #temp exec sp_spaceused '</span><span class="st0">''</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @TableName <span class="sy0">=</span> name <span class="kw1">from</span> #loop <span class="kw1">where</span> id <span class="sy0">=</span> @LoopId
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> @cmd <span class="sy0">+</span> @TableName <span class="sy0">+</span> <span class="st0">''</span><span class="st0">''</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">EXEC</span><span class="br0">&#40;</span> @cmd <span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SET</span> @LoopId <span class="sy0">=</span> @LoopId <span class="sy0">+</span> <span class="nu0">1</span>
<span class="kw1">END</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> #temp
<span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">bigint</span>,<span class="kw2">REPLACE</span><span class="br0">&#40;</span>reserved,<span class="st0">' KB'</span>,<span class="st0">''</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">DESC</span>
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #temp, #loop</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #temp (name varchar(100), rows int,reserved varchar(100), data varchar(100),index_size  varchar(100),unused  varchar(100))

CREATE TABLE #loop (id int identity, name varchar(1000))
INSERT #loop
SELECT SCHEMA_NAME(schema_id) +'.' + name 
FROM sys.tables
WHERE type = 'U'


SET NOCOUNT ON
DECLARE @LoopId int
DECLARE @MaxID int
DECLARE @cmd varchar(1100)
DECLARE @TableName varchar(1000)


SELECT @LoopId= 1
SELECT @MaxID = max(id) from #loop

WHILE @LoopId &lt;= @MaxID
BEGIN
	SELECT @cmd = 'insert #temp exec sp_spaceused '''
	SELECT @TableName = name from #loop where id = @LoopId
	SELECT @cmd = @cmd + @TableName + ''''

	EXEC( @cmd )


	SET @LoopId = @LoopId + 1
END


SELECT TOP 10 * 
FROM #temp
ORDER BY CONVERT(bigint,REPLACE(reserved,' KB','')) DESC

DROP TABLE #temp, #loop</pre></div></div>

<p>This post is part of the informational section of SQLCop, this is why I wrote the code in such a way that you can still run it against a SQL Server 2000 instance.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/getting-the-biggest-tables-in/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>Would you be interested in an information section for SQLCop?</title>
		<link>/index.php/datamgmt/datadesign/would-you-be-interested-in/</link>
		<comments>/index.php/datamgmt/datadesign/would-you-be-interested-in/#comments</comments>
		<pubDate>Mon, 09 Apr 2012 14:30:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[sqlcop]]></category>

		<guid isPermaLink="false">/index.php/2012/04/would-you-be-interested-in/</guid>
		<description><![CDATA[SQLCop detects the following issues right now. What else would you like to see?

Detected issues
        
        Code
        
            Procedures with SP_
            VarChar Size Problems
            Decimal Size Problem
            Undocumented Procedures
            P&#8230;]]></description>
				<content:encoded><![CDATA[<p>George and I were thinking of adding a bunch of new checks/reports to <a href="http://sqlcop.lessthandot.com/">SQLCop</a>. SQLCop detects the following issues right now.</p>
<h2>Code</h2>
<ul>
<li><a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/don-t-start-your-procedures-with-sp_">Procedures with SP_</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/always-include-size-when-using-varchar-n">VarChar Size Problems</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/always-include-precision-and-scale-with">Decimal Size Problem</a></li>
<li><a href="/index.php/DataMgmt/DataDesign/identify-procedures-that-call-sql-server">Undocumented Procedures</a></li>
<li>Procedures without SET NOCOUNT ON</li>
<li>Procedures with SET ROWCOUNT</li>
<li><a href="http://wiki.lessthandot.com/index.php/6_Different_Ways_To_Get_The_Current_Identity_Value">Procedures with @@Identity</a></li>
<li>Procedures with dynamic sql</li>
<li>Procedures using dynamic sql without sp_executesql</li>
</ul>
<h2>Column</h2>
<ul>
<li><a href="/index.php/DataMgmt/DBProgramming/do-not-use-spaces-or-other-invalid-chara">Column Name Problems</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/do-not-use-the-float-data-type">Columns with float data type</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/don-t-use-text-datatype-for-sql-2005-and">Columns with image data type</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/don-t-use-text-datatype-for-sql-2005-and">Tables with text/ntext</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/sql-server-collation-conflicts">Collation Mismatch</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/best-practice-don-t-not-cluster-on-uniqu">UniqueIdentifier with NewId</a></li>
</ul>
<h2>Table/Views</h2>
<ul>
<li><a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/don-t-prefix-your-table-names-with-tbl">Table Prefix</a></li>
<li><a href="/index.php/DataMgmt/DBProgramming/do-not-use-spaces-or-other-invalid-chara">Table Name Problems</a></li>
<li><a href="/index.php/DataMgmt/DataDesign/missing-foreign-key-constraints">Missing Foreign Keys</a></li>
<li>Wide Tables</li>
<li><a href="/index.php/DataMgmt/DBProgramming/best-practice-every-table-should-have-a">Tables without a primary key</a></li>
<li>Empty Tables</li>
<li><a href="/index.php/DataMgmt/DataDesign/create-a-sorted-view-in-sql-server-2005--2008">Views with order by</a></li>
<li>Unnamed Constraints</li>
</ul>
<h2>Indexes</h2>
<ul>
<li><a href="http://wiki.lessthandot.com/index.php/Finding_Fragmentation_Of_An_Index_And_Fixing_It">Fragmented indexes</a></li>
<li><a href="http://www.jasonstrate.com/index.php/2010/06/index-those-foreign-keys/">Missing Foreign Key Indexes</a></li>
<li>Forwarded Records</li>
</ul>
<h2>Configuration</h2>
<ul>
<li><a href="/index.php/DataMgmt/DBProgramming/collation-conflicts-with-temp-tables-and">Database Collation</a></li>
<li>Auto Close</li>
<li>Auto Create</li>
<li>Auto Shrink</li>
<li>Auto Update</li>
<li><a href="http://wiki.lessthandot.com/index.php/Database_compatibilty_level">Compatibility Level</a></li>
<li>Login Language</li>
<li>Old Backups</li>
<li><a href="http://wiki.lessthandot.com/index.php/Fix_Orphaned_Database_Users">Orphaned Users</a></li>
<li><a href="http://www.mssqltips.com/tip.asp?tip=1675">User Aliases</a></li>
<li>Ad Hoc Distributed Queries</li>
<li>CLR</li>
<li>Database and log files on the same physical disk</li>
<li>Database Mail</li>
<li>Deprecated Features</li>
<li>Instant File Initialization</li>
<li>Max Degree of Parallelism</li>
<li>OLE Automation Procedures</li>
<li>Service Account</li>
<li>SMO and DMO</li>
<li>SQL Server Agent Service</li>
<li>xp cmdshell</li>
</ul>
<h2>Health</h2>
<ul>
<li>Buffer cache hit ratio</li>
<li>Page life expectancy</li>
</ul>
<p>I was thinking about adding an informational section to SQLCop and also some additional checks. Leave me a comment if you have other ideas or agree with the ones presented here</p>
<p>Would you like to know the last time DBCC ran successfully against your database?<br />
This code would report that</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #Test<span class="br0">&#40;</span>ParentObject <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>,<span class="kw1">Object</span> <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>,Field &nbsp;<span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>,<span class="kw1">VALUE</span> <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">DECLARE</span> @db <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @db <span class="sy0">=</span> &nbsp;<span class="kw2">db_name</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> #Test
<span class="kw1">EXEC</span><span class="br0">&#40;</span><span class="st0">'DBCC DBINFO ('</span><span class="st0">''</span> <span class="sy0">+</span> @db <span class="sy0">+</span> <span class="st0">''</span><span class="st0">') WITH TABLERESULTS'</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">DISTINCT</span> <span class="kw1">Value</span> <span class="kw1">FROM</span> #Test
<span class="kw1">WHERE</span> field <span class="sy0">=</span> <span class="st0">'dbi_dbccLastKnownGood'</span>
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #Test</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #Test(ParentObject VARCHAR(500),Object VARCHAR(500),Field  VARCHAR(500),VALUE VARCHAR(500))

DECLARE @db VARCHAR(500)
SELECT @db =  db_name()

INSERT #Test
EXEC('DBCC DBINFO (''' + @db + ''') WITH TABLERESULTS')

SELECT DISTINCT Value FROM #Test
WHERE field = 'dbi_dbccLastKnownGood'

DROP TABLE #Test</pre></div></div>

<p>If we add the configuration section would it be beneficial if we added the min and max values for the following</p>
<p>max worker threads<br />
max text repl size (B)<br />
max degree of parallelism<br />
max server memory (MB)<br />
max full-text crawl range</p>
<p>min memory per query (KB)<br />
min server memory (MB)</p>
<p>For example</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> sys.<span class="me1">configurations</span>
<span class="kw1">WHERE</span> name like<span class="br0">&#40;</span> <span class="st0">'max%'</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> sys.<span class="me1">configurations</span>
<span class="kw1">WHERE</span> name like<span class="br0">&#40;</span> <span class="st0">'min%'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM sys.configurations
WHERE name like( 'max%')

SELECT * FROM sys.configurations
WHERE name like( 'min%')</pre></div></div>

<p>What about fillfactor?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> sys.<span class="me1">configurations</span>
<span class="kw1">WHERE</span> name &nbsp;<span class="sy0">=</span> <span class="st0">'fill factor (%)'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM sys.configurations
WHERE name  = 'fill factor (%)'</pre></div></div>

<p>How about the 50 most used stored procedures</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">top</span> <span class="nu0">50</span> <span class="sy0">*</span> <span class="kw1">FROM</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw1">COALESCE</span><span class="br0">&#40;</span><span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span>,<span class="st0">'Ad-Hoc'</span><span class="br0">&#41;</span> <span class="kw1">AS</span> ProcName,execution_count,s2.<span class="me1">objectid</span>,
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1</span> <span class="kw2">SUBSTRING</span><span class="br0">&#40;</span>s2.<span class="kw1">TEXT</span>,statement_start_offset <span class="sy0">/</span> <span class="nu0">2</span><span class="sy0">+</span><span class="nu0">1</span> ,
&nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span> <span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> statement_end_offset <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">THEN</span> <span class="br0">&#40;</span><span class="kw2">LEN</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="kw2">MAX</span><span class="br0">&#41;</span>,s2.<span class="kw1">TEXT</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">*</span> <span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">ELSE</span> statement_end_offset <span class="kw1">END</span><span class="br0">&#41;</span> &nbsp;<span class="sy0">-</span> statement_start_offset<span class="br0">&#41;</span> <span class="sy0">/</span> <span class="nu0">2</span><span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> sql_statement,
&nbsp; &nbsp; &nbsp; &nbsp;last_execution_time
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_query_stats</span> <span class="kw1">AS</span> s1
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>sql_handle<span class="br0">&#41;</span> <span class="kw1">AS</span> s2 <span class="br0">&#41;</span> x
<span class="kw1">WHERE</span> sql_statement <span class="sy0">NOT</span> like <span class="st0">'SELECT * FROM(SELECT coalesce(object_name(s2.objectid)%'</span>
and OBJECTPROPERTYEX<span class="br0">&#40;</span>x.<span class="me1">objectid</span>,<span class="st0">'IsProcedure'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">1</span>
and exists <span class="br0">&#40;</span><span class="kw1">Select</span> <span class="nu0">1</span> <span class="kw1">from</span> sys.<span class="me1">procedures</span> s
<span class="kw1">where</span> s.<span class="me1">is_ms_shipped</span> <span class="sy0">=</span> <span class="nu0">0</span>
and s.<span class="me1">name</span> <span class="sy0">=</span> x.<span class="me1">ProcName</span> <span class="br0">&#41;</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> execution_count <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT top 50 * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid),'Ad-Hoc') AS ProcName,execution_count,s2.objectid,
    (SELECT TOP 1 SUBSTRING(s2.TEXT,statement_start_offset / 2+1 ,
      ( (CASE WHEN statement_end_offset = -1
         THEN (LEN(CONVERT(NVARCHAR(MAX),s2.TEXT)) * 2)
         ELSE statement_end_offset END)  - statement_start_offset) / 2+1)) AS sql_statement,
       last_execution_time
FROM sys.dm_exec_query_stats AS s1
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2 ) x
WHERE sql_statement NOT like 'SELECT * FROM(SELECT coalesce(object_name(s2.objectid)%'
and OBJECTPROPERTYEX(x.objectid,'IsProcedure') = 1
and exists (Select 1 from sys.procedures s
where s.is_ms_shipped = 0
and s.name = x.ProcName )
ORDER BY execution_count DESC</pre></div></div>

<p>How about stored procedures with the highest average CPU time</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">top</span> <span class="nu0">50</span> <span class="sy0">*</span> <span class="kw1">FROM</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw1">COALESCE</span><span class="br0">&#40;</span><span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span>,<span class="st0">'Ad-Hoc'</span><span class="br0">&#41;</span> <span class="kw1">AS</span> ProcName,execution_count,s2.<span class="me1">objectid</span>,
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1</span> <span class="kw2">SUBSTRING</span><span class="br0">&#40;</span>s2.<span class="kw1">TEXT</span>,statement_start_offset <span class="sy0">/</span> <span class="nu0">2</span><span class="sy0">+</span><span class="nu0">1</span> ,
&nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span> <span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> statement_end_offset <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">THEN</span> <span class="br0">&#40;</span><span class="kw2">LEN</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="kw2">MAX</span><span class="br0">&#41;</span>,s2.<span class="kw1">TEXT</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">*</span> <span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">ELSE</span> statement_end_offset <span class="kw1">END</span><span class="br0">&#41;</span> &nbsp;<span class="sy0">-</span> statement_start_offset<span class="br0">&#41;</span> <span class="sy0">/</span> <span class="nu0">2</span><span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> sql_statement,
&nbsp; &nbsp; &nbsp; &nbsp;s1.<span class="me1">total_worker_time</span><span class="sy0">/</span>s1.<span class="me1">execution_count</span> <span class="kw1">as</span> AverageCPUTime
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_query_stats</span> <span class="kw1">AS</span> s1
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>sql_handle<span class="br0">&#41;</span> <span class="kw1">AS</span> s2 <span class="br0">&#41;</span> x
<span class="kw1">WHERE</span> sql_statement <span class="sy0">NOT</span> like <span class="st0">'SELECT * FROM(SELECT coalesce(object_name(s2.objectid)%'</span>
and OBJECTPROPERTYEX<span class="br0">&#40;</span>x.<span class="me1">objectid</span>,<span class="st0">'IsProcedure'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">1</span>
and exists <span class="br0">&#40;</span><span class="kw1">Select</span> <span class="nu0">1</span> <span class="kw1">from</span> sys.<span class="me1">procedures</span> s
<span class="kw1">where</span> s.<span class="me1">is_ms_shipped</span> <span class="sy0">=</span> <span class="nu0">0</span>
and s.<span class="me1">name</span> <span class="sy0">=</span> x.<span class="me1">ProcName</span> <span class="br0">&#41;</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> AverageCPUTime <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT top 50 * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid),'Ad-Hoc') AS ProcName,execution_count,s2.objectid,
    (SELECT TOP 1 SUBSTRING(s2.TEXT,statement_start_offset / 2+1 ,
      ( (CASE WHEN statement_end_offset = -1
         THEN (LEN(CONVERT(NVARCHAR(MAX),s2.TEXT)) * 2)
         ELSE statement_end_offset END)  - statement_start_offset) / 2+1)) AS sql_statement,
       s1.total_worker_time/s1.execution_count as AverageCPUTime
FROM sys.dm_exec_query_stats AS s1
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2 ) x
WHERE sql_statement NOT like 'SELECT * FROM(SELECT coalesce(object_name(s2.objectid)%'
and OBJECTPROPERTYEX(x.objectid,'IsProcedure') = 1
and exists (Select 1 from sys.procedures s
where s.is_ms_shipped = 0
and s.name = x.ProcName )
ORDER BY AverageCPUTime DESC</pre></div></div>

<p>Do you want to see all the different programs connected to your server?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw2">Count</span>,program_name 
<span class="kw1">FROM</span> sys.<span class="me1">sysprocesses</span>
<span class="kw1">WHERE</span> status <span class="sy0">&lt;&gt;</span> <span class="st0">'background'</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> program_name
<span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="nu0">1</span> <span class="kw1">desc</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT COUNT(*) Count,program_name 
FROM sys.sysprocesses
WHERE status &lt;&gt; 'background'
GROUP BY program_name
ORDER BY 1 desc</pre></div></div>

<p>This returns something like this on one of my boxes</p>
<pre>42	Microsoft SQL Server Management Studio - Query                                                                                  
40	Microsoft Visual FoxPro                                                                                                         
29	Microsoft SQL Server Management Studio                                                                                          
19	.Net SqlClient Data Provider                                                                                                    
2	Microsoft SQL Server                                                                                                            
1	SQLAgent - Alert Engine                                                                                                         
1	SQLAgent - Generic Refresher                                                                                                    
1	SQLAgent - Job invocation engine</pre>
<p>Do you want to know the file size, space used and free space for all of the files for your database?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span>
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATE</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span>,
&nbsp; &nbsp; a.<span class="me1">FILEID</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>FILE_SIZE_MB<span class="br0">&#93;</span> <span class="sy0">=</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">round</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>SPACE_USED_MB<span class="br0">&#93;</span> <span class="sy0">=</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">round</span><span class="br0">&#40;</span><span class="kw2">fileproperty</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>FREE_SPACE_MB<span class="br0">&#93;</span> <span class="sy0">=</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">round</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">fileproperty</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> ,
&nbsp; &nbsp; NAME <span class="sy0">=</span> <span class="kw1">left</span><span class="br0">&#40;</span>a.<span class="me1">NAME</span>,<span class="nu0">35</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> <span class="kw1">left</span><span class="br0">&#40;</span>a.<span class="me1">FILENAME</span>,<span class="nu0">60</span><span class="br0">&#41;</span>
<span class="kw1">from</span>
&nbsp; &nbsp; dbo.<span class="me1">sysfiles</span> a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select
    CONVERT(DATE,GETDATE()) AS [Date],
    a.FILEID,
    [FILE_SIZE_MB] =
        convert(decimal(12,2),round(a.size/128.000,2)),
    [SPACE_USED_MB] =
        convert(decimal(12,2),round(fileproperty(a.name,'SpaceUsed')/128.000,2)),
    [FREE_SPACE_MB] =
        convert(decimal(12,2),round((a.size-fileproperty(a.name,'SpaceUsed'))/128.000,2)) ,
    NAME = left(a.NAME,35),
    FILENAME = left(a.FILENAME,60)
from
    dbo.sysfiles a</pre></div></div>

<p>Here is what the output would look like</p>
<pre>Date	   FILEID  FILE_SIZE_MB	 SPACE_USED  FREE_SPACE_MB  NAME	FILENAME
2012-04-09	1	1024.00	  1.56	     1022.44	   tempdev	D:MSSQLDatatempdb.mdf
2012-04-09	2	2048.00	  39.72	     2008.28	   templog	D:MSSQLDatatemplog.ldf
2012-04-09	3	1024.00	  0.25	     1023.75	   tempdev1	D:MSSQLDatatempdb1.ndf
2012-04-09	4	1024.00	  0.31	     1023.69	   tempdev2	D:MSSQLDatatempdb2.ndf
2012-04-09	5	1024.00	  0.38	     1023.63	   tempdev3	D:MSSQLDatatempdb3.ndf
2012-04-09	6	1024.00	  0.25	     1023.75	   tempdev4	D:MSSQLDatatempdb4.ndf
2012-04-09	7	1024.00	  0.25	     1023.75	   tempdev5	D:MSSQLDatatempdb5.ndf
2012-04-09	8	1024.00	  0.25	     1023.75	   tempdev6	D:MSSQLDatatempdb6.ndf
2012-04-09	9	1024.00	  0.44	     1023.56	   tempdev7	D:MSSQLDatatempdb7.ndf</pre>
<p>Leave me a comment if you know of anything that you would like to add or if some of this stuff I listed would be useful</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/would-you-be-interested-in/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>SQLCop integration with Red Gate&#8217;s SQL Test</title>
		<link>/index.php/datamgmt/datadesign/sqlcop-integration-with-red-gate/</link>
		<comments>/index.php/datamgmt/datadesign/sqlcop-integration-with-red-gate/#comments</comments>
		<pubDate>Wed, 04 Jan 2012 18:52:00 +0000</pubDate>
		<dc:creator><![CDATA[George Mastros (gmmastros)]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql test]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tsqlt]]></category>

		<guid isPermaLink="false">/index.php/2012/01/sqlcop-integration-with-red-gate/</guid>
		<description><![CDATA[Approximately a year and a half ago, friends of mine and I created SQLCop.  Our motivation was to provide a tool that users can download and run against their database.  This tool is very effective at detecting common problems with database configuratio&#8230;]]></description>
				<content:encoded><![CDATA[<p>Approximately a year and a half ago, friends of mine and I created SQLCop.  Our motivation was to provide a tool that users can download and run against their database.  This tool is very effective at detecting common problems with database configurations and TSQL code.  Not every issue highlighted by SQLCop requires a fix, but you are very likely to discover potential problems that you didn&#8217;t even know you had.</p>
<p>About a year ago, I met Dennis Lloyd, Jr. and Sebastian Meine at a presentation they were giving for tSQLt (<a href="http://tSQLt.org/">a unit testing framework for SQL Server</a>) that they were working on.  I was intrigued because I had always wanted to write unit tests for my tSQL code but hadn’t been able to implement anything because of time constraints on my end.  The tSQLt framework allowed me to forget about the mechanics of implementing and running the tests and allowed me to focus on writing the tests.</p>
<p>Several weeks ago, I was approached by Justin Caldicott at Red Gate Software.  He informed that they had recently released SQL Test which is a SSMS add-in that makes writing and executing tSQLt tests easier.  </p>
<p>Justin was interested in including SQLCop tests within SQL Test.  I downloaded and installed SQLTest.  I was surprised to see that it recognized all of the tests that I had written manually.  I also like how easy it is to run tests and create new ones.  This tool has already saved me time.</p>
<p>I spent a relatively short amount of time re-writing a couple of the SQLCop tests to run within the tSQLt framework.  At this point, there are several tests already written and included with SQL Test (Preview 2).  </p>
<p>If you haven&#8217;t done so already, I encourage you to download and install <a href="http://sqlcop.lessthandot.com/">SQLCop</a>.  I would be extremely surprised if you didn’t find something useful with it.</p>
<p>I also encourage everyone to download and install <a href="http://www.red-gate.com/products/sql-development/sql-test/">SQL Test</a> so that you can see for yourself how easy it is to run unit tests on your database.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sqlcop-integration-with-red-gate/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>SQLCop behind a Proxy</title>
		<link>/index.php/datamgmt/datadesign/sqlcop-and-proxy/</link>
		<comments>/index.php/datamgmt/datadesign/sqlcop-and-proxy/#comments</comments>
		<pubDate>Mon, 18 Oct 2010 21:09:42 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[best practices]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server community]]></category>
		<category><![CDATA[sqlcop]]></category>

		<guid isPermaLink="false">/index.php/2010/10/sqlcop-and-proxy/</guid>
		<description><![CDATA[SQLCop uses an internet connection to ensure that all checks and updates that are added are maintained.  When SQLCop first loads, it checks the SQLCopConfig.xml file to determine if a new SQLCop.xml file needs to be downloaded.  If SQLCop is unable to download the configuration file, it will automatically use the previously saved sqlcop.xml file.  Because of this, a remote file request is always performed when you start up SQLCop.In order to work around this problem with proxy servers there is one of two things you can do to run SQLCop.]]></description>
				<content:encoded><![CDATA[<p>Today my good friend Aaron Lowe (<a href="http://www.aaronlowe.net/">Blog</a> | <a href="http://twitter.com/Vendoran">Twitter</a>) let me know he was having problems getting <a href="http://sqlcop.lessthandot.com/">SQLCop</a> to run.  The error would come up as soon as the executable would be run to do the initial install and run of the program.   Proxy servers lock down internet traffic to the point explicit allowances must be set in order for programs like SQLCop to function.</p>
<p>SQLCop uses an internet connection to ensure that all checks and updates that are added are maintained.  When SQLCop first loads, it checks the SQLCopConfig.xml file to determine if a new SQLCop.xml file needs to be downloaded.  If SQLCop is unable to download the configuration file, it will automatically use the previously saved sqlcop.xml file.  Because of this, a remote file request is always performed when you start up SQLCop.</p>
<p>In order to work around this problem with proxy servers there is one of two things you can do to run SQLCop.</p>
<ol>
<li>Ask the network administrator to add the changes to the proxy</li>
<li>Download two XML files from LessThanDot that are required by SQLCop</li>
</ol>
<blockquote><p>The two files are very lightweight!  So don&#8217;t be scared.  They really won&#8217;t bite.</p>
</blockquote>
<p>The first is the <strong><a href="http://sqlcop.lessthandot.com/sqlcop.xml">SQLCop.xml</a></strong>.  This file holds all of the checks and links to resources that SQLCop uses.  </p>
<p>The second file is the <strong><a href="http://sqlcop.lessthandot.com/sqlcopconfig.xml">SQLCopConfig.xml</a></strong>.  This file holds the version levels of SQLCop which is important to know where the version and update levels SQLCop are at.</p>
<p>Place these two files in the same directory as the SQLCop.exe and SQLCop will run without requiring the check for any updates or pull down new updates to these files.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/sqlcop_programfiles.gif" alt="" title="" width="353" height="167" /></div>
<p>We appreciate everyone&#8217;s feedback on SQLCop and any problems or suggestions that you have are always welcome.  You can post <a href="http://forum.lessthandot.com/viewforum.php?f=145">forum topics on LessThanDot</a> to let us know.  Also, SQLCop and LessThanDot is run and maintained from <a href="http://lessthandot.com/donate.php">donations</a>.  If you can help, we greatly appreciate it.  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sqlcop-and-proxy/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>SQL Server Types &#8211; Numeric vs Int</title>
		<link>/index.php/datamgmt/datadesign/sql-server-types-numeric-vs-int/</link>
		<comments>/index.php/datamgmt/datadesign/sql-server-types-numeric-vs-int/#comments</comments>
		<pubDate>Thu, 02 Sep 2010 12:20:43 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[schema design]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2010/09/sql-server-types-numeric-vs-int/</guid>
		<description><![CDATA[As I was working on a database yesterday I came across a curious sight, multiple columns defined as numeric(7,0), numeric(9,0), and so on. It seemed like someone was trying to provide the database with the most specific definition possible for a number of different pieces of data. Having never run into this particular practice, I immediately started searching for a reason. Was it smaller? faster? better?]]></description>
				<content:encoded><![CDATA[<p>Generally when we are defining tables, the more specific the column definition the better. Yesterday, however, I ran into a case where better definition actually has increased storage use for no appreciable benefit.</p>
<h2>Integers &#8211; Using Numeric vs Int</h2>
<p>As I was working on the database I came across a curious sight, multiple columns defined as numeric(7,0), numeric(9,0), and so on. It seemed like someone was trying to provide the database with the most specific definition possible for a number of different pieces of data. Having never run into this particular practice, I immediately started searching for a reason. Was it smaller? faster? better?</p>
<h3>Storage</h3>
<p>Using a very specific, well-defined numeric has actually cost us storage space, not reduced it.  A numeric (or decimal) with a precision value of 1 to 9 requires 5 bytes and with 10-19 requires 9 bytes. Compare this to the many varieties of int:</p>
<div class="tables">
<table>
<tr>
<th>Digits</th>
<th>Int Variety</th>
<th>Int Bytes</th>
<th>Numeric(*,0) Bytes</th>
<th>Difference</th>
</tr>
<tr>
<td>1 &#8211; 2</td>
<td>tinyint</td>
<td>1</td>
<td>5</td>
<td>4 bytes</td>
</tr>
<tr>
<td>3 &#8211; 4</td>
<td>smallint</td>
<td>2</td>
<td>5</td>
<td>3 bytes</td>
</tr>
<tr>
<td>5 &#8211; 9</td>
<td>int</td>
<td>4</td>
<td>5</td>
<td>1 byte</td>
</tr>
<tr>
<td>10 &#8211; 18</td>
<td>bigint</td>
<td>8</td>
<td>9</td>
<td>1 byte</td>
</tr>
</table>
</div>
<p>So for every row and every index that includes this value, we lose storage space.</p>
<p>References: <a href="http://msdn.microsoft.com/en-us/library/ms187745.aspx" title="Int reference on MSDN">Int reference on MSDN</a> and <a href="http://msdn.microsoft.com/en-us/library/ms187746.aspx" title="Numeric/Decimal reference on MSDN">Numeric/Decimal reference on MSDN</a></p>
<h3>Performance #1</h3>
<p>When SQL Server is asked to execute a math function (+,-,*,/), it uses a defined set of rules to determine the output type, then implicitly converts the arguments to that type (see <a href="http://msdn.microsoft.com/en-us/library/ms190476.aspx" title="Precision, Scale, and Length article on MSDN">this article</a> for a subset that relates to decimals). This means that in many cases there could be implicit conversions to numeric from int, so it&#8217;s possible someone believed we could try and tweak our performance by defining the field as numeric instead of an int. </p>
<p>Let&#8217;s test out implicit conversions:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
</pre></td><td class="de1"><pre class="de1"><span class="coMULTI">/* ****** Creation of some number tables ****** */</span>
<span class="kw1">Create</span> <span class="kw1">Table</span> NumberIntTest<span class="br0">&#40;</span>Num <span class="kw1">Int</span> <span class="kw1">Identity</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="kw1">Primary</span> <span class="kw1">Key</span><span class="br0">&#41;</span>
go
&nbsp;
<span class="kw1">Set</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>
<span class="kw1">Begin</span> <span class="kw1">Tran</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberIntTest <span class="kw1">Default</span> <span class="kw1">Values</span>
<span class="kw1">Commit</span> <span class="kw1">Tran</span>
go <span class="nu0">100000</span>
&nbsp;
<span class="kw1">Create</span> <span class="kw1">Table</span> NumberNumericTest<span class="br0">&#40;</span>Num <span class="kw1">numeric</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">0</span><span class="br0">&#41;</span> <span class="kw1">Primary</span> <span class="kw1">Key</span><span class="br0">&#41;</span>
Go
&nbsp;
<span class="kw1">Set</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>
<span class="kw1">Begin</span> <span class="kw1">Tran</span>
&nbsp; &nbsp; <span class="kw1">Insert</span> <span class="kw1">Into</span> NumberNumericTest<span class="br0">&#40;</span>Num<span class="br0">&#41;</span> <span class="kw1">Select</span> Num <span class="kw1">From</span> NumberIntTest <span class="kw1">WHERE</span> Num <span class="sy0">&gt;</span> <span class="nu0">10001</span>
<span class="kw1">Commit</span> <span class="kw1">Tran</span>
Go
&nbsp;
<span class="coMULTI">/* ****** Execute a variety of test scripts ****** */</span>
<span class="kw1">DECLARE</span> @<span class="kw1">Start</span> <span class="kw1">DateTime</span>;
<span class="kw1">DECLARE</span> @Garbage <span class="kw1">int</span>, @Junk <span class="kw1">numeric</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">0</span><span class="br0">&#41;</span>;
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">Int</span> <span class="kw1">int</span>; <span class="kw1">SET</span> @<span class="kw1">Int</span> <span class="sy0">=</span> <span class="nu0">1</span>;
<span class="kw1">DECLARE</span> @Num <span class="kw1">numeric</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">0</span><span class="br0">&#41;</span>; <span class="kw1">SET</span> @Num <span class="sy0">=</span> <span class="nu0">1</span>;
&nbsp;
<span class="co1">-- Divide an int by an int</span>
<span class="kw1">SELECT</span> @<span class="kw1">start</span> <span class="sy0">=</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
<span class="kw1">SELECT</span> @Garbage <span class="sy0">=</span> Num<span class="sy0">/</span>@<span class="kw1">Int</span> <span class="kw1">FROM</span> NumberIntTest n;
<span class="kw1">SELECT</span> <span class="kw2">DateDiff</span><span class="br0">&#40;</span>Millisecond, @<span class="kw1">Start</span>, <span class="kw2">GetDate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;
&nbsp;
<span class="co1">-- Divide a numeric(7,0) by an int</span>
<span class="kw1">SELECT</span> @<span class="kw1">start</span> <span class="sy0">=</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
<span class="kw1">SELECT</span> @Junk <span class="sy0">=</span> Num<span class="sy0">/</span>@<span class="kw1">Int</span> <span class="kw1">FROM</span> NumberNumericTest n;
<span class="kw1">SELECT</span> <span class="kw2">DateDiff</span><span class="br0">&#40;</span>Millisecond, @<span class="kw1">Start</span>, <span class="kw2">GetDate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;
&nbsp;
<span class="co1">-- Divide a numeric(7,0) by a numeric(7,0)</span>
<span class="kw1">SELECT</span> @<span class="kw1">start</span> <span class="sy0">=</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
<span class="kw1">SELECT</span> @Junk <span class="sy0">=</span> Num<span class="sy0">/</span>@Num <span class="kw1">FROM</span> NumberNumericTest n;
<span class="kw1">SELECT</span> <span class="kw2">DateDiff</span><span class="br0">&#40;</span>Millisecond, @<span class="kw1">Start</span>, <span class="kw2">GetDate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;
&nbsp;
<span class="co1">-- Divide an int by an int w/ explicit casting to numeric</span>
<span class="kw1">SELECT</span> @<span class="kw1">start</span> <span class="sy0">=</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
<span class="kw1">SELECT</span> @Junk <span class="sy0">=</span> Num<span class="sy0">/</span><span class="kw1">CAST</span><span class="br0">&#40;</span>@<span class="kw1">Int</span> <span class="kw1">as</span> <span class="kw1">numeric</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">FROM</span> NumberIntTest n;
<span class="kw1">SELECT</span> <span class="kw2">DateDiff</span><span class="br0">&#40;</span>Millisecond, @<span class="kw1">Start</span>, <span class="kw2">GetDate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;
&nbsp;
<span class="co1">-- Divide an numeric(7,0) by an int w/ explicit casting</span>
<span class="kw1">SELECT</span> @<span class="kw1">start</span> <span class="sy0">=</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
<span class="kw1">SELECT</span> @Junk <span class="sy0">=</span> Num<span class="sy0">/</span><span class="kw1">CAST</span><span class="br0">&#40;</span>@<span class="kw1">Int</span> <span class="kw1">as</span> <span class="kw1">numeric</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">FROM</span> NumberNumericTest n;
<span class="kw1">SELECT</span> <span class="kw2">DateDiff</span><span class="br0">&#40;</span>Millisecond, @<span class="kw1">Start</span>, <span class="kw2">GetDate</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">/* ****** Creation of some number tables ****** */
Create Table NumberIntTest(Num Int Identity(1,1) Primary Key)
go

Set NOCOUNT ON
Begin Tran
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
	Insert Into NumberIntTest Default Values
Commit Tran
go 100000

Create Table NumberNumericTest(Num numeric(7,0) Primary Key)
Go

Set NOCOUNT ON
Begin Tran
	Insert Into NumberNumericTest(Num) Select Num From NumberIntTest WHERE Num &gt; 10001
Commit Tran
Go

/* ****** Execute a variety of test scripts ****** */
DECLARE @Start DateTime;
DECLARE @Garbage int, @Junk numeric(7,0);

DECLARE @Int int; SET @Int = 1;
DECLARE @Num numeric(7,0); SET @Num = 1;

-- Divide an int by an int
SELECT @start = GETDATE();
SELECT @Garbage = Num/@Int FROM NumberIntTest n;
SELECT DateDiff(Millisecond, @Start, GetDate());

-- Divide a numeric(7,0) by an int
SELECT @start = GETDATE();
SELECT @Junk = Num/@Int FROM NumberNumericTest n;
SELECT DateDiff(Millisecond, @Start, GetDate());

-- Divide a numeric(7,0) by a numeric(7,0)
SELECT @start = GETDATE();
SELECT @Junk = Num/@Num FROM NumberNumericTest n;
SELECT DateDiff(Millisecond, @Start, GetDate());

-- Divide an int by an int w/ explicit casting to numeric
SELECT @start = GETDATE();
SELECT @Junk = Num/CAST(@Int as numeric(7,0)) FROM NumberIntTest n;
SELECT DateDiff(Millisecond, @Start, GetDate());

-- Divide an numeric(7,0) by an int w/ explicit casting
SELECT @start = GETDATE();
SELECT @Junk = Num/CAST(@Int as numeric(7,0)) FROM NumberNumericTest n;
SELECT DateDiff(Millisecond, @Start, GetDate());</pre></div></div>

<p>Initially I compared the execution plans and didn&#8217;t see much difference, but after some modifications (thanks George!) and additions we can see the differences between a number of different situations.</p>
<p>Sample Results:</p>
<div class="tables">
<table>
<tr>
<th>Test</th>
<th>time (ms)</th>
</tr>
<tr>
<td>int/int &#8211; No Cast</td>
<td>170</td>
</tr>
<tr>
<td>numeric/int &#8211; Implicit Cast</td>
<td>313</td>
</tr>
<tr>
<td>numeric/numeric &#8211; Implicit Cast</td>
<td>296</td>
</tr>
<tr>
<td>int/CAST(int as numeric) &#8211; Implicit Cast</td>
<td>320</td>
</tr>
<tr>
<td>numeric/CAST(int as numeric)</td>
<td>290</td>
</tr>
</table>
</div>
<p>In the second test&#8217;s plan we can see an example of that implicit cast:</p>
<pre>numeric/int w/ Implicit Cast:

  |--Compute Scalar(DEFINE:([Expr1002]=CONVERT_IMPLICIT(numeric(7,0),[utils].[dbo].[NumberNumericTest].[Num] as [n].[Num]/CONVERT_IMPLICIT(numeric(10,0),[@Int],0),0)))
       |--Clustered Index Scan(OBJECT:([utils].[dbo].[NumberNumericTest].[PK__NumberNu__C7D08B630AD2A005] AS [n]))</pre>
<p>So if we did have an integer that we need to operate on with a float value (the last case), the addition of a simple cast on the integer argument will bring the execution performance in line with having two numerics, meaning there is no gain in storing the value as a numeric(7,0).</p>
<h3>Performance #2</h3>
<p>The other potential performance impact is with auto-parameterization. Auto-parameterization occurs when you provide SQL Server with a non-parameterized SQL statement. The server determines a type for those parameters and parameterizes them (part of the magic that makes plans reusable for non-parameterized queries). I couldn&#8217;t find anything terribly recent, but as far back as SQL Server 6.5 and 7.0 the engine was documented as using the int type for any non-decimal value of 9 digits or less. This means that in the unlikely situation that you&#8217;re executing inline, non-parameterized SQL statements and have used numeric(*,0) types in your table definitions, you will actually be taking a performance hit for the implicit conversion from auto-parameterized integer to the numeric(*,0) field.</p>
<p>And if that wasn&#8217;t bad enough, the same SQL Server documentation says that SQL Server treats integers as more exact than numeric and decimal types. It doesn&#8217;t specify why the document goes out of its way to share this information with us, but generally when someone goes out of their way to point out something like this in a document, I get a little nervous and tend to focus more heavily on their &#8216;recommended&#8217; practice (use int).</p>
<p>More information on <a href="http://msdn.microsoft.com/en-us/library/ms186219.aspx" title="MSDN article on Simple Parameterization">Parameterization</a> and <a href="http://support.microsoft.com/kb/198625" title="KB article on SQL 7 Comparison Optimization">SQL 7 Comparison Optimization</a></p>
<h2>The Wrap-up</h2>
<p>So at the end of the day, using a numeric(*,0) requires more space, provides no appreciable benefit over explicit casting, and can actually harm you if you are executing non-parameterized SQL statements against your server.</p>
<p>There are two options for finding these columns, using a SQL query like the one below or <a href="http://sqlcop.lessthandot.com/" title="Download the SQLCop application">downloading SQLCop</a> to check for this and many other common situations.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE, NUMERIC_PRECISION, NUMERIC_SCALE
<span class="kw1">FROM</span> <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">COLUMNS</span> C
<span class="kw1">WHERE</span> C.<span class="me1">DATA_TYPE</span> <span class="sy0">IN</span> <span class="br0">&#40;</span><span class="st0">'numeric'</span>,<span class="st0">'decimal'</span><span class="br0">&#41;</span> <span class="sy0">AND</span> NUMERIC_SCALE <span class="sy0">=</span> <span class="nu0">0</span> <span class="sy0">AND</span> NUMERIC_PRECISION <span class="sy0">&lt;=</span> <span class="nu0">18</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE, NUMERIC_PRECISION, NUMERIC_SCALE
FROM INFORMATION_SCHEMA.COLUMNS C
WHERE C.DATA_TYPE IN ('numeric','decimal') AND NUMERIC_SCALE = 0 AND NUMERIC_PRECISION &lt;= 18</pre></div></div>

]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sql-server-types-numeric-vs-int/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>
		</item>
		<item>
		<title>SQLCop A Tool To Highlight Potential Problems With Your Database</title>
		<link>/index.php/datamgmt/dbprogramming/sqlcop-a-tool-to-highlight-potential-pro/</link>
		<comments>/index.php/datamgmt/dbprogramming/sqlcop-a-tool-to-highlight-potential-pro/#comments</comments>
		<pubDate>Sun, 25 Jul 2010 16:44:38 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[sqlcop]]></category>

		<guid isPermaLink="false">/index.php/2010/07/sqlcop-a-tool-to-highlight-potential-pro/</guid>
		<description><![CDATA[I wrote a blog post 437 days ago asking you the reader if you would be interested in a FxCop tool for SQL Server. That post can be found here: SQLCop, FxCop For SQL Server, Would You Be Interested in This?. Today I am pleased to announce that the first&#8230;]]></description>
				<content:encoded><![CDATA[<p>I wrote a blog post 437 days ago asking you the reader if you would be interested in a FxCop tool for SQL Server. That post can be found here: <a href="/index.php/DataMgmt/DataDesign/sqlcop-fxcop-for-sql-server-would-you-be">SQLCop, FxCop For SQL Server, Would You Be Interested in This?</a>. Today I am pleased to announce that the first version of this tool is available. The tool is free and will remain free, we will never charge for it.</p>
<p>The tool is only 412 kb to download and no installer is needed. The reason we didn&#8217;t do an add in in SSMS is because we wanted people to be able to run it it by itself. The tool was tested on Windows XP, Vista and Windows 7 (64 and 32 bit)</p>
<p>A big thanks to <a href="/index.php/All/?disp=authdir&amp;author=10">George Mastros</a> for coding this tool, you can also thank him on twitter here: http://twitter.com/gmmastros</p>
<p>The tool will not modify any of your database, it will only check and if it finds issues it will list the objects if possible. It will also show you a blog post or wiki article explaining why something is a problem and how to remedy it.</p>
<p>To run the tool you just download it from the download link at the SQLCop homepage here: http://sqlcop.lessthandot.com/index.php</p>
<p>After that you run the tool, you will get the following login screen.</p>
<p><img src="http://sqlcop.lessthandot.com/screenshots/sqlcop1.png" alt="Login screen" title="Login screen" /></p>
<p>Enter the server name, database name and credentials (or windows authentication)</p>
<p>After that you will see a screen similar to the one on the bottom. From the left side tree menu expand the node that you are interested in. When you click on an item the right part of the screen will show an html page showing you why the issue might be problematic and how to remedy it. Just remember that these issues might not be issues for you, maybe some of these objects are not used anymore but people are scared to drop them because they might break things down the road. So use your best judgement!</p>
<p><img src="http://sqlcop.lessthandot.com/screenshots/sqlcop4.png" alt="Issues" title="Issues" width="650" /></p>
<p>Here is a video of the tool in action so that you can see how it works before you install it<br />
[video:youtube:MCIZDUu2kC4]</p>
<p>More info about this tool can be found here, including where to post questions if you have any problems: http://sqlcop.lessthandot.com/index.php</p>
<p>You can also leave a comment here but we prefer you do it in the <a href="http://forum.lessthandot.com/viewforum.php?f=145">SQLCop help forum</a> because the format is better suited for questions and answers</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sqlcop-a-tool-to-highlight-potential-pro/feed/</wfw:commentRss>
		<slash:comments>17</slash:comments>
		</item>
	</channel>
</rss>
