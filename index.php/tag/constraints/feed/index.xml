<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>constraints &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/constraints/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Advent 2012 Day 8: Foreign Keys</title>
		<link>/index.php/datamgmt/dbprogramming/foreign-keys/</link>
		<comments>/index.php/datamgmt/dbprogramming/foreign-keys/#comments</comments>
		<pubDate>Sat, 08 Dec 2012 15:17:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[data integrity]]></category>
		<category><![CDATA[foreign keys]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/foreign-keys/</guid>
		<description><![CDATA[This is day eight of the SQL Advent 2012 series of blog posts. Today we are going to look at foreign keys

  
That is all for day eight of the SQL Advent 2012 series, come back tomorrow for the next one, you can also check out all the posts from last&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. In yesterday&#8217;s post <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">SQL Advent 2012 Day 7: Lack of constraints</a> we touched a little upon foreign key constraints but today we are going to take a closer look at foreign keys. The two things that we are going to cover are the fact that you don&#8217;t need a primary key in order to define a foreign key relationship, SQL Server by default will not index foreign keys</p>
<h2>You don&#8217;t need a primary key in order to have a foreign key</h2>
<p>Most people will define a foreign key relationship between the foreign key and a primary key. You don&#8217;t have to have a primary key in order to have a foreign key, if you have a unique index or a unique constraint then those can be used as well. Let&#8217;s take a look at what that looks like with some code examples</p>
<p><strong>A foreign key with a unique constraint instead of a primary key</strong><br />
First create a table to which we will add a unique constraint after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueConstraint(id int)
GO</pre></div></div>

<p>Add a unique constraint to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again, this should fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p><em>Msg 2627, Level 14, State 1, Line 2<br />
Violation of UNIQUE KEY constraint &#8216;ix_unique&#8217;. Cannot insert duplicate key in object &#8216;dbo.TestUniqueConstraint&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignConstraint(id int)
GO</pre></div></div>

<p>Add the foreign key to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignConstraint</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignConstraint_TestUniqueConstraint <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueConstraint</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignConstraint ADD CONSTRAINT
	FK_TestForeignConstraint_TestUniqueConstraint FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueConstraint(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(1)
INSERT TestForeignConstraint  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignConstraint_TestUniqueConstraint&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueConstraint&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueConstraint table</p>
<p><strong>A foreign key with a unique index instead of a primary key</strong><br />
This section will be similar to the previous section, the difference is that we will use a unique index instead of a unique constraint</p>
<p>First create a table to which we will add a unique index after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueIndex(id int)
GO</pre></div></div>

<p>Add the unique index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">UNIQUE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> ix_unique <span class="kw1">ON</span> TestUniqueIndex<span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE UNIQUE NONCLUSTERED INDEX ix_unique ON TestUniqueIndex(id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again , this should now fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p><em>Msg 2601, Level 14, State 1, Line 2<br />
Cannot insert duplicate key row in object &#8216;dbo.TestUniqueIndex&#8217; with unique index &#8216;ix_unique&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignIndex(id int)
GO</pre></div></div>

<p>Add the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignIndex</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignIndex_TestUniqueIndex <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueIndex</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignIndex ADD CONSTRAINT
	FK_TestForeignIndex_TestUniqueIndex FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueIndex(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(1)
INSERT TestForeignIndex  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignIndex_TestUniqueIndex&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueIndex&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueIndex table</p>
<p>As you have seen with the code example, you can have a foreign key constraint that will reference a unique index or a unique constraint in addition to be able to reference a primary key</p>
<h2>Foreign keys are not indexed by default</h2>
<p>When you create a primary key, SQL Server will by default make that a clustered index. When you create a foreign key, there is no index created</p>
<p>Scroll up to where we added the unique constraint to the TestUniqueConstraint table, you will see this code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)</pre></div></div>

<p>All we did was add the constraint, SQL Server added the index behind the scenes for us in order to help enforce uniqueness more efficiently</p>
<p>Now run this query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestUniqueIndex'</span>,<span class="st0">'TestUniqueConstraint'</span><span class="br0">&#41;</span>
<span class="sy0">AND</span> name <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestUniqueIndex','TestUniqueConstraint')
AND name IS NOT NULL</pre></div></div>

<p>You will get these results</p>
<pre>TableName	        IndexName	StorageType
---------------------   -----------     --------------
TestUniqueConstraint	ix_unique	NONCLUSTERED
TestUniqueIndex	        ix_unique	NONCLUSTERED</pre>
<p>As you can see both tables have an index</p>
<p>Now let&#8217;s look at what the case is for the foreign key tables. Run the query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestForeignIndex'</span>,<span class="st0">'TestForeignConstraint'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestForeignIndex','TestForeignConstraint')</pre></div></div>

<p>Here are the results for that query</p>
<pre>TableName	      IndexName	StorageType
--------------------- --------- -------------
TestForeignConstraint	NULL	HEAP
TestForeignIndex	NULL	HEAP</pre>
<p>As you can see no indexes have been added to the tables. Should you add indexes? In order to answer that let&#8217;s see what would happen if you did add indexes. Joins would perform faster since it can traverse the index instead of the whole table to find the matching join conditions. Updates and deletes will be faster as well since the index can be used to find the foreign keys rows to update or delete (remember this depends if you specified CASCADE or NO ACTION when you create the foreign key constraint)<br />
So to answer the question, yes, I think you should index the foreign key columns</p>
<p>That is all for day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/foreign-keys/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 7: Lack of constraints</title>
		<link>/index.php/datamgmt/dbprogramming/lack-of-constraints/</link>
		<comments>/index.php/datamgmt/dbprogramming/lack-of-constraints/#comments</comments>
		<pubDate>Fri, 07 Dec 2012 13:20:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[data integrity]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/lack-of-constraints/</guid>
		<description><![CDATA[This is day seven of the SQL Advent 2012 series of blog posts. Today we are going to look at constraints


  
SQL Server supports the following types of constraints: NOT NULL, CHECK, UNIQUE, PRIMARY KEY and FOREIGN KEY. Using constraints is preferred to using DML Triggers, rules, and defaults. The query optimizer will also use constraint definitions to build high-performance query execution plans.]]></description>
				<content:encoded><![CDATA[<p>This is day seven of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. Today we are going to look at constraints</p>
<p><a href="http://www.flickr.com/photos/bjornmeansbear/4727475559/" title="Constraints / Sacrifices by bjornmeansbear, on Flickr"><img src="http://farm2.staticflickr.com/1241/4727475559_881dab57f3_m.jpg" width="240" height="240" alt="Constraints / Sacrifices" /></a></p>
<p>SQL Server supports the following types of constraints: NOT NULL, CHECK, UNIQUE, PRIMARY KEY and FOREIGN KEY. Using constraints is preferred to using DML Triggers, rules, and defaults. The query optimizer will also use constraint definitions to build high-performance query execution plans.</p>
<p>When I interview people, I always ask how you can make sure only values between 0 and 9 are allowed in an integer column. I get a range of different answers to this question, here are some of them:</p>
<ul>
<li>Convert to char(1) and make sure it is numeric</li>
<li>Write logic in the application that will check for this</li>
<li>Use a trigger</li>
<li>Create a primary key table with only the values from 0 till 9 then make this column a foreign key in the table you want to check for this</li>
</ul>
<p>Only 25% of the people will tell you to use something that you can use from within SQL, and only 10% will actually know that this something is called a check constraint, the other ones know that there is something where you can specify some values to be used. </p>
<p>
<h2>Why do we need constraints at all?</h2>
<p>So why do we need constraints? To answer that question, first you have to answer another question: how important is it that the data in your database is correct? I would say that that is most important, after all you can have all the data in the world but if it is wrong it is useless or it might even ending up costing you money. To make sure that you don&#8217;t get invalid data, you use constraints. Constraints work at the database level, it doesn&#8217;t matter if you do the data checking from the app or web front-end, there could be someone modifying the data from SSMS. If you are importing files, constraints will prevent invalid data from making it into the tables.</p>
<p>Constraints don&#8217;t just have to have a range, constraints can handle complex validations. You can have regular expressions in check constraints as well, check out <a href="/index.php/DataMgmt/DBProgramming/sql-server-does-support-regular-expressi">SQL Server does support regular expressions in check constraints, triggers are not always needed</a> for some examples</p>
<p>
<h2>Constraints are faster than triggers</h2>
<p>The reason that check constraints are preferable over triggers is that they are not as expensive as triggers, you also don&#8217;t need an update and an insert trigger, one constraint is enough to handle both updates and inserts.</p>
<p>
<h2>Constraints are making it hard for us to keep our database scripts from blowing up</h2>
<p>This is a common complaint, when you script out the databases and the primary and foreign key tables are not in the correct order you will get errors. Luckily the tools these days are much better than they were 10 years ago. If you do it by hand just make sure that it is all in the correct order. Another complaint is that constraints are wasting developers time, they can&#8217;t just populate the tables at random but have to go in the correct order as well. </p>
<p>
<h2>Some examples of constraints</h2>
<p>Since I like the DRY principle, I won&#8217;t just copy and paste some examples that lready exist in a post I wrote a while back, take a look at this post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/dammit-people-get-to-know">Dammit people, get to know check constraints and use them!</a> to see some examples of check constraints</p>
<p>That is all for day seven of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/lack-of-constraints/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Why (and How) I Model</title>
		<link>/index.php/architect/introductionarchitecturedesign/why-and-how-i-model/</link>
		<comments>/index.php/architect/introductionarchitecturedesign/why-and-how-i-model/#comments</comments>
		<pubDate>Fri, 15 Oct 2010 09:20:39 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Introduction to Architecture and Design]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[modeling]]></category>
		<category><![CDATA[whiteboard]]></category>

		<guid isPermaLink="false">/index.php/2010/10/why-and-how-i-model/</guid>
		<description><![CDATA[Over my years in (and before) IT, I've seen long projects, failed projects, confused projects, wildly successful projects, and even fun projects that ended far differently than we expected. The consistent take-away for me is that I am a big picture type of person, and that understanding that big, abstract picture cuts out a lot of wasted time sprinting down the wrong paths.]]></description>
				<content:encoded><![CDATA[<p>Over my years in (and before) IT, I&#8217;ve seen long projects, failed projects, confused projects, wildly successful projects, and even fun projects that ended far differently than we expected. The consistent take-away for me is that I am a big picture type of person, and that understanding that big, abstract picture cuts out a lot of wasted time sprinting down the wrong paths.</p>
<div style="font-size: .8em; color: #666666; text-align: center;">
<img src="http://tiernok.com/LTDBlog/modeling/sprint.jpg" alt="Don't Sprint Blindly" /><br />
Don&#8217;t Sprint Blindly&#8230;<br />(care of <a href="http://www.dmitriev.com/blog/2009-04-14/wrong-sprint-burndown/">dmitriev.com</a>)
</div>
<p>Creating a model forces me to refine a concept down to it&#8217;s simplest elements, forces me to face the unknowns that my mind has so casually been skipping over. When done well, a model communicates a clear idea and replaces not only the thousands words required to explain it, but the 9000 I would have wasted getting there.</p>
<p>I model to think through processes, question my assumptions, and provide guidance towards a solution. While it probably looks like something I threw together in about ten minutes, there are actually a lot of processes going on behind the scenes.</p>
<h2>Purpose &#8211; What are We Drawing?</h2>
<div style="float: right; font-size: .8em; color: #666666; text-align: center;">
<img src="http://tiernok.com/LTDBlog/modeling/dostuff.jpg" title="Do Stuff!" /><br />
No Goal? Here&#8217;s a Diagram.
</div>
<p>As with all things, a diagram should have a goal. A model that isn&#8217;t trying to communicate an idea is filler for a report no one is going to read anyway. A goal should be concise and limited to a single subject or perspective:</p>
<ul style="margin-left: 1em;">
<li>The data flow from the end customer to our master data system</li>
<li>An order-to-cash business process</li>
<li>The functional architecture of a software application</li>
<li>A graphic representation of our current state</li>
</ul>
<p>Mess around with too many factors and at the end of the day a mess is all you&#8217;ll  have:</p>
<ul style="margin-left: 1em;">
<li>The physical network topology combined with the disaster recovery plan and data flows between the systems</li>
<li>The application architecture with defined user work flows and user experience elements</li>
</ul>
<p>Or to translate: gobbledygook.</p>
<h2>Constraint &#8211; Less is More</h2>
<p>A goal provides me with my first constraint, and constraints are good. Defining constraints will keep my model simpler and consistent, which means the end message will be clearer. At the same time, a well-defined set of constraints will encourage creativity, providing a better end product.</p>
<p>Often my constraints will include things like not allowing connections to cross, only using a very simple set of shapes, restricting myself to only a few shades of color, or setting time limits. I&#8217;ll define the perspective I want to use with my goal, whether it will be a topological map, a flow, or just a set of connected shapes. </p>
<p>This keeps me focused instead of playing with the entire palette of colors, shapes, and page sizes available in my favorite software tools.</p>
<h2>Content &#8211; Work on a Temporary Surface</h2>
<p>Even with constraints and a goal, I still don&#8217;t know exactly where I will end up or what I will learn along the way, so I start on the whiteboard. With a whiteboard I can start diagramming out the pieces I know, add in new items or resolve question marks as I run into them, and easily combine and rearrange my thoughts. Some of my constraints will be ineffective at this stage, but natural constraints (like the number of markers I have and the board size) will replace them in helping my creativity and thought processes.</p>
<p>This stage is also where I figure out my wording. Because it&#8217;s so easy to see the big picture (heh) on my whiteboard, I also get a good feel for when words are too specific, not specific enough, or possibly just not quite the right word for what I am trying to communicate. Instead of focusing on getting all the boxes lined up, I can focus on using clear and consistent terminology that will help support the final model rather than detract from it.</p>
<h2>Medium &#8211; Where is it Going?</h2>
<div style="float: left; font-size: .8em; color: #666666; text-align: center; margin: 2em 1em 1em 1em">
<img src="http://tiernok.com/trent/2004_11_05_04_sm.jpg" title="Content needs context" /><br />
Content needs Context
</div>
<p>As I make the transition from whiteboard to diagramming software, the last piece of the equation is to consider the medium I am going to use to communicate the model. A standalone diagram may put higher priority on further simplicity of shapes and colors, where a presentation model may put lower priority on text and higher priority on subtleties for deeper conversation. </p>
<p>Will there need to be a legend? Is font-size 8 going to be a waste of time or readable font? If I use subtle shades of color will it all print the same color or show up in gloriously rendered imagery on a 12 foot display? Will adding a cartoon get a chuckle in a presentation or a frown in an executive review? Can I include a picture of my cat?</p>
<p>The context the diagram will be communicating in will determine the last set of constraints.</p>
<h2>Terminology &#8211; The Wrong Word Invalidates the Model</h2>
<div style="float: right; font-size: .8em; color: #666666; text-align: center;">
<img src="http://tiernok.com/LTDBlog/modeling/van-venn-diagram.jpg" title="'Van' Diagram" /><br />
Using the right terminology, <br />thanks <a href="http://www.lolcaption.com/random-funny/what-is-a-van-diagram-you-ask-well-let-me-show-you/">lolcaption.com</a>
</div>
<p>General wording may have been roughed in on the whiteboard and some really good words may have been chosen, but these now need to be examined in light of the future medium as well as the audience. In many cases, using a word out of context can distract my audience or even negate the model&#8217;s message entirely.</p>
<p>That being said, endless anxiety over perfection is nowhere near as good as a cool beer at the end of a work day, so we need to strike a balance between working through the night and achieving good enough. So I&#8217;ll be careful, in general, when using customer terminology and try to be pragmatic in my search for the perfect name for the third box from the left.</p>
<h2>Composition &#8211; Additional Layers of Meaning</h2>
<p>The last stage of the model, having transferred it from whiteboard to software and applied corrections to terminology, is to add some depth that supports the initial concept. </p>
<p>Colors, re-arranging layout to alter proximity, fonts, and even line thicknesses are all tools I use to add subtle depth to a model. If I am planning on presenting the model, I can start the discussion on the general message of the model and dive into these subtleties as the discussion progresses. A thicker line between two systems can communicate greater bandwidth or a more secure transport layer. A common shading of colors between multiple objects communicates a relationship or similarity. As with the stages before, I try to use constraint. Applying the whole palette and a different shape for each object may seem fun, but it&#8217;s going to communicate confusion (and possibly a desire for medication).</p>
<p>While working with the composition, I will also create temporary versions to play with drastically different layouts or shapes. This gives me a fresh look at a concept that has undoubtedly been on my whiteboard for days, giving me an opportunity to catch last minute holes or simply provide alternative layout options.</p>
<h2>Sounds Like a Lot of Work&#8230;</h2>
<p>There are different levels of work involved in modeling. In some cases even finding the time to stop doing and try to draw an idea may seem like a waste. </p>
<div style="float: right; font-size: .8em; color: #666666; text-align: center;">
<img src="http://tiernok.com/LTDBlog/modeling/lookbothways.jpg" title="No Need To Look Ahead" /><br />
Not looking ahead?<br />Diagram for that too&#8230;
</div>
<div style="font-size: .8em; margin: 1em;  padding: 1em;">
How do I judge when it is worth spending the time?</p>
<p><strong>5 Minutes:</strong> If it only takes five minutes to draw a fast diagram of what I am intending to do, then that 5 minutes didn&#8217;t cost much and I can move forward with confidence.</p>
<p><strong>30 Minutes:</strong> If it takes 30 minutes, I&#8217;ve erased and redrawn half of it, and the person I am explaining it to is still arguing with me, then it&#8217;s time to draw a model. </p>
<p><strong>3 Hours:</strong> If it takes 3 hours, we end with more questions than we started with, half the questions have the potential for refocusing the project, and we&#8217;re still trying to figure out what to call this thing&#8230;yeah, it&#8217;s definitely time to get a handle on what we&#8217;re spending time on.
</div>
<p>Jumping right into any project when we can&#8217;t draw a high level summary means we&#8217;re spending time and resources on something we can&#8217;t adequately define. It doesn&#8217;t matter how fast we&#8217;re moving if we&#8217;re spending that time running in random directions and ignoring cross-traffic.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/architect/introductionarchitecturedesign/why-and-how-i-model/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
