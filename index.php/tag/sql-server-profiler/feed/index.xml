<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>sql server profiler &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/sql-server-profiler/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Server: Starting a Server-Side Trace</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/starting-a-sql-server-side-trace/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/starting-a-sql-server-side-trace/#comments</comments>
		<pubDate>Fri, 10 Dec 2010 14:17:42 +0000</pubDate>
		<dc:creator><![CDATA[Jes Borland]]></dc:creator>
				<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server profiler]]></category>

		<guid isPermaLink="false">/index.php/2010/12/starting-a-sql-server-side-trace/</guid>
		<description><![CDATA[One of the many performance tuning and troubleshooting tools in the SQL Server DBA toolbelt is Profiler. You pick events you want to see, set up a trace, and watch the events roll by. The problem is that this graphical tool, especially when run from a workstation, can place a heavy load on the server.]]></description>
				<content:encoded><![CDATA[<p>Stop me if you&#8217;ve heard this one&#8230;a programmer walks up to a DBA and says, &#8220;The database is slow.&#8221; </p>
<p>One of the many performance tuning and troubleshooting tools in the SQL Server DBA toolbelt is Profiler. You pick events you want to see, set up a trace, and watch the events roll by. The problem is that this graphical tool, especially when run from a workstation, can place a heavy load on the server. </p>
<p>A better way to perform a trace of events is to run it on the server. I was asked to do this at work last week, and had to say, &#8220;I don&#8217;t know how to do that.&#8221; I learned something new, and I want to share it with you! </p>
<p><b>Setting Up the Trace </b></p>
<p>First, set up the trace using SQL Server Profiler, preferably against a development or test database. (The GUI tool can negatively affect performance, so be careful on production databases.) To do this, in SSMS go to Tools > SQL Server Profiler. Add a trace name, choose to save to a file, and enable file rollover. This last option means that when the max file size is reached, a new file will be created. </p>
<div class="image_block"><img src="/wp-content/uploads/users/grrlgeek/ProfilerPropertiesGeneral.JPG" alt="" title="" width="886" height="641" /></div>
<p>Next, go to Events Selection and check your events. I’ve chosen a standard template for this test. </p>
<div class="image_block"><img src="/wp-content/uploads/users/grrlgeek/ProfilerPropertiesEvents.JPG" alt="" title="" width="888" height="641" /></div>
<p>Click “Run” to begin the trace. I executed a stored procedure in my AdventureWorks database to make sure the trace was capturing data. </p>
<div class="image_block"><img src="/wp-content/uploads/users/grrlgeek/ProfilerRunning.JPG" alt="" title="" width="692" height="565" /></div>
<p><b>Making a Server-Side Trace</b> </p>
<p>Now, I stop the trace and create the script for a server-side trace. In Profiler, go to File > Export > Script Trace Definition > For SQL Server 2005 – 2008 R2. You will be prompted to save the .sql file, and notified when it is saved. </p>
<p>Now, open the .sql file in SQL Server Management Studio. It will look similar to this: </p>
<div class="image_block"><img src="/wp-content/uploads/users/grrlgeek/ProfilerTraceSQL.JPG" alt="" title="" width="786" height="520" /></div>
<p>On line 19, you will need to specify where to save the output files. This might be a location on the server, or a share drive on your network. </p>
<p>Once those settings have been chosen, verify that you are connected to the correct server and Execute. Ta-da! You’ve just started a server-side trace. </p>
<p><b>Stopping the Server-Side Trace </b></p>
<p>Eventually, you will probably want to stop this trace. Collecting an infinite amount of data may sound fun, but there won&#8217;t be any value in it. </p>
<p>First, you’ll need the trace ID. </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> :: <span class="kw4">fn_trace_getinfo</span><span class="br0">&#40;</span><span class="kw1">default</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM :: fn_trace_getinfo(default)</pre></div></div>

<p>Your results might look something like this: </p>
<div class="image_block"><img src="/wp-content/uploads/users/grrlgeek/fn_trace_getinforesults.JPG" alt="" title="" width="428" height="236" /></div>
<p>Traceid is the ID on the server. I currently have two, 1 and 2. Property is the ID of the trace property.<br />
•	1 – Trace Options<br />
•	2 – File Name<br />
•	3 – Max size<br />
•	4 – Stop time (if set)<br />
•	5 – Current trace status. </p>
<p>The status options are:<br />
•	0 – Stopped<br />
•	1 – Running </p>
<p>I determine that the trace I just started has the ID of 2. To stop the trace, I use sp_trace_setstatus. The syntax is </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw3">sp_trace_setstatus</span> traceid, statusid</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">sp_trace_setstatus traceid, statusid</pre></div></div>

<p>The status options are:<br />
•	0 – Stop<br />
•	1 – Start<br />
•	2 – Close and delete definition from server </p>
<p>So, to stop traceid 2, I run this command: </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw3">sp_trace_setstatus</span> <span class="nu0">2</span>, <span class="nu0">0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">sp_trace_setstatus 2, 0</pre></div></div>

<p>I can verify it has been stopped by re-running </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> :: <span class="kw4">fn_trace_getinfo</span><span class="br0">&#40;</span><span class="kw1">default</span><span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM :: fn_trace_getinfo(default) </pre></div></div>

<p>I can then open the .trc file in SQL Server Profiler and examine it for performance issues. </p>
<p>I was pretty excited to learn this. I hope this can help you out too!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/starting-a-sql-server-side-trace/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
	</channel>
</rss>
