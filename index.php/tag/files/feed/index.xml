<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>files &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/files/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>BULK INSERT data where the row terminator is a linefeed in SQL Server</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/bulk-insert-data-where-the/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/bulk-insert-data-where-the/#comments</comments>
		<pubDate>Thu, 14 Feb 2013 13:38:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[bcp]]></category>
		<category><![CDATA[bulk insert]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[import]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/02/bulk-insert-data-where-the/</guid>
		<description><![CDATA[I like to use BULK INSERT or bcp as much as possible, this is especially true if all I need to do is dump the file into a table. For more complex things I will go the SSIS route. Files are generated by all kinds of systems these days, these can be Windo&#8230;]]></description>
				<content:encoded><![CDATA[<p>I like to use BULK INSERT or bcp as much as possible, this is especially true if all I need to do is dump the file into a table. For more complex things I will go the SSIS route. Files are generated by all kinds of systems these days, these can be Windows, *nix, Mac, Amiga and other systems. </p>
<p>Make sure to use something other than notepad when dealing with these files and you want to look at them. Notepad++ or Editplus have more functionality and are many times faster than notepad. The nice thing about either of these is that you can see control characters.</p>
<p>See how you can see the linefeeds here? Can&#8217;t do that in notepad</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/LineFeedFile.PNG?mtime=1360855487"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/LineFeedFile.PNG?mtime=1360855487" width="421" height="223" /></a></div>
<p>So let&#8217;s say you get a file where the row terminator is a linefeed, how would you specify that as a row terminator in BULK INSERT?</p>
<p>You can try newline</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BULK</span> <span class="kw1">INSERT</span> SomeTable
&nbsp; &nbsp;<span class="kw1">FROM</span> <span class="st0">'D:JunkdrawImportMe.txt'</span>
&nbsp; &nbsp;<span class="kw1">WITH</span> <span class="br0">&#40;</span>FIELDTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'t'</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FIRSTROW <span class="sy0">=</span><span class="nu0">2</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROWTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'n'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BULK INSERT SomeTable
   FROM 'D:JunkdrawImportMe.txt'
   WITH (FIELDTERMINATOR = 't',
         FIRSTROW =2,
         ROWTERMINATOR = 'n')</pre></div></div>

<p>Nope, that doesn&#8217;t work, you get 0 rows inserted</p>
<p>You can try carriage return</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BULK</span> <span class="kw1">INSERT</span> SomeTable
&nbsp; &nbsp;<span class="kw1">FROM</span> <span class="st0">'D:JunkdrawImportMe.txt'</span>
&nbsp; &nbsp;<span class="kw1">WITH</span> <span class="br0">&#40;</span>FIELDTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'t'</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FIRSTROW <span class="sy0">=</span><span class="nu0">2</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROWTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'r'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BULK INSERT SomeTable
   FROM 'D:JunkdrawImportMe.txt'
   WITH (FIELDTERMINATOR = 't',
         FIRSTROW =2,
         ROWTERMINATOR = 'r')</pre></div></div>

<p>Nope, that doesn&#8217;t work either, you get 0 rows inserted</p>
<p>What about l for linefeed?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BULK</span> <span class="kw1">INSERT</span> SomeTable
&nbsp; &nbsp;<span class="kw1">FROM</span> <span class="st0">'D:JunkdrawImportMe.txt'</span>
&nbsp; &nbsp;<span class="kw1">WITH</span> <span class="br0">&#40;</span>FIELDTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'t'</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FIRSTROW <span class="sy0">=</span><span class="nu0">2</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROWTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'l'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BULK INSERT SomeTable
   FROM 'D:JunkdrawImportMe.txt'
   WITH (FIELDTERMINATOR = 't',
         FIRSTROW =2,
         ROWTERMINATOR = 'l')</pre></div></div>

<p>You get an error</p>
<p>Msg 4864, Level 16, State 1, Line 1<br />
Bulk load data conversion error (type mismatch or invalid character for the specified codepage) for row 2, column 1 (SomeDate).</p>
<p>What about if you try a CHAR(10) which is a linefeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BULK</span> <span class="kw1">INSERT</span> SomeTable
&nbsp; &nbsp;<span class="kw1">FROM</span> <span class="st0">'D:JunkdrawImportMe.txt'</span>
&nbsp; &nbsp;<span class="kw1">WITH</span> <span class="br0">&#40;</span>FIELDTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="st0">'t'</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FIRSTROW <span class="sy0">=</span><span class="nu0">2</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROWTERM<span class="sy0">IN</span>AT<span class="sy0">OR</span> <span class="sy0">=</span> <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BULK INSERT SomeTable
   FROM 'D:JunkdrawImportMe.txt'
   WITH (FIELDTERMINATOR = 't',
         FIRSTROW =2,
         ROWTERMINATOR = CHAR(10) )</pre></div></div>

<p>You get this error<br />
Msg 102, Level 15, State 1, Line 5<br />
Incorrect syntax near &#8216;CHAR&#8217;.</p>
<p>Mmm, what if you embed it from within Dynamic SQL</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @cmd <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>
<span class="kw1">SET</span> @cmd <span class="sy0">=</span> <span class="st0">'BULK INSERT SomeTable</span>
<span class="st0">FROM '</span><span class="st0">'D:JunkdrawImportMe.txt'</span><span class="st0">'</span>
<span class="st0">WITH ( &nbsp; &nbsp; &nbsp;FIELDTERMINATOR = '</span><span class="st0">'t'</span><span class="st0">',</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FIRSTROW =2,</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROWTERMINATOR = '</span><span class="st0">''</span><span class="sy0">+</span><span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="st0">''</span><span class="st0">')'</span>
<span class="kw1">EXEC</span><span class="br0">&#40;</span>@cmd<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @cmd varchar(1000)
SET @cmd = 'BULK INSERT SomeTable
FROM ''D:JunkdrawImportMe.txt''
WITH (      FIELDTERMINATOR = ''t'',
            FIRSTROW =2,
            ROWTERMINATOR = '''+CHAR(10)+''')'
EXEC(@cmd)</pre></div></div>

<p>Bingo, that works.  Keep this in mind next time you get a file with a linefeed and you are struggling importing that file</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/bulk-insert-data-where-the/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
		</item>
		<item>
		<title>Umm&#8230;.No&#8230;that is not how you export a table into a file with SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/umm-no-that-is-not/</link>
		<comments>/index.php/datamgmt/dbprogramming/umm-no-that-is-not/#comments</comments>
		<pubDate>Thu, 31 Jan 2013 22:28:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[export]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/01/umm-no-that-is-not/</guid>
		<description><![CDATA[Sometimes the creativity of the human species is truly amazing. Someone needed to export a table into a file from within SQL Server. Now there are several ways to do this like bcp, export wizard, Query..Results To File, SSIS etc etc. Today I noticed som&#8230;]]></description>
				<content:encoded><![CDATA[<p>Sometimes the creativity of the human species is truly amazing. Someone needed to export a table into a file from within SQL Server. Now there are several ways to do this like bcp, export wizard, Query..Results To File, SSIS etc etc. Today I noticed someone found yet another way&#8230;.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/UmmNo.PNG?mtime=1359677914"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/UmmNo.PNG?mtime=1359677914" width="304" height="409" /></a></div>
<p>This person decided to use a SQL Agent job to create the file. That is still not strange but here comes the interesting part&#8230;</p>
<p>Here is what the person did, first a job was added with a query.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJob.PNG?mtime=1359678193"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJob.PNG?mtime=1359678193" width="684" height="614" /></a></div>
<p>Then in the Advanced part of the step an output file was chosen</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobAdvanced.PNG?mtime=1359678202"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobAdvanced.PNG?mtime=1359678202" width="512" height="443" /></a></div>
<p>This of course will create the file, however there will be some output in the from the job itself</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobOutput.PNG?mtime=1359678223"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobOutput.PNG?mtime=1359678223" width="666" height="292" /></a></div>
<p>The only reason I found out about this was because I was asked how to skip the &#8216;header&#8217; in SQL Server. After a good deal of puzzlement looking at this creative &#8216;solution&#8217; I told the person how to use bcp instead</p>
<p>Any crazy stories from the trenches you want to share in the comments?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/umm-no-that-is-not/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 1: Sizing database files</title>
		<link>/index.php/datamgmt/dbprogramming/sizing-database-files/</link>
		<comments>/index.php/datamgmt/dbprogramming/sizing-database-files/#comments</comments>
		<pubDate>Sat, 01 Dec 2012 08:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[filegroups]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[log]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[tempdb]]></category>

		<guid isPermaLink="false">/index.php/2012/12/sizing-database-files/</guid>
		<description><![CDATA[This post shows how having a database that is not correctly sized will impact performance]]></description>
				<content:encoded><![CDATA[<p>This post will demonstrate that there is a difference in performance if you don&#8217;t size your database file accordingly. It is a good practice to have your database sized correctly for the next 6 to 12 months, you don&#8217;t want your server wasting cycles with growing files all the time. Figure out how big your files are now, figure out how much they will grow in the next year and size your files accordingly, check back every month or so to see if your estimates were correct. </p>
<p>By default SQL Server will create databases wilt very small files when you create a database and you don&#8217;t specify the sizes. If you have people creating databases on your servers, consider adding a DDL trigger to notify you when a new DB is added so that you can talk to the database creator and size the files. You also can change the defaults on the server so that you don&#8217;t have the 10% growth either.</p>
<p>First let&#8217;s see what the difference is when we have a database where the files will have to grow versus one where the files are big enough for the data that will be inserted.</p>
<p>Here we are creating two databases, one with much bigger files than the other one</p>
<p>This DB is correctly sized for the data that will be inserted</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestBigger<span class="br0">&#93;</span>
&nbsp;<span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestBigger'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'f:TempTestBigger.mdf'</span> , 
<span class="kw1">SIZE</span> <span class="sy0">=</span> 509600KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestBigger_log'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'f:TempTestBigger_log.ldf'</span> , 
<span class="kw1">SIZE</span> <span class="sy0">=</span> 502400KB , FILEGROWTH <span class="sy0">=</span> <span class="nu0">10</span><span class="sy0">%</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE [TestBigger]
 ON  PRIMARY 
( NAME = N'TestBigger', FILENAME = N'f:TempTestBigger.mdf' , 
SIZE = 509600KB , FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'TestBigger_log', FILENAME = N'f:TempTestBigger_log.ldf' , 
SIZE = 502400KB , FILEGROWTH = 10%)
GO</pre></div></div>

<p>This database is very small and will have to be expanded many times to accommodate all the data I will be inserting later on</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestSmaller<span class="br0">&#93;</span>
&nbsp;<span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestSmaller'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'f:TempTestSmaller.mdf'</span> , 
<span class="kw1">SIZE</span> <span class="sy0">=</span> 1280KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestSmaller_log'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'f:TempTestSmaller_log.ldf'</span> , 
<span class="kw1">SIZE</span> <span class="sy0">=</span> 504KB , FILEGROWTH <span class="sy0">=</span> <span class="nu0">10</span><span class="sy0">%</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE [TestSmaller]
 ON  PRIMARY 
( NAME = N'TestSmaller', FILENAME = N'f:TempTestSmaller.mdf' , 
SIZE = 1280KB , FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'TestSmaller_log', FILENAME = N'f:TempTestSmaller_log.ldf' , 
SIZE = 504KB , FILEGROWTH = 10%)
GO</pre></div></div>

<p>[edit]<br />
<em>On sql server 2012, you might need to make the size of the &#8216;TestSmaller file larger</p>
<p>If you get an error like the following</p>
<p>Msg 1803, Level 16, State 1, Line 1<br />
The CREATE DATABASE statement failed. The primary file must be at least 4 MB to accommodate a copy of the model database.</p>
<p>Make the size of the primary file bigger, change the bold part from 1280KB to  5280KB or bigger if you still get the error</p>
<p> NAME = N&#8217;TestSmaller&#8217;, FILENAME = N&#8217;f:TempTestSmaller.mdf&#8217; ,<br />
SIZE = <strong>1280KB</strong> , FILEGROWTH = 1024KB</em></p>
<p>[/edit]<br />
These two stored proc calls are just to verify that the files match with what we specified, you can use sp_helpdb to check the size of a database that you created when you don&#8217;t specify the file sizes</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_helpdb</span> <span class="st0">'TestBigger'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_helpdb 'TestBigger'</pre></div></div>

<pre>name	        filename	            filegroup	SIZE
TestBigger	f:TempTestBigger.mdf	     PRIMARY	509632 KB
TestBigger_log	f:TempTestBigger_log.ldf	NULL	502400 KB</pre>
<p></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_helpdb</span> <span class="st0">'TestSmaller'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_helpdb 'TestSmaller'</pre></div></div>

<pre>name	        filename	             filegroup	SIZE
TestSmaller	f:TempTestSmaller.mdf	     PRIMARY	1280 KB
TestSmaller_log	f:TempTestSmaller_log.ldf	NULL	 512 KB</pre>
<p>
Next, we are creating two identical tables, one in each database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestSmaller
GO
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> test <span class="br0">&#40;</span>SomeName <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, SomeID <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">36</span><span class="br0">&#41;</span>, SomeOtherID <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, SomeDate <span class="kw1">DATETIME</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestSmaller
GO
CREATE TABLE test (SomeName VARCHAR(100), SomeID VARCHAR(36), SomeOtherID VARCHAR(100), SomeDate DATETIME)</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestBigger
GO
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> test <span class="br0">&#40;</span>SomeName <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, SomeID <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">36</span><span class="br0">&#41;</span>, SomeOtherID <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, SomeDate <span class="kw1">DATETIME</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestBigger
GO
CREATE TABLE test (SomeName VARCHAR(100), SomeID VARCHAR(36), SomeOtherID VARCHAR(100), SomeDate DATETIME)</pre></div></div>

<p>This query is just used so that the data is cached for the two inserts later on, this way the data doesn&#8217;t have to be fatched from disk for either inserts, you can discard the results after the query is done</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master
GO
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1000000</span> c1.<span class="me1">name</span>,NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>,NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span> c1
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c2
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c3
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c4</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master
GO


SELECT TOP 1000000 c1.name,NEWID(),NEWID(),GETDATE() 
FROM sys.sysobjects c1
CROSS JOIN sys.sysobjects c2
CROSS JOIN sys.sysobjects c3
CROSS JOIN sys.sysobjects c4</pre></div></div>

<p>Here is the first insert into the bigger database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestBigger.<span class="me1">dbo</span>.<span class="me1">test</span>
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1000000</span> c1.<span class="me1">name</span>,NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>,NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span> c1
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c2
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c3
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c4</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestBigger.dbo.test
SELECT TOP 1000000 c1.name,NEWID(),NEWID(),GETDATE() 
FROM sys.sysobjects c1
CROSS JOIN sys.sysobjects c2
CROSS JOIN sys.sysobjects c3
CROSS JOIN sys.sysobjects c4</pre></div></div>

<p>Here is the second insert into the smaller database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestSmaller.<span class="me1">dbo</span>.<span class="me1">test</span>
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1000000</span> c1.<span class="me1">name</span>,NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>,NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span> c1
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c2
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c3
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> c4</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestSmaller.dbo.test
SELECT TOP 1000000 c1.name,NEWID(),NEWID(),GETDATE() 
FROM sys.sysobjects c1
CROSS JOIN sys.sysobjects c2
CROSS JOIN sys.sysobjects c3
CROSS JOIN sys.sysobjects c4</pre></div></div>

<p>On several machines I tested on, it takes half the time or less to insert the data in the bigger database compared to the smaller database. How about on your machine, do you see that the insert into the bigger database takes less than half the time it takes to insert into the smaller database?</p>
<p>Check the sizes of the databases again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> <span class="kw3">sp_helpdb</span> <span class="st0">'TestBigger'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec sp_helpdb 'TestBigger'</pre></div></div>

<pre>name	        filename	           filegroup	size
TestBigger	f:TempTestBigger.mdf	     PRIMARY	509632 KB
TestBigger_log	f:TempTestBigger_log.ldf	NULL	502400 KB</pre>
<p></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> <span class="kw3">sp_helpdb</span> <span class="st0">'TestSmaller'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec sp_helpdb 'TestSmaller'</pre></div></div>

<pre>name	        filename	             filegroup	size
TestSmaller	f:TempTestSmaller.mdf	     PRIMARY	215296 KB
TestSmaller_log	f:TempTestSmaller_log.ldf	NULL	427392 KB</pre>
<p>
As you can see, the bigger database did not expand, the smaller database expanded a lot.</p>
<p><strong>Autogrow</strong><br />
If you do use autogrow, then make sure you don&#8217;t use the default 10%, take a look at this message</p>
<blockquote><p>Date		11/30/2012 12:57:56 PM<br />
Log		SQL Server (Current &#8211; 11/25/2012 5:00:00 AM)</p>
<p>Source		spid62</p>
<p>Message<br />
Autogrow of file &#8216;MyDB_Log&#8217; in database &#8216;MyDB&#8217; took 104381 milliseconds.  Consider using ALTER DATABASE to set a smaller FILEGROWTH for this file.</p></blockquote>
<p>See that, it took a long time, you don&#8217;t want to grow a one terabyte file by ten percent, that would be one hundred gigabytes, that is huge. Use something smaller and don&#8217;t use percent, the bigger the file gets the longer it will take to expand the file.</p>
<p><strong>File placement</strong><br />
Separate the log files from the data files by placing them on separate hard drives. Placing the files on separate drives allows I/O activity to occur at the same time for both the data and log files. Instead of having huge files consider having smaller files in separate filegroups. Put different tables used in the same join queries in different filegroups as well. This will improve performance, because of parallel disk I/O searching for joined data.</p>
<p>Put heavily accessed tables and the nonclustered indexes that belong to those tables on different filegroups. This will improve performance, because of parallel I/O if the files are located on different physical disks. Just remember that you can&#8217;t separate the clustered indexes from the base table, you can only do this for non clustered indexes. Of course people can get very creative, I have worked with a database once where each table was placed in its own filegroups, there were hundreds of files&#8230;.what a mess</p>
<p><strong>Tempdb</strong><br />
There are all kinds of recommendations about how many data files you should have for tempdb. Start with 4 files and add more files if you see contention. Paul Randal, has a detailed post here: <a href="http://www.sqlskills.com/blogs/paul/post/A-SQL-Server-DBA-myth-a-day-(1230)-tempdb-should-always-have-one-data-file-per-processor-core.aspx">A SQL Server DBA myth a day: (12/30) tempdb should always have one data file per processor core</a>.<br />
If you can, place tempdb on its own physical drive as well, separated from the user databases.</p>
<p><strong>Test, test, test</strong><br />
Never ever blindly follow what you read on the internet, make sure that you test it out first on a QA server before promoting the changes to production!!</p>
<p>That is all for day one of the SQL Advent 2012 series, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sizing-database-files/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Location of files for new database in SQL Server</title>
		<link>/index.php/datamgmt/datadesign/location-of-files-for-new/</link>
		<comments>/index.php/datamgmt/datadesign/location-of-files-for-new/#respond</comments>
		<pubDate>Thu, 17 Nov 2011 22:51:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[data files]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[log files]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2011/11/location-of-files-for-new/</guid>
		<description><![CDATA[The following question was asked

I've got a sql server that's set up to have database files to default to e drive, but the model's files are on c. will new database pick up the setting from the server and put them on e, or will they pick it up from t&#8230;]]></description>
				<content:encoded><![CDATA[<p>The following <a href="http://forum.lessthandot.com/viewtopic.php?f=22&amp;t=15783">question</a> was asked</p>
<blockquote><p>I&#8217;ve got a sql server that&#8217;s set up to have database files to default to e drive, but the model&#8217;s files are on c. will new database pick up the setting from the server and put them on e, or will they pick it up from the model and put them on c?</p></blockquote>
<p>What SQL Server does is that it will pick up the settings from the server settings. We can easily verify that by running some scripts</p>
<p>To check where model has its path, you can run the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> master..<span class="me1">sysaltfiles</span>
<span class="kw1">where</span> <span class="kw2">db_name</span><span class="br0">&#40;</span>dbid<span class="br0">&#41;</span> <span class="sy0">=</span><span class="st0">'model'</span>
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from master..sysaltfiles
where db_name(dbid) ='model'
go</pre></div></div>

<p>On my laptop, the location for the files is as follows<br />
C:Program FilesMicrosoft SQL ServerMSSQL11.MSSQLSERVERMSSQLDATAmodel.mdf<br />
C:Program FilesMicrosoft SQL ServerMSSQL11.MSSQLSERVERMSSQLDATAmodellog.ldf</p>
<p>If I now create a new database like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">database</span> TestMeNow
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create database TestMeNow
GO</pre></div></div>

<p>And if I now check for the location</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> master..<span class="me1">sysaltfiles</span>
<span class="kw1">where</span> <span class="kw2">db_name</span><span class="br0">&#40;</span>dbid<span class="br0">&#41;</span> <span class="sy0">=</span><span class="st0">'TestMeNow'</span>
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from master..sysaltfiles
where db_name(dbid) ='TestMeNow'
go</pre></div></div>

<p>I can see that it is the same as for model</p>
<p>C:Program FilesMicrosoft SQL ServerMSSQL11.MSSQLSERVERMSSQLDATATestMeNow.mdf<br />
C:Program FilesMicrosoft SQL ServerMSSQL11.MSSQLSERVERMSSQLDATATestMeNow_log.ldf</p>
<p>Now, let&#8217;s change it at the server level, this code below will make the default for data files on D:Data and log files on D:Log</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>master<span class="br0">&#93;</span>
GO
<span class="kw1">EXEC</span> xp_instance_regwrite N<span class="st0">'HKEY_LOCAL_MACHINE'</span>, N<span class="st0">'SoftwareMicrosoftMSSQLServerMSSQLServer'</span>, N<span class="st0">'DefaultData'</span>, REG_SZ, N<span class="st0">'D:Data'</span>
GO
<span class="kw1">EXEC</span> xp_instance_regwrite N<span class="st0">'HKEY_LOCAL_MACHINE'</span>, N<span class="st0">'SoftwareMicrosoftMSSQLServerMSSQLServer'</span>, N<span class="st0">'DefaultLog'</span>, REG_SZ, N<span class="st0">'D:Log'</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [master]
GO
EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'SoftwareMicrosoftMSSQLServerMSSQLServer', N'DefaultData', REG_SZ, N'D:Data'
GO
EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'SoftwareMicrosoftMSSQLServerMSSQLServer', N'DefaultLog', REG_SZ, N'D:Log'
GO</pre></div></div>

<p>Or you can do it by right clicking on the server &#8211;> properties &#8211;> Database Settings if you are not as comfortable running SQL. Here is what it looks like<br />
<a href="http://www.flickr.com/photos/denisgobo/6355955641/" title="DBSettings "><img src="http://farm7.static.flickr.com/6043/6355955641_8d0daa2731_b.jpg" width="704" height="632" alt="DBSettings" /></a></p>
<p>Now restart the SQL Server instance for the changes to take effect<br />
Create a new database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">database</span> TestMeNow3
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create database TestMeNow3
GO</pre></div></div>

<p>Now if you check, you will see that it placed the files in the location we have specified in the server settings</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> master..<span class="me1">sysaltfiles</span>
<span class="kw1">where</span> <span class="kw2">db_name</span><span class="br0">&#40;</span>dbid<span class="br0">&#41;</span> <span class="sy0">=</span><span class="st0">'TestMeNow3'</span>
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from master..sysaltfiles
where db_name(dbid) ='TestMeNow3'
go</pre></div></div>

<p>Here is where the files are located<br />
D:DataTestMeNow3.mdf<br />
D:LogTestMeNow3_log.ldf</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/location-of-files-for-new/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to move datafiles to a new drive in SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-move-datafiles-to-a-new-drive-in/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-move-datafiles-to-a-new-drive-in/#comments</comments>
		<pubDate>Fri, 17 Dec 2010 15:18:32 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/12/how-to-move-datafiles-to-a-new-drive-in/</guid>
		<description><![CDATA[For one of the databases that I have to manage we were running out of space, so we got a shiny new 10.9 TB sized drive.  

I was asked to move some files used by one database to this new drive. I decided to write up a little blog post just in case you&#8230;]]></description>
				<content:encoded><![CDATA[<p>For one of the databases that I have to manage we were running out of space, so we got a shiny new 10.9 TB sized drive.</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt/Drive.PNG" alt="" title="" width="359" height="506" /></p>
<p>I was asked to move some files used by one database to this new drive. I decided to write up a little blog post just in case you ever need to do this so that you don&#8217;t backup and restore (with move) because there is another way.</p>
<p>First create this test database with 3 data files and 1 log file, the data files will be in the C:DB_Files directory</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestMove<span class="br0">&#93;</span> <span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DB_FilesTestMove.mdf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>, 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove2'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DB_FilesTestMove2.ndf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>, 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove3'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DB_FilesTestMove3.ndf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove_log'</span>, 
FILENAME <span class="sy0">=</span> N<span class="st0">'C:MSSQLDATATestMove_log.ldf'</span> ,
&nbsp;<span class="kw1">SIZE</span> <span class="sy0">=</span> 1024KB , FILEGROWTH <span class="sy0">=</span> <span class="nu0">10</span><span class="sy0">%</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master
GO

CREATE DATABASE [TestMove] ON  PRIMARY 
( NAME = N'TestMove', FILENAME = N'C:DB_FilesTestMove.mdf' , SIZE = 2048KB , FILEGROWTH = 1024KB ), 
( NAME = N'TestMove2', FILENAME = N'C:DB_FilesTestMove2.ndf' , SIZE = 2048KB , FILEGROWTH = 1024KB ), 
( NAME = N'TestMove3', FILENAME = N'C:DB_FilesTestMove3.ndf' , SIZE = 2048KB , FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'TestMove_log', 
FILENAME = N'C:MSSQLDATATestMove_log.ldf' ,
 SIZE = 1024KB , FILEGROWTH = 10%)
GO</pre></div></div>

<p>Now just create a test table, insert one row and do a simple select.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestMove
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Test<span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span>
GO
<span class="kw1">INSERT</span> Test <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Test</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestMove
GO

CREATE TABLE Test(id INT)
GO
INSERT Test VALUES(1)
GO

SELECT * FROM Test</pre></div></div>

<p>Now instead of having the data files in the C:DB_Files we want to move them to the D:DB_Files directory. You can use ALTER DATABASE&#8230;MODIFY FILE to do that, you just specify the new file locations, just make sure that the directory exists.</p>
<p>The following code will change the location of the data files</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master;
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">MODIFY</span> <span class="kw1">FILE</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; NAME <span class="sy0">=</span> TestMove,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> N<span class="st0">'D:DB_FilesTestMove.mdf'</span>
<span class="br0">&#41;</span>;
GO
&nbsp;
<span class="kw1">USE</span> master;
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">MODIFY</span> <span class="kw1">FILE</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; NAME <span class="sy0">=</span> TestMove2,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> N<span class="st0">'D:DB_FilesTestMove2.ndf'</span>
<span class="br0">&#41;</span>;
GO
&nbsp;
<span class="kw1">USE</span> master;
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">MODIFY</span> <span class="kw1">FILE</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; NAME <span class="sy0">=</span> TestMove3,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> N<span class="st0">'D:DB_FilesTestMove3.ndf'</span>
<span class="br0">&#41;</span>;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master;
GO
ALTER DATABASE TestMove
MODIFY FILE
(
    NAME = TestMove,
    FILENAME = N'D:DB_FilesTestMove.mdf'
);
GO

USE master;
GO
ALTER DATABASE TestMove
MODIFY FILE
(
    NAME = TestMove2,
    FILENAME = N'D:DB_FilesTestMove2.ndf'
);
GO

USE master;
GO
ALTER DATABASE TestMove
MODIFY FILE
(
    NAME = TestMove3,
    FILENAME = N'D:DB_FilesTestMove3.ndf'
);
GO</pre></div></div>

<p>You will see the following message</p>
<blockquote><p>The file &#8220;TestMove&#8221; has been modified in the system catalog. The new path will be used the next time the database is started.<br />
The file &#8220;TestMove2&#8221; has been modified in the system catalog. The new path will be used the next time the database is started.<br />
The file &#8220;TestMove3&#8221; has been modified in the system catalog. The new path will be used the next time the database is started.</p></blockquote>
<p><strong>[EDIT]</strong><br />
Paul Randal mentioned that you don&#8217;t have to shut down SQL Server, you can also just take the database OFFLINE, see here for more detail: http://www.sqlmag.com/blogs/SQLServerQuestionsAnswered/SQLServerQuestionsAnswered/tabid/1977/entryid/72328/A-Safe-Method-for-Moving-a-Database-to-a-New-Location.aspx<br />
<strong>[/EDIT]</strong></p>
<p>Now, the first thing you want to do is stop SQL Server or take the database offline. You can stop SQL Server in a variety of ways, if you want to use the command line (NET STOP), take a look here: <a href="http://wiki.lessthandot.com/index.php/Using_the_Command_Line_to_manage_SQL_Server_services">Using the Command Line to manage SQL Server services</a>. You can also use the SQL Server Configuration manager, services under Control Panel/Administrative Tools or you can use SSMS.</p>
<p>To take the database offline, you can run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">SET</span> OFFL<span class="sy0">IN</span>E;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE TestMove
SET OFFLINE;</pre></div></div>

<p>If you do not stop SQL Server or take the database offline, you won&#8217;t be able to move the files and you will get a message like the one below<br />
<img src="/wp-content/uploads/blogs/DataMgmt/cannotmove.PNG" alt="" title="" width="479" height="303" /><br />
</p>
<p>After SQL Server is stopped, move the files to the new location</p>
<p>In my case, here is where the files are currently C:DB_Files<br />
<img src="/wp-content/uploads/blogs/DataMgmt/beforeMove2.PNG" alt="" title="" width="613" height="451" /></p>
<p>And after the move, this is the location of the files now D:DB_Files<br />
<br />
<img src="/wp-content/uploads/blogs/DataMgmt/afterMove2.PNG" alt="" title="" width="607" height="445" /></p>
<p>Start SQL Server again or make the database online again.</p>
<p>To set the database online, run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">SET</span> ONL<span class="sy0">IN</span>E;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE TestMove
SET ONLINE;</pre></div></div>

<p>After SQL Server is up and running. run the following query.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name, physical_name <span class="kw1">AS</span> CurrentLocation, state_desc
<span class="kw1">FROM</span> sys.<span class="me1">master_files</span>
<span class="kw1">WHERE</span> database_id <span class="sy0">=</span> <span class="kw2">DB_ID</span><span class="br0">&#40;</span>N<span class="st0">'TestMove'</span><span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name, physical_name AS CurrentLocation, state_desc
FROM sys.master_files
WHERE database_id = DB_ID(N'TestMove');</pre></div></div>

<div class="tables">
<p>You should see something like the following</p>
<table>
<tr>
<th>name</th>
<th>	CurrentLocation</th>
<th>	state_desc</th>
</tr>
<tr>
<td>TestMove</td>
<td>D:DB_FilesTestMove.mdf</td>
<td>ONLINE</td>
</tr>
<tr>
<td>TestMove_log</td>
<td>C:MSSQLDATATestMove_log.ldf</td>
<td>ONLINE</td>
</tr>
<tr>
<td>TestMove2</td>
<td>D:DB_FilesTestMove2.ndf</td>
<td>ONLINE</td>
</tr>
<tr>
<td>TestMove3</td>
<td>D:DB_FilesTestMove3.ndf</td>
<td>ONLINE</td>
</tr>
<table></table>
</table>
</div>
<p>Finally, just run this simple query again to verify that you didn&#8217;t corrupt anything</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestMove
GO
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Test</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestMove
GO

SELECT * FROM Test</pre></div></div>

<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-move-datafiles-to-a-new-drive-in/feed/</wfw:commentRss>
		<slash:comments>12</slash:comments>
		</item>
		<item>
		<title>How to copy data/append data into files from within T-SQL</title>
		<link>/index.php/datamgmt/datadesign/how-to-copy-data-append-data-into-files/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-copy-data-append-data-into-files/#respond</comments>
		<pubDate>Mon, 06 Jul 2009 14:17:16 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[bcp]]></category>
		<category><![CDATA[bulk copy]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[openrowset]]></category>

		<guid isPermaLink="false">/index.php/2009/07/how-to-copy-data-append-data-into-files/</guid>
		<description><![CDATA[Sometimes you want to quickly copy some data into a text file or you want append some data to a text file but you don&#8217;t feel like opening BIDS or the DTS designer. Here is a way to accomplish what you want from within a query window To copy data into a new file use [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly copy some data into a text file or you want append some data to a text file but you don&#8217;t feel like opening BIDS or the DTS designer. Here is a way to accomplish what you want from within a query window<br />
To copy data into a new file use BCP (Bulk Copy Program). To append to a file use OPENROWSET</p>
<p>Here is some sample code. First create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="kw1">use</span> tempdb
go
&nbsp;
<span class="kw1">create</span> <span class="kw1">table</span> TestData<span class="br0">&#40;</span>Id <span class="kw1">int</span>, SomeValue <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span>,SomeOtherValue <span class="kw1">Decimal</span><span class="br0">&#40;</span><span class="nu0">6</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
go
&nbsp;
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="st0">'abcdefg1'</span>,<span class="nu0">3.31</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="st0">'abcdefg2'</span>,<span class="nu0">3.32</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span>,<span class="st0">'abcdefg3'</span>,<span class="nu0">3.33</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="st0">'abcdefg4'</span>,<span class="nu0">3.34</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span>,<span class="st0">'abcdefg5'</span>,<span class="nu0">3.35</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">6</span>,<span class="st0">'abcdefg6'</span>,<span class="nu0">3.36</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="st0">'abcdefg7'</span>,<span class="nu0">3.37</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">8</span>,<span class="st0">'abcdefg8'</span>,<span class="nu0">3.38</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">9</span>,<span class="st0">'abcdefg9'</span>,<span class="nu0">3.39</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">10</span>,<span class="st0">'abcdefg10'</span>,<span class="nu0">3.40</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">11</span>,<span class="st0">'abcdefg11'</span>,<span class="nu0">3.41</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="st0">'abcdefg12'</span>,<span class="nu0">3.42</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">use tempdb
go

create table TestData(Id int, SomeValue varchar(20),SomeOtherValue Decimal(6,2))
go

insert TestData values(1,'abcdefg1',3.31)
insert TestData values(2,'abcdefg2',3.32)
insert TestData values(3,'abcdefg3',3.33)
insert TestData values(4,'abcdefg4',3.34)
insert TestData values(5,'abcdefg5',3.35)
insert TestData values(6,'abcdefg6',3.36)
insert TestData values(7,'abcdefg7',3.37)
insert TestData values(8,'abcdefg8',3.38)
insert TestData values(9,'abcdefg9',3.39)
insert TestData values(10,'abcdefg10',3.40)
insert TestData values(11,'abcdefg11',3.41)
insert TestData values(12,'abcdefg12',3.42)</pre></div></div>

<p>Now lets&#8217; first use BCP to copy data into a file. Here is what the command will look like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">master..<span class="me1">xp_cmdshell</span> <span class="st0">'bcp &quot;SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData&quot; queryout C:TestData.txt -t, -c -Slocalhost -T'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">master..xp_cmdshell 'bcp "SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData" queryout C:TestData.txt -t, -c -Slocalhost -T'</pre></div></div>

<p>So what does all this stuff do? </p>
<p><strong>master..xp_cmdshell</strong> Executes a given command string as an operating-system command shell. </p>
<p><strong>bcp  </strong>is the bulk copy program</p>
<p><strong>&#8220;SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData&#8221;</strong> This is our query, CHAR(34) is the ascii code for double qoutes, we are putting double quotes around the character values/</p>
<p><strong>queryout </strong>Specifies the direction of the bulk copy</p>
<p><strong>C:TestData.txt</strong> this is the name of the file that will be created</p>
<p><strong>-t,</strong> Specifies the field terminator. The default is t (tab character). We are using this parameter to override the default field terminator by using a comma instead.</p>
<p><strong>-c</strong> Performs the bulk copy operation using a character data type. This option does not prompt for each field</p>
<p><strong>-Slocalhost</strong> tells bcp where to connect to, in this case localhost.</p>
<p><strong>-T</strong> Specifies that bcp connects to SQL Server with a trusted connection. If you want to use login credentials and you username is SQL2008 and the password = pw2008 then instead of -T you would do this -U&#8221;SQL2008&#8243; -P&#8221;pw2008&#8243;</p>
<p>There are a lot more arguments available for the BCP utility, I recommend checking all the available arguments out here: http://msdn.microsoft.com/en-us/library/ms162802.aspx</p>
<p></p>
<h3>Attention/warning!!</h3>
<p>Here are a couple of warnings for you. </p>
<p><strong>xp_cmdshell</strong><br />
It is not a best practice to have xp_cmdshell enabled. As a matter of fact beginning with SQL Server 2005, the product ships with xp_cmdshell disabled. If you try to run xp_cmdshell you will get the following message if it is not enabled<br />
Server: Msg 15281, Level 16, State 1, Procedure xp_cmdshell, Line 1</p>
<p>SQL Server blocked access to procedure &#8216;sys.xp_cmdshell&#8217; of component &#8216;xp_cmdshell&#8217; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of &#8216;xp_cmdshell&#8217; by using sp_configure. For more information about enabling &#8216;xp_cmdshell&#8217;, see &#8220;Surface Area Configuration&#8221; in SQL Server Books Online.</p>
<p>To enable xp_cmdshell execute the following code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'xp_cmdshell'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE SP_CONFIGURE 'show advanced options', 1
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'xp_cmdshell', '1'
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'show advanced options', 0
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p><strong>OPENROWSET </strong><br />
In SQL Server 2005 and 2008 OPENROWSET is also disabled by default, if you try to run an OPENROWSET query then you will see the following message:</p>
<p>Server: Msg 15281, Level 16, State 1, Line 1<br />
SQL Server blocked access to STATEMENT &#8216;OpenRowset/OpenDatasource&#8217; of component &#8216;Ad Hoc Distributed Queries&#8217; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of &#8216;Ad Hoc Distributed Queries&#8217; by using sp_configure. For more information about enabling &#8216;Ad Hoc Distributed Queries&#8217;, see &#8220;Surface Area Configuration&#8221; in SQL Server Books Online.</p>
<p>To enable OPENROWSET and OPENQUERY you can use the previous script but instead of &#8216;xp_cmdshell&#8217; you will use &#8216;Ad Hoc Distributed Queries&#8217;. The script to enable Ad Hoc Distributed Queries is below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'Ad Hoc Distributed Queries'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE SP_CONFIGURE 'show advanced options', 1
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'Ad Hoc Distributed Queries', '1'
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'show advanced options', 0
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p>Now it is time to execute our query, make sure that everything in the code below is on one line in your query window.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">master..<span class="me1">xp_cmdshell</span> <span class="st0">'bcp &quot;SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData ORDER BY id&quot; queryout C:TestData.txt -t, -c -Slocalhost -T'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">master..xp_cmdshell 'bcp "SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData ORDER BY id" queryout C:TestData.txt -t, -c -Slocalhost -T'</pre></div></div>

<p>You should see the following output</p>
<p><em>NULL<br />
Starting copy&#8230;<br />
NULL<br />
12 rows copied.<br />
Network packet size (bytes): 4096<br />
Clock Time (ms.): total        1<br />
NULL</em></p>
<p>Now we will use OPENROWSET to read the file we just created</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=No;'</span>, <span class="st0">'SELECT * FROM TestData.txt'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=No;', 'SELECT * FROM TestData.txt')</pre></div></div>

<p>If everything is correct and ad-hoc queries are enabled on your instance you should see all the rows we inserted. </p>
<p>Now let&#8217;s append a row to the file</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="nu0">13</span>,<span class="st0">'abcdefg13'</span>,<span class="nu0">3.43</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData.txt')
select 13,'abcdefg13',3.43</pre></div></div>

<p>Running this query below will now return 13 rows</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="nu0">13</span>,<span class="st0">'abcdefg13'</span>,<span class="nu0">3.43</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData.txt')
select 13,'abcdefg13',3.43</pre></div></div>

<p>What if you want to use OPENROWSET to insert into a file that does not exist yet? Let&#8217;s try it out by changing the name to TestData2.txt.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData2.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="nu0">13</span>,<span class="st0">'abcdefg13'</span>,<span class="nu0">3.43</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData2.txt')
select 13,'abcdefg13',3.43</pre></div></div>

<p>And here is our message<br />
<em>Server: Msg 7399, Level 16, State 1, Line 1<br />
OLE DB provider &#8216;Microsoft.Jet.OLEDB.4.0&#8217; reported an error.<br />
[OLE/DB provider returned message: The Microsoft Jet database engine could not find the object &#8216;TestData2.txt&#8217;.  Make sure the object exists and that you spell its name and the path name correctly.]<br />
OLE DB error trace [OLE/DB Provider &#8216;Microsoft.Jet.OLEDB.4.0&#8217; IColumnsInfo::GetColumnsInfo returned 0x80004005:   ].</em></p>
<p>Mmm, what if we create a file from within a shell command?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">master..<span class="me1">xp_cmdshell</span> <span class="st0">'copy nul c:TestData2.txt'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">master..xp_cmdshell 'copy nul c:TestData2.txt'</pre></div></div>

<p><em>1 file(s) copied.<br />
NULL<br />
</em></p>
<p>Now that we created the file, let&#8217;s try again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData2.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> TestData</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData2.txt')
select * from TestData</pre></div></div>

<p><em>Server: Msg 7357, Level 16, State 2, Line 1<br />
Could not process object &#8216;SELECT * FROM TestData2.txt&#8217;. The OLE DB provider &#8216;Microsoft.Jet.OLEDB.4.0&#8242; indicates that the object has no columns.<br />
OLE DB error trace [Non-interface error:  OLE DB provider unable to process object, since the object has no columnsProviderName=&#8217;Microsoft.Jet.OLEDB.4.0&#8242;, Query=SELECT * FROM TestData2.txt&#8217;].</em></p>
<p>As you can see since the file is an empty file JET doesn&#8217;t know how to insert the data</p>
<p>It might be entirely possible to use OPENROWSET to insert into a blank file and if you know how then feel free to leave a comment. But in general to copy data into a file that does not extist yet use bcp and openrowset to append to a file.<br />
If you need do this kind of thing more than once I would recommend to use SSIS (SQL Server Integration Services) or DTS (Data Transformation Services) since it is much more flexible and customizable.</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-copy-data-append-data-into-files/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
