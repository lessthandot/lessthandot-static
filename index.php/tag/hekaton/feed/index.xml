<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>hekaton &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/hekaton/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>List of new programmability features/T-SQL enhancements in SQL Server besides Hekaton</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/list-of-new-programmability-features/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/list-of-new-programmability-features/#comments</comments>
		<pubDate>Tue, 25 Jun 2013 12:46:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[hekaton]]></category>
		<category><![CDATA[sql server 2014]]></category>

		<guid isPermaLink="false">/index.php/2013/06/list-of-new-programmability-features/</guid>
		<description><![CDATA[Here is a nice image of all the cool new programmability features and T-SQL enhancements in SQL Server 2014 CTP1, there are no Hekaton (In memory OLTP) features in this list



What, there is nothing there?  That is right, besides the Hekaton relate&#8230;]]></description>
				<content:encoded><![CDATA[<p>Here is a nice image of all the cool new programmability features and T-SQL enhancements in SQL Server 2014 CTP1, there are no Hekaton (In-memory OLTP) features in this list</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/WhiteImage.PNG?mtime=1372000602"><img alt="This Image Left Intentionally Blank" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/WhiteImage.PNG?mtime=1372000602" width="672" height="254" Title="This Image Left Intentionally Blank" /></a></div>
<p>What, there is nothing there?  That is right, besides the Hekaton related stuff there seems to be almost nothing. Some people seems upset about this, I think we will get new programmability features and T-SQL enhancements in the next SQl Server 2014 CTP. I believe that Microsoft wanted to make sure that people really checked out the Hekaton technology instead of focusing on other things as well</p>
<p>What do you think, are you excited for Hekaton or are you waiting for new programmability features and T-SQL enhancements?</p>
<p>Here is the Books On Line link with ALL the new stuff http://msdn.microsoft.com/en-us/library/bb510411(v=sql.120).aspx</p>
<p>BTW, I do have some posts about SQL Server 2014 CTP1, the small list is below</p>
<p><a href="/index.php/DataMgmt/DBProgramming/sql-server-2014-ctp1-native">SQL Server 2014 CTP1 native compiled Hekaton procedures are faster than regular procedures</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/supported-and-unsupported-datatypes-with">Supported and unsupported datatypes with Hekaton tables</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/new-dynamic-management-views-in">New Dynamic Management Views in SQL Server 2014 CTP1</a><br />
<a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-server-2014-ctp1-available">SQL Server 2014 CTP1 Available for download</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/list-of-new-programmability-features/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Supported and unsupported datatypes with Hekaton tables</title>
		<link>/index.php/datamgmt/dbprogramming/supported-and-unsupported-datatypes-with/</link>
		<comments>/index.php/datamgmt/dbprogramming/supported-and-unsupported-datatypes-with/#respond</comments>
		<pubDate>Tue, 25 Jun 2013 08:01:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[hekaton]]></category>
		<category><![CDATA[sql server 2014]]></category>

		<guid isPermaLink="false">/index.php/2013/06/supported-and-unsupported-datatypes-with/</guid>
		<description><![CDATA[If you are ready to use Hekaton then you need to know that there are some limitations, not all data types are supported. 

The following list contains the set of supported data types in both Hekaton tables and stored procedures:

bit
All integer ty&#8230;]]></description>
				<content:encoded><![CDATA[<p>If you are ready to use Hekaton then you need to know that there are some limitations, not all data types are supported. </p>
<p>The following list contains the set of supported data types in both Hekaton tables and stored procedures:</p>
<p>bit<br />
All integer types: tinyint, smallint, int, bigint<br />
All money types: money, smallmoney<br />
All floating types: float, real<br />
Date/time types: datetime2, date, time, datetime, smalldatetime<br />
numeric and decimal types<br />
All non-LOB string types: char(n), varchar(n), nchar(n),  nvarchar(n), sysname<br />
Non-LOB binary types: binary(n), varbinary(n)<br />
Uniqueidentifier</p>
<p>The data types listed below are unsupported</p>
<p>datetimeoffset<br />
varbinary(max)<br />
varchar(max)<br />
nvarchar(max)<br />
xml<br />
text<br />
image<br />
sql_variant</p>
<p>There is also a limit of 8060 bytes on row size, this includes variable length columns. You cannot create a table with two varchar(5000) columns.</p>
<p>if you try to do the following, you will get an error</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1">&nbsp; &nbsp; <span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>HekaTest<span class="br0">&#93;</span>
<span class="br0">&#40;</span> <span class="br0">&#91;</span>Col1<span class="br0">&#93;</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">5000</span><span class="br0">&#41;</span>, 
&nbsp; <span class="br0">&#91;</span>Col2<span class="br0">&#93;</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, &nbsp;
&nbsp;
&nbsp; <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>HekaTest_PK<span class="br0">&#93;</span> <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">NONCLUSTERED</span> HASH <span class="br0">&#40;</span><span class="br0">&#91;</span>Col1<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">WITH</span><span class="br0">&#40;</span>BUCKET_COUNT <span class="sy0">=</span> <span class="nu0">1000000</span><span class="br0">&#41;</span>
<span class="br0">&#41;</span> <span class="kw1">WITH</span> <span class="br0">&#40;</span>MEM<span class="sy0">OR</span>Y_OPTIMIZED <span class="sy0">=</span> <span class="kw1">ON</span>, 
&nbsp;DURABILITY <span class="sy0">=</span> SCHEMA_<span class="sy0">AND</span>_DATA<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">	CREATE TABLE [dbo].[HekaTest]
( [Col1] varchar(5000), 
  [Col2] varchar(4000) NOT NULL,  

  CONSTRAINT [HekaTest_PK] PRIMARY KEY NONCLUSTERED HASH ([Col1]) WITH(BUCKET_COUNT = 1000000)
) WITH (MEMORY_OPTIMIZED = ON, 
 DURABILITY = SCHEMA_AND_DATA)</pre></div></div>

<p>Here is the error that you get</p>
<p><em>Msg 41307, Level 16, State 1, Line 4<br />
The row size limit of 8060 bytes for memory optimized tables has been exceeded. Please simplify the table definition.</em></p>
<p>Just be aware of these limitations if you are thinking about using Hekaton.  There are also limitations with T-SQL, for example MERGE statement, TRUNCATE statement and identity columns can&#8217;t be used, certain functions can&#8217;t be used either. Make sure to look at the documentation to see what the restrictions are</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/supported-and-unsupported-datatypes-with/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server 2014 CTP1 native compiled Hekaton procedures are faster than regular procedures</title>
		<link>/index.php/datamgmt/dbprogramming/sql-server-2014-ctp1-native/</link>
		<comments>/index.php/datamgmt/dbprogramming/sql-server-2014-ctp1-native/#comments</comments>
		<pubDate>Tue, 25 Jun 2013 08:01:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[hekaton]]></category>
		<category><![CDATA[sql server 2014]]></category>

		<guid isPermaLink="false">/index.php/2013/06/sql-server-2014-ctp1-native/</guid>
		<description><![CDATA[I have been playing around with SQl Server 2014 Hekaton tables and stored procedures. I have noticed that native compiled stored procedures are between 20 and 40% faster than regular stored procedures

If you want to test for yourself, then run the fo&#8230;]]></description>
				<content:encoded><![CDATA[<p>I have been playing around with SQl Server 2014 Hekaton tables and stored procedures. I have noticed that native compiled stored procedures are between 20 and 40% faster than regular stored procedures</p>
<p>If you want to test for yourself, then run the following code<br />
The codeblock below will create a database with a filegroup where we will store Hekaton tables</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> HekatonDB
&nbsp; &nbsp; <span class="kw1">ON</span> 
&nbsp; &nbsp; <span class="kw1">PRIMARY</span><span class="br0">&#40;</span>NAME <span class="sy0">=</span> <span class="br0">&#91;</span>HekatonDB_data<span class="br0">&#93;</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FILENAME <span class="sy0">=</span> <span class="st0">'C:DBTestHekatonDBHekatonDB_data.mdf'</span>, <span class="kw1">size</span><span class="sy0">=</span>500MB<span class="br0">&#41;</span>, 
&nbsp; &nbsp; FILEGROUP <span class="br0">&#91;</span>HekatonDB_fs_fg<span class="br0">&#93;</span> <span class="kw1">CONTAINS</span> MEM<span class="sy0">OR</span>Y_OPTIMIZED_DATA
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span>NAME <span class="sy0">=</span> <span class="br0">&#91;</span>HekatonDB_hk_fs_dir<span class="br0">&#93;</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FILENAME <span class="sy0">=</span> <span class="st0">'C:DBTestHekatonDBHekatonDB_hk_fs_dir'</span><span class="br0">&#41;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw2">LOG</span> <span class="kw1">ON</span> <span class="br0">&#40;</span>name <span class="sy0">=</span> <span class="br0">&#91;</span>HekatonDB_log<span class="br0">&#93;</span>, Filename<span class="sy0">=</span><span class="st0">'C:DBTestHekatonDBHekatonDB_log.ldf'</span>, <span class="kw1">size</span><span class="sy0">=</span>500MB<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">COLLATE</span> Latin1_General_100_B<span class="sy0">IN</span>2;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE HekatonDB
    ON 
    PRIMARY(NAME = [HekatonDB_data], 
			FILENAME = 'C:DBTestHekatonDBHekatonDB_data.mdf', size=500MB), 
    FILEGROUP [HekatonDB_fs_fg] CONTAINS MEMORY_OPTIMIZED_DATA
			(NAME = [HekatonDB_hk_fs_dir], 
			FILENAME = 'C:DBTestHekatonDBHekatonDB_hk_fs_dir')
 
	LOG ON (name = [HekatonDB_log], Filename='C:DBTestHekatonDBHekatonDB_log.ldf', size=500MB)
	COLLATE Latin1_General_100_BIN2;</pre></div></div>

<p>Next, it is time to create the Hekaton table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> HekatonDB
GO
&nbsp;
&nbsp; &nbsp; <span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>StorageTestTable<span class="br0">&#93;</span>
<span class="br0">&#40;</span> <span class="br0">&#91;</span>Col1<span class="br0">&#93;</span> <span class="kw1">int</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, 
&nbsp; <span class="br0">&#91;</span>Col2<span class="br0">&#93;</span> <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, &nbsp;
&nbsp;
&nbsp; <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>StorageTestTable_PK<span class="br0">&#93;</span> <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">NONCLUSTERED</span> HASH <span class="br0">&#40;</span><span class="br0">&#91;</span>Col1<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">WITH</span><span class="br0">&#40;</span>BUCKET_COUNT <span class="sy0">=</span> <span class="nu0">1000000</span><span class="br0">&#41;</span>
<span class="br0">&#41;</span> <span class="kw1">WITH</span> <span class="br0">&#40;</span>MEM<span class="sy0">OR</span>Y_OPTIMIZED <span class="sy0">=</span> <span class="kw1">ON</span>, 
&nbsp;DURABILITY <span class="sy0">=</span> SCHEMA_<span class="sy0">AND</span>_DATA<span class="br0">&#41;</span>
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE HekatonDB
GO

	CREATE TABLE [dbo].[StorageTestTable]
( [Col1] int NOT NULL, 
  [Col2] char(100) NOT NULL,  

  CONSTRAINT [StorageTestTable_PK] PRIMARY KEY NONCLUSTERED HASH ([Col1]) WITH(BUCKET_COUNT = 1000000)
) WITH (MEMORY_OPTIMIZED = ON, 
 DURABILITY = SCHEMA_AND_DATA)
go</pre></div></div>

<p>Lets insert some data, the following inserts 531441 rows in my table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">insert</span> <span class="br0">&#91;</span>StorageTestTable<span class="br0">&#93;</span>
<span class="kw1">select</span> row_number<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">over</span><span class="br0">&#40;</span><span class="kw1">order</span> <span class="kw1">by</span> s1.<span class="me1">name</span><span class="br0">&#41;</span>,<span class="kw2">replicate</span><span class="br0">&#40;</span><span class="st0">'a'</span>,<span class="nu0">100</span><span class="br0">&#41;</span>
<span class="kw1">from</span> sys.<span class="me1">sysobjects</span> s1, sys.<span class="me1">sysobjects</span> s2, sys.<span class="me1">sysobjects</span> s3</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">insert [StorageTestTable]
select row_number() over(order by s1.name),replicate('a',100)
from sys.sysobjects s1, sys.sysobjects s2, sys.sysobjects s3</pre></div></div>

<p>Let&#8217;s see how much memory SQL Server is using for this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> 
memory_allocated_for_table_kb &nbsp; <span class="kw1">AS</span> MemTableAllocKb,
memory_used_by_table_kb &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> MemTableUsedKb,
memory_allocated_for_indexes_kb <span class="kw1">AS</span> MemIndexAllocKb, 
memory_used_by_indexes_kb &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> MemIndexUsedKb
<span class="kw1">FROM</span> sys.<span class="me1">dm_db_xtp_table_memory_stats</span>
<span class="kw1">WHERE</span> <span class="kw2">object_id</span> <span class="sy0">=</span> <span class="kw2">OBJECT_ID</span><span class="br0">&#40;</span><span class="st0">'StorageTestTable'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 
memory_allocated_for_table_kb   AS MemTableAllocKb,
memory_used_by_table_kb         AS MemTableUsedKb,
memory_allocated_for_indexes_kb AS MemIndexAllocKb,	
memory_used_by_indexes_kb       AS MemIndexUsedKb
FROM sys.dm_db_xtp_table_memory_stats
WHERE object_id = OBJECT_ID('StorageTestTable')</pre></div></div>

<p>Here is the output</p>
<pre>MemTableAllocKb	MemTableUsedKb	MemIndexAllocKb	MemIndexUsedKb
76096	        74733	        8192	        8192</pre>
<p>As you can see it is about 75MB for the table and 8MB for the index<br />
<br />
In order to create a native compiled stored procedure you need to do a couple of things different.<br />
Native compiled stored procedures must be schema-bound<br />
Execution context is required<br />
Atomic blocks, create a transaction if there is none, otherwise, create a savepoint<br />
Session settings are fixed at create time</p>
<p>Here is our native compiled stored procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> usp_TestHekatonNative
<span class="kw1">WITH</span> NATIVE_COMPILATION, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">-- native compiled</span>
<span class="kw1">EXECUTE</span> <span class="kw1">AS</span> OWNER, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">-- Execution context</span>
SCHEMAB<span class="sy0">IN</span>D<span class="sy0">IN</span>G &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">-- schema-bound</span>
<span class="kw1">AS</span> 
<span class="kw1">BEGIN</span> ATOMIC <span class="kw1">WITH</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">-- atomic block</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; &nbsp; <span class="kw1">TRANSACTION</span> <span class="kw1">ISOLATION</span> <span class="kw1">LEVEL</span> <span class="sy0">=</span> SNAPSHOT, &nbsp; &nbsp; <span class="co1">-- Session settings</span>
&nbsp; &nbsp; &nbsp; <span class="kw1">LANGUAGE</span> <span class="sy0">=</span> <span class="st0">'english'</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">-- Session settings</span>
<span class="br0">&#41;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span>&nbsp; <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span>&nbsp; &nbsp; dbo.<span class="br0">&#91;</span>StorageTestTable<span class="br0">&#93;</span>
&nbsp;
<span class="kw1">END</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE usp_TestHekatonNative
WITH NATIVE_COMPILATION,                          -- native compiled
EXECUTE AS OWNER,                                 -- Execution context
SCHEMABINDING                                     -- schema-bound
AS 
BEGIN ATOMIC WITH                                 -- atomic block
(
      TRANSACTION ISOLATION LEVEL = SNAPSHOT,     -- Session settings
      LANGUAGE = 'english'                        -- Session settings
)

	SELECT	COUNT(*)
	FROM	dbo.[StorageTestTable]

END
GO</pre></div></div>

<p>And here is our regular stored procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> usp_TestHekatonRegular
<span class="kw1">AS</span> 
&nbsp; &nbsp; <span class="kw1">SELECT</span>&nbsp; <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span>&nbsp; &nbsp; dbo.<span class="br0">&#91;</span>StorageTestTable<span class="br0">&#93;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE usp_TestHekatonRegular
AS 
	SELECT	COUNT(*)
	FROM	dbo.[StorageTestTable]
GO</pre></div></div>

<p>Time to run the tests</p>
<p>Enable time statistics</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SET</span> <span class="kw1">STATISTICS</span> <span class="kw1">TIME</span> <span class="kw1">ON</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SET STATISTICS TIME ON</pre></div></div>

<p>Run these two procs a bunch of times</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> usp_TestHekatonNative</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec usp_TestHekatonNative</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> usp_TestHekatonRegular</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec usp_TestHekatonRegular</pre></div></div>

<p>Does the native compiled stored procedure run between 20 and 40% faster on your systems as well?</p>
<p>Please post your numbers in the comment section</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sql-server-2014-ctp1-native/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>New Dynamic Management Views in SQL Server 2014 CTP1</title>
		<link>/index.php/datamgmt/dbprogramming/new-dynamic-management-views-in/</link>
		<comments>/index.php/datamgmt/dbprogramming/new-dynamic-management-views-in/#respond</comments>
		<pubDate>Tue, 25 Jun 2013 07:59:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dmv]]></category>
		<category><![CDATA[dynamic management view]]></category>
		<category><![CDATA[hekaton]]></category>
		<category><![CDATA[sql server 2014]]></category>

		<guid isPermaLink="false">/index.php/2013/06/new-dynamic-management-views-in/</guid>
		<description><![CDATA[There are 26 new Dynamic Management Views in SQl Server 2014 CTP1.

Here is a list of these DMVs in alphabetical order

sys.dm_db_merge_requests
sys.dm_db_xtp_checkpoint
sys.dm_db_xtp_checkpoint_files
sys.dm_db_xtp_gc_cycle_stats
sys.dm_db_xtp_h&#8230;]]></description>
				<content:encoded><![CDATA[<p>There are 26 new Dynamic Management Views in SQl Server 2014 CTP1.</p>
<p>Here is a list of these DMVs in alphabetical order</p>
<p>sys.dm_db_merge_requests<br />
sys.dm_db_xtp_checkpoint<br />
sys.dm_db_xtp_checkpoint_files<br />
sys.dm_db_xtp_gc_cycle_stats<br />
sys.dm_db_xtp_hash_index_stats<br />
sys.dm_db_xtp_index_stats<br />
sys.dm_db_xtp_memory_consumers<br />
sys.dm_db_xtp_object_stats<br />
sys.dm_db_xtp_table_memory_stats<br />
sys.dm_db_xtp_transactions<br />
sys.dm_io_cluster_shared_volumes<br />
sys.dm_os_buffer_pool_extension_configuration<br />
sys.dm_resource_governor_resource_pool_volumes<br />
sys.dm_xe_database_session_event_actions<br />
sys.dm_xe_database_session_events<br />
sys.dm_xe_database_session_object_columns<br />
sys.dm_xe_database_session_targets<br />
sys.dm_xe_database_sessions<br />
sys.dm_xtp_consumer_memory_usage<br />
sys.dm_xtp_gc_queue_stats<br />
sys.dm_xtp_gc_stats<br />
sys.dm_xtp_memory_stats<br />
sys.dm_xtp_system_memory_consumers<br />
sys.dm_xtp_threads<br />
sys.dm_xtp_transaction_recent_rows<br />
sys.dm_xtp_transaction_stats</p>
<p>The DMVs that start with sys.dm_db_xtp or sys.dm_xtp are Hekaton (In-Memory OLTP) specific DMVs<br />
The DMVs that start with sys.dm_db_xtp return information about individual Hekaton enabled databases, The DMVs that start with sys.dm_xtp_* provide information about the instance.</p>
<p>There are also a bunch of Extended Events DMVs as well</p>
<p>In total there are now 204 DMVs in SQL Server 2014</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/new-dynamic-management-views-in/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Server 2014 CTP1 Available for download</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/sql-server-2014-ctp1-available/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/sql-server-2014-ctp1-available/#respond</comments>
		<pubDate>Tue, 25 Jun 2013 07:58:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[hekaton]]></category>
		<category><![CDATA[sql server 2014]]></category>

		<guid isPermaLink="false">/index.php/2013/06/sql-server-2014-ctp1-available/</guid>
		<description><![CDATA[Microsoft has made available for download CTP1 of SQl Server 2014

Be aware of the following important information


  Installing side-by-side with other versions of SQL Server is NOT supported.


  Upgrade from other versions of SQL Server is N&#8230;]]></description>
				<content:encoded><![CDATA[<p>Microsoft has made available for download CTP1 of <a href="http://technet.microsoft.com/en-US/evalcenter/dn205292">SQl Server 2014</a></p>
<p>Be aware of the following important information</p>
<ul>
<li>Installing side-by-side with other versions of SQL Server is NOT supported.</li>
<li>Upgrade from other versions of SQL Server is NOT supported.</li>
<li>Only use the SQL Server Management Studio that ships as a part of this build to manage this build.  This build does not work with or support side-by-side installations with any client redistributables of SQL Server such as Data Tools, Data Tier Application Framework, etc..</li>
<li>Side-by-side installations of this build with Visual Studio 2012 or earlier versions is NOT supported.</li>
</ul>
<p>If you have SQL Server or Visual Studio installed on your machine, the installer will throw a check error and will not proceed with the install. Use a virtual machine to test this build instead of uninstalling Visual Studio and SQL Server on your machine</p>
<p>Running <code>@@version</code> will give you the following</p>
<p>Microsoft SQL Server 2014 (CTP1) &#8211; 11.0.9120.5 (X64)<br />
	Jun 10 2013 20:09:10<br />
	Copyright (c) Microsoft Corporation<br />
	Enterprise Evaluation Edition (64-bit) on Windows NT 6.2 <x64> (Build 9200: )</p>
<p>Here is what the SSMS splash screen looks like<br />
<a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/SSMS2014Startup.PNG?mtime=1371999115"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/SSMS2014Startup.PNG?mtime=1371999115" width="467" height="306" /></a></p>
<p>Clicking on Help&#8211;> About gives the following info</p>
<pre>Microsoft SQL Server Management Studio		11.0.9120.5
Microsoft Analysis Services Client Tools	11.0.9120.5
Microsoft Data Access Components (MDAC)		6.2.9200.16384
Microsoft MSXML					3.0 6.0 
Microsoft Internet Explorer			9.10.9200.16599
Microsoft .NET Framework			4.0.30319.18046
Operating System				6.2.9200</pre>
<p>You can download SQL Server 2014 CTP1 here: http://technet.microsoft.com/en-US/evalcenter/dn205292</p>
<p>I ran into an issue, the installer at the end popped up the following message:  <strong>Wait on the Database Engine recovery handle failed. Check the SQL Server error log for potential causes.</strong></p>
<p>There was no problem starting SQl Server manually, I wonder if anyone else will run into this issue</p>
<p>Here is some of the error log info</p>
<blockquote><p>Overall summary:<br />
  Final result:                  Failed: see details below<br />
  Exit code (Decimal):           -2061893606<br />
  Start time:                    2013-06-22 08:11:24<br />
  End time:                      2013-06-22 08:25:35<br />
  Requested action:              Install</p>
<p>Setup completed with required actions for features.<br />
Troubleshooting information for those features:<br />
  Next step for SQLEngine:       Use the following information to resolve the error, uninstall this feature, and then run the setup process again.</p>
<p>  Feature:                       Database Engine Services<br />
  Status:                        Failed: see logs for details<br />
  Reason for failure:            An error occurred during the setup process of the feature.<br />
  Next Step:                     Use the following information to resolve the error, uninstall this feature, and then run the setup process again.<br />
  Component name:                SQL Server Database Engine Services Instance Features<br />
  Component error code:          0x851A001A<br />
  Error description:             Wait on the Database Engine recovery handle failed. Check the SQL Server error log for potential causes.<br />
  Error help link:               <a href="http://go.microsoft.com/fwlink?LinkId=20476&amp;ProdName=Microsoft+SQL+Server&amp;EvtSrc=setup.rll&amp;EvtID=50000&amp;ProdVer=11.0.9120.5&amp;EvtType=0xD15B4EB2%400x4BDAF9BA%401306%4026&amp;EvtType=0xD15B4EB2%400x4BDAF9BA%401306%4026">Error link</a></p>
<p>  Feature:                       SQL Browser<br />
  Status:                        Passed</p>
<p>  Feature:                       SQL Writer<br />
  Status:                        Passed</p>
<p>Rules with failures:</p>
<p>Global rules:</p>
<p>Scenario specific rules:</p>
<p>Rules report file:               C:Program FilesMicrosoft SQL Server110Setup BootstrapLog20130622_080701SystemConfigurationCheck_Report.htm
</p></blockquote>
<p>Clicking on that link brings you to the following</p>
<p><em>Details<br />
ID:	50000<br />
Source:	setup.rll                                             </p>
<p>We&#8217;re sorry<br />
There is no additional information about this issue in the Error and Event Log Messages or Knowledge Base databases at this time. You can use the links in the Support area to determine whether any additional information might be available elsewhere.</em></p>
<p>Download the <a href="http://technet.microsoft.com/en-US/evalcenter/dn205292">SQL Server 2014 CTP1</a> and start playing with Hekaton<br />
Make sure to check out Kalen delaney&#8217;s Hekaton whitepaper as well, you can download the whitepaper here: http://t.co/6IzfRnJLcu</x64></p>
<p>Here are a couple of small posts I put together</p>
<p><a href="/index.php/DataMgmt/DBProgramming/sql-server-2014-ctp1-native">SQL Server 2014 CTP1 native compiled Hekaton procedures are faster than regular procedures</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/supported-and-unsupported-datatypes-with">Supported and unsupported datatypes with Hekaton tables</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/new-dynamic-management-views-in">New Dynamic Management Views in SQL Server 2014 CTP1</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/sql-server-2014-ctp1-available/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
