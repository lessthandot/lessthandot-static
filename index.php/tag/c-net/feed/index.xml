<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>c# .net &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/c-net/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Yes, I did indeed dig myself into this hole&#8230;</title>
		<link>/index.php/desktopdev/mstech/yes-i-did-indeed-dig-myself-into-this-ho/</link>
		<comments>/index.php/desktopdev/mstech/yes-i-did-indeed-dig-myself-into-this-ho/#comments</comments>
		<pubDate>Wed, 14 Jul 2010 21:33:50 +0000</pubDate>
		<dc:creator><![CDATA[chaospandion]]></dc:creator>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Microsoft Technologies]]></category>
		<category><![CDATA[c# .net]]></category>

		<guid isPermaLink="false">/index.php/2010/07/yes-i-did-indeed-dig-myself-into-this-ho/</guid>
		<description><![CDATA[Folks, please remember to refactor early and often&#8230; private Element ReadMemberExpression() { var queue = new Queue&#60;Element[]&#62;(); var newDepth = 0; var argsCount = 0; _scanner.CreateRestorePoint(); while (true) { _scanner.CreateRestorePoint(); { var a = ReadArguments(); if (a != null) { argsCount++; if (argsCount &#62; newDepth) { _scanner.Restore(); break; } queue.Enqueue(new[] { default(Element), default(Element), a }); [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Folks, please remember to refactor early and often&#8230; </p>
<pre>private Element ReadMemberExpression()
{
    var queue = new Queue&lt;Element[]&gt;();
    var newDepth = 0;
    var argsCount = 0;
    _scanner.CreateRestorePoint();
    while (true)
    {
        _scanner.CreateRestorePoint();
        {
            var a = ReadArguments();
            if (a != null)
            {
                argsCount++;
                if (argsCount &gt; newDepth)
                {
                    _scanner.Restore();
                    break;
                }
                queue.Enqueue(new[] { default(Element), default(Element), a });
                _scanner.DeleteRestorePoint();
                continue;
            }
        }
        _scanner.DeleteRestorePoint();

        var pe = ReadPrimaryExpression();
        if (pe != null)
        {
            queue.Enqueue(new[] { pe });
            continue;
        }

        var fe = ReadFunctionExpression();
        if (fe != null)
        {
            queue.Enqueue(new[] { fe });
            continue;
        }

        if (_scanner.MatchNext(Grammar.New))
        {
            newDepth++;
            queue.Enqueue(new[] { Grammar.New });
        }
        else if (_scanner.Match(Grammar.LeftSquareBracket))
        {
            var e = ReadExpression();
            if (e == null)
            {
                throw new ParseException();
            }
            if (!_scanner.MatchNext(Grammar.RightSquareBracket))
            {
                throw new ParseException();
            }
            queue.Enqueue(new[]{default(Element), Grammar.LeftSquareBracket, e, Grammar.RightSquareBracket});
        }
        else if (_scanner.Match(Grammar.FullStop))
        {
            if (!_scanner.MatchNext(ElementType.IdentifierName))
            {
                throw new ParseException();
            }
            queue.Enqueue(new[] { default(Element), Grammar.FullStop, _scanner.Current });
        }
        else
        {
            _scanner.Unwind();
            break;
        }
    }
    if (queue.Count == 0)
    {
        _scanner.DeleteRestorePoint();
        return null;
    }
    else
    {
        var element = default(Element);
        var children = queue.Dequeue();
        while (children[0] == Grammar.New)
        {
            children = queue.Dequeue();
        }
        element = new Element(ElementType.MemberExpression, children);
        while (queue.Count &gt; 0)
        {
            children = queue.Dequeue();
            if (children.Length == 3 &amp;&amp; children[2].Type == ElementType.Arguments)
            {
                newDepth--;
                children[0] = Grammar.New;
                children[1] = element;
                element = new Element(ElementType.MemberExpression, children);
            }
            else
            {
                children[0] = element;
                element = new Element(ElementType.MemberExpression, children);
            }
        }
        if (newDepth &gt; 0)
        {
            _scanner.Restore();
            return null;
        }
        _scanner.DeleteRestorePoint();
        return element;
    }
}</pre>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/yes-i-did-indeed-dig-myself-into-this-ho/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
