<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>bitwise &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/bitwise/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>How to flip a bit in SQL Server by using the Bitwise NOT operator</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-flip-a-bit-in-sql-server-by-using/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-flip-a-bit-in-sql-server-by-using/#comments</comments>
		<pubDate>Wed, 29 Sep 2010 15:30:45 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[bits]]></category>
		<category><![CDATA[bitwise]]></category>
		<category><![CDATA[bool]]></category>
		<category><![CDATA[math]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[tinyint]]></category>

		<guid isPermaLink="false">/index.php/2010/09/how-to-flip-a-bit-in-sql-server-by-using/</guid>
		<description><![CDATA[This question came up today. in c# i have a: a = !a (if false makes it true, if true makes it false) in sql i want to do the same with a BIT variable In a language like C# you can use ! for a bool to make it become true if it was [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This question came up today.</p>
<blockquote><p>in c# i have a:</p>
<p> a = !a<br />
(if false makes it true, if true makes it false)</p>
<p>in sql i want to do the same with a BIT variable</p></blockquote>
<p>In a language like C# you can use ! for a bool to make it become true if it was false and vice versa</p>
<p>So if you run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
<span class="kw4">bool</span> a <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span>
a <span class="sy0">=</span> <span class="sy0">!</span>a<span class="sy0">;</span>
&nbsp;
Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>a<span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
a <span class="sy0">=</span> <span class="sy0">!</span>a<span class="sy0">;</span>
Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>a<span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
Console<span class="sy0">.</span><span class="me1">ReadLine</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">            
bool a = true;
a = !a;

Console.WriteLine(a.ToString());
a = !a;
Console.WriteLine(a.ToString());
Console.ReadLine();</pre></div></div>

<p>The output will be</p>
<p>False<br />
True</p>
<p>How can you do this in SQL Server? It is pretty easy, take a look</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">~</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">bit</span>,<span class="nu0">0</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="sy0">~</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">bit</span>,<span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select ~ CONVERT(bit,0)
select ~ CONVERT(bit,1)</pre></div></div>

<p>The ~ symbol is the Bitwise NOT operator, here is what books on line has to say about the Bitwise NOT operator.</p>
<blockquote><p>The ~ bitwise operator performs a bitwise logical NOT for the expression, taking each bit in turn. If expression has a value of 0, the bits in the result set are set to 1; otherwise, the bit in the result is cleared to a value of 0. In other words, ones are changed to zeros and zeros are changed to ones.</p></blockquote>
<p>Let&#8217;s take a look at another example. What do you think will happen here?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">~</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">tinyint</span>,<span class="nu0">0</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="sy0">~</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">tinyint</span>,<span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select ~ CONVERT(tinyint,0)
select ~ CONVERT(tinyint,1)</pre></div></div>

<p>That actually returns<br />
255<br />
254</p>
<p>Why is that? Here is a simple explanation</p>
<p>With a tinyint possible values are between 0 and 255, when you have 0 all bits are turned off, when you flip it, you turn all bits on and you get 255</p>
<pre>00000000	= 0   ( 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)
11111111	= 255 (1 + 2 + 4 + 8 + 16 + 32 + 64 + 128)</pre>
<p>When you have 1 all bits are turned off except for the first bit, when you flip it you turn all bits on except for the first bit</p>
<pre>00000001	=  1 ( 1 + 0 + 0 + 0 + 0 + 0 + 0 + 0)
11111110	= 254 (0 + 2 + 4 + 8 + 16 + 32 + 64 + 128)</pre>
<p>If you want to use tinyint or int you can use the following code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> &nbsp;<span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">tinyint</span>,<span class="nu0">0</span><span class="br0">&#41;</span> <span class="sy0">^</span> <span class="nu0">1</span> <span class="kw1">as</span> <span class="br0">&#91;</span><span class="kw1">tinyint</span><span class="br0">&#93;</span>, <span class="nu0">0</span><span class="sy0">^</span><span class="nu0">1</span> <span class="kw1">as</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span>
<span class="kw1">select</span> &nbsp;<span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">tinyint</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">^</span> <span class="nu0">1</span> <span class="kw1">as</span> <span class="br0">&#91;</span><span class="kw1">tinyint</span><span class="br0">&#93;</span>, <span class="nu0">1</span><span class="sy0">^</span><span class="nu0">1</span> <span class="kw1">as</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select  CONVERT(tinyint,0) ^ 1 as [tinyint], 0^1 as [int]
select  CONVERT(tinyint,1) ^ 1 as [tinyint], 1^1 as [int]</pre></div></div>

<p>The ^ operator is the Bitwise Exclusive OR operator. Here is what books on line has to say about Bitwise Exclusive OR</p>
<blockquote><p>The ^ bitwise operator performs a bitwise logical exclusive OR between the two expressions, taking each corresponding bit for both expressions. The bits in the result are set to 1 if either (but not both) bits (for the current bit being resolved) in the input expressions have a value of 1. If both bits are 0 or both bits are 1, the bit in the result is cleared to a value of 0. </p></blockquote>
<p>Let&#8217;s take a closer look</p>
<p><em>The bits in the result are set to 1 if either (but not both) bits (for the current bit being resolved) in the input expressions have a value of 1.</em></p>
<p><strong>0 ^ 1</strong><br />
00000000<br />
00000001<br />
&#8212;&#8212;&#8211;<br />
00000001	</p>
<p><em>If both bits are 0 or both bits are 1, the bit in the result is cleared to a value of 0.</em></p>
<p><strong>1^1</strong><br />
00000001<br />
00000001<br />
&#8212;&#8212;&#8211;<br />
00000000	</p>
<p>So in the end if you want to flip a bit use the Bitwise NOT operator</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">~</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">bit</span>,<span class="nu0">0</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="sy0">~</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">bit</span>,<span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select ~ CONVERT(bit,0)
select ~ CONVERT(bit,1)</pre></div></div>

<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-flip-a-bit-in-sql-server-by-using/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
	</channel>
</rss>
