<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>how to &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/how-to/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Changing a column that is already populated into a column that uses a sequence</title>
		<link>/index.php/datamgmt/dbprogramming/changing-a-column-that-is/</link>
		<comments>/index.php/datamgmt/dbprogramming/changing-a-column-that-is/#comments</comments>
		<pubDate>Wed, 05 Jun 2013 19:38:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sequence]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/06/changing-a-column-that-is/</guid>
		<description><![CDATA[Just got a question on my A first look at sequences in SQL Server Denali post.

The question is the following: How can you add a new column to existing table (already populated) and make it a sequence column?

Let's take a look. First create this ve&#8230;]]></description>
				<content:encoded><![CDATA[<p>Just got a question on my <a href="/index.php/DataMgmt/DataDesign/a-first-look-at-sequences-in-sql-server">A first look at sequences in SQL Server Denali</a> post.</p>
<p>The question is the following: <em>How can you add a new column to existing table (already populated) and make it a sequence column?</em></p>
<p>Let&#8217;s take a look. First create this very simple table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> bla <span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> BLA <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> BLA <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> BLA <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> BLA <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> BLA <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE bla (id INT)
INSERT BLA VALUES(1)
INSERT BLA VALUES(2)
INSERT BLA VALUES(3)
INSERT BLA VALUES(4)
INSERT BLA VALUES(5)</pre></div></div>

<p>What you want to do is have the sequence start at 6, here is how to do that.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">SEQUENCE</span> GlobalCounter
&nbsp; &nbsp; <span class="kw1">AS</span> <span class="kw1">INT</span>
&nbsp; &nbsp; M<span class="sy0">IN</span>VALUE <span class="nu0">1</span>
&nbsp; &nbsp; <span class="kw1">NO</span> MAXVALUE
&nbsp; &nbsp; <span class="kw1">START</span> <span class="kw1">WITH</span> <span class="nu0">6</span>;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE SEQUENCE GlobalCounter
    AS INT
    MINVALUE 1
    NO MAXVALUE
    START WITH 6;
GO</pre></div></div>

<p>Use START WITH to indicate that the sequence should start at 6</p>
<p>The next step is to add a default to the column, this default would use the sequence</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> bla
<span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> id_default_sequence
<span class="kw1">DEFAULT</span> <span class="kw1">NEXT</span> <span class="kw1">VALUE</span> <span class="kw1">FOR</span> GlobalCounter <span class="kw1">FOR</span> ID;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE bla
ADD CONSTRAINT id_default_sequence
DEFAULT NEXT VALUE FOR GlobalCounter FOR ID;</pre></div></div>

<p>Now if we do an insert, followed by a select</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> bla <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Bla</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT bla DEFAULT VALUES

SELECT * FROM Bla</pre></div></div>

<p>Here are the results</p>
<p>id<br />
1<br />
2<br />
3<br />
4<br />
5<br />
6</p>
<p>As you can see the value 6 was inserted</p>
<p>There you have it, a simple way to change a column to a sequence column</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/changing-a-column-that-is/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Using a Dedicated Administrator Connection via SSMS</title>
		<link>/index.php/datamgmt/dbprogramming/using-a-dedicated-administrator-connection/</link>
		<comments>/index.php/datamgmt/dbprogramming/using-a-dedicated-administrator-connection/#comments</comments>
		<pubDate>Sun, 07 Apr 2013 13:55:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dac]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/04/using-a-dedicated-administrator-connection/</guid>
		<description><![CDATA[If you need to use a Dedicated Administrator Connection (DAC) via SSMS, you can't just use the Connect Object Explorer, if you try you will get the following error

Dedicated administrator connections are not supported via SSMS as it establishes multi&#8230;]]></description>
				<content:encoded><![CDATA[<p>If you need to use a Dedicated Administrator Connection (DAC) via SSMS, you can&#8217;t just use the Connect Object Explorer, if you try you will get the following error</p>
<p>Dedicated administrator connections are not supported via SSMS as it establishes multiple connections by design. (Microsoft.SqlServer.Management.SqlStudio.Explorer)</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/Dac.PNG?mtime=1365341742"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/Dac.PNG?mtime=1365341742" width="619" height="174" /></a></div>
<p>So what do you do? You can connect from within SSMS, you need to click on the  <code>Database Engine Query</code> icon</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/Dac2.PNG?mtime=1365342094"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/Dac2.PNG?mtime=1365342094" width="416" height="87" /></a></div>
<p>Prefix the servername with Admin: Instead of <strong>(local)</strong>, you would do <strong>Admin:(local)</strong></p>
<p>
Another way to connect is by using sqlcmd with the command-line option A<br />
Here is an example with a username and password</p>
<p>sqlcmd -S ServerName -U sa -P Password â€“A</p>
<p>You can also use a trusted connection</p>
<p>sqlcmd -S (local) -E -A</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/dac3.PNG?mtime=1365343123"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/dac3.PNG?mtime=1365343123" width="671" height="142" /></a></div>
<p>If you want to know more about DAC, check out <a href="http://msdn.microsoft.com/en-us/library/ms189595(v=sql.110).aspx">Using a Dedicated Administrator Connection</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/using-a-dedicated-administrator-connection/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Using WITH RESULT SETS with stored procedures that return multiple resultsets</title>
		<link>/index.php/datamgmt/dbprogramming/using-with-result-sets-with/</link>
		<comments>/index.php/datamgmt/dbprogramming/using-with-result-sets-with/#comments</comments>
		<pubDate>Mon, 18 Mar 2013 21:07:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/03/using-with-result-sets-with/</guid>
		<description><![CDATA[Yesterday I blogged about using WITH RESULT SETS with the EXECUTE command here: Use WITH RESULT SETS to change column names and datatypes of a resultset. Naomi Nosonovsky left the following comment
Can you use this feature to get result sets from the s&#8230;]]></description>
				<content:encoded><![CDATA[<p>Yesterday I blogged about using WITH RESULT SETS with the EXECUTE command here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/use-with-result-sets-to">Use WITH RESULT SETS to change column names and datatypes of a resultset</a>. Naomi Nosonovsky left the following comment</p>
<blockquote><p>Can you use this feature to get result sets from the stored procedure returning multiple result sets such as sp_spaceused? If so, can you show this?</p></blockquote>
<p>So today we are going to look at how we can do this. Let&#8217;s say we execute the following stored procedure without specifying an object name</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_spaceused</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_spaceused</pre></div></div>

<p>You will get two resultsets, the output will look something like this
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/sp_spaceused_resultset.PNG?mtime=1363647770"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/sp_spaceused_resultset.PNG?mtime=1363647770" width="347" height="220" /></a></div>
<p>Now let&#8217;s see what happens if we only specify the first result set</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_spaceused</span> 
<span class="kw1">WITH</span> <span class="kw1">RESULT</span> <span class="kw1">SETS</span>
<span class="br0">&#40;</span> 
&nbsp; &nbsp;<span class="br0">&#40;</span>
&nbsp; &nbsp;DBNAme <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;DatabaseSize <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;UnollactedSpace <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>
&nbsp; &nbsp;<span class="br0">&#41;</span>
&nbsp;
<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_spaceused 
WITH RESULT SETS
( 
   (
   DBNAme nvarchar(100),
   DatabaseSize nvarchar(1000),
   UnollactedSpace nvarchar(100)
   )

);</pre></div></div>

<p>Here is the output</p>
<p><em>Msg 11535, Level 16, State 1, Procedure sp_spaceused, Line 128<br />
EXECUTE statement failed because its WITH RESULT SETS clause specified 1 result set(s), and the statement tried to send more result sets than this.</em></p>
<p>As you can see both result sets have to be accounted for when using WITH RESULT SETS<br />
Adding the second result set will fix this, run the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_spaceused</span> 
<span class="kw1">WITH</span> <span class="kw1">RESULT</span> <span class="kw1">SETS</span>
<span class="br0">&#40;</span> 
&nbsp; &nbsp;<span class="br0">&#40;</span>
&nbsp; &nbsp;DatabaseNAme <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;DatabaseSize <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;UnollactedSpace <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>
&nbsp; &nbsp;<span class="br0">&#41;</span>,
&nbsp; &nbsp;<span class="br0">&#40;</span>
&nbsp; &nbsp;Reserved <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;<span class="kw1">Data</span> <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;IndexSize <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;Unused <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>
&nbsp; &nbsp;<span class="br0">&#41;</span>
<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_spaceused 
WITH RESULT SETS
( 
   (
   DatabaseNAme nvarchar(100),
   DatabaseSize nvarchar(1000),
   UnollactedSpace nvarchar(100)
   ),
   (
   Reserved nvarchar(100),
   Data nvarchar(1000),
   IndexSize nvarchar(100),
   Unused nvarchar(100)
   )
);</pre></div></div>

<p>Adding the second result set fixed it, it all works now and the column names are the ones we have specified</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/using-with-result-sets-with/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Use WITH RESULT SETS to change column names and datatypes of a resultset</title>
		<link>/index.php/datamgmt/dbprogramming/use-with-result-sets-to/</link>
		<comments>/index.php/datamgmt/dbprogramming/use-with-result-sets-to/#comments</comments>
		<pubDate>Sun, 17 Mar 2013 21:59:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/03/use-with-result-sets-to/</guid>
		<description><![CDATA[SQL Server 2012 has added WITH RESULT SETS to the EXCECUTE command. You can now override the data types and names that the resultset is returning

EXEC ('SELECT name FROM sys.tables' )
WITH RESULT SETS
( 
   (TableName nvarchar(100))
);


Table&#8230;]]></description>
				<content:encoded><![CDATA[<p>SQL Server 2012 has added WITH RESULT SETS to the EXCECUTE command. You can now override the data types and names that the resultset is returning<br />
Here is one example where we change the name of the column from <em>name</em> to <em>TableName</em></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="br0">&#40;</span><span class="st0">'SELECT name FROM sys.tables'</span> <span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="kw1">RESULT</span> <span class="kw1">SETS</span>
<span class="br0">&#40;</span> 
&nbsp; &nbsp;<span class="br0">&#40;</span>TableName <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC ('SELECT name FROM sys.tables' )
WITH RESULT SETS
( 
   (TableName nvarchar(100))
);</pre></div></div>

<pre>TableName
-----------
DimAccount
DimCurrency
DimCustomer
DimDate
DimDepartmentGroup</pre>
<p>Of course we could have just aliased it as well instead.<br />
You can also changed the datatype, here is a silly example</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="br0">&#40;</span><span class="st0">'SELECT object_id FROM sys.tables'</span> <span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="kw1">RESULT</span> <span class="kw1">SETS</span>
<span class="br0">&#40;</span> 
&nbsp; &nbsp;<span class="br0">&#40;</span>ObjectID <span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">20</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC ('SELECT object_id FROM sys.tables' )
WITH RESULT SETS
( 
   (ObjectID decimal(20,2))
);</pre></div></div>

<p>Here is the output</p>
<pre>ObjectID
-----------
5575058.00
21575115.00
37575172.00
53575229.00</pre>
<p>So far we could have accomplished everything we did by using an alias or cast/convert. However, you can also use WITH RESULT SETS when executing stored procedures. Now you might be saying that it is no big deal since you can change the stored procedure. What about a system stored procedure, can/would you change that?<br />
Take sp_helpdb for example. If you execute the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_helpdb</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_helpdb</pre></div></div>

<p>You will get the following columns</p>
<pre>name	             db_size	owner	      dbid	created	        status    compatibility_level
AdventureWorks2012    189.49 MB	DenisDenis	16	Mar 16 2013	Status=ONLINE, .....	110
AdventureWorksDW2008R2 92.56 MB	DenisDenis	15	Mar 16 2013	Status=ONLINE.....	100
AdventureWorksDW2012  201.74 MB	DenisDenis	14	Mar 16 2013	Status=ONLINE.....	110</pre>
<p>Let&#8217;s say we want to change the names of all the columns and also we want to make the column created return a datetime value. You can of course dump the stored procedure output in a temporary table and select from that table. But in this case I think WITH RESULT SETS shows its value. Here is how we do this with sp_helpdb</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_helpdb</span>
<span class="kw1">WITH</span> <span class="kw1">RESULT</span> <span class="kw1">SETS</span>
<span class="br0">&#40;</span> 
&nbsp; &nbsp;<span class="br0">&#40;</span>
&nbsp; &nbsp;DatabaseName <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;DatabaseSize <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;DatabaseOwner <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;DatabaseID <span class="kw1">int</span>,
&nbsp; &nbsp;DateCreated <span class="kw1">datetime</span>,
&nbsp; &nbsp;DatabaseStatus <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">2000</span><span class="br0">&#41;</span>,
&nbsp; &nbsp;DatabaseCompatabilitylevel <span class="kw1">int</span> 
&nbsp; &nbsp;<span class="br0">&#41;</span>
<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_helpdb
WITH RESULT SETS
( 
   (
   DatabaseName nvarchar(100),
   DatabaseSize nvarchar(1000),
   DatabaseOwner nvarchar(100),
   DatabaseID int,
   DateCreated datetime,
   DatabaseStatus nvarchar(2000),
   DatabaseCompatabilitylevel int 
   )
);</pre></div></div>

<p>Here is what the output looks like</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/sp_helpdb.PNG?mtime=1363564008"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/SQL2013/sp_helpdb.PNG?mtime=1363564008" width="822" height="253" /></a></div>
<p>As you can see the column names are what we specified and DateCreated is now a datetime, instead of Mar 16 2013 we now see 2013-03-16 00:00:00.000. I think WITH RESULT SETS is a nice addition to the product, especially if you have to deal with stored procedure created by third party vendors or system procs</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/use-with-result-sets-to/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Dealing with the Column name &#8216;TEXT()&#8217; contains an invalid XML identifier as required by FOR XML; &#8216;(&#8216;(0x0028) is the first character at fault error</title>
		<link>/index.php/webdev/business-intelligence/dealing-with-the-column-name/</link>
		<comments>/index.php/webdev/business-intelligence/dealing-with-the-column-name/#respond</comments>
		<pubDate>Wed, 05 Dec 2012 11:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[concatenate]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[rows to column]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[t-sql]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2012/12/dealing-with-the-column-name/</guid>
		<description><![CDATA[I had to deploy a user defined function I was given yesterday, when I tried to I got the following error

Msg 6850, Level 16, State 1, Procedure fnGetBooks, Line 8
Column name 'TEXT()' contains an invalid XML identifier as required by FOR XML; '('(0x&#8230;]]></description>
				<content:encoded><![CDATA[<p>I had to deploy a user defined function I was given yesterday, when I tried to I got the following error</p>
<p>Msg 6850, Level 16, State 1, Procedure fnGetBooks, Line 8<br />
Column name &#8216;TEXT()&#8217; contains an invalid XML identifier as required by FOR XML; &#8216;(&#8216;(0x0028) is the first character at fault.</p>
<p>The function looked a little like this one</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">FUNCTION</span> fnGetBooks <span class="br0">&#40;</span>@AuthorID <span class="kw1">INT</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">RETURNS</span> <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8000</span><span class="br0">&#41;</span>
<span class="kw1">AS</span>
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;<span class="kw1">DECLARE</span> @BookList <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8000</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">SELECT</span> @BookList <span class="sy0">=</span><span class="br0">&#40;</span>
&nbsp;
&nbsp; &nbsp; &nbsp;<span class="kw1">SELECT</span> &nbsp;BookName <span class="sy0">+</span> <span class="st0">', '</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">TEXT</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp;
&nbsp; &nbsp; &nbsp;<span class="kw1">FROM</span> &nbsp; &nbsp;Books
&nbsp; &nbsp; &nbsp;<span class="kw1">WHERE</span> AuthorID <span class="sy0">=</span> @AuthorID
&nbsp; &nbsp; &nbsp;<span class="sy0">AND</span> BookName <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; &nbsp;<span class="kw1">ORDER</span> <span class="kw1">BY</span> BookName
&nbsp;
&nbsp; &nbsp; &nbsp;<span class="kw1">FOR</span> XML <span class="kw1">PATH</span><span class="br0">&#40;</span><span class="st0">''</span><span class="br0">&#41;</span> <span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;
<span class="kw1">RETURN</span> <span class="kw1">LEFT</span><span class="br0">&#40;</span>@BookList,<span class="br0">&#40;</span><span class="kw2">LEN</span><span class="br0">&#40;</span>@BookList<span class="br0">&#41;</span> <span class="sy0">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">END</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE FUNCTION fnGetBooks (@AuthorID INT)
 
RETURNS VARCHAR(8000)
AS
BEGIN
       
 DECLARE @BookList VARCHAR(8000)
 SELECT @BookList =(
 
     SELECT  BookName + ', ' AS [TEXT()]
 
     FROM    Books
     WHERE AuthorID = @AuthorID
     AND BookName IS NOT NULL
     ORDER BY BookName
 
     FOR XML PATH('') )
       
 
RETURN LEFT(@BookList,(LEN(@BookList) -1))
END
GO</pre></div></div>

<p>Trying to run that will give you the same error. Do you see the problem? First I determined what 0x0028 was, you can easy do this by running the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CHAR</span><span class="br0">&#40;</span>0x0028<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CHAR(0x0028)</pre></div></div>

<p>As you can see, that is the left parentheses (<br />
Interesting but not really helpful, I know I wrote stuff that uses FOR XML PATH myself in the past. I ran the following query to give me a list of objects that use FOR XML PATH</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> sys.<span class="me1">objects</span>
<span class="kw1">WHERE</span> OBJECT_DEF<span class="sy0">IN</span>ITION<span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">LIKE</span> <span class="st0">'%FOR%%XML%%PATH%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * 
FROM sys.objects
WHERE OBJECT_DEFINITION(object_id) LIKE '%FOR%%XML%%PATH%'</pre></div></div>

<p>Then I looked at some of those functions, the only thing I noticed is that TEXT was lowercase</p>
<p>Instead of</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">SELECT</span> &nbsp;BookName <span class="sy0">+</span> <span class="st0">', '</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">TEXT</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> SELECT  BookName + ', ' AS [TEXT()]</pre></div></div>

<p>It was</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">SELECT</span> &nbsp;BookName <span class="sy0">+</span> <span class="st0">', '</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">text</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> SELECT  BookName + ', ' AS [text()]</pre></div></div>

<p>Once you make the change, the error will disappear. My suspicion is that some code formatting tool made it uppercase, perhaps the programmer copied and pasted it into some window and then packaged the output&#8230;I will have to follow up on that one</p>
<p>If you are interested what that function is used for, take a look at <a href="/index.php/DataMgmt/DataDesign/the-ten-most-asked-sql-server-questions--1#10">Concatenate Values From Multiple Rows Into One Column</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/business-intelligence/dealing-with-the-column-name/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012, here is what is coming</title>
		<link>/index.php/datamgmt/dbprogramming/sql-advent-2012-here-is/</link>
		<comments>/index.php/datamgmt/dbprogramming/sql-advent-2012-here-is/#comments</comments>
		<pubDate>Sun, 25 Nov 2012 22:40:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2012/11/sql-advent-2012-here-is/</guid>
		<description><![CDATA[I decided to do a SQL Advent series of posts this year as well, this year I will focus on best practices. In case you are interested in last year's posts, all of them are listed here: SQL Advent 2011 Recap

Here is what the preliminary 25 posts will l&#8230;]]></description>
				<content:encoded><![CDATA[<p>I decided to do a SQL Advent series of posts this year as well, this year I will focus on best practices. In case you are interested in last year&#8217;s posts, all of them are listed here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
<p>Here is what the 25 posts will look like, the order that the posts are listed is not the same that they will be posted, I will randomly pick and choose</p>
<p>1 <a href="/index.php/DataMgmt/DBProgramming/data-types">Data types storage differences</a><br />
2 <a href="/index.php/DataMgmt/DBProgramming/sargable-queries">Sargable queries</a><br />
3 Recap<br />
4 <a href="/index.php/DataMgmt/DBProgramming/triggers-what-to-do-what">Triggers, what to do, what not to do</a><br />
5 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sizing-database-files">Sizing Files</a><br />
6 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/benefits-of-indexes">Benefits of Indexes</a><br />
7 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/foreign-keys">Foreign Keys</a><br />
8 <a href="/index.php/DataMgmt/DBProgramming/standardized-naming-and-other-conventions">Standardized naming conventions</a><br />
9 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-trust-the-ssms">Donâ€™t trust the designers</a><br />
10 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">Lack of constraints</a><br />
11 <a href="/index.php/DataMgmt/business-intelligence-1/when-to-say-no">When to say no</a><br />
12 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/features-enabled-that-are-not">Features enabled that are not used</a><br />
13 <a href="/index.php/DataMgmt/business-intelligence-1/sql-server-maintenance">Maintenance</a><br />
14 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/proactive-notifications">Proactive notifications</a><br />
15 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2012-day-10">Reinventing the wheel</a><br />
16 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/cursors-and-loops">Loops and cursors</a><br />
17 <a href="/index.php/DataMgmt/DataDesign/lack-of-database-design-and">Lack of database design and normalization</a><br />
18 <a href="/index.php/DataMgmt/business-intelligence-1/use-the-new-features">Use the new features</a><br />
19 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/stay-relevant-and-marketable">Stay relevant and marketable</a><br />
20 <a href="/index.php/DataMgmt/business-intelligence-1/get-the-tools-you-need">Get the tools you need to be more productive</a><br />
21 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/getting-help">How to get help</a><br />
22 <a href="/index.php/DataMgmt/business-intelligence-1/testing-your-backup-and-failoverhttp:///index.php/DataMgmt/business-intelligence-1/testing-your-backup-and-failover">Testing a backup strategy</a><br />
23 <a href="/index.php/DataMgmt/business-intelligence-1/no-matter-how-long-you">No matter how long you are on the wrong path, go back</a><br />
24 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/with-vldbs-it-matters-what">With VLDBs it matters what you do and how you do it</a><br />
25 <a href="/index.php/DataMgmt/DBProgramming/how-to-improve-your-tech">How to improve your tech skills</a></p>
<p>Let me know if that list seems fine or if you would like to see something else, also let me know in which topic you have absolutely no interest in</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sql-advent-2012-here-is/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Find all the tables and indexes that have data compression</title>
		<link>/index.php/datamgmt/datadesign/find-all-the-tables-and/</link>
		<comments>/index.php/datamgmt/datadesign/find-all-the-tables-and/#comments</comments>
		<pubDate>Fri, 16 Nov 2012 17:32:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[compression]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[indexing]]></category>
		<category><![CDATA[partitioning]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2012/11/find-all-the-tables-and/</guid>
		<description><![CDATA[I took a backup of one of our test databases today and gave it to someone so that it could be restored on one of their servers.

I got back the following in an email from the person who tried to do the restore



Date                      11/16/20&#8230;]]></description>
				<content:encoded><![CDATA[<p>I took a backup of one of our test databases today and gave it to someone so that it could be restored on one of their servers.</p>
<p>I got back the following in an email from the person who tried to do the restore</p>
<p><em></p>
<p>Date                      11/16/2012 12:58:16 PM<br />
Log                         SQL Server (Current &#8211; 11/16/2012 1:00:00 PM)</p>
<p>Source                  spid76</p>
<p>Message<br />
Database &#8216;YourCrappyDB&#8217; cannot be started in this edition of SQL Server because part or all of object &#8216;CrappyIndexData&#8217; is enabled with data compression or vardecimal storage format. Data compression and vardecimal storage format are only supported on SQL Server Enterprise Edition.</em></p>
<p>Okay, so they are running the standard edition of SQL Server. How can you quickly find all the tables and indexes that use compression? Let&#8217;s take a look, first we are going to create three tables, a heap, a table with a non clustered index and a table with a clustered index</p>
<p>A table without indexes (a heap)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestCompress<span class="br0">&#40;</span>SomeCol <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestCompress
REBUILD PARTITION <span class="sy0">=</span> <span class="sy0">ALL</span> <span class="kw1">WITH</span> <span class="br0">&#40;</span>DATA_COMPRESSION <span class="sy0">=</span> &nbsp;PAGE<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestCompress(SomeCol VARCHAR(1000))
GO

ALTER TABLE TestCompress
REBUILD PARTITION = ALL WITH (DATA_COMPRESSION =  PAGE)</pre></div></div>

<p>A table with a non clustered index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="co1">--Non clustered index</span>
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestCompress2<span class="br0">&#40;</span>SomeCol <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> null<span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IX_TestCompress2 
&nbsp; &nbsp; <span class="kw1">ON</span> TestCompress2 <span class="br0">&#40;</span>SomeCol<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span> DATA_COMPRESSION <span class="sy0">=</span> <span class="kw1">ROW</span> <span class="br0">&#41;</span> ; 
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">--Non clustered index
CREATE TABLE TestCompress2(SomeCol VARCHAR(100) NOT null)
GO

CREATE NONCLUSTERED INDEX IX_TestCompress2 
    ON TestCompress2 (SomeCol)
WITH ( DATA_COMPRESSION = ROW ) ; 
GO</pre></div></div>

<p>A table with a clustered index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="co1">--Clustered index</span>
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestCompress3<span class="br0">&#40;</span>SomeCol <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> null<span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">CLUSTERED</span> <span class="kw1">INDEX</span> IX_TestCompress3 
&nbsp; &nbsp; <span class="kw1">ON</span> TestCompress3 <span class="br0">&#40;</span>SomeCol<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span> DATA_COMPRESSION <span class="sy0">=</span> <span class="kw1">ROW</span> <span class="br0">&#41;</span> ; 
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">--Clustered index
CREATE TABLE TestCompress3(SomeCol VARCHAR(100) NOT null)
GO

CREATE CLUSTERED INDEX IX_TestCompress3 
    ON TestCompress3 (SomeCol)
WITH ( DATA_COMPRESSION = ROW ) ; 
GO</pre></div></div>

<p>Here is the query that will give you the table name, the storage type, the index name if there is one and the type of compression</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">DISTINCT</span>
SCHEMA_NAME<span class="br0">&#40;</span>o.<span class="me1">schema_id</span><span class="br0">&#41;</span> &nbsp;<span class="sy0">+</span> <span class="st0">'.'</span> <span class="sy0">+</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>o.<span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">AS</span> TableName,
i.<span class="me1">name</span> <span class="kw1">AS</span> IndexName,
p.<span class="me1">data_compression_desc</span> <span class="kw1">AS</span> CompressionType,
i.<span class="me1">type_desc</span> <span class="kw1">AS</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">partitions</span> &nbsp;p 
<span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">objects</span> o 
<span class="kw1">ON</span> p.<span class="kw2">object_id</span> <span class="sy0">=</span> o.<span class="kw2">object_id</span> 
<span class="sy0">JOIN</span> sys.<span class="me1">indexes</span> i 
<span class="kw1">ON</span> p.<span class="kw2">object_id</span> <span class="sy0">=</span> i.<span class="kw2">object_id</span>
<span class="sy0">AND</span> i.<span class="me1">index_id</span> <span class="sy0">=</span> p.<span class="me1">index_id</span>
<span class="kw1">WHERE</span> p.<span class="me1">data_compression</span> <span class="sy0">&gt;</span> <span class="nu0">0</span> 
<span class="sy0">AND</span> SCHEMA_NAME<span class="br0">&#40;</span>o.<span class="me1">schema_id</span><span class="br0">&#41;</span> <span class="sy0">&lt;&gt;</span> <span class="st0">'SYS'</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT DISTINCT
SCHEMA_NAME(o.schema_id)  + '.' + OBJECT_NAME(o.object_id) AS TableName,
i.name AS IndexName,
p.data_compression_desc AS CompressionType,
i.type_desc AS StorageType
FROM sys.partitions  p 
INNER JOIN sys.objects o 
ON p.object_id = o.object_id 
JOIN sys.indexes i 
ON p.object_id = i.object_id
AND i.index_id = p.index_id
WHERE p.data_compression &gt; 0 
AND SCHEMA_NAME(o.schema_id) &lt;&gt; 'SYS' </pre></div></div>

<p>Here is the output of that query</p>
<div class="tables">
<table>
<tr>
<th> TableName </th>
<th> IndexName </th>
<th> CompressionType </th>
<th> StorageType </th>
</tr>
<tr>
<td> dbo.TestCompress </td>
<td>NULL</td>
<td> PAGE </td>
<td> HEAP </td>
</tr>
<tr>
<td> dbo.TestCompress2 </td>
<td> IX_TestCompress2 </td>
<td> ROW </td>
<td> NONCLUSTERED </td>
</tr>
<tr>
<td> dbo.TestCompress3 </td>
<td> IX_TestCompress3 </td>
<td> ROW </td>
<td> CLUSTERED </td>
</tr>
</table>
</div>
<p>Now why do I have a distinct in my query? The reason is that if you have your indexes/tables partitioned you will get more than one row per index. you can add p.rows to the select portion of the queries and you will see how many rows each partition holds</p>
<p>Hopefully this will help someone in the future</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/find-all-the-tables-and/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Why do you need additional privileges for truncate table compared to delete?</title>
		<link>/index.php/datamgmt/datadesign/why-do-you-need-additional/</link>
		<comments>/index.php/datamgmt/datadesign/why-do-you-need-additional/#comments</comments>
		<pubDate>Sun, 07 Oct 2012 12:04:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[delete]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[truncate table]]></category>

		<guid isPermaLink="false">/index.php/2012/10/why-do-you-need-additional/</guid>
		<description><![CDATA[One of the people on my team wants to have the ability to truncate tables on the staging database while this person is testing, why are special permissions required compared to a delete?]]></description>
				<content:encoded><![CDATA[<p>One of the people on my team wants to have the ability to truncate tables on the staging database while this person is testing. Here is what Books On Line has about permissions for the TRUNCATED statement</p>
<blockquote><p>The minimum permission required is ALTER on table_name. TRUNCATE TABLE permissions default to the table owner, members of the sysadmin fixed server role, and the db_owner and db_ddladmin fixed database roles, and are not transferable.</p></blockquote>
<p>Before I answer why someone would need ALTER TABLE permissions when the person already has DELETE permissions, let&#8217;s run some code that will show the &#8216;problem&#8217;.</p>
<p>First create a Test database, add one table and insert one row</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> Test
go
&nbsp;
<span class="kw1">USE</span> Test
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestTruncate<span class="br0">&#40;</span>Id <span class="kw1">int</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">INSERT</span> TestTruncate <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE Test
go

USE Test
GO

CREATE TABLE TestTruncate(Id int)
GO

INSERT TestTruncate values(1)
GO</pre></div></div>

<p>Now create a new user and give the user datareader and datawriter permissions</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master
GO
<span class="kw1">CREATE</span> LOG<span class="sy0">IN</span> TestLogin <span class="kw1">WITH</span> PASSW<span class="sy0">OR</span>D<span class="sy0">=</span>N<span class="st0">'Test'</span>, 
DEFAULT_DATABASE<span class="sy0">=</span>master, CHECK_EXPIRATION<span class="sy0">=</span><span class="kw1">OFF</span>, CHECK_POLICY<span class="sy0">=</span><span class="kw1">OFF</span>
GO
<span class="kw1">USE</span> Test
GO
<span class="kw1">CREATE</span> <span class="kw1">USER</span> TestLogin <span class="kw1">FOR</span> LOG<span class="sy0">IN</span> TestLogin
GO
<span class="kw1">USE</span> Test
GO
<span class="kw1">ALTER</span> <span class="kw1">ROLE</span> db_datareader <span class="kw1">ADD</span> MEMBER TestLogin
GO
<span class="kw1">USE</span> Test
GO
<span class="kw1">ALTER</span> <span class="kw1">ROLE</span> db_datawriter <span class="kw1">ADD</span> MEMBER TestLogin
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master
GO
CREATE LOGIN TestLogin WITH PASSWORD=N'Test', 
DEFAULT_DATABASE=master, CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO
USE Test
GO
CREATE USER TestLogin FOR LOGIN TestLogin
GO
USE Test
GO
ALTER ROLE db_datareader ADD MEMBER TestLogin
GO
USE Test
GO
ALTER ROLE db_datawriter ADD MEMBER TestLogin
GO</pre></div></div>

<p>Now that the user is created, login as that user and run the TRUNCATE TABLE command</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">TRUNCATE</span> <span class="kw1">TABLE</span> TestTruncate</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">TRUNCATE TABLE TestTruncate</pre></div></div>

<p><em>Msg 1088, Level 16, State 7, Line 1<br />
Cannot find the object &#8220;TestTruncate&#8221; because it does not exist or you do not have permissions.</em></p>
<p>As you can see, you don&#8217;t have permission. A delete will work just fine</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DELETE</span> TestTruncate</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DELETE TestTruncate</pre></div></div>

<p>(1 row(s) affected)</p>
<p>Before I give you a workaround, let&#8217;s try to figure out why the minimum requirement is ALTER TABLE. What is the difference between a DELETE and a TRUNCATE in terms of logging? When  a TRUNCATE occurs, the operation does not log individual row deletions, a DELETE operation does. The reason this is important is because if you have a trigger on the table, in needs to be disabled before the TRUNCATE occurs. <strong>Now you know why ALTER TABLE is required, triggers need to be disabled.</strong></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> SomeTable DISABLE <span class="kw1">TRIGGER</span> SomeTrigger</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE SomeTable DISABLE TRIGGER SomeTrigger</pre></div></div>

<p>And in order to disable the trigger, ALTER TABLE permissions are required as a minimum.</p>
<p>But I don&#8217;t want people altering tables on our staging and QA servers, so here is one way of giving the person the ability to TRUNCATE a table without giving them permissions explicitly. Create a stored procedure and use WITH EXECUTE AS, this will define the execution context of the stored procedure. In the example below, I picked a user that has sufficient privileges to perform the TRUNCATE.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> prTruncate
<span class="kw1">WITH</span> <span class="kw1">EXECUTE</span> <span class="kw1">AS</span> <span class="st0">'SuperUser'</span>
<span class="kw1">AS</span>
<span class="kw1">TRUNCATE</span> <span class="kw1">TABLE</span> TestTruncate
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE prTruncate
WITH EXECUTE AS 'SuperUser'
AS
TRUNCATE TABLE TestTruncate
GO</pre></div></div>

<p>All you have to do is give your user execute permissions to the stored procedure you just created</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">GRANT</span> <span class="kw1">EXECUTE</span> <span class="kw1">ON</span> prTruncate <span class="kw1">TO</span> TestLogin
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">GRANT EXECUTE ON prTruncate TO TestLogin
GO</pre></div></div>

<p>Now if you execute the stored procedure as the TestLogin user, you will see it will run just fine</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> prTruncate</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC prTruncate</pre></div></div>

<p>Hope this helps someone in the future who is filling up his log these days</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/why-do-you-need-additional/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>How to shutdown windows 8</title>
		<link>/index.php/sysadmins/windows-8/how-to-shutdown-windows-8/</link>
		<comments>/index.php/sysadmins/windows-8/how-to-shutdown-windows-8/#comments</comments>
		<pubDate>Fri, 17 Aug 2012 20:22:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Windows 8]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[windows 8]]></category>

		<guid isPermaLink="false">/index.php/2012/08/how-to-shutdown-windows-8/</guid>
		<description><![CDATA[If you installed Windows 8, you might be wondering how to shut down or restart this operating system. There is no more start button so where do you start?

There are a couple of ways to shut down the operating system

1) Hit CTRL + ALT + DELETE and&#8230;]]></description>
				<content:encoded><![CDATA[<p>If you installed Windows 8, you might be wondering how to shut down or restart this operating system. There is no start button anymore so where do you shut it down?</p>
<p>There are a couple of ways to shut down the operating system</p>
<p>1) Hit CTRL + ALT + DELETE and then click on the power button in the lower right corner</p>
<p>2) Move the mouse to the upper right corner of you screen and wait for the charms bar to appear, click on settings, now click on power</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/SysAdmins/Win8pic2.png?mtime=1345241321"><img alt="" src="/wp-content/uploads/blogs/SysAdmins/Win8pic2.png?mtime=1345241321" width="302" height="277" /></a></div>
<p>Now you will get a couple of choices, pick the one you want</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/SysAdmins/Win8pic3.png?mtime=1345241327"><img alt="" src="/wp-content/uploads/blogs/SysAdmins/Win8pic3.png?mtime=1345241327" width="285" height="310" /></a></div>
<p>3) Hit Windows Key + C, this short cut will show the charms bar, this is the same as in the step above</p>
<p>4) Hit Windows Key + I, this is probably the easiest since you see the power button immediately</p>
<p>5) ALT + F4, just keep hitting ALT + F4 until you get the shutdown dialog</p>
<p>6) Unplug desktop or remove battery from laptop  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
Of course nobody would pick option 6 right?  Right?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/sysadmins/windows-8/how-to-shutdown-windows-8/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Don&#8217;t put a return statement in a stored procedure inside a transaction</title>
		<link>/index.php/datamgmt/datadesign/don-t-put-a-return/</link>
		<comments>/index.php/datamgmt/datadesign/don-t-put-a-return/#comments</comments>
		<pubDate>Fri, 18 May 2012 00:57:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2012/05/don-t-put-a-return/</guid>
		<description><![CDATA[I answered the following question earlier this evening: Return an output parameter from SQL Server via a stored procedure and c#

Here is the proc in question, take a good look at it, do you see the problem?

ALTER PROCEDURE [dbo].[Insert_UnknownCus&#8230;]]></description>
				<content:encoded><![CDATA[<p>I answered the following question earlier this evening: <a href="http://stackoverflow.com/questions/10645730/return-an-output-parameter-from-sql-server-via-a-stored-procedure-and-c-sharp/10645751#10645751">Return an output parameter from SQL Server via a stored procedure and c#</a></p>
<p>Here is the proc in question, take a good look at it, do you see the problem?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">PROCEDURE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Insert_UnknownCustomer_Quote_Document<span class="br0">&#93;</span>
<span class="co1">-- Add the parameters for the stored procedure here</span>
@NewDocumentFileName <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,
@NewDocumentWordCount <span class="kw1">int</span>,
@NewQuoteAmount <span class="kw1">money</span>,
@NewQuoteNumber <span class="kw1">int</span> <span class="kw1">OUTPUT</span> <span class="sy0">=</span> <span class="nu0">0</span>
&nbsp;
<span class="kw1">AS</span>
&nbsp;
<span class="kw1">DECLARE</span> @Today <span class="kw1">datetime</span>
<span class="kw1">SELECT</span> @Today <span class="sy0">=</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">BEGIN</span> <span class="kw1">TRANSACTION</span>
<span class="kw1">BEGIN</span> <span class="kw1">TRY</span>
&nbsp;
<span class="kw1">BEGIN</span>
<span class="co1">-- SET NOCOUNT ON added to prevent extra result sets from interfering with SELECT statements.</span>
<span class="kw1">SET</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>;
&nbsp;
&nbsp;
<span class="co1">-- Insert statements for procedure here</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> dbo.<span class="me1">Customers</span><span class="br0">&#40;</span>DateAdded<span class="br0">&#41;</span>
<span class="kw1">VALUES</span> <span class="br0">&#40;</span>@Today<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> dbo.<span class="me1">Quotes</span><span class="br0">&#40;</span>CustomerID, QuoteAmount, QuoteDate<span class="br0">&#41;</span>
<span class="kw1">VALUES</span> <span class="br0">&#40;</span>@@<span class="kw1">IDENTITY</span>, @NewQuoteAmount, @Today<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> @NewQuoteNumber <span class="sy0">=</span> @@<span class="kw1">IDENTITY</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> dbo.<span class="me1">DocumentFiles</span><span class="br0">&#40;</span>QuoteNumber, DocumentFileName, DocumentFileWordCount<span class="br0">&#41;</span>
<span class="kw1">VALUES</span> <span class="br0">&#40;</span>@NewQuoteNumber, @NewDocumentFileName, @NewDocumentWordCount<span class="br0">&#41;</span>
&nbsp;
<span class="co1">-- Return quote number</span>
<span class="kw1">RETURN</span> @NewQuoteNumber
&nbsp;
<span class="kw1">END</span>
<span class="kw1">COMMIT</span> <span class="kw1">TRANSACTION</span>
<span class="kw1">END</span> <span class="kw1">TRY</span>
&nbsp;
<span class="kw1">BEGIN</span> <span class="kw1">CATCH</span>
<span class="kw1">ROLLBACK</span> <span class="kw1">TRANSACTION</span>
<span class="kw1">PRINT</span> <span class="st0">'Transaction rolled back.'</span>
<span class="kw1">END</span> <span class="kw1">CATCH</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER PROCEDURE [dbo].[Insert_UnknownCustomer_Quote_Document]
-- Add the parameters for the stored procedure here
@NewDocumentFileName nvarchar(100),
@NewDocumentWordCount int,
@NewQuoteAmount money,
@NewQuoteNumber int OUTPUT = 0

AS

DECLARE @Today datetime
SELECT @Today = GETDATE()

BEGIN TRANSACTION
BEGIN TRY

BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from interfering with SELECT statements.
SET NOCOUNT ON;


-- Insert statements for procedure here
INSERT INTO dbo.Customers(DateAdded)
VALUES (@Today)

INSERT INTO dbo.Quotes(CustomerID, QuoteAmount, QuoteDate)
VALUES (@@IDENTITY, @NewQuoteAmount, @Today)

SELECT @NewQuoteNumber = @@IDENTITY
INSERT INTO dbo.DocumentFiles(QuoteNumber, DocumentFileName, DocumentFileWordCount)
VALUES (@NewQuoteNumber, @NewDocumentFileName, @NewDocumentWordCount)

-- Return quote number
RETURN @NewQuoteNumber

END
COMMIT TRANSACTION
END TRY

BEGIN CATCH
ROLLBACK TRANSACTION
PRINT 'Transaction rolled back.'
END CATCH</pre></div></div>

<p>Here is a simplified version</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">proc</span> prTest
<span class="kw1">as</span>
<span class="kw1">DECLARE</span> @id <span class="kw1">int</span>
&nbsp;
<span class="kw1">BEGIN</span> <span class="kw1">TRAN</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> TestID <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @id &nbsp;<span class="sy0">=</span><span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">RETURN</span> @id
<span class="kw1">COMMIT</span> <span class="kw1">TRAN</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE proc prTest
as
DECLARE @id int

BEGIN TRAN
	INSERT TestID DEFAULT VALUES

	SELECT @id  =SCOPE_IDENTITY()

	RETURN @id
COMMIT TRAN
GO</pre></div></div>

<p>Do you see it?</p>
<p>Let&#8217;s see what happens when you try running it</p>
<p>First create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestID <span class="br0">&#40;</span>id <span class="kw1">int</span> <span class="kw1">identity</span><span class="br0">&#41;</span>
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestID (id int identity)
go</pre></div></div>

<p>Here is the proc again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">proc</span> prTest
<span class="kw1">as</span>
<span class="kw1">DECLARE</span> @id <span class="kw1">int</span>
&nbsp;
<span class="kw1">BEGIN</span> <span class="kw1">TRAN</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> TestID <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @id &nbsp;<span class="sy0">=</span><span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">RETURN</span> @id
<span class="kw1">COMMIT</span> <span class="kw1">TRAN</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE proc prTest
as
DECLARE @id int

BEGIN TRAN
	INSERT TestID DEFAULT VALUES

	SELECT @id  =SCOPE_IDENTITY()

	RETURN @id
COMMIT TRAN
GO</pre></div></div>

<p>Go ahead and execute it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @id <span class="kw1">int</span>
<span class="kw1">EXEC</span> @id <span class="sy0">=</span> prTest
<span class="kw1">SELECT</span> @id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @id int
EXEC @id = prTest
SELECT @id</pre></div></div>

<p><em>Msg 266, Level 16, State 2, Procedure prTest, Line 0<br />
Transaction count after EXECUTE indicates a mismatching number of BEGIN and COMMIT statements. Previous count = 0, current count = 1.</em></p>
<p>So the stored procedure blew up, no big deal right?<br />
Open a new query window, run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestID</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestID</pre></div></div>

<p>Take a note of the SPID in the status bar next to the username</p>
<p>As you can see the query is stuck<br />
Now open yet another window and execute this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> blocking_session_id,<span class="sy0">*</span> 
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_requests</span>
<span class="kw1">WHERE</span> blocking_session_id <span class="sy0">&lt;&gt;</span> <span class="nu0">0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT blocking_session_id,* 
FROM sys.dm_exec_requests
WHERE blocking_session_id &lt;&gt; 0</pre></div></div>

<p>You will see that the SPID of the session where the select is running is returned by this query</p>
<p>As you can see, the transaction is still active and not committed, this is why the select statement is blocked</p>
<p>Go back to the first query window and either run COMMIT or ROLLBACK, the query will finish now</p>
<p>In the stored procedure, the return statement should come after the commit, it should look like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">proc</span> prTest
<span class="kw1">as</span>
<span class="kw1">DECLARE</span> @id <span class="kw1">int</span>
&nbsp;
<span class="kw1">BEGIN</span> <span class="kw1">TRAN</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> TestID <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @id &nbsp;<span class="sy0">=</span><span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">COMMIT</span> <span class="kw1">TRAN</span>
<span class="kw1">RETURN</span> @id
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER proc prTest
as
DECLARE @id int

BEGIN TRAN
	INSERT TestID DEFAULT VALUES

	SELECT @id  =SCOPE_IDENTITY()


COMMIT TRAN
RETURN @id
GO</pre></div></div>

<p>Now, you won&#8217;t get an error or a hanging transaction. Run it again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @id <span class="kw1">int</span>
<span class="kw1">EXEC</span> @id <span class="sy0">=</span> prTest
<span class="kw1">SELECT</span> @id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @id int
EXEC @id = prTest
SELECT @id</pre></div></div>

<p>It works now</p>
<p>In general, I don&#8217;t like to use return statements to return IDs, I like to use OUTPUT parameters instead, return statements in my opinion are to be used to return a status code</p>
<p>Here is what the proc would look like with an OUTPUT parameter</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">proc</span> prTest @id <span class="kw1">int</span> <span class="kw1">OUTPUT</span>
<span class="kw1">AS</span>
&nbsp;
<span class="kw1">BEGIN</span> <span class="kw1">TRAN</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> TestID <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @id &nbsp;<span class="sy0">=</span><span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw1">COMMIT</span> <span class="kw1">TRAN</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER proc prTest @id int OUTPUT
AS

BEGIN TRAN
	INSERT TestID DEFAULT VALUES

	SELECT @id  =SCOPE_IDENTITY()
COMMIT TRAN
GO</pre></div></div>

<p>Here is how you call it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @id <span class="kw1">int</span>
<span class="kw1">EXEC</span> &nbsp;prTest @id <span class="kw1">output</span>
<span class="kw1">SELECT</span> @id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @id int
EXEC  prTest @id output
SELECT @id</pre></div></div>

<p>Do you use a return statement to return identity values or do you use output parameters or do you use a plain vanilla SELECT statement? Leave me a comment and let me know</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/don-t-put-a-return/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
