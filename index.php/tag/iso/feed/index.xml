<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>iso &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/iso/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>ISO Week In SQL Server</title>
		<link>/index.php/datamgmt/datadesign/iso-week-in-sql-server/</link>
		<comments>/index.php/datamgmt/datadesign/iso-week-in-sql-server/#comments</comments>
		<pubDate>Mon, 22 Sep 2008 14:03:04 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[dates]]></category>
		<category><![CDATA[functions]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[iso]]></category>
		<category><![CDATA[iso week]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2008/09/iso-week-in-sql-server/</guid>
		<description><![CDATA[ISO Week in SQL Server First let&#8217;s take a look at what ISO week is, from WikiPedia: Week date representations are in the format as shown below. YYYY-Www or YYYYWww YYYY-Www-D or YYYYWwwD [YYYY] indicates the so-called ISO year which is slightly different than the calendar year (see below). [Www] is the week number prefixed [&#8230;]]]></description>
				<content:encoded><![CDATA[<h3>ISO Week in SQL Server</h3>
<p>First let&#8217;s take a look at what ISO week is, from WikiPedia:<br />
Week date representations are in the format as shown below.<br />
YYYY-Www	or	YYYYWww<br />
YYYY-Www-D	or	YYYYWwwD</p>
<p>[YYYY] indicates the so-called ISO year which is slightly different than the calendar year (see below). [Www] is the week number prefixed by the letter &#8216;W&#8217;, from W01 through W53. [D] is the weekday number, from 1 through 7, beginning with Monday and ending with Sunday. This form is popular in the manufacturing industries.<br />
There are mutually equivalent definitions for week 01:</p>
<ul>
<li>the week with the year&#8217;s first Thursday in it,</li>
<li>the week with 4 January in it,</li>
<li>the first week with the majority (four or more) of its days in the starting year, and</li>
<li>the week starting with the Monday in the period 29 December â€“ 4 January.</li>
</ul>
<p>If 1 January is on a Monday, Tuesday, Wednesday or Thursday, it is in week 01. If 1 January is on a Friday, Saturday or Sunday, it is in week 52 or 53 of the previous year.<br />
The week number can be described by counting the Thursdays: week 12 contains the 12th Thursday of the year.<br />
The ISO year starts at the first day (Monday) of week 01 and ends at the Sunday before the new ISO year (hence without overlap or gap). It consists of 52 or 53 full weeks. The ISO year number deviates from the number of the calendar year (Gregorian year) on a Friday, Saturday, and Sunday, or a Saturday and Sunday, or just a Sunday, at the start of the calendar year (which are at the end of the previous ISO year) and a Monday, Tuesday and Wednesday, or a Monday and Tuesday, or just a Monday, at the end of the calendar year (which are in week 01 of the next ISO year). For Thursdays, the ISO year number is always equal to the calendar year number.<br />
Examples:</p>
<ul>
<li>2008-12-29 is written &#8220;2009-W01-1&#8221;</li>
<li>2010-01-03 is written &#8220;2009-W53-7&#8221;</li>
</ul>
<p>You can read more about ISO week here: http://en.wikipedia.org/wiki/ISO_week_date</p>
<p>Sometimes you need to show the ISO week in SQL server but there was no built in way to calculate it until SQL server 2008 was released. In SQL Server 2000/2005 you could use the user defined function ISOweek which was in the SQL Server books on line.<br />
Here is what the function looks like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">FUNCTION</span> ISOweek &nbsp;<span class="br0">&#40;</span>@<span class="kw1">DATE</span> <span class="kw1">datetime</span><span class="br0">&#41;</span>
<span class="kw1">RETURNS</span> <span class="kw1">int</span>
<span class="kw1">AS</span>
<span class="kw1">BEGIN</span>
&nbsp; &nbsp;<span class="kw1">DECLARE</span> @ISOweek <span class="kw1">int</span>
&nbsp; &nbsp;<span class="kw1">SET</span> @ISOweek<span class="sy0">=</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span>wk,@<span class="kw1">DATE</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; <span class="sy0">-</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span>wk,<span class="kw1">CAST</span><span class="br0">&#40;</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span>yy,@<span class="kw1">DATE</span><span class="br0">&#41;</span> <span class="kw1">as</span> <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="st0">'0104'</span><span class="br0">&#41;</span>
<span class="co1">--Special cases: Jan 1-3 may belong to the previous year</span>
&nbsp; &nbsp;<span class="kw1">IF</span> <span class="br0">&#40;</span>@ISOweek<span class="sy0">=</span><span class="nu0">0</span><span class="br0">&#41;</span> 
&nbsp; &nbsp; &nbsp; <span class="kw1">SET</span> @ISOweek<span class="sy0">=</span>dbo.<span class="me1">ISOweek</span><span class="br0">&#40;</span><span class="kw1">CAST</span><span class="br0">&#40;</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span>yy,@<span class="kw1">DATE</span><span class="br0">&#41;</span><span class="sy0">-</span><span class="nu0">1</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">AS</span> <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="st0">'12'</span><span class="sy0">+</span> <span class="kw1">CAST</span><span class="br0">&#40;</span><span class="nu0">24</span><span class="sy0">+</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span><span class="kw1">DAY</span>,@<span class="kw1">DATE</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="nu0">1</span>
<span class="co1">--Special case: Dec 29-31 may belong to the next year</span>
&nbsp; &nbsp;<span class="kw1">IF</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span>mm,@<span class="kw1">DATE</span><span class="br0">&#41;</span><span class="sy0">=</span><span class="nu0">12</span><span class="br0">&#41;</span> <span class="sy0">AND</span> 
&nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span>dd,@<span class="kw1">DATE</span><span class="br0">&#41;</span><span class="sy0">-</span><span class="kw2">DATEPART</span><span class="br0">&#40;</span>dw,@<span class="kw1">DATE</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">&gt;=</span> <span class="nu0">28</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; <span class="kw1">SET</span> @ISOweek<span class="sy0">=</span><span class="nu0">1</span>
&nbsp; &nbsp;<span class="kw1">RETURN</span><span class="br0">&#40;</span>@ISOweek<span class="br0">&#41;</span>
<span class="kw1">END</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE FUNCTION ISOweek  (@DATE datetime)
RETURNS int
AS
BEGIN
   DECLARE @ISOweek int
   SET @ISOweek= DATEPART(wk,@DATE)+1
      -DATEPART(wk,CAST(DATEPART(yy,@DATE) as CHAR(4))+'0104')
--Special cases: Jan 1-3 may belong to the previous year
   IF (@ISOweek=0) 
      SET @ISOweek=dbo.ISOweek(CAST(DATEPART(yy,@DATE)-1 
         AS CHAR(4))+'12'+ CAST(24+DATEPART(DAY,@DATE) AS CHAR(2)))+1
--Special case: Dec 29-31 may belong to the next year
   IF ((DATEPART(mm,@DATE)=12) AND 
      ((DATEPART(dd,@DATE)-DATEPART(dw,@DATE))&gt;= 28))
      SET @ISOweek=1
   RETURN(@ISOweek)
END
GO</pre></div></div>

<p>Now run the following query on SQL server 2000 and up</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> dbo.<span class="me1">ISOweek</span><span class="br0">&#40;</span><span class="st0">'20071231'</span><span class="br0">&#41;</span>,<span class="kw2">datepart</span><span class="br0">&#40;</span>wk,<span class="st0">'20071231'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select dbo.ISOweek('20071231'),datepart(wk,'20071231')</pre></div></div>

<p>If you are running SQL server 2008 then you can use DATEPART and the datepart argument isowk. Run the select statement below to see the result</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="kw2">datepart</span><span class="br0">&#40;</span>isowk,<span class="st0">'20071231'</span><span class="br0">&#41;</span>,<span class="kw2">datepart</span><span class="br0">&#40;</span>wk,<span class="st0">'20071231'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select datepart(isowk,'20071231'),datepart(wk,'20071231')</pre></div></div>

<p>As you can see here also SQL Server&#8217;s wk part returns 53 while isowk returns 1</p>
<p>I have also added parts of this to the wiki here: <a href="http://wiki.lessthandot.com/index.php/ISO_Week_In_SQL_Server">ISO Week In SQL Server</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/iso-week-in-sql-server/feed/</wfw:commentRss>
		<slash:comments>12</slash:comments>
		</item>
		<item>
		<title>ISO-11179 Naming Conventions</title>
		<link>/index.php/datamgmt/datadesign/iso-11179-naming-conventions/</link>
		<comments>/index.php/datamgmt/datadesign/iso-11179-naming-conventions/#respond</comments>
		<pubDate>Mon, 11 Aug 2008 14:43:02 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[best practices]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[iso]]></category>
		<category><![CDATA[naming conventions]]></category>
		<category><![CDATA[programming]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2008/08/iso-11179-naming-conventions/</guid>
		<description><![CDATA[Straight from the man himself comes this statement posted in the microsoft.public.sqlserver.programming forum: &#8220;You need to read ISO-11179 so you use proper data element names. You actually had &#8220;tbl-&#8220;on the table names! Sometimes &#8220;id&#8221; id a prefix and sometimes it is a postfix.&#8221; Of course you know who I am talking about? No? Joe Celko [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Straight from the man himself comes this statement posted in the <a href="http://groups.google.com/group/microsoft.public.sqlserver.programming/browse_thread/thread/b29389050253df78/87d7c1b73e60e41d#87d7c1b73e60e41d">microsoft.public.sqlserver.programming forum</a>: &#8220;<em>You need to read ISO-11179 so you use proper data element names. You<br />
actually had &#8220;tbl-&#8220;on the table names! Sometimes &#8220;id&#8221; id a<br />
prefix and sometimes it is a postfix.</em>&#8221;</p>
<p>Of course you know who I am talking about? No? Joe Celko of course.  So what is ISO-11179?</p>
<p>The 11179 standard is a multipart standard that includes the following parts:</p>
<p><a href="http://metadata-standards.org/11179/#11179-1">11179-1</a><br />
<strong>Part 1: Framework</strong>, introduces and discusses fundamental ideas of data elements, value domains, data element concepts, conceptual domains, and classification schemes essential to the understanding of this set of standards and provides the context for associating the individual parts of ISO/IEC 11179.</p>
<p><a href="http://metadata-standards.org/11179/#11179-2">11179-2</a><br />
<strong>Part 2: Classification</strong>, provides a conceptual model for managing classification schemes. There are many structures used to organize classification schemes and there are many subject matter areas that classification schemes describe. So, this Part also provides a two-faceted classification for classification schemes themselves.</p>
<p><a href="http://metadata-standards.org/11179/#11179-3">11179-3</a><br />
<strong>Part 3: Registry Metamodel and Basic Attributes</strong>, specifies a conceptual model for a metadata registry. It is limited to a set of basic attributes for data elements, data element concepts, value domains, conceptual domains, classification schemes, and other related classes, called administered items. The basic attributes specified for data elements in ISO/IEC 11179-3:1994 are provided in this revision.</p>
<p><a href="http://metadata-standards.org/11179/#11179-4">11179-4</a><br />
<strong>Part 4: Formulation of Data Definitions,</strong> provides guidance on how to develop unambiguous data definitions. A number of specific rules and guidelines are presented in ISO/IEC 11179-4 that specify exactly how a data definition should be formed. A precise, well-formed definition is one of the most critical requirements for shared understanding of an administered item; well-formed definitions are imperative for the exchange of information. Only if every user has a common and exact understanding of the data item can it be exchanged trouble-free.</p>
<p><a href="http://metadata-standards.org/11179/#11179-5">11179-5</a><br />
<strong>Part 5: Naming and Identification Principles</strong>, provides guidance for the identification of administered items. Identification is a broad term for designating, or identifying, a particular data item. Identification can be accomplished in various ways, depending upon the use of the identifier. Identification includes the assignment of numerical identifiers that have no inherent meanings to humans; icons (graphic symbols to which meaning has been assigned); and names with embedded meaning, usually for human understanding, that are associated with the data item&#8217;s definition and value domain.</p>
<p><a href="http://metadata-standards.org/11179/#11179-6">11179-6</a><br />
<strong>Part 6: Registration</strong>, provides instruction on how a registration applicant may register a data item with a central Registration Authority and the allocation of unique identifiers for each data item. Maintenance of administered items already registered is also specified in this document.</p>
<p>The one that deals with  naming conventions is <a href="http://metadata-standards.org/11179/#11179-5">11179-5</a> The link will point to a zip file which has a pdf file in it. The TOC of this pdf file is below</p>
<p>Contents<br />
Foreword<br />
1 Scope<br />
2 Normative references<br />
3 Terms and definitions<br />
4 Data Identifiers within a registry<br />
5 Identification<br />
6 Names<br />
6.1 Names in a registry<br />
6.2 Naming conventions<br />
7 Development of naming conventions<br />
7.1 Introduction<br />
7.2 Scope principle<br />
7.3 Authority principle<br />
7.4 Semantic principle<br />
7.5 Syntactic principle<br />
7.6 Lexical principle<br />
7.7 Uniqueness principle<br />
Annex A (informative) Example naming conventions for names within an MDR registry<br />
Annex B (informative) Example naming conventions for Asian languages</p>
<p>So check it out and hopefully you and your team can adapt a common naming conventions instead of having things named like employee_address, EmployeeAddress, employeeAddress and tblEmployeeAddress.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/iso-11179-naming-conventions/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
