<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>silverlight partial class webservice &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/silverlight-partial-class-webservice/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Silverlight Partial Classing a Webservice Reference</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/silverlight-partial-classing-a-webservic/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/silverlight-partial-classing-a-webservic/#comments</comments>
		<pubDate>Thu, 10 Dec 2009 13:39:11 +0000</pubDate>
		<dc:creator><![CDATA[ThatRickGuy]]></dc:creator>
				<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[silverlight partial class webservice]]></category>

		<guid isPermaLink="false">/index.php/2009/12/silverlight-partial-classing-a-webservic/</guid>
		<description><![CDATA[Hey Folks, Just ran into this minor quirk today, figured I&#8217;d share the solution. I have a Webservice that returns an array of a class defined on the server. On the client side, I wanted to extend that class to link it to some GUI elements. Enter the partial class. If you haven&#8217;t played with [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Hey Folks,</p>
<p style="text-indent: 30pt;">Just ran into this minor quirk today, figured I&#8217;d share the solution. I have a Webservice that returns an array of a class defined on the server. On the client side, I wanted to extend that class to link it to some GUI elements. Enter the partial class. If you haven&#8217;t played with Partial Classes before, I&#8217;d recommend checking them out. It allows you to build additional functionality into any class. Not by inheriting from a base, but actually extending that class without creating a new one. Anyways, I wound up with the following:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="vbnet"><thead><tr><td colspan="2"  class="head">vb.net</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="de1"><pre class="de1"><span class="kw1">Namespace</span> srAlerts
&nbsp; &nbsp; <span class="kw1">Partial</span> <span class="kw1">Public</span> <span class="kw1">Class</span> Alert
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Private</span> _CommentDisplay <span class="kw1">As</span> CommentIndicator
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">&lt;</span>System<span class="sy0">.</span><span class="me1">Xml</span><span class="sy0">.</span><span class="me1">Serialization</span><span class="sy0">.</span><span class="me1">XmlIgnore</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">&gt;</span> _
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Public</span> <span class="kw1">Property</span> CommentDisplay<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">As</span> CommentIndicator
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Return</span> _CommentDisplay
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Get</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Set</span><span class="br0">&#40;</span><span class="kw1">ByVal</span> value <span class="kw1">As</span> CommentIndicator<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _CommentDisplay <span class="sy0">=</span> value
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Set</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Property</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">End</span> <span class="kw1">Class</span>
<span class="kw1">End</span> <span class="kw1">Namespace</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Namespace srAlerts
    Partial Public Class Alert

        Private _CommentDisplay As CommentIndicator
        &lt;System.Xml.Serialization.XmlIgnore()&gt; _
        Public Property CommentDisplay() As CommentIndicator
            Get
                Return _CommentDisplay
            End Get
            Set(ByVal value As CommentIndicator)
                _CommentDisplay = value
            End Set
        End Property

    End Class
End Namespace</pre></div></div>

<p style="text-indent: 30pt;">srAlerts is the namespace of my web service. Alert is the name of the class defined in my web service. CommentIndicatory is the GUI control that I was linking to.</p>
<p style="text-indent: 30pt;">The critical part though, is the attribute. Without the System.Xml.Serialization.XmlIgnore attribute, you&#8217;ll get an exception on the constructor of the web service Reference.vb file:</p>
<p>Exception has been thrown by the target of an invocation.<br />
-There was an error reflecting type &#8216;Alerts.srAlerts.BaseResponse&#8217;.<br />
&#8211;There was an error reflecting type &#8216;Alerts.srAlerts.GetAlertDataResponse&#8217;.<br />
&#8212;There was an error reflecting property &#8216;Alerts&#8217;.<br />
&#8212;-There was an error reflecting type &#8216;Alerts.srAlerts.Alert&#8217;.<br />
&#8212;&#8211;There was an error reflecting property &#8216;CommentDisplay&#8217;.</p>
<p style="text-indent: 30pt;">It would appear that the web service system in Silverlight attempts to serialize all members of the class, even those that are defined client side in a partial class, and it gets a little confused. Using the XMLIgnore attribute forces the serializer to skip this property and allows us to use the partial class on the client side as we expected.</p>
<p style="text-indent: 30pt;">On a side note, there is also a WCF attribute: System.Runtime.Serialization.IgnoreDataMember which will NOT work for web service references.</p>
<p>-Rick</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/silverlight-partial-classing-a-webservic/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
