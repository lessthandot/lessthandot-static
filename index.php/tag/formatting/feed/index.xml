<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>formatting &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/formatting/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Changing the 1000 separator in Power View</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/changing-the-1000-separator-in-power-view/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/changing-the-1000-separator-in-power-view/#respond</comments>
		<pubDate>Tue, 11 Mar 2014 14:43:46 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Excel Reporting]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSRS]]></category>
		<category><![CDATA[business intelligence]]></category>
		<category><![CDATA[formatting]]></category>
		<category><![CDATA[power bi]]></category>
		<category><![CDATA[power view]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=2500</guid>
		<description><![CDATA[Recently I was designing a simple Power View report on top of a multi-dimensional SSAS cube. Out of the box, one of the tables looked like this: For readability purposes, a 1000 separator is added to the numeric value. However, the comma was used, as is common in the United States. In Belgium (and other [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">Recently I was designing a simple Power View report on top of a multi-dimensional SSAS cube. Out of the box, one of the tables looked like this:</p>
<p style="text-align: justify"><a style="line-height: 1.5em" href="/wp-content/uploads/2014/03/Koen_Table1.png"><img class="alignnone size-full wp-image-2506" alt="Koen_Table1" src="/wp-content/uploads/2014/03/Koen_Table1.png" width="203" height="94" /></a></p>
<p style="text-align: justify"><span style="line-height: 1.5em">For readability purposes, a 1000 se</span><span style="line-height: 1.5em">parator is added to the numeric value. However, the comma was used, as is common in the United States. In Belgium (and other countries in Europe), we use the single point as the 1000 separator and the comma as the decimal separator. Of course the business preferred to use the point as the separator. But where do we change this?</span></p>
<p style="text-align: justify"><b>In Power View itself?</b></p>
<p style="text-align: justify">When clicking on a cell in the table, you can change the formatting in the Home tab of the ribbon.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_PowerViewFormat.png"><img class="alignnone size-full wp-image-2502" alt="Koen_PowerViewFormat" src="/wp-content/uploads/2014/03/Koen_PowerViewFormat.png" width="280" height="188" /></a></p>
<p style="text-align: justify"><span style="line-height: 1.5em">First you have to set the type to </span><i style="line-height: 1.5em">Number</i><span style="line-height: 1.5em">, at which point you can select the </span><i style="line-height: 1.5em">comma style</i><span style="line-height: 1.5em">. Unfortunately, this only changes the type to </span><i style="line-height: 1.5em">Accounting</i><span style="line-height: 1.5em"> while using the same separators.</span></p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_Table2.png"><img class="alignnone size-full wp-image-2507" alt="Koen_Table2" src="/wp-content/uploads/2014/03/Koen_Table2.png" width="220" height="93" /></a></p>
<p style="text-align: justify"><span style="line-height: 1.5em">There is no way to influence what kinds of separators are used. Remarkably, you can set the comma style on, but you cannot turn it off.</span></p>
<p style="text-align: justify"><b>In the underlying cube?</b></p>
<p style="text-align: justify">I vaguely remember that Excel from time to time picks up the formatting that is specified in the cube. Maybe Power View does the same. You can set the format string of a measure in the properties pane.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_CubeFormat.png"><img class="alignnone size-full wp-image-2509" alt="Koen_CubeFormat" src="/wp-content/uploads/2014/03/Koen_CubeFormat.png" width="244" height="248" /></a></p>
<p style="text-align: justify"><span style="line-height: 1.5em">This great article by Valentino Vranken (</span><a style="line-height: 1.5em" href="http://blog.hoegaerden.be/">blog</a><span style="line-height: 1.5em">|</span><a style="line-height: 1.5em" href="https://twitter.com/ValentinoV42">twitter</a><span style="line-height: 1.5em">) details the various options for format strings: </span><a style="line-height: 1.5em" href="http://blog.hoegaerden.be/2013/06/12/formatting-numbers-ssrs/">Formatting Numbers [SSRS]</a><span style="line-height: 1.5em">. Yes, it is about SSRS, but a lot of the concepts are true for other tools as well. However, when we delve deeper into </span><a style="line-height: 1.5em" href="http://msdn.microsoft.com/en-us/library/0c899ak8.aspx#SpecifierTh">custom format strings</a><span style="line-height: 1.5em">, it becomes clear that a format string does not dictate what symbol is used, but that this is determined by the culture. As per MSDN:</span></p>
<p style="text-align: justify"><i>The NumberGroupSeparator and NumberGroupSizes properties of the current NumberFormatInfo object determine the character used as the number group separator and the size of each number group.</i></p>
<p style="text-align: justify">So we need to look into the culture used when the Power View report is run. Since we are using Power View in SharePoint, it makes sense to take a look at SharePoint.</p>
<p style="text-align: justify"><b>SharePoint to the rescue…</b></p>
<p style="text-align: justify">Let’s take a look at the site settings.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_SiteSettings.png"><img class="alignnone size-full wp-image-2505" alt="Koen_SiteSettings" src="/wp-content/uploads/2014/03/Koen_SiteSettings.png" width="154" height="276" /></a></p>
<p style="text-align: justify"><span style="line-height: 1.5em">Regional settings make sense since we need to change locale information.</span></p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_RegionalSettings.png"><img class="alignnone size-full wp-image-2503" alt="Koen_RegionalSettings" src="/wp-content/uploads/2014/03/Koen_RegionalSettings.png" width="154" height="84" /></a></p>
<p style="text-align: justify">And indeed, we can change to our beloved locale.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_RegionalSettings2.png"><img class="alignnone  wp-image-2504" alt="Koen_RegionalSettings2" src="/wp-content/uploads/2014/03/Koen_RegionalSettings2.png" width="793" height="240" srcset="/wp-content/uploads/2014/03/Koen_RegionalSettings2.png 881w, /wp-content/uploads/2014/03/Koen_RegionalSettings2-300x90.png 300w" sizes="(max-width: 793px) 100vw, 793px" /></a></p>
<p style="text-align: justify">When opening the report again Power View, we get our desired result:</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/03/Koen_Table3.png"><img class="alignnone size-full wp-image-2508" alt="Koen_Table3" src="/wp-content/uploads/2014/03/Koen_Table3.png" width="222" height="92" /></a></p>
<p style="text-align: justify"><b>Conclusion</b></p>
<p style="text-align: justify">The SharePoint regional site settings control how data is displayed in your Power View report.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/changing-the-1000-separator-in-power-view/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to pad positive and negative number with zeroes in SQL Server?</title>
		<link>/index.php/datamgmt/datadesign/how-to-pad-positive-and-negative-number/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-pad-positive-and-negative-number/#comments</comments>
		<pubDate>Fri, 24 Apr 2009 13:29:34 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[formatting]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[t-sql]]></category>

		<guid isPermaLink="false">/index.php/2009/04/how-to-pad-positive-and-negative-number/</guid>
		<description><![CDATA[You have a table with integer values and you are required to always show 8 numbers, if the length of the number is less than 8 characters then you need to pad it. Of course stuff like this should be done at the presentation layer but we all know that sometimes that means reinstalling apps [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You have a table with integer values and you are required to always show 8 numbers, if the length of the number is less than 8 characters then you need to pad it. Of course stuff like this should be done at the presentation layer but we all know that sometimes that means reinstalling apps so SQL is the easiest way. Numbers like these are usually order or customer numbers.<br />
The easiest way to pad a number in SQL is by using the following syntax</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span><span class="st0">'00000000'</span> <span class="sy0">+</span> <span class="nu0">12345</span>,<span class="nu0">8</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT RIGHT('00000000' + 12345,8)</pre></div></div>

<p>However running that will still not pad the number with zeroes. You need to convert the number to a varchar first. Run the query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span><span class="st0">'00000000'</span> <span class="sy0">+</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span>,<span class="nu0">12345</span><span class="br0">&#41;</span>,<span class="nu0">8</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT RIGHT('00000000' + CONVERT(VARCHAR(8),12345),8)</pre></div></div>

<p>That returns the output that we want</p>
<p>00012345</p>
<p>Let&#8217;s continue by creating a table and dumping some numbers in that table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #Numbers<span class="br0">&#40;</span>Num <span class="kw1">INT</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'1'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'12'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'123'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'1234'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'12345'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'123456'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'1234567'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'12345678'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'123456789'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #Numbers(Num INT)
    INSERT #Numbers VALUES('1')
    INSERT #Numbers VALUES('12')
    INSERT #Numbers VALUES('123')
    INSERT #Numbers VALUES('1234')
    INSERT #Numbers VALUES('12345')
    INSERT #Numbers VALUES('123456')
    INSERT #Numbers VALUES('1234567')
    INSERT #Numbers VALUES('12345678')
    INSERT #Numbers VALUES('123456789')</pre></div></div>

<p>Now run the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span><span class="st0">'00000000'</span> <span class="sy0">+</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span>,Num<span class="br0">&#41;</span>,<span class="nu0">8</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> #Numbers</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT RIGHT('00000000' + CONVERT(VARCHAR(8),Num),8)
    FROM #Numbers</pre></div></div>

<p>(output)<br />
00000001<br />
00000012<br />
00000123<br />
00001234<br />
00012345<br />
00123456<br />
01234567<br />
12345678<br />
0000000*</p>
<p>As you can see the last row has the value 0000000*. This is because converting to varchar(8) truncated the value. If we increase our convert and right functions to use 9 instead of 8 characters we are fine. Run the same query again.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span><span class="st0">'00000000'</span> <span class="sy0">+</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>,Num<span class="br0">&#41;</span>,<span class="nu0">9</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> #Numbers</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT RIGHT('00000000' + CONVERT(VARCHAR(9),Num),9)
    FROM #Numbers</pre></div></div>

<p>(output)<br />
000000001<br />
000000012<br />
000000123<br />
000001234<br />
000012345<br />
000123456<br />
001234567<br />
012345678<br />
123456789</p>
<p>As you can see it all looks fine now</p>
<p>What about negative values? What if you want to show -00000123 instead of -123?<br />
First insert these 4 rows</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'-122'</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'-1'</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'-777777'</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">INSERT</span> #Numbers <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'-123456789'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> INSERT #Numbers VALUES('-122')
 INSERT #Numbers VALUES('-1')
 INSERT #Numbers VALUES('-777777')
 INSERT #Numbers VALUES('-123456789')</pre></div></div>

<p>Now we will run the same query again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span><span class="st0">'00000000'</span> <span class="sy0">+</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>,Num<span class="br0">&#41;</span>,<span class="nu0">9</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> #Numbers</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT RIGHT('00000000' + CONVERT(VARCHAR(9),Num),9)
    FROM #Numbers</pre></div></div>

<p>Here is what those 4 rows look like that we just inserted</p>
<p>(output)<br />
00000-122<br />
0000000-1<br />
00-777777<br />
00000000*</p>
<p>That is not good. Here is what we will do, if the number is negative we will start with a minus sign otherwise we will use a blank and then we will concatenate and replace the minus sign with a blank. This is what it looks like in SQL</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CASE</span> &nbsp;<span class="kw1">WHEN</span> Num <span class="sy0">&lt;</span> <span class="nu0">0</span>
<span class="kw1">THEN</span> <span class="st0">'-'</span> <span class="kw1">ELSE</span> <span class="st0">''</span> <span class="kw1">END</span> <span class="sy0">+</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span><span class="st0">'000000000'</span> <span class="sy0">+</span> <span class="kw2">REPLACE</span><span class="br0">&#40;</span>Num,<span class="st0">'-'</span>,<span class="st0">''</span><span class="br0">&#41;</span>, <span class="nu0">9</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">FROM</span> #Numbers</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CASE  WHEN Num &lt; 0
THEN '-' ELSE '' END + RIGHT('000000000' + REPLACE(Num,'-',''), 9)
 FROM #Numbers</pre></div></div>

<p>And here is the output</p>
<p>(output)<br />
000000001<br />
000000012<br />
000000123<br />
000001234<br />
000012345<br />
000123456<br />
001234567<br />
012345678<br />
123456789<br />
-000000122<br />
-000000001<br />
-000777777<br />
-123456789</p>
<p>As you can see it is not that difficult to do stuff like this <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>I also updated the post on our wiki page: <a href="http://wiki.lessthandot.com/index.php/Adding_Leading_Zeros_To_Integer_Values">Adding Leading Zeros To Integer Values</a> which is part of our <a href="http://wiki.lessthandot.com/index.php/SQL_Server_Programming_Hacks_-_100%2B_List">SQL Server Programming Hacks</a> wiki section</p>
<p>
*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-pad-positive-and-negative-number/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
	</channel>
</rss>
