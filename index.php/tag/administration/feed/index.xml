<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>administration &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/administration/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>MongoDB: Using the web-based administrative tool</title>
		<link>/index.php/datamgmt/dbprogramming/mongodb-using-the-web-based/</link>
		<comments>/index.php/datamgmt/dbprogramming/mongodb-using-the-web-based/#respond</comments>
		<pubDate>Sun, 24 Feb 2013 13:14:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[bigdata]]></category>
		<category><![CDATA[mongodb]]></category>
		<category><![CDATA[nosql]]></category>
		<category><![CDATA[tools]]></category>

		<guid isPermaLink="false">/index.php/2013/02/mongodb-using-the-web-based/</guid>
		<description><![CDATA[MongoDB ships with a web-based administrative tool. You can see this tool by going to http://localhost:28017/

You can see a bunch of stuff on this screen.

However when trying any of these on top

List all commands &#124; Replica set status

Command&#8230;]]></description>
				<content:encoded><![CDATA[<p>MongoDB ships with a web-based administrative tool. You can see this tool by going to http://localhost:28017/</p>
<p>You can see a bunch of stuff on the administrative tool screen. here is a partial image.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/MongoDbAdminTool.PNG?mtime=1361716184"><img alt="MongoDB: web-based administrative tool" src="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/MongoDbAdminTool.PNG?mtime=1361716184" width="823" height="573" title="MongoDB: web-based administrative tool" /></a></div>
<p>There are a bunch of links that you can click as well. If you click on any of the links on top</p>
<p><code>List all commands | Replica set status&lt;/p&gt;
&lt;p&gt;Commands: buildInfo cursorInfo features hostInfo isMaster listDatabases replSetGetStatus serverStatus top</code></p>
<p>You get the following message </p>
<pre>REST is not enabled.  use --rest to turn on.
check that port 28017 is secured for the network too.</pre>
<p>So here is how you can fix that, open the config file mongod.cfg</p>
<p>In my case, I have the following there, yours will look different</p>
<pre>logpath=C:NoSQLmongodblogmongo.log 
dbpath=C:NoSQLmongodbdata</pre>
<p>Add the line <code>rest=true</code> at the bottom, so that it becomes</p>
<pre>logpath=C:NoSQLmongodblogmongo.log 
dbpath=C:NoSQLmongodbdata
rest=true</pre>
<p>Here is what it looks like when opened in notepad.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/MongoDBCfg.PNG?mtime=1361716194"><img alt="mongod.cfg" title ="mongod.cfg"  src="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/MongoDBCfg.PNG?mtime=1361716194" width="435" height="168" /></a></div>
<p>Save it, restart the MongoDB service. If you want to learn how to have MongoDB run as a service on Windows, take a look at <a href="/index.php/DataMgmt/DBProgramming/creating-mongodb-as-a-service">Creating MongoDB as a service on Windows 8</a>, the process should be the same for Windows 7</p>
<p>If you click on <a href="http://localhost:28017/_commands">List all commands</a> you will see a list of all the commands. Here is an image of a partial list</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/MongoDbAdminToolCommandList.PNG?mtime=1361716729"><img alt="MongoDB: List all commands" title ="MongoDB: List all commands" src="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/MongoDbAdminToolCommandList.PNG?mtime=1361716729" width="675" height="397" /></a></div>
<p>Scroll down to hostinfo and click on it you will see the following output</p>
<pre>{ "system" : { "currentTime" : { "$date" : "Sun Feb 24 09:43:31 2013" },
    "hostname" : "Denis",
    "cpuAddrSize" : 64,
    "memSizeMB" : 4095,
    "numCores" : 2,
    "cpuArch" : "x86_64",
    "numaEnabled" : false },
  "os" : { "type" : "Windows",
    "name" : "Microsoft Windows 8",
    "version" : "6.2 (build 9200)" },
  "extra" : { "pageSize" : 4096 } }</pre>
<p>You can now bookmark some of the most used commands, hostinfo for example is http://localhost:28017/hostInfo?text=1</p>
<p>Go ahead and play around with the tool, check out all the links and also explore some of the commands that are listed</p>
<p>
That is all for this post, if you are interested in my other MongoDB posts, you can find them here:<br />
<a href="/index.php/DataMgmt/DBProgramming/creating-mongodb-as-a-service">Install MongoDB as a Windows Service</a><br />
<a href="/index.php/DataMgmt/DBProgramming/doing-upserts-in-mongodb">UPSERTs with MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-how-to-sort-results">How to sort results in MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/indexes-in-mongodb">Indexes in MongoDB: A quick overview</a><br />
<a href="/index.php/DataMgmt/DBProgramming/multidocument-updates-with-mongodb">Multidocument updates with MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-how-to-include-and">MongoDB: How to include and exclude the fields you want in results</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-how-to-limit-results">MongoDB: How to limit results and how to page through results</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-backup-and-restore-databases">MongoDB: How to backup and restore databases</a><br />
<a href="/index.php/DataMgmt/DBAdmin/mongodb-how-to-restore-collections">MongoDB: How to restore collections</a><br />
<a href="/index.php/DataMgmt/DBAdmin/mongodb-how-to-backup-all">MongoDB: How to backup all the databases with one command</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-exporting-data-into-files">MongoDB: Exporting data into files</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-how-to-drop-databases">MongoDB: How to drop databases and collections</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-creating-capped-collections">MongoDB: Creating capped collections</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-returning-documents-where-fields">MongoDB: Returning documents where fields are null or not existing</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mongodb-using-the-web-based/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2011 Day 2: system tables and catalog views</title>
		<link>/index.php/datamgmt/datadesign/sql-advent-2011-day-2/</link>
		<comments>/index.php/datamgmt/datadesign/sql-advent-2011-day-2/#respond</comments>
		<pubDate>Fri, 02 Dec 2011 09:07:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[dmv]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[views]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-advent-2011-day-2/</guid>
		<description><![CDATA[With the introduction of SQL Server 2005 system tables have been deprecated, there are three new set of objects to replace system tables: Compatibility Views, Dynamic Management Views and Catalog Views.

Compatibility views replace the system tables, so while you still can use syscolumns, you should get into the habit of using sys.columns instead]]></description>
				<content:encoded><![CDATA[<p>In my <a href="/index.php/DataMgmt/DataDesign/are-you-ready-for-sql">Are you ready for SQL Server 2012 or are you still partying like it is 1999?</a> post, I wrote about how you should start using SQL Server 2005 and SQL Server 2008 functionality now in order to prepare for SQL Server 2012. I still see tons of code that is written in the pre 2005 style and people still keep using those functions, procs and statements even though SQL Server 2005 and 2008 have much better functionality.</p>
<p>With the introduction of SQL Server 2005 system tables have been deprecated, there are three new set of objects to replace system tables: Compatibility Views, Dynamic Management Views and Catalog Views. </p>
<p>Compatibility views replace the system tables, so while you still can use syscolumns, you should get into the habit of using sys.columns instead</p>
<h2>Every database</h2>
<p>The following table maps the system tables or functions that live in every database in SQL Server 2000 to their equivalent system views or functions in SQL Server 2008.</p>
<div class="tables">
<table>
<tr>
<th>	System table or function	</th>
<th>	System view or function	</th>
<th>	Type of view or function	</th>
</tr>
<tr>
<td>	fn_virtualfilestats	</td>
<td>	sys.dm_io_virtual_file_stats	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	syscolumns	</td>
<td>	sys.columns	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	syscomments	</td>
<td>	sys.sql_modules	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysconstraints	</td>
<td>	sys.check_constraints	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.default_constraints	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.key_constraints	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.foreign_keys	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysdepends	</td>
<td>	sys.sql_expression_dependencies	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysfilegroups	</td>
<td>	sys.filegroups	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysfiles	</td>
<td>	sys.database_files	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysforeignkeys	</td>
<td>	sys.foreign_key_columns	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysindexes	</td>
<td>	sys.indexes	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.partitions	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.allocation_units	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.dm_db_partition_stats	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	sysindexkeys	</td>
<td>	sys.index_columns	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysmembers	</td>
<td>	sys.database_role_members	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysobjects	</td>
<td>	sys.objects	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	syspermissions	</td>
<td>	sys.database_permissions	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.server_permissions	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysprotects	</td>
<td>	sys.database_permissions	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.server_permissions	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysreferences	</td>
<td>	sys.foreign_keys	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	systypes	</td>
<td>	sys.types	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysusers	</td>
<td>	sys.database_principals	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysfulltextcatalogs	</td>
<td>	sys.fulltext_catalogs	</td>
<td>	Catalog view	</td>
</tr>
</table>
</div>
<p>
<h2>Master database</h2>
<p>The following table maps the system tables inside the master database in SQL Server 2000 to their equivalent system views or functions in SQL Server 2008.</p>
<div class="tables">
<table>
<tr>
<th>	System table	</th>
<th>	System views or functions	</th>
<th>	Type of view or function	</th>
</tr>
<tr>
<td>	sysaltfiles	</td>
<td>	sys.master_files	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	syscacheobjects	</td>
<td>	sys.dm_exec_cached_plans	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.dm_exec_plan_attributes ()	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.dm_exec_sql_text	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.dm_exec_cached_plan_dependent_objects	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	syscharsets	</td>
<td>	sys.syscharsets	</td>
<td>	Compatibility view	</td>
</tr>
<tr>
<td>	sysconfigures	</td>
<td>	sys.configurations	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	syscurconfigs	</td>
<td>	sys.configurations	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysdatabases	</td>
<td>	sys.databases	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysdevices	</td>
<td>	sys.backup_devices	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	syslanguages	</td>
<td>	sys.syslanguages	</td>
<td>	Compatibility view	</td>
</tr>
<tr>
<td>	syslockinfo	</td>
<td>	sys.dm_tran_locks	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	syslocks	</td>
<td>	sys.dm_tran_locks	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	syslogins	</td>
<td>	sys.server_principals	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.sql_logins	</td>
<td>		</td>
</tr>
<tr>
<td>	sysmessages	</td>
<td>	sys.messages	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysoledbusers	</td>
<td>	sys.linked_logins	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysopentapes	</td>
<td>	sys.dm_io_backup_tapes	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	sysperfinfo	</td>
<td>	sys.dm_os_performance_counters	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	sysprocesses	</td>
<td>	sys.dm_exec_connections	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.dm_exec_sessions	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>		</td>
<td>	sys.dm_exec_requests	</td>
<td>	Dynamic management view	</td>
</tr>
<tr>
<td>	sysremotelogins	</td>
<td>	sys.remote_logins	</td>
<td>	Catalog view	</td>
</tr>
<tr>
<td>	sysservers	</td>
<td>	sys.servers	</td>
<td>	Catalog view	</td>
</tr>
</table>
</div>
<p>As you can see in the tables above, the sysobjects system table maps to sys.objects.  In SQL Server 2005 we actually have a couple of views that take parts of sysobjects, below are these views</p>
<p>sys.tables<br />
sys.procedures<br />
sys.views<br />
sys.triggers</p>
<p>As you can see, you now have a view for just tables, triggers, procedures and views.</p>
<p></p>
<h2>Some examples</h2>
<p>Although Dynamic Management Views are listed in the tables above, I will not give examples in this post, I will have another post in this series focusing just on Dynamic Management Views.</p>
<p>If you wanted a list of all stored procedures in SQL Server 2000, you would typically do something like the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name 
<span class="kw1">FROM</span> sysobjects
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'P'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name 
FROM sysobjects
WHERE type = 'P'</pre></div></div>

<p>In SQL Server 2005 and up, you now have a view just for procedures</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name 
<span class="kw1">FROM</span> sys.<span class="me1">procedures</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name 
FROM sys.procedures</pre></div></div>

<p>If you run those two queries you might get a different number of rows back, this is because the sys.procedures view has these 4 kinds of procedures</p>
<ul>
<li>P = SQL Stored procedure</li>
<li>X = Extended stored procedure</li>
<li>RF = Replication-filter-procedure</li>
<li>PC = Assembly (CLR) stored-procedure</li>
</ul>
<p>In order to make them the same you would do</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name <span class="kw1">FROM</span> sysobjects
<span class="kw1">WHERE</span> type <span class="sy0">IN</span> <span class="br0">&#40;</span> <span class="st0">'P'</span>,<span class="st0">'PC'</span>,<span class="st0">'RF'</span>,<span class="st0">'X'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name FROM sysobjects
WHERE type IN ( 'P','PC','RF','X')</pre></div></div>

<p>That is the same as</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name 
<span class="kw1">FROM</span> sys.<span class="me1">procedures</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name 
FROM sys.procedures</pre></div></div>

<p>A quick count of all the procs grouped by type</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span>, type_desc
<span class="kw1">FROM</span> sys.<span class="me1">procedures</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> type_desc</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT COUNT(*), type_desc
FROM sys.procedures
GROUP BY type_desc</pre></div></div>

<p>A nice thing about these new views is that they have creation as well as modified dates, you can quickly see if a proc was ever modified or not</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name,
&nbsp; &nbsp; <span class="kw1">CASE</span> <span class="kw1">WHEN</span> create_date <span class="sy0">=</span> modify_date 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">THEN</span> <span class="st0">'Never Modified'</span> 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">ELSE</span> <span class="st0">'Modified'</span> <span class="kw1">END</span> <span class="kw1">AS</span> modified
&nbsp;<span class="kw1">FROM</span> sys.<span class="me1">procedures</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name,
	CASE WHEN create_date = modify_date 
			THEN 'Never Modified' 
		ELSE 'Modified' END AS modified
 FROM sys.procedures</pre></div></div>

<p>Or if you just want a list of procedures that have never been modified (by way of an alter statement, not a drop and a create of course)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name
&nbsp;<span class="kw1">FROM</span> sys.<span class="me1">procedures</span>
<span class="kw1">WHERE</span> create_date <span class="sy0">=</span> modify_date</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name
 FROM sys.procedures
WHERE create_date = modify_date</pre></div></div>

<hr />
Let&#8217;s look at some other examples. The sys.messages view in  the master database is a replacement for the sysmessages system table. If you run these 2 queries which bring back the same error message you will notice something interesting.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> master..<span class="me1">sysmessages</span>
<span class="kw1">WHERE</span> error<span class="sy0">=</span> <span class="nu0">1481</span>
<span class="sy0">AND</span> msglangid <span class="sy0">=</span> <span class="nu0">1033</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> master.<span class="me1">sys</span>.<span class="me1">messages</span>
<span class="kw1">WHERE</span> &nbsp;message_id <span class="sy0">=</span><span class="nu0">1481</span>
<span class="sy0">AND</span> language_id <span class="sy0">=</span> <span class="nu0">1033</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * 
FROM master..sysmessages
WHERE error= 1481
AND msglangid = 1033


SELECT * 
FROM master.sys.messages
WHERE  message_id =1481
AND language_id = 1033</pre></div></div>

<p>output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p><em>Database mirroring could not repair physical page %S_PGID in database &#8220;%.*ls&#8221;. The mirroring partner could not be contacted or did not provide a copy of the page. Possible reasons include a lack of network connectivity or that the copy of the page kept by</p>
<p>Database mirroring could not repair physical page %S_PGID in database &#8220;%.*ls&#8221;. The mirroring partner could not be contacted or did not provide a copy of the page. Possible reasons include a lack of network connectivity or that the copy of the page kept by the partner is also corrupted. To learn whether the partners are currently connected, view the mirroring_state_desc column of the sys.database_mirroring catalog view. If they are connected, for information about why the partner could not provide a copy of the page, examine its error log entries from around the time when this message was reported. Try to resolve the error and resume mirroring.</em></p>
<p>As you can see the text is truncated to 255 characters in the old system views, in the new view you see the whole message.</p>
<p>I only showed you examples for two of these tables, if I did all of them this post would take forever to write. You can investigate the other tables by yourself, maybe pick one or two a day and mess around with some queries.</p>
<p>I would say, take a look at these views, start using them, learn them well because they will help you do your job better.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sql-advent-2011-day-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>List all stored procedures that run at startup in SQL Server</title>
		<link>/index.php/datamgmt/datadesign/list-all-stored-procedures-that/</link>
		<comments>/index.php/datamgmt/datadesign/list-all-stored-procedures-that/#comments</comments>
		<pubDate>Tue, 15 Nov 2011 15:21:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2011/11/list-all-stored-procedures-that/</guid>
		<description><![CDATA[You know that you can mark a proc to run at startup in SQL Server. What you have to do is create the stored procedure in the master database and after that you have to set the startup flag to true. If your stored procedure name is spMyProc, the code wou&#8230;]]></description>
				<content:encoded><![CDATA[<p>You know that you can mark a proc to run at startup in SQL Server. What you have to do is create the stored procedure in the master database and after that you have to set the startup flag to true. If your stored procedure name is spMyProc, the code would look like this.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> <span class="kw3">sp_procoption</span> N<span class="st0">'spMyProc'</span>, <span class="st0">'startup'</span>, <span class="st0">'on'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec sp_procoption N'spMyProc', 'startup', 'on'</pre></div></div>

<p>What if you want to list all the stored procedures on your server which are set to run on startup? Here is how you do this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name,create_date,modify_date
<span class="kw1">FROM</span> sys.<span class="me1">procedures</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECTPROPERTY</span><span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span>, <span class="st0">'ExecIsStartup'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name,create_date,modify_date
FROM sys.procedures
WHERE OBJECTPROPERTY(OBJECT_ID, 'ExecIsStartup') = 1</pre></div></div>

<p>That query will give you the name, creation date and modification date of every stored procedure that is set to run on startup.</p>
<p>Aaron Bertrand pointed out that you can also use the is_auto_executed column, here is what the query would look like now, much easier to read</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name,create_date,modify_date
<span class="kw1">FROM</span> sys.<span class="me1">procedures</span>
<span class="kw1">WHERE</span> is_auto_executed <span class="sy0">=</span> <span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name,create_date,modify_date
FROM sys.procedures
WHERE is_auto_executed = 1</pre></div></div>

<p>Creating stored procedures to run on startup is a nice way of ensuring that certain flags/tables/users are created/updated/deleted when the SQL instance is restarted, this way you won&#8217;t forget to run that code that you have tucked away in some folder that needs to be run to initialize some data on startup.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/list-all-stored-procedures-that/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>How to move datafiles to a new drive in SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-move-datafiles-to-a-new-drive-in/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-move-datafiles-to-a-new-drive-in/#comments</comments>
		<pubDate>Fri, 17 Dec 2010 15:18:32 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/12/how-to-move-datafiles-to-a-new-drive-in/</guid>
		<description><![CDATA[For one of the databases that I have to manage we were running out of space, so we got a shiny new 10.9 TB sized drive.  

I was asked to move some files used by one database to this new drive. I decided to write up a little blog post just in case you&#8230;]]></description>
				<content:encoded><![CDATA[<p>For one of the databases that I have to manage we were running out of space, so we got a shiny new 10.9 TB sized drive.</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt/Drive.PNG" alt="" title="" width="359" height="506" /></p>
<p>I was asked to move some files used by one database to this new drive. I decided to write up a little blog post just in case you ever need to do this so that you don&#8217;t backup and restore (with move) because there is another way.</p>
<p>First create this test database with 3 data files and 1 log file, the data files will be in the C:DB_Files directory</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>TestMove<span class="br0">&#93;</span> <span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DB_FilesTestMove.mdf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>, 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove2'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DB_FilesTestMove2.ndf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>, 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove3'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:DB_FilesTestMove3.ndf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , FILEGROWTH <span class="sy0">=</span> 1024KB <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'TestMove_log'</span>, 
FILENAME <span class="sy0">=</span> N<span class="st0">'C:MSSQLDATATestMove_log.ldf'</span> ,
&nbsp;<span class="kw1">SIZE</span> <span class="sy0">=</span> 1024KB , FILEGROWTH <span class="sy0">=</span> <span class="nu0">10</span><span class="sy0">%</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master
GO

CREATE DATABASE [TestMove] ON  PRIMARY 
( NAME = N'TestMove', FILENAME = N'C:DB_FilesTestMove.mdf' , SIZE = 2048KB , FILEGROWTH = 1024KB ), 
( NAME = N'TestMove2', FILENAME = N'C:DB_FilesTestMove2.ndf' , SIZE = 2048KB , FILEGROWTH = 1024KB ), 
( NAME = N'TestMove3', FILENAME = N'C:DB_FilesTestMove3.ndf' , SIZE = 2048KB , FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'TestMove_log', 
FILENAME = N'C:MSSQLDATATestMove_log.ldf' ,
 SIZE = 1024KB , FILEGROWTH = 10%)
GO</pre></div></div>

<p>Now just create a test table, insert one row and do a simple select.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestMove
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Test<span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span>
GO
<span class="kw1">INSERT</span> Test <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Test</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestMove
GO

CREATE TABLE Test(id INT)
GO
INSERT Test VALUES(1)
GO

SELECT * FROM Test</pre></div></div>

<p>Now instead of having the data files in the C:DB_Files we want to move them to the D:DB_Files directory. You can use ALTER DATABASE&#8230;MODIFY FILE to do that, you just specify the new file locations, just make sure that the directory exists.</p>
<p>The following code will change the location of the data files</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master;
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">MODIFY</span> <span class="kw1">FILE</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; NAME <span class="sy0">=</span> TestMove,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> N<span class="st0">'D:DB_FilesTestMove.mdf'</span>
<span class="br0">&#41;</span>;
GO
&nbsp;
<span class="kw1">USE</span> master;
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">MODIFY</span> <span class="kw1">FILE</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; NAME <span class="sy0">=</span> TestMove2,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> N<span class="st0">'D:DB_FilesTestMove2.ndf'</span>
<span class="br0">&#41;</span>;
GO
&nbsp;
<span class="kw1">USE</span> master;
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">MODIFY</span> <span class="kw1">FILE</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; NAME <span class="sy0">=</span> TestMove3,
&nbsp; &nbsp; FILENAME <span class="sy0">=</span> N<span class="st0">'D:DB_FilesTestMove3.ndf'</span>
<span class="br0">&#41;</span>;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master;
GO
ALTER DATABASE TestMove
MODIFY FILE
(
    NAME = TestMove,
    FILENAME = N'D:DB_FilesTestMove.mdf'
);
GO

USE master;
GO
ALTER DATABASE TestMove
MODIFY FILE
(
    NAME = TestMove2,
    FILENAME = N'D:DB_FilesTestMove2.ndf'
);
GO

USE master;
GO
ALTER DATABASE TestMove
MODIFY FILE
(
    NAME = TestMove3,
    FILENAME = N'D:DB_FilesTestMove3.ndf'
);
GO</pre></div></div>

<p>You will see the following message</p>
<blockquote><p>The file &#8220;TestMove&#8221; has been modified in the system catalog. The new path will be used the next time the database is started.<br />
The file &#8220;TestMove2&#8221; has been modified in the system catalog. The new path will be used the next time the database is started.<br />
The file &#8220;TestMove3&#8221; has been modified in the system catalog. The new path will be used the next time the database is started.</p></blockquote>
<p><strong>[EDIT]</strong><br />
Paul Randal mentioned that you don&#8217;t have to shut down SQL Server, you can also just take the database OFFLINE, see here for more detail: http://www.sqlmag.com/blogs/SQLServerQuestionsAnswered/SQLServerQuestionsAnswered/tabid/1977/entryid/72328/A-Safe-Method-for-Moving-a-Database-to-a-New-Location.aspx<br />
<strong>[/EDIT]</strong></p>
<p>Now, the first thing you want to do is stop SQL Server or take the database offline. You can stop SQL Server in a variety of ways, if you want to use the command line (NET STOP), take a look here: <a href="http://wiki.lessthandot.com/index.php/Using_the_Command_Line_to_manage_SQL_Server_services">Using the Command Line to manage SQL Server services</a>. You can also use the SQL Server Configuration manager, services under Control Panel/Administrative Tools or you can use SSMS.</p>
<p>To take the database offline, you can run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">SET</span> OFFL<span class="sy0">IN</span>E;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE TestMove
SET OFFLINE;</pre></div></div>

<p>If you do not stop SQL Server or take the database offline, you won&#8217;t be able to move the files and you will get a message like the one below<br />
<img src="/wp-content/uploads/blogs/DataMgmt/cannotmove.PNG" alt="" title="" width="479" height="303" /><br />
</p>
<p>After SQL Server is stopped, move the files to the new location</p>
<p>In my case, here is where the files are currently C:DB_Files<br />
<img src="/wp-content/uploads/blogs/DataMgmt/beforeMove2.PNG" alt="" title="" width="613" height="451" /></p>
<p>And after the move, this is the location of the files now D:DB_Files<br />
<br />
<img src="/wp-content/uploads/blogs/DataMgmt/afterMove2.PNG" alt="" title="" width="607" height="445" /></p>
<p>Start SQL Server again or make the database online again.</p>
<p>To set the database online, run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> TestMove
<span class="kw1">SET</span> ONL<span class="sy0">IN</span>E;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE TestMove
SET ONLINE;</pre></div></div>

<p>After SQL Server is up and running. run the following query.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name, physical_name <span class="kw1">AS</span> CurrentLocation, state_desc
<span class="kw1">FROM</span> sys.<span class="me1">master_files</span>
<span class="kw1">WHERE</span> database_id <span class="sy0">=</span> <span class="kw2">DB_ID</span><span class="br0">&#40;</span>N<span class="st0">'TestMove'</span><span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name, physical_name AS CurrentLocation, state_desc
FROM sys.master_files
WHERE database_id = DB_ID(N'TestMove');</pre></div></div>

<div class="tables">
<p>You should see something like the following</p>
<table>
<tr>
<th>name</th>
<th>	CurrentLocation</th>
<th>	state_desc</th>
</tr>
<tr>
<td>TestMove</td>
<td>D:DB_FilesTestMove.mdf</td>
<td>ONLINE</td>
</tr>
<tr>
<td>TestMove_log</td>
<td>C:MSSQLDATATestMove_log.ldf</td>
<td>ONLINE</td>
</tr>
<tr>
<td>TestMove2</td>
<td>D:DB_FilesTestMove2.ndf</td>
<td>ONLINE</td>
</tr>
<tr>
<td>TestMove3</td>
<td>D:DB_FilesTestMove3.ndf</td>
<td>ONLINE</td>
</tr>
<table></table>
</table>
</div>
<p>Finally, just run this simple query again to verify that you didn&#8217;t corrupt anything</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestMove
GO
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Test</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestMove
GO

SELECT * FROM Test</pre></div></div>

<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-move-datafiles-to-a-new-drive-in/feed/</wfw:commentRss>
		<slash:comments>12</slash:comments>
		</item>
		<item>
		<title>Interview With Rod Colledge About The Book SQL Server 2008 Administration in Action</title>
		<link>/index.php/datamgmt/datadesign/interview-with-rod-colledge-about-the-bo/</link>
		<comments>/index.php/datamgmt/datadesign/interview-with-rod-colledge-about-the-bo/#comments</comments>
		<pubDate>Mon, 12 Oct 2009 16:35:02 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2009/10/interview-with-rod-colledge-about-the-bo/</guid>
		<description><![CDATA[I read SQL Server 2008 Administration in Action and really like this book, I have reviewed SQL Server 2008 Administration in Action here: Review of SQL Server 2008 Administration in Action I decided to ping Rod Colledge about doing an interview and he said yes. Some of the questions came from our forum users in [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I read <a href="http://www.amazon.com/gp/product/193398872X?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=193398872X">SQL Server 2008 Administration in Action</a> and really like this book, I have reviewed SQL Server 2008 Administration in Action here: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/review-of-sql-server-2008-administration">Review of SQL Server 2008 Administration in Action</a></p>
<p>I decided to ping Rod Colledge about doing an interview and he said yes. Some of the questions came from our forum users in the following thread: http://forum.lessthandot.com/viewtopic.php?f=17&amp;t=8089</p>
<p>Below is the interview.</p>
<p><strong>What level of competence should a reader have before reading this book? Is this book good for accidental DBAs?</strong></p>
<p>It’s interesting that you ask about the &#8220;accidental DBA&#8221;. I recently blogged <a href="http://www.rodcolledge.com/rod_colledge/2009/08/the-great-dba-schism.html">The Great DBA Schism</a> in which I noted that these types of DBAs are becoming much more common. My book is perfect for these DBAs as they’re typically bright people with experience in other areas who want to quickly learn DBA best practices without having to wade through lots of text. </p>
<p>A lot of books patronize their readers and drag them through painful reproductions of simple tasks. Worse still, these books often reproduce information that is easily accessible from other free sources, for example, Books Online. As a result, the page count blows out, and most of the book goes unread.</p>
<p>With my book, I’ve avoided reproducing such information and spent more time on explaining why things are important, and where appropriate, directed the reader to the appropriate resource for more information should they need it. The end result is a concise book, and one that concentrates on best practices. </p>
<p>I’ve had great feedback from both experienced and new DBAs, and although the book has “SQL Server 2008” in its title, its major themes are applicable to earlier versions as well.</p>
<p><strong>What are some of the pitfalls that catch DBAs over and over again?</strong></p>
<p>SQL Server is often sold on the premise of a low administration overhead. While that’s true (and good), it often results in DBAs becoming complacent about the database and ignoring important proactive maintenance tasks. Things like relying on autogrow and leaving the database in full recovery mode (without taking transaction log backups), are classic examples of this complacency.</p>
<p><strong>What are the most important things a person can do to become an exceptional DBA?</strong></p>
<p>Become familiar with your customer’s service level agreements (SLAs), be cautiously pessimistic when planning for disaster, and spend time each day on research/learning.</p>
<p>Firstly, SLAs. SLAs are crucial in order to build appropriate solutions that meet the customer’s expectations without wasting money better spent in other areas. DBAs often design database infrastructure in the absence of SLAs. That’s like an architect who assumes their client doesn’t need any more than 3 bedrooms, but must have a full size tennis court in the backyard.</p>
<p>Secondly, disaster recovery planning. Disasters happen, and we need to be prepared for a wide variety of them. The last thing you want is to be confronted with a production problem at 3am that you’ve never thought about before. In those situations, the adrenaline is surging and you’re likely to make silly mistakes. Simulate a wide variety of different types of disasters, and practice recovering from them in a test environment. When they happen for real, you’ll be more prepared and calm. Further, this process exposes any weaknesses you have in your current setup, and gives you the chance to fix them before an actual disaster strikes.</p>
<p>Finally, research. There’s only so much you can learn in your current job, and the longer you stay in that job, the less opportunity you have to further your knowledge. Regularly reading SQL Server newsgroups/forums are a fantastic (and low risk) way of expanding your horizons by enabling you to peer into other people’s problems, think about how you would go about solving them, and seeing how others would solve them.</p>
<p><strong>Can you list any third party tools that you find useful to have as a SQL Server developer/admin?</strong></p>
<p>I can’t live without Redgate’s <a href="http://www.red-gate.com/products/SQL_Compare/index.htm">SQL Compare</a> and Quest’s <a href="http://www.quest.com/litespeed-for-sql-server/">Litespeed</a>. I use both of those on a daily basis.</p>
<p><strong>Do you think the resource governor in sql server 2008 answers the DBAs prayers to finally keeping ad-hoc queries from killing overall database server performance?</strong></p>
<p>Almost <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /> It’s a great move in the right direction. If only we could constrain disk and network resources in the same way as CPU and memory. Hopefully that will be addressed in the next version of SQL Server.</p>
<p>The other interesting thing about Resource Governor is that as well as constraining resource usage, we can also use it to measure resource usage by group, and use that for time costing purposes &#8211; like they used to do in the old mainframe days.</p>
<p><strong>Will DBAs finally realize high availability with mirroring is not a disasterrecovery solution after reading SQL Server 2008 Administration in Action?</strong></p>
<p>Great question. High availability and disaster recovery are different things, and DBAs often confuse the two. High availability solutions such as database mirroring are designed to increase the availability of a database during planned and unplanned downtime. Disaster/recovery planning is about all of the things that need to happen before, during and after a disaster to minimize data loss.</p>
<p>Effective disaster recovery planning is as much a state of mind as it is a feature or switch. DBAs often make the mistake of thinking that their disaster recovery planning begins and ends with a single feature such as database mirroring. Mirroring will not automatically protect every database on a server, nor will it enable you to recover to a specific point in time, and unless the client connections are SNAC enabled, they won’t automatically redirect to the mirroring partner in the event of a failure.</p>
<p>Mirroring is a great feature, but it has its limitations, and needs to be used in the appropriate way.</p>
<p><strong>For seasoned DBAs that have seen most of the bad things that go along with the job, would SQL Server 2008 Administration in Action still benefit them and are there particular sections you recommend to key in on for those level DBAs?</strong></p>
<p>At the close of each chapter, I’ve got a summarized list of best practice bullet points. Perhaps the best way for experienced DBAs to read the book is to read the best practice list first, and then open the chapter to the appropriate section should they need further information/clarification.</p>
<p>For experienced DBAs that haven’t yet upgraded to SQL Server 2008, I’ve made sure that new 2008 features are clearly marked, so they can target-read those sections. I’ve also spent a bit of time on the 2008 upgrade process in the installation chapter, including different techniques to minimize the upgrade time, such as using transaction log shipping.</p>
<p><strong>What&#8217;s the next step for a DBA after reading this book?</strong></p>
<p>Each chapter has a link to a specific page on <a href="http://sqlcrunch.com/">SQLCrunch.com</a>, the website I created and run. This site includes summarized links to best practice articles, whitepapers and blogs from Microsoft and other SQL Server MVPs. This is a great way to obtain further information on topics of interest.</p>
<p>My hope is that DBAs will also read Appendix A, Top 25 DBA worst practices, and try and eliminate as many as those as possible.</p>
<p><strong>Does a DBA need to know T-SQL to do his job effectively?</strong></p>
<p>Yes. Manually clicking through wizards is possibly ok for managing one or two small servers, but automation is crucial for managing large and complex environments. Anything that occurs more than once should be scripted and scheduled with appropriate monitoring and alerting systems.</p>
<p>One of the nice things about SQL Server 2008 (also included in 2005) is that most dialog boxes include a “script” button that converts what you’ve just done in the dialog box into a T-SQL script. This is a great way of learning how to use T-SQL, as well as understanding what SQL Server is doing behind the scenes.</p>
<p><strong>What new features in Sql Server 2008 are you most excited about as a DBA?</strong></p>
<p>Policy-based management is without a doubt the best new feature for DBAs. It enables us to start moving from exception-based management (dealing with all the things that go wrong) to intent-based management; for example, make this production server the same as all those other production servers. For large and complex SQL Server environments, it’s absolutely brilliant, particularly when combined with the Central Management Servers feature which lets us evaluate, and in some cases, correct, policy compliance across large groups of servers in a single action.</p>
<p>The Management Data Warehouse and Data Collector features are also very welcome, enabling us to easily collect performance related metrics for use in a baseline analysis exercise. Resource Governor, which we spoke about earlier, is also great, particularly for constraining resources in mixed use environments such as servers used for both line of business data entry and reporting.</p>
<p>The list goes on; backup compression, transparent data encryption and automatic page recovery with database mirroring. These are all great features, and makes our lives a lot easier.</p>
<p><strong>Which chapter was the hardest to write and can you explain why?</strong></p>
<p>The first chapter (which doesn’t exist anymore) <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /> I wrote that chapter about 9 times in various different ways as I searched around for the best “feel” for the book.</p>
<p>Writing a (good) book is hard work. You need to engage the reader, gain their trust, and hopefully teach them something as well. I hope I’ve succeeded in that task.</p>
<p><strong>What SQL books are on your bookshelf?</strong></p>
<p>Grant Fritchey’s Query Performance Tuning Distilled, and Kalen Delaney’s Inside/Internals series. I’m also spending more time in the Business Intelligence space, so I’m stocking up on a lot of books in that area as well. </p>
<p>I was fortunate to be involved in the production of the upcoming SQL Server MVP Deep Dives book which features collected works from your good self :-). That’s going to be a blockbuster book for SQL Server fans, and I can’t wait to get the hard copy at SQLPass next month.</p>
<p><strong>Where can we expect to see you in 2009/2010? Any conferences, seminars, trade shows or classrooms perhaps?</strong></p>
<p>You can see me on the golf course and at the bar <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Beyond that, I’m looking forward to <a href="http://summit2009.sqlpass.org/Agenda/ProgramSessions/DBAsBehavingBadlyWorstPracticesfor.aspx">speaking at SQLPASS</a> this year, where I hope to meet lots of fantastic and like minded SQL Server enthusiasts. I also enjoy travelling and presenting at local SQL Server user groups, so I’m hoping to be invited to speak at lots of different groups next year!</p>
<p>Thanks again to Rod for doing the interview, below are 2 chapters that you can download to check out the book</p>
<p>Sample chapter 4 <a href="http://www.manning.com/colledge/SampleCh04.pdf">Installing and upgrading SQL Server 2008</a><br />
Sample chapter 10 <a href="http://www.manning.com/colledge/SampleCh10.pdf">Backup and recovery</a></p>
<p>There is some more info about the book on the publisher&#8217;s website: http://www.manning.com/colledge/</p>
<p>You can also checkout the book on Amazon for more reviews: <a href="http://www.amazon.com/gp/product/193398872X?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=193398872X">SQL Server 2008 Administration in Action</a></p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/interview-with-rod-colledge-about-the-bo/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>Find Out The Recovery Model For Your Database</title>
		<link>/index.php/datamgmt/datadesign/find-out-the-recovery-model-for-your-dat/</link>
		<comments>/index.php/datamgmt/datadesign/find-out-the-recovery-model-for-your-dat/#respond</comments>
		<pubDate>Sat, 30 Aug 2008 12:18:16 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2008/08/find-out-the-recovery-model-for-your-dat/</guid>
		<description><![CDATA[You want to quickly find out what the recovery model is for your database but you don&#8217;t want to start clicking and right-clicking in SSMS/Enterprise Manager to get that information. This is what you can do, you can use databasepropertyex to get that info. Replace &#8216;msdb&#8217; with your database name T-SQL1 select databasepropertyex&#40;'msdb','Recovery'&#41; select databasepropertyex('msdb','Recovery') [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You want to quickly find out what the recovery model is for your database but you don&#8217;t want to start clicking and right-clicking in SSMS/Enterprise Manager to get that information. This is what you can do, you can use databasepropertyex to get that info. Replace &#8216;msdb&#8217; with your database name</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="kw2">databasepropertyex</span><span class="br0">&#40;</span><span class="st0">'msdb'</span>,<span class="st0">'Recovery'</span><span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select databasepropertyex('msdb','Recovery') </pre></div></div>

<p>What if you want it for all databases in one shot? No problem here is how, this will work on SQL Server version 2000</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name,<span class="kw2">DATABASEPROPERTYEX</span><span class="br0">&#40;</span>name,<span class="st0">'Recovery'</span><span class="br0">&#41;</span> 
&nbsp;<span class="kw1">from</span> sysdatabases</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name,DATABASEPROPERTYEX(name,'Recovery') 
 from sysdatabases</pre></div></div>

<p>For SQL Server 2005 and up, you should use the following command</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> name,recovery_model_desc
<span class="kw1">from</span> sys.<span class="me1">databases</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select name,recovery_model_desc
from sys.databases</pre></div></div>

<p>I have also added this to our SQL Server admin Wiki here: <a href="http://wiki.lessthandot.com/index.php/Find_Out_The_Recovery_Model_For_Your_Database">Find Out The Recovery Model For Your Database</a><br />
Make sure to check out the other wiki entries</p>
<p>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/find-out-the-recovery-model-for-your-dat/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to Rebuild System Databases in SQL Server 2008</title>
		<link>/index.php/datamgmt/datadesign/title-3/</link>
		<comments>/index.php/datamgmt/datadesign/title-3/#comments</comments>
		<pubDate>Fri, 29 Aug 2008 16:45:11 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[system databases]]></category>

		<guid isPermaLink="false">/index.php/2008/08/title-3/</guid>
		<description><![CDATA[The PSS SQL Server Engineers made a nice blogpost explaining How to Rebuild System Databases in SQL Server 2008 In SQL Server 2005, we introduced a different method than in previous versions to rebuild system databases (affectionately known as &#8220;rebuild master&#8221;). You were required to use the setup.exe program with command line switches. This is [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The PSS SQL Server Engineers made a nice blogpost explaining <a href="http://blogs.msdn.com/psssql/archive/2008/08/29/how-to-rebuild-system-databases-in-sql-server-2008.aspx">How to Rebuild System Databases in SQL Server 2008</a></p>
<blockquote><p>In SQL Server 2005, we introduced a different method than in previous versions to rebuild system databases (affectionately known as &#8220;rebuild master&#8221;). You were required to use the setup.exe program with command line switches.</p>
<p>This is no different in SQL Server 2008 but the command line switches have changed some and the process behind the scenes to rebuild the system databases (master, model, and msdb) is also a bit different.</p></blockquote>
<p>The cool part about the way they are doing this is that you don&#8217;t need your DVD anymore!</p>
<p>You should bookmark that page immediately so that you can find it when you need and before you suffer that enormous panic attack <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/title-3/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
