<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>xsd &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/xsd/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Creating A XSD Schema From A Table In SQL Server With FOR XML Syntax</title>
		<link>/index.php/datamgmt/datadesign/creating-a-xsd-schema-from-a-table-in-sq/</link>
		<comments>/index.php/datamgmt/datadesign/creating-a-xsd-schema-from-a-table-in-sq/#comments</comments>
		<pubDate>Mon, 11 May 2009 17:21:31 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[xml]]></category>
		<category><![CDATA[xsd]]></category>

		<guid isPermaLink="false">/index.php/2009/05/creating-a-xsd-schema-from-a-table-in-sq/</guid>
		<description><![CDATA[You have a table and you would like to create a XSD schema based on that table. What is the easiest way to do that in SQL Server? The easiest way to do that would be to use FOR XML syntax with AUTO, ELEMENTS and XMLSCHEMA. If your table is named test and you want [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You have a table and you would like to create a XSD schema based on that table. What is the easiest way to do that in SQL Server? The easiest way to do that would be to use FOR XML syntax with AUTO, ELEMENTS and XMLSCHEMA. If your table is named test and you want your schema to be named TestXsdSchema then you would do the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Test <span class="kw1">FOR</span> XML AUTO, ELEMENTS, XMLSCHEMA<span class="br0">&#40;</span><span class="st0">'TestXsdSchema'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM Test FOR XML AUTO, ELEMENTS, XMLSCHEMA('TestXsdSchema')</pre></div></div>

<p>Let&#8217;s look at a complete example. First create the table below</p>
<pre>create table Test(id int identity,
SomeName varchar(53) not null,
SomeValue decimal(20,10) not null,
SomeGuid uniqueidentifier not null default newsequentialid())</pre>
<p>Now execute the following block of code</p>
<pre>DECLARE @XsdSchema xml
SET @XsdSchema = (SELECT * FROM Test FOR XML AUTO, ELEMENTS, XMLSCHEMA('TestXsdSchema'))
SELECT @XsdSchema</pre>
<p>This is the schema that gets generated</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;xsd:schema</span> <span class="re0">targetNamespace</span>=<span class="st0">&quot;TestXsdSchema&quot;</span> <span class="re0">elementFormDefault</span>=<span class="st0">&quot;qualified&quot;</span><span class="re2">&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:import</span> <span class="re0">namespace</span>=<span class="st0">&quot;http://schemas.microsoft.com/sqlserver/2004/sqltypes&quot;</span> <span class="re0">schemaLocation</span>=<span class="st0">&quot;http://schemas.microsoft.com/sqlserver/2004/sqltypes/sqltypes.xsd&quot;</span><span class="re2">/&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;Test&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:complexType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:sequence<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;id&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;sqltypes:int&quot;</span><span class="re2">/&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;SomeName&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:simpleType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;sqltypes:varchar&quot;</span> <span class="re0">sqltypes:localeId</span>=<span class="st0">&quot;1033&quot;</span> <span class="re0">sqltypes:sqlCompareOptions</span>=<span class="st0">&quot;IgnoreCase IgnoreKanaType IgnoreWidth&quot;</span> <span class="re0">sqltypes:sqlSortId</span>=<span class="st0">&quot;52&quot;</span><span class="re2">&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:maxLength</span> <span class="re0">value</span>=<span class="st0">&quot;53&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:restriction<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;SomeValue&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:simpleType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;sqltypes:decimal&quot;</span><span class="re2">&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:totalDigits</span> <span class="re0">value</span>=<span class="st0">&quot;20&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:fractionDigits</span> <span class="re0">value</span>=<span class="st0">&quot;10&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:restriction<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;SomeGuid&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;sqltypes:uniqueidentifier&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:sequence<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:complexType<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:schema<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;xsd:schema targetNamespace="TestXsdSchema" elementFormDefault="qualified"&gt;
 &lt;xsd:import namespace="http://schemas.microsoft.com/sqlserver/2004/sqltypes" schemaLocation="http://schemas.microsoft.com/sqlserver/2004/sqltypes/sqltypes.xsd"/&gt;
&lt;xsd:element name="Test"&gt;
&lt;xsd:complexType&gt;
&lt;xsd:sequence&gt;
 &lt;xsd:element name="id" type="sqltypes:int"/&gt;
&lt;xsd:element name="SomeName"&gt;
&lt;xsd:simpleType&gt;
&lt;xsd:restriction base="sqltypes:varchar" sqltypes:localeId="1033" sqltypes:sqlCompareOptions="IgnoreCase IgnoreKanaType IgnoreWidth" sqltypes:sqlSortId="52"&gt;
 &lt;xsd:maxLength value="53"/&gt;
 &lt;/xsd:restriction&gt;
 &lt;/xsd:simpleType&gt;
 &lt;/xsd:element&gt;
&lt;xsd:element name="SomeValue"&gt;
&lt;xsd:simpleType&gt;
&lt;xsd:restriction base="sqltypes:decimal"&gt;
 &lt;xsd:totalDigits value="20"/&gt;
 &lt;xsd:fractionDigits value="10"/&gt;
 &lt;/xsd:restriction&gt;
 &lt;/xsd:simpleType&gt;
 &lt;/xsd:element&gt;
 &lt;xsd:element name="SomeGuid" type="sqltypes:uniqueidentifier"/&gt;
 &lt;/xsd:sequence&gt;
 &lt;/xsd:complexType&gt;
 &lt;/xsd:element&gt;
 &lt;/xsd:schema&gt;</pre></div></div>

<p>See, that was pretty simple wasn&#8217;t it?</p>
<p>
*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/creating-a-xsd-schema-from-a-table-in-sq/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
