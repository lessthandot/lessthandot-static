<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>data warehouse &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/data-warehouse/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>PASS BI VC recording is available now</title>
		<link>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/</link>
		<comments>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/#respond</comments>
		<pubDate>Fri, 05 Dec 2014 12:18:57 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[business intelligence]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[etl]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[virtual chapter]]></category>

		<guid isPermaLink="false">/?p=3115</guid>
		<description><![CDATA[The recording of the webinar I did for the PASS BI virtual chapter is live! (Quick reminder: it was the same session as on the SQLServerDays: How to (not) torment your fellow SSIS developer?) I&#8217;m quite pleased with the recording, although I sound like a drunk German scientist sometimes. The slides can be downloaded here. Let [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The recording of the <a href="/index.php/datamgmt/ssis/pass-bi-vc-how-to-not-torment-your-fellow-ssis-developer/">webinar </a>I did for the PASS BI virtual chapter is live!<br />
(Quick reminder: it was the same session as on the SQLServerDays: <a style="color: #c04623" href="/index.php/uncategorized/speaking-at-sql-server-days-2014/">How to (not) torment your fellow SSIS developer?</a>)</p>
<p>I&#8217;m quite pleased with the recording, although I sound like a drunk German scientist sometimes.</p>
<p><iframe width="500" height="281" src="https://www.youtube.com/embed/-N7gxmAdceM?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>The slides can be downloaded <a href="http://www.slideshare.net/KoenVerbeeck/sql-server-days-2014-how-to-not-torment-your">here</a>.</p>
<p>Let me know in the comments if you like it or not!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Modeling the Agile Data Warehouse with Data Vault – Review</title>
		<link>/index.php/datamgmt/datadesign/modeling-the-agile-data-warehouse-with-data-vault-review-2/</link>
		<comments>/index.php/datamgmt/datadesign/modeling-the-agile-data-warehouse-with-data-vault-review-2/#respond</comments>
		<pubDate>Thu, 17 Jul 2014 11:18:38 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Book Review]]></category>
		<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[data modeling]]></category>
		<category><![CDATA[data vault]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=2842</guid>
		<description><![CDATA[A few months ago I followed an introductory course about the data vault modeling technique for data warehouses at a local training provider. As part of the training, I received the book Modeling the Agile Data Warehouse with Data Vault written by Hans Hultgren who also is an instructor for the official data vault certification. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">A few months ago I followed an introductory course about <a href="http://en.wikipedia.org/wiki/Data_Vault_Modeling">the data vault modeling</a> technique for data warehouses at a <a href="https://www.infosupport.com/">local training provider</a>. As part of the training, I received the book <a href="http://www.amazon.com/Modeling-Agile-Warehouse-Vault-Volume/dp/061572308X/ref=tmm_pap_title_0?ie=UTF8&amp;qid=1405584375&amp;sr=8-2">Modeling the Agile Data Warehouse with Data Vault</a> written by <a href="http://hanshultgren.wordpress.com/">Hans Hultgren</a> who also is an instructor for the official data vault certification. This blog post is a review of this book; I will not introduce the concepts of data vault modeling.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/07/datavault.jpg"><img class="alignnone wp-image-2841 size-medium" src="/wp-content/uploads/2014/07/datavault-200x300.jpg" alt="datavault" width="200" height="300" srcset="/wp-content/uploads/2014/07/datavault-200x300.jpg 200w, /wp-content/uploads/2014/07/datavault.jpg 231w" sizes="(max-width: 200px) 100vw, 200px" /></a></p>
<p style="text-align: justify">First of all I am glad I received this book for “free” (read: it was most likely included in the price of the training), because the book has a list price of a whopping $95 (Amazon fortunately gives a steep discount on the paperback edition). No, the 434-page book is not made of pure gold, as you might think, but there are quite a lot of pages in color. There are 212 figures in color in the book, so I guess this contributes to the total price, but <a href="http://www.amazon.com/Information-Dashboard-Design-At---Glance/dp/1938377001/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1405585061&amp;sr=1-1&amp;keywords=information+dashboard+design&amp;dpPl=1">Information Dashboard Design</a> is also in color and has a list price of $40, less than half of the data vault book. This is of course only relevant to printed copies, where they have to cut down trees and use quite some ink, but the Kindle edition is even more expensive and is yours for a mere $84.09. Sense, it makes none. To top it off, the book unfortunately has a bit of an amateur look-‘n-feel. The cover art and the pictures used at the start of each section aren’t exactly world class. Anyway, you can’t judge a book by its cover, so we’ll take a look at the content itself.</p>
<p style="text-align: justify">I have to say, this books reads like a breeze. I finished the book in a couple of days, despite being over 400 hundred pages. This is due to the writing style of the author but also because there are 31 (!) chapters in this book. That’s about 14 pages average for one chapter only. But as I said before, there are 212 figures and each chapter has its own title page (so 31 pages less to read) and usually some white space at the end. Because each chapter finished so quickly, you have the feeling you advance really fast through the book. There are a few spelling mistakes and typos here and there, but nothing too worse. The only thing that irritated me some times is the way the author emphasizes words. A hint: he emphasizes a lot. In almost every paragraph, there is something underlined, in italic or in bold or every possible combination of those three. This gives you the feeling you are reading a high-school text book or a supermarket tabloid. And <a href="http://practicaltypography.com/underlining.html">underlining is not done</a> (yes, I am painfully aware that the URL hyperlink is underlined). Any decent editor should have paid attention to that. Another point is that the author frequently repeats itself. I guess this is because he really wants to make a point (how fantastic data vault is compared with 3NF and dimensional modeling in some aspects), but after a few times I already got the point. No need in repeating it in almost every chapter. This is also the case for figures. There’s this one particular figure that I’ve encountered about 11 times throughout the book (sometimes in very slight variations). That is being thorough all right.</p>
<p style="text-align: justify">OK, so there may be some improvements possible for form and layout, but what about the data vault stuff itself? Well, it is explained pretty well. If you have had no exposure to data vault yet, this book will teach you a solid understanding of its principles (I consider myself to this category of readers). I guess if you are a more advanced data vault modeler, there is some nuggets here and there to pick up or you can use the book as a reference.</p>
<p style="text-align: justify">The first section (Data Vault Ensemble, which teaches you why data vault is what it is) and the third section (Working with Data Vault) really dive into data vault and how you should design such a model, but there’s a large section in the middle – Data Warehousing and Business Intelligence – which is a bunch of loosely tied chapters about a variety of subjects. Some of these chapters are in my opinion not needed to explain data vault or agile modeling. They are filler and can easily be omitted from the book. It would have made the book at least 100 pages thinner (and probably a bit cheaper in price). At the back cover Hans says “This is a guide to data vault modeling and at the same time an exploration of the broader concepts surrounding data warehousing &amp; business intelligence today”, so I should not have been that surprised about those chapters, but on the other hand, if the book contains the words “agile data warehouse” and “data vault”, I expect a deep dive into both subjects. The problem is that because of all those <em>broader concepts</em>, these two subjects don’t get the attention they deserve. Especially the agile part. From time to time the author mentions agile and how data vault can quickly adapt to changes and how fast it can be loaded because of parallelism and how agile all of this is, but it never goes any deeper. There is no treatment on how to develop the data vault in an agile project setting. How to deal with scrum or sprints or whatever. None of that. But I can still live with it, I read the book to learn more about data vault and the book succeeded in that goal. It seems the word agile is just thrown into the title to serve as link bait.</p>
<p style="text-align: justify">However, I would have liked some more detailed examples. Most of the time it is a really easy example about customers and customers classes and in some cases there is also a sale, products and employees involved, but nothing more complicated than that. This is in my opinion the biggest downside of the book. I really would have liked to see for example a whole transactional process modeled in 3NF, how it is ported into data vault and how at the end the (dimensional) data marts are generated. The book stays too basic. The last chapter of the book – titled Comparison Example – shows some tables with actual rows and data and how they are transformed. I was looking forward to that chapter while reading through the book because I hoped it would finally give a thorough hands-on example. Alas, it was the same customer table used in any other example. This book is not enough hands-on. I guess you have to follow the (paid) courses to get more hands-on material.</p>
<p style="text-align: justify">The conclusion. I may have sounded a bit harsh in the previous paragraphs, but don’t get me wrong. I liked reading the book and I definitely learned a lot about data vault. I just wished the book got more hands-on examples (and maybe a decent editor). I do recommend this book to everyone who wants a solid introduction to data vault (there are not that many alternatives to be honest).</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/modeling-the-agile-data-warehouse-with-data-vault-review-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Script to Populate Date Dimension, without Using a Cursor</title>
		<link>/index.php/datamgmt/dbprogramming/script-to-populate-date-dimension-sql-server/</link>
		<comments>/index.php/datamgmt/dbprogramming/script-to-populate-date-dimension-sql-server/#respond</comments>
		<pubDate>Tue, 22 Jan 2013 13:20:00 +0000</pubDate>
		<dc:creator><![CDATA[Sam Vanga]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[data warehouse]]></category>

		<guid isPermaLink="false">/index.php/2013/01/script-to-populate-date-dimension-sql-server/</guid>
		<description><![CDATA[Most of the scripts I've used to populate date dimension uses a cursor. Since data is loaded only once to a date dimension in the ETL life cycle, using a cursor isn't a sin. However, if you want to kick cursors out of the park, here is an alternative using Window Functions.]]></description>
				<content:encoded><![CDATA[<p>Most of the scripts I&#8217;ve used to populate date dimension uses a cursor. Since data is loaded only once to a date dimension in the ETL life cycle, using a cursor isn&#8217;t a sin.</p>
<p>Still, when I was reviewing my own code the other day, I wanted to get rid of the cursor. <em>Why not, Right</em>?</p>
<p>Here is a script that uses CTE and Window Functions to populate the date dimension.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @startdate <span class="kw1">DATE</span> <span class="sy0">=</span> <span class="st0">'20000101'</span>
&nbsp; &nbsp; , @enddate <span class="kw1">DATE</span> <span class="sy0">=</span> <span class="st0">'20301231'</span> ;
&nbsp;
<span class="kw1">WITH</span> c
<span class="kw1">AS</span> <span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span>&nbsp; Num <span class="sy0">=</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span> <span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">-</span> <span class="nu0">1</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> sys.<span class="me1">columns</span> c
&nbsp; &nbsp; <span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sys.<span class="me1">columns</span> c1
&nbsp; &nbsp; <span class="br0">&#41;</span>
, d
<span class="kw1">AS</span> <span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span>&nbsp; <span class="br0">&#91;</span><span class="kw1">date</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEADD</span><span class="br0">&#40;</span><span class="kw1">day</span>, Num, @startdate<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; , Num
&nbsp; &nbsp; <span class="kw1">FROM</span> c
&nbsp; &nbsp; <span class="kw1">WHERE</span> Num <span class="sy0">&gt;=</span> <span class="nu0">0</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> Num <span class="sy0">&lt;=</span> <span class="kw2">DATEDIFF</span><span class="br0">&#40;</span><span class="kw1">day</span>, @startdate, @enddate<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="br0">&#41;</span>
<span class="kw1">SELECT</span> datekey <span class="sy0">=</span> <span class="kw1">CAST</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span>, <span class="kw2">DATEADD</span><span class="br0">&#40;</span><span class="kw1">day</span>, Num, @startdate<span class="br0">&#41;</span>, <span class="nu0">112</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">INT</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span><span class="kw1">date</span><span class="br0">&#93;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>DayOfMonth<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span><span class="kw1">day</span>, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>DayName<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATENAME</span><span class="br0">&#40;</span>weekday, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>DayOfYear<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span>dayofyear, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>WeekOfYear<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span>week, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>MonthName<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATENAME</span><span class="br0">&#40;</span><span class="kw1">month</span>, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>MonthNumber<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span><span class="kw1">month</span>, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>QuarterNumber<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span>quarter, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span><span class="kw1">Year</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw1">YEAR</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw1">date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; , <span class="br0">&#91;</span>FiscalYear<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw1">CASE</span> 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">WHEN</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span><span class="kw1">month</span>, <span class="br0">&#91;</span><span class="kw1">Date</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">7</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">THEN</span> <span class="kw1">YEAR</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw1">date</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">ELSE</span> <span class="kw1">YEAR</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw1">date</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">END</span>
<span class="co1">--Add more columns as needed.</span>
<span class="kw1">FROM</span> d</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @startdate DATE = '20000101'
	, @enddate DATE = '20301231' ;

WITH c
AS (
	SELECT	Num = ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) - 1
	FROM sys.columns c
	CROSS JOIN sys.columns c1
	)
, d
AS (
	SELECT	[date] = DATEADD(day, Num, @startdate)
			, Num
	FROM c
	WHERE Num &gt;= 0
		AND Num &lt;= DATEDIFF(day, @startdate, @enddate)
	)
SELECT datekey = CAST(CONVERT(VARCHAR(8), DATEADD(day, Num, @startdate), 112) AS INT)
	, [date]
	, [DayOfMonth] = DATEPART(day, [Date])
	, [DayName] = DATENAME(weekday, [Date])
	, [DayOfYear] = DATEPART(dayofyear, [Date])
	, [WeekOfYear] = DATEPART(week, [Date])
	, [MonthName] = DATENAME(month, [Date])
	, [MonthNumber] = DATEPART(month, [Date])
	, [QuarterNumber] = DATEPART(quarter, [Date])
	, [Year] = YEAR([date])
	, [FiscalYear] = CASE 
		WHEN DATEPART(month, [Date]) &lt; 7
			THEN YEAR([date])
		ELSE YEAR([date]) + 1
		END
--Add more columns as needed.
FROM d</pre></div></div>

<p>Let&#8217;s take a closer look:</p>
<ol>
<li>Variables StartDate and EndDate hold the date range for the result set.</li>
<li>We define a CTE (called c) that uses Row_Number() function to generate numbers starting from zero for each row in sys.columns. sys.columns is cross joined to itself to generate more number of [input] rows.</li>
<li>We define another CTE (called d) that uses numbers from c, filters on date range, and converts numbers to dates based on the date variables.</li>
<li>Finally, the Select statement uses Num and Date column aliases created by the two CTEs and date functions to create additional fields for the date dimension.</li>
</ol>
<p>You&#8217;ll notice that the script doesn&#8217;t have all columns a date dimension typically has. Don&#8217;t call me lazy for that &#8211; it provides the logic and skeleton to add more columns. Just add them as needed.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/script-to-populate-date-dimension-sql-server/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Scripts to Detect Data Warehouse Issues</title>
		<link>/index.php/webdev/business-intelligence/scripts-to-detect-data-warehouse/</link>
		<comments>/index.php/webdev/business-intelligence/scripts-to-detect-data-warehouse/#comments</comments>
		<pubDate>Tue, 15 Jan 2013 12:31:00 +0000</pubDate>
		<dc:creator><![CDATA[Sam Vanga]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[best practices]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[t-sql]]></category>

		<guid isPermaLink="false">/index.php/2013/01/scripts-to-detect-data-warehouse/</guid>
		<description><![CDATA[Standards and best practices are like flu shots you take before you're infected; Database best practices protect your databases from bad things. But, we all make mistakes. It could be because we're on a time crunch, or we're lazy (which I'm guilty of by&#8230;]]></description>
				<content:encoded><![CDATA[<p>Standards and best practices are like flu shots you take before you&#8217;re infected; Database best practices protect your databases from bad things. But, we all make mistakes. It could be because we&#8217;re on a time crunch, or we&#8217;re lazy (which I&#8217;m guilty of by the way), or maybe it&#8217;s part of being a developer.</p>
<p>Common mistakes include: tables without a primary key, column name problems, missing foreign keys, etc., This is where I love LTD&#8217;s very own <a title="SQLCop" href="http://sqlcop.lessthandot.com/">SQLCop</a>. I can quickly go on with my database development and rely on SQLCop to <a title="SQLCop detects these issues" href="http://sqlcop.lessthandot.com/detectedissues.php">detect the issues</a>. It saves time and ensures that database standards are met.</p>
<p>However, there are some issues explicit to data warehouses that SQLCop doesn&#8217;t look for. I list those issues below and provide scripts to detect them. I use these scripts in conjunction with SQLCop.</p>
<h4>Detect tables in a data warehouse that aren&#8217;t prefixed with either Dim or Fact:</h4>
<p>Tables in a warehouse are generally prefixed with Dim and Fact for dimensions and fact respectively, to easily distinguish them.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;<span class="br0">&#91;</span>schema_name<span class="br0">&#93;</span> <span class="sy0">=</span> s.<span class="me1">name</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; table_name <span class="sy0">=</span> t.<span class="me1">name</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">tables</span> t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">schemas</span> s <span class="kw1">ON</span> s.<span class="me1">schema_id</span> <span class="sy0">=</span> t.<span class="me1">schema_id</span>
<span class="kw1">WHERE</span> &nbsp; t.<span class="me1">name</span> <span class="sy0">NOT</span> <span class="sy0">LIKE</span> <span class="st0">'Dim%'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> t.<span class="me1">name</span> <span class="sy0">NOT</span> <span class="sy0">LIKE</span> <span class="st0">'Fact%'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> t.<span class="me1">TYPE</span> <span class="sy0">=</span> <span class="st0">'U'</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  [schema_name] = s.name ,
        table_name = t.name
FROM    sys.tables t
        INNER JOIN sys.schemas s ON s.schema_id = t.schema_id
WHERE   t.name NOT LIKE 'Dim%'
        AND t.name NOT LIKE 'Fact%'
        AND t.TYPE = 'U';</pre></div></div>

</p>
<h4>Find tables in a data warehouse that don&#8217;t have a primary key:</h4>
<p>Like in OLTP databases, all tables in a data warehouse also should have a primary key defined.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;schema_name <span class="sy0">=</span> SCHEMA_NAME<span class="br0">&#40;</span>schema_id<span class="br0">&#41;</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; table_name <span class="sy0">=</span> name
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">tables</span>
<span class="kw1">WHERE</span> &nbsp; <span class="kw2">OBJECTPROPERTY</span><span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span>, <span class="st0">'TableHasPrimaryKey'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">0</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> SCHEMA_NAME<span class="br0">&#40;</span>schema_id<span class="br0">&#41;</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; name;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  schema_name = SCHEMA_NAME(schema_id) ,
        table_name = name
FROM    sys.tables
WHERE   OBJECTPROPERTY(OBJECT_ID, 'TableHasPrimaryKey') = 0
ORDER BY SCHEMA_NAME(schema_id) ,
        name;</pre></div></div>

<p> </p>
<h4>Detect dimension tables with a composite primary key:</h4>
<p>A composite primary key on a dimension table causes degraded performance. It is best to create a single column primary key.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;c.<span class="me1">TABLE_NAME</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;<span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">TABLE_CONSTRAINTS</span> pk ,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">KEY_COLUMN_USAGE</span> c
<span class="kw1">WHERE</span> &nbsp; CONSTRA<span class="sy0">IN</span>T_TYPE <span class="sy0">=</span> <span class="st0">'PRIMARY KEY'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">TABLE_NAME</span> <span class="sy0">=</span> pk.<span class="me1">TABLE_NAME</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">CONSTRAINT_NAME</span> <span class="sy0">=</span> pk.<span class="me1">CONSTRAINT_NAME</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">TABLE_NAME</span> <span class="sy0">LIKE</span> <span class="st0">'Dim%'</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> c.<span class="me1">TABLE_NAME</span>
<span class="kw1">HAVING</span> &nbsp;<span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  c.TABLE_NAME ,
        COUNT(*)
FROM    INFORMATION_SCHEMA.TABLE_CONSTRAINTS pk ,
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE c
WHERE   CONSTRAINT_TYPE = 'PRIMARY KEY'
        AND c.TABLE_NAME = pk.TABLE_NAME
        AND c.CONSTRAINT_NAME = pk.CONSTRAINT_NAME
        AND c.TABLE_NAME LIKE 'Dim%'
GROUP BY c.TABLE_NAME
HAVING  COUNT(*) &gt; 1</pre></div></div>

<p> </p>
<h4>Detect dimension tables that don&#8217;t have Identity column as a primary key:</h4>
<p>Usually, surrogate key is made the primary key of the dimension table. Surrogate key is an auto generated Identity value.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;dim_table <span class="sy0">=</span> t.<span class="me1">name</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; primary_key <span class="sy0">=</span> c.<span class="me1">name</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">is_identity</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">tables</span> t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">key_constraints</span> kc <span class="kw1">ON</span> t.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> kc.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">indexes</span> i <span class="kw1">ON</span> i.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> kc.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> i.<span class="me1">type_desc</span> <span class="sy0">=</span> <span class="st0">'CLUSTERED'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">index_columns</span> ic <span class="kw1">ON</span> ic.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> kc.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">AND</span> ic.<span class="me1">index_id</span> <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">columns</span> c <span class="kw1">ON</span> c.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> t.<span class="kw2">OBJECT_ID</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">column_id</span> <span class="sy0">=</span> ic.<span class="me1">column_id</span>
<span class="kw1">WHERE</span> &nbsp; t.<span class="me1">TYPE</span> <span class="sy0">=</span> <span class="st0">'U'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> t.<span class="me1">name</span> <span class="sy0">LIKE</span> <span class="st0">'Dim%'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> kc.<span class="me1">type_desc</span> <span class="sy0">=</span> <span class="st0">'PRIMARY_KEY_CONSTRAINT'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">is_identity</span> <span class="sy0">=</span> <span class="nu0">0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  dim_table = t.name ,
        primary_key = c.name ,
        c.is_identity
FROM    sys.tables t
        INNER JOIN sys.key_constraints kc ON t.OBJECT_ID = kc.parent_object_id
        INNER JOIN sys.indexes i ON i.OBJECT_ID = kc.parent_object_id
                                    AND i.type_desc = 'CLUSTERED'
        INNER JOIN sys.index_columns ic ON ic.OBJECT_ID = kc.parent_object_id
                                           AND ic.index_id = 1
        INNER JOIN sys.columns c ON c.OBJECT_ID = t.OBJECT_ID
                                    AND c.column_id = ic.column_id
WHERE   t.TYPE = 'U'
        AND t.name LIKE 'Dim%'
        AND kc.type_desc = 'PRIMARY_KEY_CONSTRAINT'
        AND c.is_identity = 0</pre></div></div>

<p> </p>
<h4>Detect primary keys that don&#8217;t follow the naming convention:</h4>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;dim_table <span class="sy0">=</span> t.<span class="me1">name</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; primary_key <span class="sy0">=</span> c.<span class="me1">name</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">tables</span> t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">key_constraints</span> kc <span class="kw1">ON</span> t.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> kc.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">indexes</span> i <span class="kw1">ON</span> i.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> kc.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> i.<span class="me1">type_desc</span> <span class="sy0">=</span> <span class="st0">'CLUSTERED'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">index_columns</span> ic <span class="kw1">ON</span> ic.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> kc.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">AND</span> ic.<span class="me1">index_id</span> <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">columns</span> c <span class="kw1">ON</span> c.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> t.<span class="kw2">OBJECT_ID</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">column_id</span> <span class="sy0">=</span> ic.<span class="me1">column_id</span>
<span class="kw1">WHERE</span> &nbsp; t.<span class="me1">TYPE</span> <span class="sy0">=</span> <span class="st0">'U'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> t.<span class="me1">name</span> <span class="sy0">LIKE</span> <span class="st0">'Dim%'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> kc.<span class="me1">type_desc</span> <span class="sy0">=</span> <span class="st0">'PRIMARY_KEY_CONSTRAINT'</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> c.<span class="me1">name</span> <span class="sy0">&lt;&gt;</span> <span class="kw2">REPLACE</span><span class="br0">&#40;</span>t.<span class="me1">name</span>, <span class="st0">'Dim'</span>, <span class="st0">''</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">'Key'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  dim_table = t.name ,
        primary_key = c.name
FROM    sys.tables t
        INNER JOIN sys.key_constraints kc ON t.OBJECT_ID = kc.parent_object_id
        INNER JOIN sys.indexes i ON i.OBJECT_ID = kc.parent_object_id
                                    AND i.type_desc = 'CLUSTERED'
        INNER JOIN sys.index_columns ic ON ic.OBJECT_ID = kc.parent_object_id
                                           AND ic.index_id = 1
        INNER JOIN sys.columns c ON c.OBJECT_ID = t.OBJECT_ID
                                    AND c.column_id = ic.column_id
WHERE   t.TYPE = 'U'
        AND t.name LIKE 'Dim%'
        AND kc.type_desc = 'PRIMARY_KEY_CONSTRAINT'
        AND c.name &lt;&gt; REPLACE(t.name, 'Dim', '') + 'Key'</pre></div></div>

<p> </p>
<h4>Detect fact tables that have no foreign keys:</h4>
<p>Without a foreign key, a fact table isn&#8217;t really a fact table.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> table_name <span class="sy0">=</span> t.<span class="me1">name</span>
&nbsp; &nbsp; &nbsp; &nbsp; , fk_count <span class="sy0">=</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> sys.<span class="me1">tables</span> t
&nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span>
&nbsp; &nbsp; sys.<span class="me1">foreign_keys</span> fk <span class="kw1">ON</span> t.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> fk.<span class="me1">parent_object_id</span>
&nbsp; &nbsp; <span class="kw1">WHERE</span> &nbsp;t.<span class="me1">name</span> <span class="sy0">LIKE</span> <span class="st0">'fact%'</span>
&nbsp; &nbsp; <span class="kw1">GROUP</span> <span class="kw1">BY</span> t.<span class="me1">name</span>
&nbsp; &nbsp; <span class="kw1">HAVING</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">1</span> &nbsp;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT table_name = t.name
		, fk_count = COUNT(*)
    FROM sys.tables t
    INNER JOIN
    sys.foreign_keys fk ON t.OBJECT_ID = fk.parent_object_id
    WHERE  t.name LIKE 'fact%'
    GROUP BY t.name
    HAVING COUNT(*) &lt; 1  </pre></div></div>

<p> </p>
<h4>Detect fact tables that have foreign key(s) to another fact table:</h4>
<p> It&#8217;s unlikely to have a fact table related to another fact table.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;foreign_key <span class="sy0">=</span> fk.<span class="me1">name</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; child_table <span class="sy0">=</span> t.<span class="me1">name</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; parent_name <span class="sy0">=</span> rt.<span class="me1">name</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">foreign_keys</span> fk
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">tables</span> rt <span class="kw1">ON</span> rt.<span class="kw2">object_id</span> <span class="sy0">=</span> fk.<span class="me1">referenced_object_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">tables</span> t <span class="kw1">ON</span> t.<span class="kw2">object_id</span> <span class="sy0">=</span> fk.<span class="me1">parent_object_id</span>
<span class="kw1">WHERE</span> &nbsp; rt.<span class="me1">name</span> <span class="sy0">LIKE</span> <span class="st0">'Fact%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  foreign_key = fk.name ,
        child_table = t.name ,
        parent_name = rt.name
FROM    sys.foreign_keys fk
        INNER JOIN sys.tables rt ON rt.object_id = fk.referenced_object_id
        INNER JOIN sys.tables t ON t.object_id = fk.parent_object_id
WHERE   rt.name LIKE 'Fact%'</pre></div></div>

<p> </p>
<h4>Detect missing foreign key(s) in fact tables &#8211; Columns suffixed with Key, but don&#8217;t have foreign key constraint:</h4>
<p>I stole the following query from <a title="missing foreign keys sql cop" href="/index.php/DataMgmt/DataDesign/missing-foreign-key-constraints">here</a> posted by <a title="George M" href="/index.php/All/?disp=authdir&amp;author=10">George Mastros</a>, and replaced ID with Key to use it for data warehouse scenario.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1">&nbsp; &nbsp; <span class="kw1">SELECT</span> &nbsp;C.<span class="me1">TABLE_SCHEMA</span>,C.<span class="me1">TABLE_NAME</span>,C.<span class="me1">COLUMN_NAME</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> &nbsp; &nbsp;<span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">COLUMNS</span> C &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> Join <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">TABLES</span> T &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">ON</span> C.<span class="me1">TABLE_NAME</span> <span class="sy0">=</span> T.<span class="me1">TABLE_NAME</span> &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; And T.<span class="me1">TABLE_TYPE</span> <span class="sy0">=</span> <span class="st0">'Base Table'</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> T.<span class="me1">TABLE_SCHEMA</span> <span class="sy0">=</span> C.<span class="me1">TABLE_SCHEMA</span> &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">LEFT</span> Join <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">CONSTRAINT_COLUMN_USAGE</span> U &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">ON</span> C.<span class="me1">TABLE_NAME</span> <span class="sy0">=</span> U.<span class="me1">TABLE_NAME</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; And C.<span class="me1">COLUMN_NAME</span> <span class="sy0">=</span> U.<span class="me1">COLUMN_NAME</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; And U.<span class="me1">TABLE_SCHEMA</span> <span class="sy0">=</span> C.<span class="me1">TABLE_SCHEMA</span>
&nbsp; &nbsp; <span class="kw1">WHERE</span> &nbsp; U.<span class="me1">COLUMN_NAME</span> <span class="kw1">IS</span> Null &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; And C.<span class="me1">COLUMN_NAME</span> Like <span class="st0">'%Key'</span>
&nbsp; &nbsp; <span class="kw1">ORDER</span> <span class="kw1">BY</span> C.<span class="me1">TABLE_SCHEMA</span>, C.<span class="me1">TABLE_NAME</span>, C.<span class="me1">COLUMN_NAME</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">    SELECT  C.TABLE_SCHEMA,C.TABLE_NAME,C.COLUMN_NAME
    FROM    INFORMATION_SCHEMA.COLUMNS C          
            INNER Join INFORMATION_SCHEMA.TABLES T            
              ON C.TABLE_NAME = T.TABLE_NAME    
              And T.TABLE_TYPE = 'Base Table'
              AND T.TABLE_SCHEMA = C.TABLE_SCHEMA        
            LEFT Join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE U            
              ON C.TABLE_NAME = U.TABLE_NAME            
              And C.COLUMN_NAME = U.COLUMN_NAME
              And U.TABLE_SCHEMA = C.TABLE_SCHEMA
    WHERE   U.COLUMN_NAME IS Null          
            And C.COLUMN_NAME Like '%Key'
    ORDER BY C.TABLE_SCHEMA, C.TABLE_NAME, C.COLUMN_NAME</pre></div></div>

<p> </p>
<p>Results of above queries aren&#8217;t always issues. They are just rare, you&#8217;ve to look at them closely and make sure there is a reason for each choice. Also, you may use different naming conventions that make these queries void. In that case, I hope you&#8217;re able to alter them to your needs.</p>
<p>Follow me on Twitter! @<a title="SamuelVanga Twitter" href="/twitter.com/SamuelVanga">SamuelVanga</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/business-intelligence/scripts-to-detect-data-warehouse/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Learn About SQL Server 2008 R2 Project Gemini And Project Madison By Watching These Videos</title>
		<link>/index.php/datamgmt/datadesign/learn-about-sql-server-2008-r2-project-g/</link>
		<comments>/index.php/datamgmt/datadesign/learn-about-sql-server-2008-r2-project-g/#respond</comments>
		<pubDate>Tue, 01 Sep 2009 22:53:06 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[bi]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[excel]]></category>
		<category><![CDATA[gemini]]></category>
		<category><![CDATA[madison]]></category>
		<category><![CDATA[olap]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[ssas]]></category>

		<guid isPermaLink="false">/index.php/2009/09/learn-about-sql-server-2008-r2-project-g/</guid>
		<description><![CDATA[Channel 9 has two videos up about Project Gemini And Project Madison. These two videos will give you a good overview what Gemini and Madison are all about. Both videos are available in a variety of formats Introduction to SQL Server Project Madison The SQL Server team is working on a new project code-named “Madison”. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Channel 9 has two videos up about Project Gemini And Project Madison. These two videos will give you a good overview what Gemini and Madison are all about. Both videos are available in a variety of formats</p>
<p><strong>Introduction to SQL Server Project Madison</strong></p>
<blockquote><p>The SQL Server team is working on a new project code-named “Madison”. &#8220;Madison&#8221; is a highly scalable data warehouse appliance that delivers performance at low cost through massively parallel processing (MPP). How does it work? What&#8217;s the story? Well, &#8220;Madison&#8221; Product Unit Manager Christian Kleinerman sure knows the answers and he provides an introduction to this new SQL data warehousing technology</p></blockquote>
<p>The Madison video is 27 minutes and 48 seconds and you can watch/download it here: http://channel9.msdn.com/posts/Charles/Christian-Kleinerman-Introduction-to-SQL-Server-Project-Madison/</p>
<p><strong>Inside Project Gemini</strong></p>
<blockquote><p>Office Marketing says: &#8220;Need to make timely business decisions without having to use complicated and sluggish analytical applications? Love to use Excel? Project Gemini is an Excel 2010 add-in that allows you to create powerful analyses by quickly manipulating millions of rows of data into a single Excel workbook and utilize Microsoft Office 2010 to share and collaborate on your insights with your team.&#8221;</p>
<p>Donald Farmer and Julie Strauss are Program Managers behind this new technology &#8220;Gemini&#8221;. What is &#8220;Gemini&#8221;? How does it work? Why? What&#8217;s it all really mean, anyway? </p>
<p>Tune in. Very interesting technology here. For all you spreadsheet jockeys out there, this should prove extraordinarliy useful to you when you need to crunch and analyze lots of data effeciently. Wow. 1,000,000 rows in Excel without causing a hang. Nice work, &#8220;Gemini&#8221; team!</p></blockquote>
<p>The Gemini video is 29 minutes and 17 seconds and you can watch/download it here: http://channel9.msdn.com/posts/Charles/Donald-Farmer-and-Julie-Strauss-Inside-Project-Gemini/</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/learn-about-sql-server-2008-r2-project-g/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
