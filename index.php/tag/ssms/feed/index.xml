<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>ssms &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/ssms/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SSMS &#8211; Enabling Ctrl+R Shortcut to show or hide query results/messages pane</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/ssms-enabling-ctrl-r-shortcut/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/ssms-enabling-ctrl-r-shortcut/#comments</comments>
		<pubDate>Mon, 04 Mar 2013 14:58:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2013/03/ssms-enabling-ctrl-r-shortcut/</guid>
		<description><![CDATA[Do you use Ctrl+R to hide or display the query results/messages pane in SSMS?  Have you installed SSMS 2012 and find that it does not work?]]></description>
				<content:encoded><![CDATA[<p>Do you use Ctrl+R to hide or display the query results/messages pane in SSMS?  Have you installed SSMS 2012 and find that it does not work?  Does it drive you crazy because you think they pulled keyboard shortcut or because in some installs it works but not in others?</p>
<p>Fear not, you can add this keyboard short-cut!</p>
<ol>
<li>In SSMS open the “Tools” menu and choose “Options…”.</li>
<li>On the left, expand “Environment”, then expand “Keyboard” and then click on “Keyboard”.</li>
<li>Choose “Window.ShowResultsPane” (you can type that into the “Show commands containing:” field to find it faster.  Choose “SQL Query Editor” from the “Use new shortcut in:” drop down list.</li>
<li>Click into the “Press shortcut keys:” field and press Ctrl and R at the same time (the field should update to show “Ctrl +R”.</li>
<li>Review the “Shortcut currently used by:” dropdown list to ensure there are no other short cuts using Ctrl +R for SQL Query Editor.</li>
<li>Click the Assign button and then the OK button.</li>
</ol>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/SSMSCtrlRSettings.JPG?mtime=1362416270"><img alt="" src="/wp-content/uploads/users/kconan/SSMSCtrlRSettings.JPG?mtime=1362416270" width="644" height="376" /></a></div>
<p>And presto, the Ctrl+R functionality to hide or display the query results/messages pane in SSMS!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/ssms-enabling-ctrl-r-shortcut/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Listing tables that are truly partitioned in SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/listing-tables-that-are-truly/</link>
		<comments>/index.php/datamgmt/dbprogramming/listing-tables-that-are-truly/#comments</comments>
		<pubDate>Sat, 23 Feb 2013 08:59:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[features]]></category>
		<category><![CDATA[partitioning]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2013/02/listing-tables-that-are-truly/</guid>
		<description><![CDATA[To list all the tables that are partitioned you can use the sys.partitions view. However be aware that all tables and indexes in SQL Server contain at least one partition, whether or not they are explicitly partitioned.

If you were to do the followin&#8230;]]></description>
				<content:encoded><![CDATA[<p>To list all the tables that are partitioned you can use the sys.partitions view. However be aware that all tables and indexes in SQL Server contain at least one partition, whether or not they are explicitly partitioned.</p>
<p>If you were to do the following, you would get back every table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> partition_number,<span class="kw1">rows</span>,<span class="kw2">object_name</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span>
<span class="kw1">FROM</span> sys.<span class="me1">partitions</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT partition_number,rows,object_name(object_id)
FROM sys.partitions</pre></div></div>

<p>So what can you do? Let&#8217;s take a look. First we are going to create a partitioned table in case you don&#8217;t have one so that you can get the same output as me.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> SalesPartitioned<span class="br0">&#40;</span>YearCol <span class="kw1">SMALLINT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,OrderID <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, SomeData <span class="kw1">UNIQUEIDENTIFIER</span> <span class="kw1">DEFAULT</span> newsequentialid<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE SalesPartitioned(YearCol SMALLINT NOT NULL,OrderID INT NOT NULL, SomeData UNIQUEIDENTIFIER DEFAULT newsequentialid())
GO</pre></div></div>

<p>We are going to insert some data into the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> SalesPartitioned <span class="br0">&#40;</span>YearCol,OrderID<span class="br0">&#41;</span>
<span class="kw1">SELECT</span> <span class="nu0">2007</span>,number
<span class="kw1">FROM</span> master..<span class="me1">spt_values</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'P'</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">2008</span>,number <span class="sy0">+</span> <span class="nu0">2048</span>
<span class="kw1">FROM</span> master..<span class="me1">spt_values</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'P'</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">2009</span>,number <span class="sy0">+</span> <span class="nu0">4096</span>
<span class="kw1">FROM</span> master..<span class="me1">spt_values</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'P'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT SalesPartitioned (YearCol,OrderID)
SELECT 2007,number
FROM master..spt_values
WHERE type = 'P'
UNION ALL
SELECT 2008,number + 2048
FROM master..spt_values
WHERE type = 'P'
UNION ALL
SELECT 2009,number + 4096
FROM master..spt_values
WHERE type = 'P'</pre></div></div>

<p>We will now add a primary key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">SalesPartitioned</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; PK_Sales <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">NONCLUSTERED</span> <span class="br0">&#40;</span>YearCol,OrderID<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.SalesPartitioned ADD CONSTRAINT
	PK_Sales PRIMARY KEY NONCLUSTERED (YearCol,OrderID)</pre></div></div>

<p>Now it is time to create our partition function. Here is how we will do it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> PARTITION <span class="kw1">FUNCTION</span> pfFiscalYear<span class="br0">&#40;</span><span class="kw1">SMALLINT</span><span class="br0">&#41;</span>
<span class="kw1">AS</span> RANGE <span class="kw1">RIGHT</span> <span class="kw1">FOR</span> <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2007</span>,<span class="nu0">2008</span>,<span class="nu0">2009</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PARTITION FUNCTION pfFiscalYear(SMALLINT)
AS RANGE RIGHT FOR VALUES(2007,2008,2009)</pre></div></div>

<p>What that does is actually create 4 partitions, one for 2007, one for 2008, one for everything after 2008, and one for everything before 2006.<br />
<=2006
= 2007
= 2008
>= 2009</p>
<p>You can verify this by using the function $partition</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="nu0">1</span> <span class="kw1">AS</span> val,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="kw1">AS</span> partition &nbsp; &nbsp; <span class="kw1">UNION</span> all
<span class="kw1">select</span> <span class="nu0">2006</span>,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">2006</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">UNION</span> all
<span class="kw1">select</span> <span class="nu0">2007</span>,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">2007</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">UNION</span> all
<span class="kw1">select</span> <span class="nu0">2008</span>,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">2008</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">UNION</span> all
<span class="kw1">select</span> <span class="nu0">2009</span>,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">2009</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">UNION</span> all
<span class="kw1">select</span> <span class="nu0">2010</span>,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">2010</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">UNION</span> all
<span class="kw1">select</span> <span class="nu0">3000</span>,$partition.<span class="me1">pfFiscalYear</span><span class="br0">&#40;</span><span class="nu0">3000</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select 1 AS val,$partition.pfFiscalYear(1) AS partition	    UNION all
select 2006,$partition.pfFiscalYear(2006)	UNION all
select 2007,$partition.pfFiscalYear(2007)	UNION all
select 2008,$partition.pfFiscalYear(2008)	UNION all
select 2009,$partition.pfFiscalYear(2009)	UNION all
select 2010,$partition.pfFiscalYear(2010)	UNION all
select 3000,$partition.pfFiscalYear(3000)</pre></div></div>

<p>And here is the output</p>
<pre>val         partition
----------- -----------
1           1
2006        1
2007        2
2008        3
2009        4
2010        4
3000        4</pre>
<p>Now that we have the partition function, we need a partition scheme. A partition scheme is used to map boundary values in partition functions to filegroups. You can have one filegroup for each year placed on a different spindle, this way you don&#8217;t have to wait for the disk if all partitions are on the same spindle. For the sake of simplicity we only have one filegroup. Here is how to create the partition scheme</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> PARTITION SCHEME psFiscalYear
<span class="kw1">AS</span> PARTITION pfFiscalYear <span class="sy0">ALL</span> <span class="kw1">TO</span> <span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PARTITION SCHEME psFiscalYear
AS PARTITION pfFiscalYear ALL TO ([PRIMARY])</pre></div></div>

<p><em>Partition scheme &#8216;psFiscalYear&#8217; has been created successfully. &#8216;PRIMARY&#8217; is marked as the next used filegroup in partition scheme &#8216;psFiscalYear&#8217;.</em></p>
<p>Now we will add a clustered index and partition this on the YearCol column, the syntax looks like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">CLUSTERED</span> <span class="kw1">INDEX</span> IX_Sales <span class="kw1">ON</span> SalesPartitioned<span class="br0">&#40;</span>YearCol,OrderID<span class="br0">&#41;</span>
<span class="kw1">ON</span> psFiscalYear<span class="br0">&#40;</span>YearCol<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE CLUSTERED INDEX IX_Sales ON SalesPartitioned(YearCol,OrderID)
ON psFiscalYear(YearCol)</pre></div></div>

<p>Now it is time to list all the tables that are partitioned. Here is how you do it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> partition_number,<span class="kw1">rows</span>,<span class="kw2">object_name</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span>
<span class="kw1">FROM</span> sys.<span class="me1">partitions</span> s
<span class="kw1">WHERE</span> <span class="sy0">EXISTS</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="sy0">NULL</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">FROM</span> sys.<span class="me1">partitions</span> s2 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">WHERE</span> s.<span class="kw2">object_id</span> <span class="sy0">=</span> s2.<span class="kw2">object_id</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> partition_number <span class="sy0">&gt;</span> <span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> s.<span class="me1">index_id</span> <span class="sy0">=</span> s2.<span class="me1">index_id</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT partition_number,rows,object_name(object_id)
FROM sys.partitions s
WHERE EXISTS(SELECT NULL 
				FROM sys.partitions s2 
				WHERE s.object_id = s2.object_id 
				AND partition_number &gt; 1
				AND s.index_id = s2.index_id)</pre></div></div>

<p>Here is the output</p>
<pre>partition_number	rows	TableName
1	                0	SalesPartitioned
2	                2048	SalesPartitioned
3	                2048	SalesPartitioned
4	                2048	SalesPartitioned</pre>
<p>As you can see we used WHERE EXISTS, we checked that the object had a partition_number higher than two and we also matched on index_id since a table can have more than one index</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/listing-tables-that-are-truly/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Suppressing xp_cmdshell output</title>
		<link>/index.php/datamgmt/dbprogramming/supressing-xp_cmdshell-output/</link>
		<comments>/index.php/datamgmt/dbprogramming/supressing-xp_cmdshell-output/#comments</comments>
		<pubDate>Thu, 21 Feb 2013 09:13:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[features]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>
		<category><![CDATA[xp_cmdshell]]></category>

		<guid isPermaLink="false">/index.php/2013/02/supressing-xp_cmdshell-output/</guid>
		<description><![CDATA[Starting with SQL Server 2005 xp_cmdshell is turned off by default as a security measure. You have to explicitly enable xp_cmdshell it. If you have to move files around on a SQL Server box there are probably better ways than using xp_cmdshell, you can use SSIS,&#8230;]]></description>
				<content:encoded><![CDATA[<p>Starting with SQL Server 2005 xp_cmdshell is turned off by default as a security measure. You have to explicitly <a href="/index.php/DataMgmt/DataDesign/how-to-enable-xp_cmdshell-on-sql-server-2005">enable xp_cmdshell</a> it. If you have to move files around on a SQL Server box there are probably better ways than using xp_cmdshell, you can use SSIS, powershell, plain old DOS.  But old habits are difficult to break and maybe you have ton of legacy code. Someone asked how to supress output from xp_cmdshell when moving a file</p>
<p>I you move a file with xp_cmdshell, you will get the following output<br />
output<br />
1 file(s) moved.<br />
NULL</p>
<p>If I want to move a file from c:temp to c:tempold, I would execute the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">xp_cmdshell <span class="st0">'move c:tempbla.txtc:tempoldbla.txt'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">xp_cmdshell 'move c:tempbla.txtc:tempoldbla.txt'</pre></div></div>

<p>Here is what it looks like in SSMS</p>
<p><a href="/wp-content/uploads/blogs/DataMgmt/Denis/xp_cmdshellMove.PNG?mtime=1361444713"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/xp_cmdshellMove.PNG?mtime=1361444713" width="432" height="224" /></a></p>
<p>As you can see you get a resultset, in order to surpress that, you can add  no_output to the xp_cmdshell  call, no_output is an optional parameter, specifying that no output should be returned to the client.</p>
<p>Here is what the command looks like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">xp_cmdshell <span class="st0">'move c:tempbla.txt c:tempoldbla.txt'</span>,no_output</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">xp_cmdshell 'move c:tempbla.txt c:tempoldbla.txt',no_output</pre></div></div>

<p>Executing the command like that will not return a resultset anymore</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/supressing-xp_cmdshell-output/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>Ten things added after SQL Server 2000 that I like the most</title>
		<link>/index.php/datamgmt/dbprogramming/ten-things-added-after-sql/</link>
		<comments>/index.php/datamgmt/dbprogramming/ten-things-added-after-sql/#comments</comments>
		<pubDate>Mon, 18 Feb 2013 13:10:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2013/02/ten-things-added-after-sql/</guid>
		<description><![CDATA[It is almost 8 years since SQL Server 2005 has been released, we have gotten 3 major versions since SQL Server 2000: SQL Server 2005, SQL Server 2008 and SQL Server 2012. I decided to take a look to see what I find the most useful that has been added af&#8230;]]></description>
				<content:encoded><![CDATA[<p>It is almost 8 years since SQL Server 2005 has been released, we have gotten 3 major versions since SQL Server 2000: SQL Server 2005, SQL Server 2008 and SQL Server 2012. I decided to take a look to see what I find the most useful that has been added after SQL Server 2000. Since I already wrote blog posts about most of the things I listed I decided to just give a small description why I like the feature followed by a link to the blog post I already created earlier.</p>
<p>Here are the ten things I like the most</p>
<p>	* Date and time data types<br />
	* Compression<br />
	* Windowing functions<br />
	* Partitioning<br />
	* Schemas<br />
	* Sequences<br />
	* DDL Triggers<br />
	* Try catch<br />
	* Varchar max<br />
	* DMVs</p>
<p>Let&#8217;s take a look into some more detail why I like these features.</p>
<p><strong>Date and time data types</strong><br />
I was very glad when this was added to SQL Server 2008. I deal with a lot of data and the ability to use date which is 3 bytes compared to datetime which is 8 bytes saves me a lot of space. When you have a billion rows you save 5 GB right there. Now that you can store time separately you get better performing queries that result in seeks instead of scans. More about date and time can be found in this post:  <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-1">Date and time</a></p>
<p><strong>Compression</strong><br />
Data compression was added in SQL Server 2008 as well. I use data compression mostly for  archive tables and tables that are read from more than they are written to. The space savings can be dramatic, this is especially true if the compound clustered index is sorted in such a way that the values are the same for most of the columns. I once saved about 140 GB by compressing 8 or 9 tables over the weekend</p>
<p><strong>Windowing functions</strong><br />
The windowing functions row_number, rank and dense_rank are being used all over the place now. This was added in SQL Server 2005 and at least now I don&#8217;t have to look up the syntax every time I want to use them. This simplified a lot for me, no more running counts and using temp tables with identity columns to provide a row number. More about windowing functions can be found here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-6">Windowing Functions</a></p>
<p><strong>Partitioning</strong><br />
I have done partitioning even on SQL Server 2000 with partitioned views, native partitioning makes this much easier from a maintenance perspective. More about partitioning can be found here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-3">Partitioning</a></p>
<p><strong>Schemas</strong><br />
Schemas were introduced in SQL Server 2005. I like to use schemas to organize objects in a way that makes sense and is intuitive. Schemas also give you the ability to give users access to a set of object without having to specify each object separately. More about schemas can be found here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-4">Schemas</a></p>
<p><strong>Sequences</strong><br />
This has been on the SQL Server wish list (remember the email address before they had connect?) forever. Instead of the ghetto one identity table for the whole database method, you can now have sequences that are more flexible than previous methods. More about sequences can be found here: <a href="/index.php/DataMgmt/DataDesign/a-first-look-at-sequences-in-sql-server">A first look at sequences in SQL Server Denali</a></p>
<p><strong>DDL Triggers</strong><br />
When you have developers telling you that columns disappear or that columns have changed, throw a DDL trigger for ALTER TABLE on your DB and find out exactly what is going on. Once I did that and told the developer that I created a DDL trigger all his problems mysteriously never happened again. More about DDL trigger can be found here <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sql-advent-2011-day-13">DDL Triggers</a> and here <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/use-ddl-triggers-to-track">Use DDL Triggers To Track Table Changes</a></p>
<p><strong>Try catch</strong><br />
Error handling was very primitive until SQL Server 2005. You had to deal with error codes and there was no intuitive way of getting an error message back. More can be found here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/try-catch-sql-advent-2011">TRY CATCH</a></p>
<p><strong>Varchar max</strong><br />
If you ever worked with text and ntext you know what a pain in the neck those data types are. A whole bunch of functions don&#8217;t work and there are tons of other restrictions as well. The (max) datatypes makes this much more manageable and easier than before. More can be found here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-17">varchar(max)</a></p>
<p><strong>DMVs</strong><br />
I am a big fan of the dynamic management views, there is no need to run all kinds of DBCC commands, stored procedures, traces etc etc to get some information that you are interested in. The dynamic management views make this easier than ever and in every release we get more and more of them. More can be found here: <a href="/index.php/DataMgmt/DataDesign/dynamic-management-views">Dynamic Management Views</a></p>
<hr /></p>
<h2>Ten other additions I also like</h2>
<p>Some of these should be in the top ten list but since I can only fit ten items they got pushed into this list. Pivot, mirroring and backup compression are things that I use daily and very grateful for</p>
<p>        * Mirroring<br />
	* Pivot and unpivot<br />
	* Columnstore indexes<br />
	* Table valued parameters<br />
	* Common table expressions<br />
	* IIF<br />
	* Backup compression<br />
	* OFFSET N ROWS FETCH NEXT N ROWS ONLY<br />
	* Object_definition<br />
	* Compound Operators</p>
<p>        <strong>Mirroring </strong><br />
Mirroring was added to SQl Server 2005 Service Pack 1, it was also in the RTM version but you had to use a trace flag to enable it. We used to do a lot of replication but have replaced almost all of it with mirroring. We also take snapshots on the mirrored server so that reporting can still be run off that server instead of it being a dead weight</p>
<p>	<strong>Pivot and unpivot</strong><br />
Pivot is a nice addition but if you don&#8217;t know the columns beforehand you will need to use dynamic SQL. I still have to lookup pivot and unpivot every time I use them since the syntax is a little complex. More can be found here <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-7">Crosstab with PIVOT</a>  and <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-8">UNPIVOT</a></p>
<p>	<strong>Columnstore indexes</strong><br />
Having being exposed to the concept of a columnar database with Sybase IQ, I knew what this was before it came out. It is a nice feature but there are still a tons of restrictions in the current release, it is read only and some data types are not supported</p>
<p>	<strong>Table Value Constructor</strong><br />
Table Value Constructors enable you to pass in a bunch of values in a single DML statement instead of a bunch of union statements. More about Table Value Constructors can be found here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-12">Table Value Constructor</a></p>
<p>	<strong>Common table expressions</strong><br />
Common Table Expressions (you will see them called CTE also) were introduced in SQL Server 2005 and you can think of them as a derived table in another form of a table expression. Using CTEs makes for less cluttered code and CTEs can be manipulated as regular tables as well. More about Common Table Expressions can be found here <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-5">Common Table Expressions</a> and here <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/use-common-table-expressions-to-simplify-your-updates-in-sql-server">Use common table expressions to simplify your updates in SQL Server</a></p>
<p>	<strong>IIF</strong><br />
IIF is just syntactic sugar for a case statement but if you come from other languages like vb or Excel this might feel more natural to you. More can be found here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/a-quick-look-at-the">IIF</a></p>
<p>	<strong>Backup compression</strong><br />
I have databases in the TB+ size, taking a backup which is a fourth of the size makes it more manageable and save time and money in terms of storage and moving the backup around. You can find more info here: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/testing-backup-compression-in-sql-server-2008">Testing backup compression in SQL Server 2008</a></p>
<p>	<strong>OFFSET N ROWS FETCH NEXT N ROWS ONLY</strong><br />
This is a welcome addition to simplify paging code. Read more here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/using-offset-n-rows-fetch-next-n-rows-on">Using OFFSET N ROWS FETCH NEXT N ROWS ONLY In SQL Server for easy paging</a></p>
<p>	<strong>Object_definition</strong><br />
I use the object_definition function all the time. If I need to see in how many stored procedures a table is used I can use the object_definition function to find that out very easy. More info here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/object_definition-sql-advent-2011-day">OBJECT_DEFINITION</a></p>
<p>	<strong> Compound Operators</strong><br />
Compound Operators make it possible to declare and assign a value at the same time, for example<code> declare @i int =5;</code>  This makes for compact code and you don&#8217;t have to search where the variable is initialized. More information can be found here: <a href="/index.php/DataMgmt/DataDesign/compound-operators-or-how-t-sql-is-morph">Compound Operators Or How T-SQL Is Morphing Into VB Or C#</a></p>
<p>
<hr />

<div class="image_block"><a href="/wp-content/uploads/users/SQLDenis/BillyMase.PNG?mtime=1361730496"><img alt="" src="/wp-content/uploads/users/SQLDenis/BillyMase.PNG?mtime=1361730496" width="397" height="396" /></a></div>
<p></p>
<p>I could go on and on about even more stuff I like, I am just going to list 15 or so more things infomercial style&#8230;.. </p>
<p>SSMS<br />
SSIS<br />
Fast recovery<br />
Page restores<br />
Online Index Rebuild<br />
Except and Intersect<br />
Filtered Indexes<br />
Indexes with included columns<br />
CROSS APPLY<br />
Dynamic TOP<br />
MERGE statement<br />
OUTPUT clause<br />
Optimize for ad hoc workloads<br />
Snapshot Isolation</p>
<p>Now let&#8217;s hear it from you, what do you like the most that they have added since SQL Server 2005? I wonder how difficult it would be to pick out the DBAs from the developers based on the items people list  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/ten-things-added-after-sql/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Discovering new things (for me) in SSMS</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/#comments</comments>
		<pubDate>Sun, 10 Feb 2013 12:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[ssms]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/discovering-new-things-for-me/</guid>
		<description><![CDATA[One of the good things about working in technology is that you always will discover new things. The other day I created a blog post: Listing all your SQL Server databases ordered by size. Buck Woody replied to me on twitter that this is also built into&#8230;]]></description>
				<content:encoded><![CDATA[<p>One of the good things about working in technology is that you always will discover new things. The other day I created a blog post: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/listing-all-your-sql-server">Listing all your SQL Server databases ordered by size</a>. Buck Woody replied to me on twitter that this is also built into SSMS. He tweeted the following link: <a href="http://blogs.msdn.com/b/buckwoody/archive/2008/09/02/selecting-columns-to-display-in-ssms.aspx">Selecting Columns to Display in SSMS</a></p>
<p>I decided to check it out. I knew already about the details pane, I use it all the time if I need to script more than one object. I blogged about it here as well: <a href="/index.php/DataMgmt/DBProgramming/scripting-all-jobs-on-sql-server-2005-20">Scripting all jobs on SQL Server 2005/2008 into one file</a></p>
<p>What I did not know is that you can change the columns that are shown. Click on he databases folder in SSMS and press F7, this will bring up the details pane, it looks somewhat like the image below</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails.PNG?mtime=1360507029"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails.PNG?mtime=1360507029" width="926" height="343" /></a></div>
<p>Right click on any of the columns and you will see the following menu</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTailsChoose.PNG?mtime=1360507043"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTailsChoose.PNG?mtime=1360507043" width="247" height="497" /></a></div>
<p>Now I don&#8217;t care for some of the things that are shown by default, I unchecked some of them and checked others. Here is what it looks like now, much better for what I need to see at a glance</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails2.PNG?mtime=1360507051"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails2.PNG?mtime=1360507051" width="860" height="342" /></a></div>
<p>You can sort the results by clicking on a column, click it again and it is sorted in the reversed order<br />
Did you know that if you do CTRL + A, CTRL + C, it copies it as TAB delimited, just paste it into Excel</p>
<p>What about you, what &#8216;new&#8217; things have you discovered in SSMS?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>A couple of ways to convert an integer to an coordinate with SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/a-couple-of-ways-to/</link>
		<comments>/index.php/datamgmt/dbprogramming/a-couple-of-ways-to/#respond</comments>
		<pubDate>Sun, 03 Feb 2013 14:33:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[conversion]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2013/02/a-couple-of-ways-to/</guid>
		<description><![CDATA[I answered this question from a person who had to convert coordinates stored as an integer to a float


I'm receiving data on coordinates as 115949833 and I need it to output as 115.949833 because I need to be able to calculate the mileage between th&#8230;]]></description>
				<content:encoded><![CDATA[<p>I answered this question from a person who had to convert coordinates stored as an integer to a float</p>
<blockquote><p>I&#8217;m receiving data on coordinates as 115949833 and I need it to output as 115.949833 because I need to be able to calculate the mileage between the latitude and longitude coordinates. Both the longitude and latitude values are saved as integers with no decimal places</p></blockquote>
<p>There are several things you can do to accomplish this:<br />
SUBSTRING<br />
STUFF<br />
LEFT and RIGHT<br />
Arithmetic</p>
<p>Let&#8217;s take a look at how each of them work</p>
<p><strong>Arithmetic multiplication </strong><br />
This is pretty simple, just multiply the integer value by 0.000001</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @pos <span class="kw1">int</span> <span class="sy0">=</span> <span class="nu0">115949833</span> 
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">6</span><span class="br0">&#41;</span>,@pos <span class="sy0">*</span> <span class="nu0">0.000001</span><span class="br0">&#41;</span> <span class="co1">--115.949833</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @pos int = 115949833 

SELECT CONVERT(decimal(10,6),@pos * 0.000001) --115.949833</pre></div></div>

<p><strong>Arithmetic division</strong><br />
This is pretty simple as well, instead of multiplying the integer value by 0.000001, we are going to divide the value by 1000000.0</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @pos <span class="kw1">int</span> <span class="sy0">=</span> <span class="nu0">115949833</span> 
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">6</span><span class="br0">&#41;</span>,@pos <span class="sy0">/</span><span class="nu0">1000000.0</span><span class="br0">&#41;</span> <span class="co1">--115.949833</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @pos int = 115949833 

SELECT CONVERT(decimal(10,6),@pos /1000000.0) --115.949833</pre></div></div>

<p><strong>STUFF</strong><br />
The STUFF function is not a widely used function in the SQL Server world. Basically you can use it to inject a character (or series of characters) into a range of characters. If you are using 0 then you are inserting and expanding the string, if you use a value greater than 0 then you will replace some characters</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @s <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'1111122222'</span>
<span class="kw1">SELECT</span> <span class="kw2">STUFF</span><span class="br0">&#40;</span>@S,<span class="nu0">6</span>,<span class="nu0">0</span>,<span class="st0">'.'</span><span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @s varchar(100) = '1111122222'
SELECT STUFF(@S,6,0,'.') </pre></div></div>

<p>11111.22222</p>
<p>As you can see, when you use 0, the dot gets inserted and everything else gets shifted to the right from position 6</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @s <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'1111122222'</span>
<span class="kw1">SELECT</span> <span class="kw2">STUFF</span><span class="br0">&#40;</span>@S,<span class="nu0">6</span>,<span class="nu0">0</span>,<span class="st0">'.....'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @s varchar(100) = '1111122222'
SELECT STUFF(@S,6,0,'.....')</pre></div></div>

<p>11111&#8230;..22222</p>
<p>One or more characters doesn&#8217;t make a difference, the rest still gets shifted to the right</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @s <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'1111122222'</span>
<span class="kw1">SELECT</span> <span class="kw2">STUFF</span><span class="br0">&#40;</span>@S,<span class="nu0">6</span>,<span class="nu0">5</span>,<span class="st0">'.....'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @s varchar(100) = '1111122222'
SELECT STUFF(@S,6,5,'.....')</pre></div></div>

<p>11111&#8230;..</p>
<p>Since we used 5, the 5 left most characters after position 6 get replaced by our dots</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @s <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'1111122222'</span>
<span class="kw1">SELECT</span> <span class="kw2">STUFF</span><span class="br0">&#40;</span>@S,<span class="nu0">6</span>,<span class="nu0">2</span>,<span class="st0">'.....'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @s varchar(100) = '1111122222'
SELECT STUFF(@S,6,2,'.....')</pre></div></div>

<p>11111&#8230;..222</p>
<p>Now we used 2 instead of 5, as you can see 3 (5-2) are still there from the original value</p>
<p>Here is then how you would use the STUFF function to inject a dot into the value</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @pos <span class="kw1">int</span> <span class="sy0">=</span> <span class="nu0">115949833</span> 
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">decimal</span><span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">6</span><span class="br0">&#41;</span>,<span class="br0">&#40;</span><span class="kw2">STUFF</span><span class="br0">&#40;</span>@pos,<span class="nu0">4</span>,<span class="nu0">0</span>,<span class="st0">'.'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="co1">--115.949833</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @pos int = 115949833 

SELECT CONVERT(decimal(10,6),(STUFF(@pos,4,0,'.'))) --115.949833</pre></div></div>

<p><strong>LEFT + RIGHT</strong><br />
This is pretty easy, you grab the first 3 characters with left, add a dot and grab the last 6 characters with right</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @pos <span class="kw1">int</span> <span class="sy0">=</span> <span class="nu0">115949833</span> 
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">LEFT</span><span class="br0">&#40;</span>@pos,<span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">'.'</span> <span class="sy0">+</span> <span class="kw1">RIGHT</span><span class="br0">&#40;</span>@pos,<span class="nu0">6</span><span class="br0">&#41;</span><span class="co1">--115.949833</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @pos int = 115949833 

SELECT LEFT(@pos,3) +'.' + RIGHT(@pos,6)--115.949833</pre></div></div>

<p><strong>SUBSTRING</strong><br />
Substring is similar to using left and right but you need to give it a start position and end position. You need first to convert to char or vachar because substring can&#8217;t be used on an integer data type directly</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @pos <span class="kw1">int</span> <span class="sy0">=</span> <span class="nu0">115949833</span> 
&nbsp;
<span class="kw1">SELECT</span> <span class="kw2">SUBSTRING</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>,@pos<span class="br0">&#41;</span>,<span class="nu0">1</span>,<span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">'.'</span> <span class="sy0">+</span> <span class="kw2">SUBSTRING</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>,@pos<span class="br0">&#41;</span>,<span class="nu0">4</span>,<span class="nu0">6</span><span class="br0">&#41;</span> <span class="co1">--115.949833</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @pos int = 115949833 

SELECT SUBSTRING(CONVERT(CHAR(9),@pos),1,3) +'.' + SUBSTRING(CONVERT(CHAR(9),@pos),4,6) --115.949833</pre></div></div>

<p>That is all for this post, any other way you would have used?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/a-couple-of-ways-to/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012: Recap</title>
		<link>/index.php/datamgmt/dbprogramming/sql-advent-2012-recap/</link>
		<comments>/index.php/datamgmt/dbprogramming/sql-advent-2012-recap/#respond</comments>
		<pubDate>Tue, 25 Dec 2012 09:28:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[ddl]]></category>
		<category><![CDATA[designers]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/sql-advent-2012-recap/</guid>
		<description><![CDATA[A recap of all the SQL Advent 2012 posts]]></description>
				<content:encoded><![CDATA[<p>Another year, another SQL Advent calendar has come to an end. This year there was not much SQL code after day 10, I still hope you found it interesting and useful. Here is a list off all the posts with a little blurb about them.</p>
<p>SQL Advent 2012 Day 24: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/getting-help">Getting help</a><br />
In this post I showed you where to get help and how to use twitter to get some help</p>
<p>SQL Advent 2012 Day 23: <a href="/index.php/DataMgmt/business-intelligence-1/get-the-tools-you-need">Get the tools you need to be more productive</a><br />
In this post I tried to show you that tools will pay for themselves</p>
<p>SQL Advent 2012 Day 22: <a href="/index.php/DataMgmt/business-intelligence-1/testing-your-backup-and-failover">Testing your backup and failover strategy</a><br />
This post was all about the importance of testing your backup and failover strategy</p>
<p>SQL Advent 2012 Day 21: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/with-vldbs-it-matters-what">With VLDBs it matters what you do and how you do it</a><br />
With little databases you can get away with doing stupid stuff, with large databases not so much</p>
<p>SQL Advent 2012 Day 20: <a href="/index.php/DataMgmt/business-intelligence-1/use-the-new-features">Use the new features</a><br />
This post detailed why it was important to use the features and functionality</p>
<p>SQL Advent 2012 Day 19: <a href="/index.php/DataMgmt/DBProgramming/how-to-improve-your-tech">How to improve your tech skills</a><br />
The post showed you a couple of ways to improve your tech skills</p>
<p>SQL Advent 2012 Day 18: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/stay-relevant-and-marketable">Stay relevant and marketable</a><br />
If you don&#8217;t keep up, you will lose</p>
<p>SQL Advent 2012 Day 17: <a href="/index.php/DataMgmt/business-intelligence-1/no-matter-how-long-you">No matter how long you are on the wrong path, go back</a><br />
Sometimes it is better to start from scratch than continue down the wrong path</p>
<p>SQL Advent 2012 Day 16: <a href="/index.php/DataMgmt/DataDesign/lack-of-database-design-and">Lack of database design and normalization</a><br />
We don&#8217;t need no stinking keys</p>
<p>SQL Advent 2012 Day 15: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/benefits-of-indexes">Benefits of Indexes</a><br />
Why do we need indexes and what purpose do they serve?</p>
<p>SQL Advent 2012 Day 14: <a href="/index.php/DataMgmt/business-intelligence-1/when-to-say-no">When to say no</a><br />
Sometines you have to say no&#8230;.even to your boss</p>
<p>SQL Advent 2012 Day 13: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/features-enabled-that-are-not">Features enabled that are not used</a><br />
Disable and shutdown services and feature that are not used</p>
<p>SQL Advent 2012 Day 12: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/proactive-notifications">Proactive notifications</a><br />
Get notified before the client or your boss about errors</p>
<p>SQL Advent 2012 Day 11: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/cursors-and-loops">Cursors and loops</a><br />
Cursors are almost always evil</p>
<p>SQL Advent 2012 Day 10: <a href="/index.php/DataMgmt/business-intelligence-1/sql-server-maintenance">SQL Server Maintenance</a><br />
Maintenance is unfortunately required, machines and software are not completely autotuned yet</p>
<p>SQL Advent 2012 Day 9: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2012-day-10">Reinventing the wheel</a><br />
Why write something if it already exist</p>
<p>SQL Advent 2012 Day 8: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/foreign-keys">Foreign Keys</a><br />
A small post showing that you don&#8217;t always need a primary key for a foreign key</p>
<p>SQL Advent 2012 Day 7: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">Lack of constraints</a><br />
Constraints in a database guarantee data integrity</p>
<p>SQL Advent 2012 Day 6: <a href="/index.php/DataMgmt/DBProgramming/standardized-naming-and-other-conventions">Standardized Naming And Other Conventions</a><br />
If you have a standard, everything will be easier</p>
<p>SQL Advent 2012 Day 5: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-trust-the-ssms">Do not trust the SSMS designers</a><br />
SOmetimes a simple click can cause a lot of data to be moved behind the scenes</p>
<p>SQL Advent 2012 Day 4: <a href="/index.php/DataMgmt/DBProgramming/triggers-what-to-do-what">Triggers, what to do, what not to do</a><br />
Some best practices around triggers</p>
<p>SQL Advent 2012 Day 3: <a href="/index.php/DataMgmt/DBProgramming/sargable-queries">Sargable Queries</a><br />
How to write queries that will take advantage of indexes</p>
<p>SQL Advent 2012 Day 2: <a href="/index.php/DataMgmt/DBProgramming/data-typeshttp:///index.php/DataMgmt/DBProgramming/data-types">Data types storage differences</a><br />
Make sure you know the difference between the different data types and how they are stored</p>
<p>SQL Advent 2012 Day 1: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sizing-database-files">Sizing database files</a><br />
You have to presize your databases if you want optimal performance</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sql-advent-2012-recap/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 13: Features enabled that are not used</title>
		<link>/index.php/datamgmt/dbprogramming/features-enabled-that-are-not/</link>
		<comments>/index.php/datamgmt/dbprogramming/features-enabled-that-are-not/#respond</comments>
		<pubDate>Thu, 13 Dec 2012 10:14:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[features]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/features-enabled-that-are-not/</guid>
		<description><![CDATA[This is day thirteen of the SQL Advent 2012 series of blog posts.  Today we are going to look at servers where everything is installed and enabled.]]></description>
				<content:encoded><![CDATA[<p>This is day thirteen of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. Today we are going to look at servers where everything is installed and enabled. Before we start this post let&#8217;s look back in time a little. Before SQL Server 2005 came out when you installed SQL Server pretty much everything was turned on by default. This of course widened the attack vector against the database servers. With SQL Server 2005 pretty much everything is turned off and you have to turn the features on if you want to use them. Now sometimes some admins will just turn everything on because that way they don&#8217;t have to deal with this later, this are also the same kind of people who insist that the account needs to be db_owner otherwise their code won&#8217;t work.</p>
<p>To see what these features are and if they are turned off, you can use the following query. </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> name, <span class="kw1">value</span>,value_in_use 
<span class="kw1">FROM</span> sys.<span class="me1">configurations</span>
<span class="kw1">WHERE</span> name <span class="sy0">IN</span> <span class="br0">&#40;</span>
<span class="st0">'Agent XPs'</span>,
<span class="st0">'SQL Mail XPs'</span>,
<span class="st0">'Database Mail XPs'</span>,
<span class="st0">'SMO and DMO XPs'</span>,
<span class="st0">'Ole Automation Procedures'</span>,
<span class="st0">'Web Assistant Procedures'</span>,
<span class="st0">'xp_cmdshell'</span>,
<span class="st0">'Ad Hoc Distributed Queries'</span>,
<span class="st0">'Replication XPs'</span>,
<span class="st0">'clr enabled'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT name, value,value_in_use 
FROM sys.configurations
WHERE name IN (
'Agent XPs',
'SQL Mail XPs',
'Database Mail XPs',
'SMO and DMO XPs',
'Ole Automation Procedures',
'Web Assistant Procedures',
'xp_cmdshell',
'Ad Hoc Distributed Queries',
'Replication XPs',
'clr enabled')</pre></div></div>

<p>The difference between <em>value </em>and <em>value_in_use </em>is that <em>value_in_use</em> is what is currently used and <em>value </em>will be used next time the server is restarted. If you want to have the change take effect immediately then use RECONFIGURE</p>
<p>Here is an example that will turn off xp_cmdshell</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">sp_configure</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span>
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">sp_configure</span> <span class="st0">'xp_cmdshell'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span>
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">sp_configure</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE sp_configure 'show advanced options', 1
RECONFIGURE
GO
 
EXECUTE sp_configure 'xp_cmdshell', '1'
RECONFIGURE
GO
 
EXECUTE sp_configure 'show advanced options', 0
RECONFIGURE
GO</pre></div></div>

<p>If you prefer the GUI, you can also use that, right click on the database server name in SSMS, select Facets, from the Facet dropdown select Surface Area Configuration. You will see the following Facet properties</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/Facets.PNG?mtime=1355339984"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/Facets.PNG?mtime=1355339984" width="665" height="531" /></a></div>
<p>Here you can enable or disable the features you are interested in. You can also export these properties as a policy to use on other servers so that the features are the same on all your servers</p>
<h2>Installing everything by default</h2>
<p>Here I have mixed feelings myself about what to do. On one hand I don&#8217;t like to install SSAS or SSRS if there is no need for it, on the other hand I don&#8217;t feel like adding that stuff 6 months down the road if there is suddenly a need for it. If I do install it, I make sure it at least doesn&#8217;t run by default but it is disabled. There is no benefit in having SSAS, SSRS or SSIS running and using CPU cycles as well as RAM if nobody is using these services. If you do install it and nobody uses it, disable the services, you will have more RAM and CPU cycles for the SQL Server service available.</p>
<p>That is all for day thirteen of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/features-enabled-that-are-not/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 12: Proactive notifications</title>
		<link>/index.php/datamgmt/dbprogramming/proactive-notifications/</link>
		<comments>/index.php/datamgmt/dbprogramming/proactive-notifications/#respond</comments>
		<pubDate>Wed, 12 Dec 2012 08:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[errors]]></category>
		<category><![CDATA[notifications]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/proactive-notifications/</guid>
		<description><![CDATA[This is day twelve of the SQL Advent 2012 series of blog posts. Today we are going to look at SQL Server proactive notifications]]></description>
				<content:encoded><![CDATA[<p>This is day twelve of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. Today we are going to look at SQL Server proactive notifications. In the <a href="/index.php/DataMgmt/business-intelligence-1/sql-server-maintenance">SQL Server Maintenance</a> post from yesterday I touched upon proactive notifications a little, today I want to dive a little deeper into this subject. </p>
<p>The last thing you want as a DBA is to hear any of the following things from the end users</p>
<ul>
<li>The transaction log is full</li>
<li>The database is very slow</li>
<li>The latest backup we have is 9 days old</li>
<li>The table that was created has 2 extra columns this morning</li>
<li>Everything is locked up can&#8217;t get any results back from a query</li>
<li>Deadlocks are occurring</li>
</ul>
<p>What you really want to have at your shop is a tool like <a href="http://www.quest.com/foglight-for-sql-server/">Quest Foglight</a>, <a href="http://www.confio.com/performance/sql-server/ignite/">Confio Ignite</a>, <a href="http://www.red-gate.com/products/dba/sql-monitor/">Red Gate SQL Monitor</a> or similar. The benefit of these tools is that there is a central location where you can look at all the alerts at a glance. You get a lot of stuff out of the box and all you have to do is tell it what server to start monitoring. I would suggest to start using the trial version to see if it is something that would be beneficial for your organization.</p>
<p>Of course you can roll your own solution as well, this will involve work and unless your time is worthless or you are bored out of your mind after work I wouldn&#8217;t do it.</p>
<h2>Utilize the logs</h2>
<p>You need to scan the errorlog periodically to see if there are errors, you can automate this, no need to start opening log files every 5 minutes. create a SQL Agent job that runs every 5 minutes and checks if there are any errors since it last ran. You can use the xp_readerrorlog proc to read the error log from with sql server with T-SQL.</p>
<p>Here is a small example of what you can do if you have this in a SQL Agent job that runs every 5 minutes or so, you can of course email yourself the results, dump the result into a table that is perhaps shown on a dashboard in the office, there are many possibilities.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="de1"><pre class="de1"><span class="co1">--This will hold the rows</span>
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #ErrorLog <span class="br0">&#40;</span>LogDate <span class="kw1">datetime</span>, ProcessInfo <span class="kw1">VarChar</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>, ErrorMessage <span class="kw1">VarChar</span><span class="br0">&#40;</span><span class="kw2">Max</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1">-- Dump the errorlog into the table</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> #ErrorLog
<span class="kw1">EXEC</span> master.<span class="me1">dbo</span>.<span class="me1">xp_readerrorlog</span>
&nbsp;
<span class="co1">-- Delete everything older than 5 minutes</span>
<span class="co1">-- ideally you will store the max date when it ran last</span>
<span class="kw1">DELETE</span> #ErrorLog
<span class="kw1">WHERE</span> LogDate <span class="sy0">&lt;</span> &nbsp;<span class="kw2">DATEADD</span><span class="br0">&#40;</span>mi,<span class="sy0">-</span><span class="nu0">5</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1">-- Some stuff you want to check for</span>
<span class="co1">-- Failed backups...you want to know this</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #ErrorLog
<span class="kw1">WHERE</span> ErrorMessage <span class="sy0">LIKE</span><span class="st0">'BACKUP failed%'</span>
&nbsp;
<span class="co1">-- Why does it take so looong to grow a file, maybe rethink your settings</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #ErrorLog
<span class="kw1">WHERE</span> ErrorMessage <span class="sy0">LIKE</span><span class="st0">'Autogrow of file%'</span>
&nbsp;
<span class="co1">-- What is going on any backups or statistic updates running at this time?</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #ErrorLog
<span class="kw1">WHERE</span> ErrorMessage <span class="sy0">LIKE</span><span class="st0">'SQL Server has encountered %occurrence(s) of I/O requests taking longer than%'</span>
&nbsp;
<span class="co1">-- My mirror might not be up to date</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #ErrorLog
<span class="kw1">WHERE</span> ErrorMessage <span class="sy0">LIKE</span><span class="st0">'The alert for '</span><span class="st0">'unsent log'</span><span class="st0">' has been raised%'</span>
&nbsp;
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #ErrorLog </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">--This will hold the rows
CREATE TABLE #ErrorLog (LogDate datetime, ProcessInfo VarChar(10), ErrorMessage VarChar(Max))

-- Dump the errorlog into the table
INSERT INTO #ErrorLog
EXEC master.dbo.xp_readerrorlog

-- Delete everything older than 5 minutes
-- ideally you will store the max date when it ran last
DELETE #ErrorLog
WHERE LogDate &lt;  DATEADD(mi,-5,GETDATE())

-- Some stuff you want to check for
-- Failed backups...you want to know this
SELECT * FROM #ErrorLog
WHERE ErrorMessage LIKE'BACKUP failed%'

-- Why does it take so looong to grow a file, maybe rethink your settings
SELECT * FROM #ErrorLog
WHERE ErrorMessage LIKE'Autogrow of file%'

-- What is going on any backups or statistic updates running at this time?
SELECT * FROM #ErrorLog
WHERE ErrorMessage LIKE'SQL Server has encountered %occurrence(s) of I/O requests taking longer than%'

-- My mirror might not be up to date
SELECT * FROM #ErrorLog
WHERE ErrorMessage LIKE'The alert for ''unsent log'' has been raised%'


DROP TABLE #ErrorLog </pre></div></div>

<p>Those are just small samples, you might want to look for other kind of messages from the errorlog</p>
<p>
<h2>The transaction log is full</h2>
<p>You want to make sure that you know you are running out of space before you run out of space. I covered this in the <a href="/index.php/DataMgmt/business-intelligence-1/sql-server-maintenance">SQL Server Maintenance</a> post Take a look at the sections <em>Make sure that you have enough space left on the drives</em> and <em>Make sure that you have enough space left for the filegroups</em> In those two section I described what to look for and also supplied code that you can then plug into your own solution</p>
<p>
<h2>The database is very slow</h2>
<p>This complaint you hear every now and then, I have seen this from time to time. There are several things that could be happening, here is a list</p>
<p>Someone decided to take a backup of that 1 TB database in the middle of the day<br />
The update statistics job is still running<br />
Statistics are stale and haven&#8217;t been updated in a long time<br />
The virus scan is running amok and nobody told it to ignore the database files<br />
Someone decided to query all the data all at once</p>
<p>If you have a tool like <a href="http://www.quest.com/foglight-for-sql-server/">Quest Foglight</a>, <a href="http://www.confio.com/performance/sql-server/ignite/">Confio Ignite</a>, <a href="http://www.red-gate.com/products/dba/sql-monitor/">Red Gate SQL Monitor</a> or similar then you can see what query ran at what time, what it did and how long it ran.</p>
<p>You can of course also use sp_who2, BlkBy column and DBCC INPUTBUFFER to see what is going on</p>
<p>If you like to use Dynamic Management Views, then take a look at Glenn Berry&#8217;s <a href="http://sqlserverperformance.wordpress.com/2012/12/06/sql-server-2005-diagnostic-information-queries-dec-2012/">SQL Server 2005 Diagnostic Information Queries (Dec 2012)</a> and <a href="http://sqlserverperformance.wordpress.com/2012/11/27/sql-server-2008-diagnostic-information-queries-nov-2012/">SQL Server 2008 Diagnostic Information Queries (Nov 2012)</a> posts, there is a .sql file in each post with all kind of queries to discover all kinds of stuff about your server. </p>
<p>It could also be that your hardware is having issues, make sure the IOs look good and check the eventlog for any clues.</p>
<p>
<h2>The latest backup we have is 9 days old</h2>
<p>The following query will give you for all the databases the last time it was backed up or display NEVER if it wasn&#8217;t backed up</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> s.<span class="me1">Name</span> <span class="kw1">AS</span> DatabaseName,<span class="st0">'Database backup was taken on &nbsp;'</span> <span class="sy0">+</span> 
<span class="kw1">CASE</span> <span class="kw1">WHEN</span> <span class="kw2">MAX</span><span class="br0">&#40;</span>b.<span class="me1">backup_finish_date</span><span class="br0">&#41;</span> <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="st0">'NEVER!!!'</span> <span class="kw1">ELSE</span>
<span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">12</span><span class="br0">&#41;</span>, <span class="br0">&#40;</span><span class="kw2">MAX</span><span class="br0">&#40;</span>b.<span class="me1">backup_finish_date</span><span class="br0">&#41;</span><span class="br0">&#41;</span>, <span class="nu0">101</span><span class="br0">&#41;</span> <span class="kw1">END</span> <span class="kw1">AS</span> LastBackUpTime
<span class="kw1">FROM</span> sys.<span class="me1">sysdatabases</span> s
<span class="kw1">LEFT</span> <span class="sy0">OUTER</span> <span class="sy0">JOIN</span> msdb.<span class="me1">dbo</span>.<span class="me1">backupset</span> b <span class="kw1">ON</span> b.<span class="me1">database_name</span> <span class="sy0">=</span> s.<span class="me1">name</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> s.<span class="me1">Name</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT s.Name AS DatabaseName,'Database backup was taken on  ' + 
CASE WHEN MAX(b.backup_finish_date) IS NULL THEN 'NEVER!!!' ELSE
CONVERT(VARCHAR(12), (MAX(b.backup_finish_date)), 101) END AS LastBackUpTime
FROM sys.sysdatabases s
LEFT OUTER JOIN msdb.dbo.backupset b ON b.database_name = s.name
GROUP BY s.Name</pre></div></div>

<p>Here is what the output will look like</p>
<pre>DatabaseName	LastBackUpTime
--------------  ---------------------------------------
model	        Database backup was taken on  NEVER!!!
msdb	        Database backup was taken on  12/10/2012
ReportServer	Database backup was taken on  NEVER!!!</pre>
<p>As you can see that is not that great, all the databases should be backed up on a regular basis. Scroll up to the <em>Utilize the logs</em> section to see how you can check the errorlog for failed backup messages.</p>
<p>
<h2>Everything is locked up, you can&#8217;t get any results back from a query</h2>
<p>Usually this indicates that there is an open transaction somewhere that has not finished or someone did the BEGIN TRAN  part but never did a COMMIT or ROLLBACK.</p>
<p>Some people just restart the server to &#8216;fix&#8217; the issue, of course if you do that you will never know what the root cause is and you never know when it will happen again.</p>
<p>We can easily show what happens when you have an open transaction, btw don&#8217;t do this on the production server.</p>
<p>In 1 query window run this, replace SomeTable with a real table name.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">BEGIN</span> <span class="kw1">TRAN</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1</span> <span class="sy0">*</span> <span class="kw1">FROM</span> SomeTable <span class="kw1">WITH</span><span class="br0">&#40;</span>UPDLOCK, <span class="kw1">HOLDLOCK</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">BEGIN TRAN

SELECT TOP 1 * FROM SomeTable WITH(UPDLOCK, HOLDLOCK)</pre></div></div>

<p>You will get a message that the query completed successfully</p>
<p>In another window run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1</span> <span class="sy0">*</span> <span class="kw1">FROM</span> SomeTable <span class="kw1">WITH</span><span class="br0">&#40;</span>UPDLOCK, <span class="kw1">HOLDLOCK</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 1 * FROM SomeTable WITH(UPDLOCK, HOLDLOCK)</pre></div></div>

<p>That query won&#8217;t return anything unless the first one is commited or rolled back<br />
Now run this query below, the first column should have the text AWAITING COMMAND</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp; sys.<span class="me1">cmd</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,sys.<span class="me1">last_batch</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">resource_type</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">resource_subtype</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">DB_NAME</span><span class="br0">&#40;</span>lok.<span class="me1">resource_database_id</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">resource_description</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">resource_associated_entity_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">resource_lock_partition</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">request_mode</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">request_type</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">request_status</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">request_owner_type</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">request_owner_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,lok.<span class="me1">lock_owner_address</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">waiting_task_address</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">session_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">exec_context_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">wait_duration_ms</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">wait_type</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">resource_address</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">blocking_task_address</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">blocking_session_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">blocking_exec_context_id</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,wat.<span class="me1">resource_description</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">dm_tran_locks</span> lok
<span class="sy0">JOIN</span> &nbsp; &nbsp;sys.<span class="me1">dm_os_waiting_tasks</span> wat
<span class="kw1">ON</span> &nbsp; &nbsp; &nbsp;lok.<span class="me1">lock_owner_address</span> <span class="sy0">=</span> wat.<span class="me1">resource_address</span>
<span class="sy0">JOIN</span>&nbsp; &nbsp; sys.<span class="me1">sysprocesses</span> sys <span class="kw1">ON</span> wat.<span class="me1">blocking_session_id</span> <span class="sy0">=</span> sys.<span class="me1">spid</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT   sys.cmd
        ,sys.last_batch
        ,lok.resource_type
        ,lok.resource_subtype
        ,DB_NAME(lok.resource_database_id)
        ,lok.resource_description
        ,lok.resource_associated_entity_id
        ,lok.resource_lock_partition
        ,lok.request_mode
        ,lok.request_type
        ,lok.request_status
        ,lok.request_owner_type
        ,lok.request_owner_id
        ,lok.lock_owner_address
        ,wat.waiting_task_address
        ,wat.session_id
        ,wat.exec_context_id
        ,wat.wait_duration_ms
        ,wat.wait_type
        ,wat.resource_address
        ,wat.blocking_task_address
        ,wat.blocking_session_id
        ,wat.blocking_exec_context_id
        ,wat.resource_description
FROM    sys.dm_tran_locks lok
JOIN    sys.dm_os_waiting_tasks wat
ON      lok.lock_owner_address = wat.resource_address
JOIN	sys.sysprocesses sys ON wat.blocking_session_id = sys.spid</pre></div></div>

<p>As you can see you have a blocking_session_id and a session_id, this will tell you which session_id is being blocked. You can now verify that the transaction session_id  is blocking the other id</p>
<p>Go back to that first command window and execute a rollback</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ROLLBACK</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ROLLBACK</pre></div></div>

<p>The query that had that second select should now be done as well, if you run that query that checks for the waits it should be clean as well.</p>
<p>Of course you could have done the same excercise by running sp_who2, looking at the BlkBy column, finding out what that session is doing by running DBCC INPUTBUFFER(session_id) with that session_id</p>
<p>
<h2>Deadlocks are occurring</h2>
<p>There is already a post written on LessThanDot explaining how you can get emailed when deadlocks occur. Ted Krueger wrote that post and it can be found here: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/proactive-deadlock-notifications">Proactive Deadlock Notifications</a></p>
<h2>Summary</h2>
<p>I only touched the surface of what can be done in this post. I want you to find out if there is any monitoring being done in your shop, who gets notified? I have worked in places where the end user was the proactive notification, as long as we fixed it before the business users started to complaint life was good. Manual notifications and homebrew solutions might work for a while but when you add more and more servers and you add more people to the team this becomes laborious and error prone.</p>
<p>If there is one New Year&#8217;s resolution you should add next year, I would suggest proactive notifications. Get trial versions of the tools, try them out until January 1st and then decide if you think it is worth.</p>
<p>That is all for day twelve of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/proactive-notifications/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 8: Foreign Keys</title>
		<link>/index.php/datamgmt/dbprogramming/foreign-keys/</link>
		<comments>/index.php/datamgmt/dbprogramming/foreign-keys/#comments</comments>
		<pubDate>Sat, 08 Dec 2012 15:17:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[data integrity]]></category>
		<category><![CDATA[foreign keys]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/foreign-keys/</guid>
		<description><![CDATA[This is day eight of the SQL Advent 2012 series of blog posts. Today we are going to look at foreign keys

  
That is all for day eight of the SQL Advent 2012 series, come back tomorrow for the next one, you can also check out all the posts from last&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. In yesterday&#8217;s post <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">SQL Advent 2012 Day 7: Lack of constraints</a> we touched a little upon foreign key constraints but today we are going to take a closer look at foreign keys. The two things that we are going to cover are the fact that you don&#8217;t need a primary key in order to define a foreign key relationship, SQL Server by default will not index foreign keys</p>
<h2>You don&#8217;t need a primary key in order to have a foreign key</h2>
<p>Most people will define a foreign key relationship between the foreign key and a primary key. You don&#8217;t have to have a primary key in order to have a foreign key, if you have a unique index or a unique constraint then those can be used as well. Let&#8217;s take a look at what that looks like with some code examples</p>
<p><strong>A foreign key with a unique constraint instead of a primary key</strong><br />
First create a table to which we will add a unique constraint after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueConstraint(id int)
GO</pre></div></div>

<p>Add a unique constraint to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again, this should fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p><em>Msg 2627, Level 14, State 1, Line 2<br />
Violation of UNIQUE KEY constraint &#8216;ix_unique&#8217;. Cannot insert duplicate key in object &#8216;dbo.TestUniqueConstraint&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignConstraint(id int)
GO</pre></div></div>

<p>Add the foreign key to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignConstraint</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignConstraint_TestUniqueConstraint <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueConstraint</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignConstraint ADD CONSTRAINT
	FK_TestForeignConstraint_TestUniqueConstraint FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueConstraint(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(1)
INSERT TestForeignConstraint  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignConstraint_TestUniqueConstraint&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueConstraint&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueConstraint table</p>
<p><strong>A foreign key with a unique index instead of a primary key</strong><br />
This section will be similar to the previous section, the difference is that we will use a unique index instead of a unique constraint</p>
<p>First create a table to which we will add a unique index after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueIndex(id int)
GO</pre></div></div>

<p>Add the unique index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">UNIQUE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> ix_unique <span class="kw1">ON</span> TestUniqueIndex<span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE UNIQUE NONCLUSTERED INDEX ix_unique ON TestUniqueIndex(id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again , this should now fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p><em>Msg 2601, Level 14, State 1, Line 2<br />
Cannot insert duplicate key row in object &#8216;dbo.TestUniqueIndex&#8217; with unique index &#8216;ix_unique&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignIndex(id int)
GO</pre></div></div>

<p>Add the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignIndex</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignIndex_TestUniqueIndex <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueIndex</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignIndex ADD CONSTRAINT
	FK_TestForeignIndex_TestUniqueIndex FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueIndex(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(1)
INSERT TestForeignIndex  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignIndex_TestUniqueIndex&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueIndex&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueIndex table</p>
<p>As you have seen with the code example, you can have a foreign key constraint that will reference a unique index or a unique constraint in addition to be able to reference a primary key</p>
<h2>Foreign keys are not indexed by default</h2>
<p>When you create a primary key, SQL Server will by default make that a clustered index. When you create a foreign key, there is no index created</p>
<p>Scroll up to where we added the unique constraint to the TestUniqueConstraint table, you will see this code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)</pre></div></div>

<p>All we did was add the constraint, SQL Server added the index behind the scenes for us in order to help enforce uniqueness more efficiently</p>
<p>Now run this query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestUniqueIndex'</span>,<span class="st0">'TestUniqueConstraint'</span><span class="br0">&#41;</span>
<span class="sy0">AND</span> name <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestUniqueIndex','TestUniqueConstraint')
AND name IS NOT NULL</pre></div></div>

<p>You will get these results</p>
<pre>TableName	        IndexName	StorageType
---------------------   -----------     --------------
TestUniqueConstraint	ix_unique	NONCLUSTERED
TestUniqueIndex	        ix_unique	NONCLUSTERED</pre>
<p>As you can see both tables have an index</p>
<p>Now let&#8217;s look at what the case is for the foreign key tables. Run the query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestForeignIndex'</span>,<span class="st0">'TestForeignConstraint'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestForeignIndex','TestForeignConstraint')</pre></div></div>

<p>Here are the results for that query</p>
<pre>TableName	      IndexName	StorageType
--------------------- --------- -------------
TestForeignConstraint	NULL	HEAP
TestForeignIndex	NULL	HEAP</pre>
<p>As you can see no indexes have been added to the tables. Should you add indexes? In order to answer that let&#8217;s see what would happen if you did add indexes. Joins would perform faster since it can traverse the index instead of the whole table to find the matching join conditions. Updates and deletes will be faster as well since the index can be used to find the foreign keys rows to update or delete (remember this depends if you specified CASCADE or NO ACTION when you create the foreign key constraint)<br />
So to answer the question, yes, I think you should index the foreign key columns</p>
<p>That is all for day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/foreign-keys/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
