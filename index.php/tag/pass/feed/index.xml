<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>pass &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/pass/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>PASS BI VC recording is available now</title>
		<link>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/</link>
		<comments>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/#respond</comments>
		<pubDate>Fri, 05 Dec 2014 12:18:57 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[business intelligence]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[etl]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[virtual chapter]]></category>

		<guid isPermaLink="false">/?p=3115</guid>
		<description><![CDATA[The recording of the webinar I did for the PASS BI virtual chapter is live! (Quick reminder: it was the same session as on the SQLServerDays:Â How to (not) torment your fellow SSIS developer?) I&#8217;m quite pleased with the recording, although I sound like a drunk German scientist sometimes. The slides can be downloaded here. Let [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The recording of the <a href="/index.php/datamgmt/ssis/pass-bi-vc-how-to-not-torment-your-fellow-ssis-developer/">webinar </a>I did for the PASS BI virtual chapter is live!<br />
(Quick reminder: it was the same session as on the SQLServerDays:Â <a style="color: #c04623" href="/index.php/uncategorized/speaking-at-sql-server-days-2014/">How to (not) torment your fellow SSIS developer?</a>)</p>
<p>I&#8217;m quite pleased with the recording, although I sound like a drunk German scientist sometimes.</p>
<p><iframe width="500" height="281" src="https://www.youtube.com/embed/-N7gxmAdceM?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>The slides can be downloaded <a href="http://www.slideshare.net/KoenVerbeeck/sql-server-days-2014-how-to-not-torment-your">here</a>.</p>
<p>Let me know in the comments if you like it or not!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/pass-bi-vc-recording-is-available-now/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>PASS BI VC: How to (not) torment your fellow SSIS developer?</title>
		<link>/index.php/datamgmt/ssis/pass-bi-vc-how-to-not-torment-your-fellow-ssis-developer/</link>
		<comments>/index.php/datamgmt/ssis/pass-bi-vc-how-to-not-torment-your-fellow-ssis-developer/#comments</comments>
		<pubDate>Wed, 12 Nov 2014 11:52:09 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[bi]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[syndicated]]></category>
		<category><![CDATA[webinar]]></category>

		<guid isPermaLink="false">/?p=3058</guid>
		<description><![CDATA[On November 17th 2PM CET I will redo my SQL Server Days presentation How to (not) torment your fellow SSIS developer? for the PASS BI virtual chapter. This is great news for the people who couldn&#8217;t attend my session at the SQL Server Days and who still want to see it (I hope those people [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">On November 17th 2PM CET I will redo my SQL Server Days presentation <a href="/index.php/uncategorized/speaking-at-sql-server-days-2014/">How to (not) torment your fellow SSIS developer?</a> for the <a href="http://bi.sqlpass.org/">PASS BI virtual chapter</a>. This is great news for the people who couldn&#8217;t attend my session at the SQL Server Days and who still want to see it (I hope those people actually exist).</p>
<p style="text-align: justify">What is even better is that the PASS BI virtual chapter afterwards always uploads the webinars to Youtube, so there won&#8217;t be any excuse for not watching my session <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
Check out other amazing BI sessions from the SQL community on<a href="https://www.youtube.com/user/passbivc"> their Youtube channel</a>!</p>
<p style="text-align: justify">You can register for the webinar <a href="https://attendee.gotowebinar.com/register/8118983337165731074">here</a>.</p>
<p><a href="https://www.youtube.com/user/passbivc"><img class="alignnone wp-image-3059 size-medium" src="/wp-content/uploads/2014/11/passbivc-300x150.jpg" alt="passbivc" width="300" height="150" srcset="/wp-content/uploads/2014/11/passbivc-300x150.jpg 300w, /wp-content/uploads/2014/11/passbivc.jpg 400w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/ssis/pass-bi-vc-how-to-not-torment-your-fellow-ssis-developer/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>Speaking at SQL Server Days 2014</title>
		<link>/index.php/uncategorized/speaking-at-sql-server-days-2014/</link>
		<comments>/index.php/uncategorized/speaking-at-sql-server-days-2014/#comments</comments>
		<pubDate>Fri, 04 Jul 2014 11:43:36 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[speaking]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[sql server days]]></category>
		<category><![CDATA[sqlfamily]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=2810</guid>
		<description><![CDATA[I am absolutely delighted to share the great news that I have been selected as one of the speakers for the 2014 edition of the SQL Server Days in Belgium. It is one of the biggest SQL Server events in Europe and this will be the 4th time I am presenting there. A lot of [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">I am absolutely delighted to share the great news that I have been selected as one of the speakers for the 2014 edition of the <a href="http://sqlserverdays.be/">SQL Server Days</a> in Belgium. It is one of the biggest SQL Server events in Europe and this will be the 4th time I am presenting there. A lot of great names of the #sqlfamily have also been confirmed, such as Grant Fritchey, Denny Cherry, Stacia Misner, KlausÂ Asschenbrenner, Marco Russo, AndrÃ© Kamman and many many other talented speakers. There are also some great precons, most notably in the BI space the Power BI precon by Jen Stirrup and the SSAS Tabular precon by Julie Koesmarno.</p>
<p style="text-align: justify">Anyway, my session is titled <em>&#8220;How to (not) torment your fellow SSIS developer?&#8221;</em> and its abstract is as follows:</p>
<p style="text-align: justify"><em>Did you ever inherited a slow running un-maintainable mess of an SSIS package? Or do you want to knock up your SSIS developing skills to the next level?Â </em><em>This session will guide you through common SSIS best practices and performance pitfalls. We will make packages easier to read, maintain and more efficient.</em></p>
<p><em>You will learn some practical tips to make your life â€“ and that of your successor â€“ easier.</em></p>
<p>It is a level 300 session, meaning that I will not explain how SSIS works and I will dive straight into some best practices and performance tuning, assuming the audience can tell a control flow and a data flow apart from each other. Basically this session will explain how an SSIS package should look like and behave, at least in my opinion. In other words, if I inherit a package from someone else what stops me from pulling out my hair <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>So if you want to learn more about SSIS or if you want to watch other great sessions (5 different tracks with each 5 slots!), do not hesitate to <a href="http://www.sqlserverdays.be/registration/">register</a>! There is an early bird discount until the July 15th.</p>
<p><a href="http://www.sqlserverdays.be/registration/"><img class="alignnone size-full wp-image-2811" src="/wp-content/uploads/2014/07/SQLServerDays2014.jpg" alt="SQLServerDays2014" width="627" height="161" srcset="/wp-content/uploads/2014/07/SQLServerDays2014.jpg 627w, /wp-content/uploads/2014/07/SQLServerDays2014-300x77.jpg 300w" sizes="(max-width: 627px) 100vw, 627px" /></a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/speaking-at-sql-server-days-2014/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Leveraging MSBUILD to automate SSRS deployments â€“ session material</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/leveraging-msbuild-to-automate-ssrs/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/leveraging-msbuild-to-automate-ssrs/#comments</comments>
		<pubDate>Tue, 05 Feb 2013 07:28:00 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSRS]]></category>
		<category><![CDATA[automate]]></category>
		<category><![CDATA[deploy]]></category>
		<category><![CDATA[deployment]]></category>
		<category><![CDATA[msbuild]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sqlug]]></category>
		<category><![CDATA[ssrs]]></category>

		<guid isPermaLink="false">/index.php/2013/02/leveraging-msbuild-to-automate-ssrs/</guid>
		<description><![CDATA[The demo material for my SQLUG session about leveraging MSBUILD to automate SSRS deployments.]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;"><a href="/media/users/koenverbeeck/logo.png?mtime=1358861145"><img style="float: left;" src="/wp-content/uploads/users/koenverbeeck/logo.png?mtime=1358861145" alt="" width="136" height="84" /></a></p>
<p style="text-align: justify;">A week ago I gave a session for the Belgian SQL Server user group, <a href="http://sqlug.be/">SQLUG.be</a>, about how MSBUILD can be used to automate SSRS deployments. Thanks to a lovely strike of the taxi drivers in Brussels it took me only 2 hours to get at the location, but hey, the turnout was great, there was beer and pizza and the demoâ€™s didnâ€™t crash.</p>
<p style="text-align: justify;"><span style="text-align: justify;">You can find the demo material from my session <a href="/media/users/koenverbeeck/SQLUG_MSBUILD/MSBUILD_SSRSDeploy_Demos.zip?mtime=1360009782" target="_blank">here</a> and you can download the slides from </span><a style="text-align: justify;" href="http://www.slideshare.net/KoenVerbeeck/sqlug-msbuild-ssrs-deployments">SlideShare</a><span style="text-align: justify;">. My colleague Valentino did a session as well, you can find his material on his </span><a style="text-align: justify;" href="http://blog.hoegaerden.be/2013/01/30/automating-ssrs-deployment-download/">blog</a><span style="text-align: justify;">.</span></p>
<p style="text-align: justify;">For everyone who attended: thanks for joining us and for being such a great audience!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/leveraging-msbuild-to-automate-ssrs/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>SQLUG.be meeting: Automating SSRS Deployments</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/sqlug-be-meeting-automating-ssrs/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/sqlug-be-meeting-automating-ssrs/#respond</comments>
		<pubDate>Tue, 22 Jan 2013 11:29:00 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSRS]]></category>
		<category><![CDATA[automate]]></category>
		<category><![CDATA[deploy]]></category>
		<category><![CDATA[deployment]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sqlug]]></category>
		<category><![CDATA[ssrs]]></category>

		<guid isPermaLink="false">/index.php/2013/01/sqlug-be-meeting-automating-ssrs/</guid>
		<description><![CDATA[Â 

Next Tuesday â€“ 29 januari 2013 â€“ my colleague Valentino (blog &#124; twitter) and I will give two sessions on the topic of Reporting Services deployments. In contrast with SSIS and SSAS, there isnâ€™t much available to automate this, so weâ€™ll be spending&#8230;]]></description>
				<content:encoded><![CDATA[<p>Â </p>
<div class="image_block"><a href="/media/users/koenverbeeck/logo.png?mtime=1358861145"><img style="float: left;" src="/wp-content/uploads/users/koenverbeeck/logo.png?mtime=1358861145" alt="" width="148" height="91" /></a></div>
<p style="text-align: justify;">Next Tuesday â€“ 29 januari 2013 â€“ my colleague Valentino (<a href="http://blog.hoegaerden.be/">blog</a> | <a href="https://twitter.com/ValentinoV42">twitter</a>) and I will give two sessions on the topic of Reporting Services deployments at the Belgian SQL Server User Group. In contrast with SSIS and SSAS, there isnâ€™t much available to automate this, so weâ€™ll be spending some time exploring how this gap can be crossed. Each of us will present a different method. Mine is about MSBUILD, an idea presented to my Jamie Thomson (<a href="http://sqlblog.com/blogs/jamie_thomson/default.aspx">blog</a> | <a href="https://twitter.com/jamiet">twitter</a>), who pointed me to one of his blog posts: <a href="http://sqlblog.com/blogs/jamie_thomson/archive/2009/10/31/deploying-reporting-services-reports-using-msbuild.aspx">Deploying Reporting Services reports using msbuild</a>.</p>
<p style="text-align: justify;">Here are the official abstracts:</p>
<p><em>You have just finished your dazzling SSRS report project and you can&#8217;t wait to show your visual cleverness to the users. But, the DBA hasn&#8217;t given you permission to directly deploy to the production server! Instead, this paranoia person asked you to deliver him deployment scripts! What are you supposed to do? In the following two sessions, Valentino and Koen will show you two different methods to get the job done.</em></p>
<p><strong>Automating SSRS deployment using built-in SQL Server tools </strong></p>
<p>Have you always wanted to find out what the RS Utility is all about but never dared to ask? Then this session is what you&#8217;ve been waiting for!</p>
<p>Join Valentino to discover how rs.exe can be used to automate SSRS report deployment!</p>
<p><strong>Speaker: </strong>Valentino Vranken<br /> <strong>Level: </strong>300<strong> </strong></p>
<p><strong>Leveraging MSBUILD to automate SSRS deployments. </strong></p>
<p>Unlike SSIS and SSAS, Reporting Services doesn&#8217;t have an easy way to automate deployments. You can work your way around with VBScripts, but isn&#8217;t there an alternative?</p>
<p>Yes there is! Koen Verbeeck will show you in this session how the MSBUILD platform can be used to deploy your SSRS projects to the server.</p>
<p><strong>Speaker: </strong>Koen Verbeeck<br /> <strong>Level: </strong>300</p>
<p>All of this goodness will take place in the Ordina Belgium offices. Catering will be provided. This hasnâ€™t been confirmed yet, but it might be pizza and beer <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /> I will put my slides and demo material online after the session.</p>
<p>More information and registration (thereâ€™s still room left) on the <a href="http://sqlug.be/nextevent/event/?id=34">SQLUG.be website</a>.</p>
<p><strong>UPDATE:</strong> It has been confirmed there will be pizza! <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/sqlug-be-meeting-automating-ssrs/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>My first PASS attendance</title>
		<link>/index.php/itprofessionals/professionaldevelopment/sql-pass-2010/</link>
		<comments>/index.php/itprofessionals/professionaldevelopment/sql-pass-2010/#comments</comments>
		<pubDate>Mon, 15 Nov 2010 09:35:09 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Professional Development]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[professional association of sql server]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[training]]></category>

		<guid isPermaLink="false">/index.php/2010/11/sql-pass-2010/</guid>
		<description><![CDATA[Expressor is taking the path that I think is right with the community.  I'm convinced to dig deeper into the product and will be beating Expressor 3.0 up a bit soon.  Andy is, as we all know, the top of the SSIS execution tree when it comes to respect and knowledge and having him onboard is enough to grab my attention to the product.  However, they went to the next step with having all of us in the room with them and directly asking feedback not only on the products but the community.]]></description>
				<content:encoded><![CDATA[<p><img src="/wp-content/uploads/blogs/ITProfessionals/pass.gif" alt="" title="" /></p>
<p>It really was!  By the reaction I received from most of the people that I had been talking to for some time now, you wouldn&#8217;t have guessed this to be my first PASS but I had the first timer ribbon proudly shown.  I can say with great confidence that I was missing out badly over the years.</p>
<h3><strong>Monday</strong></h3>
<p>I&#8217;m going to take Monday as a shout out to <a href="http://expressor-community.com/expressor-studio">Expressor</a>.  I arrived in Seattle fairly late.  Blythe and Expressor invited me to a gathering that had started around 6:00PM.  Since my flight landed at 6:05PM, I was already in a rush to hit the light rail and head downtown.  With all intentions of dropping my bag off and checking into the hotel first, I started walking to the Westin from the Westlake stop.  Well, remember that this was my first trip to PASS and Seattle.  Needless to say my choice of direction was the opposite to that of my hotel.  The good news is, I realized quickly I was heading the wrong way (only about a Seattle city block) I looked up to see the sign of the meeting place for the Expressor crew a few steps in front of me when I realized the mistake.  I&#8217;m glad it happened that so I wasn&#8217;t delayed any longer from getting there.  I may have missed the main dinner course but I found myself sitting in a round table manner with the likes of Andy Leonard (<a href="http://twitter.com/andyleonard">Twitter</a> | <a href="http://sqlblog.com/blogs/andy_leonard/default.aspx">Blog</a>), Jessica Moss (<a href="http://twitter.com/jessicammoss">Twitter</a> | <a href="http://jessicammoss.blogspot.com/">Blog</a>), Todd McDermid (<a href="http://twitter.com/todd_mcdermid">Twitter</a> | <a href="http://toddmcdermid.blogspot.com/">Blog</a>), Aaron Nelson (<a href="http://twitter.com/sqlvariant">Twitter</a> | <a href="http://sqlvariant.com/wordpress/">Blog</a>), Rob Farley (<a href="http://twitter.com/rob_farley">Twitter</a> | <a href="http://sqlblog.com/blogs/rob_farley/">Blog</a>), Michelle Ufford (<a href="http://twitter.com/sqlfool">Twitter</a> | <a href="http://sqlfool.com/">Blog</a>), Adam Machanic (<a href="http://twitter.com/adammachanic">Twitter</a> | <a href="http://sqlblog.com/blogs/adam_machanic/">Blog</a>), Jason Strate (<a href="http://twitter.com/stratesql">Twitter</a> | <a href="http://www.jasonstrate.com/">Blog</a>), Tim Mitchell (<a href="http://twitter.com/Tim_Mitchell">Twitter</a> | <a href="http://www.timmitchell.net/">Blog</a>) and many more.  A fairly breath taking representation of the SQL Community and SQL Server knowledge that would scare any Oracle team out of the house.</p>
<p>Expressor is taking the path that I think is right with the community.  I&#8217;m convinced to dig deeper into the product and will be beating Expressor 3.0 up a bit soon.  Andy is, as we all know, the top of the SSIS execution tree when it comes to respect and knowledge and having him onboard is enough to grab my attention to the product.  However, they went to the next step with having all of us in the room with them and directly asking feedback not only on the products but the community.  That impressed me and I know others were as well.  Once the dinner was done, it was off to my first PASS SQL Karaoke night.  Late night of Karaoke can start any SQL conference off on the right step.  I hope at some point everyone gets the chance to see my good friend Jason Strate (<a href="http://twitter.com/stratesql">Twitter</a> | <a href="http://www.jasonstrate.com/">Blog</a>) sing and dance.  The man is a blast to hang out with!  Wendy Pastrick (<a href="http://twitter.com/wendy_dance">Twitter</a> | <a href="http://wendyverse.blogspot.com/">Blog</a>) and Kathi Kellenberger (<a href="http://twitter.com/auntkathi">Twitter</a> | <a href="http://www.sqlservercentral.com/blogs/kathi_kellenberger/default.aspx">Blog</a>) follow up with an unbelievable ability to sing along perfectly with some of the songs played.  Rose Waters (<a href="http://twitter.com/sqlrose">Twitter</a>) even joined us.</p>
<h3><strong>Tuesday</strong></h3>
<p>I had to register still for the summit so I got up and headed off to registration quickly.  Grabbed my badge and slapped the yellow, &#8220;First Timer&#8221; ribbon on it.  I then found Kendal Van Dyke (<a href="http://twitter.com/sqldba">Twitter</a> | <a href="http://www.kendalvandyke.com/">Blog</a>).  I have wanted to meet Kendal for some time now and was very excited to get the chance.  We headed into Breakfast and although we didn&#8217;t have much time to catch up, it was a great time talking and it is always inspiring to be in the presence of such a highly respected community member.<br />
I then found Erin Stellato (<a href="http://twitter.com/erinstellato">Twitter</a> | <a href="http://www.erinstellato.com/">Blog</a>).  Erin was the leader of a bunch of us &#8220;first timers&#8221; at PASS.  She did a great job helping us out in knowing where and what to do at all hours of the day.  She is also a brilliant database professional and important part of the SQL Community.  (I really dig the battery time on her SQL Cruise netbook).  For future reference: don&#8217;t ever pull the battery out of one of those without checking to see if it is just asleep.  Sorry, Erin!!!  Erin and I attended Grant Fritchey&#8217;s (<a href="http://twitter.com/gfritchey">Twitter</a> | <a href="http://scarydba.com/">Blog</a>) session, Identifying and Fixing Performance Problems using Execution Plans.  Grant and this topic are about the same as saying, Jonathan Kehayias (<a href="http://twitter.com/sqlsarg">Twitter</a> | <a href="http://sqlblog.com/blogs/jonathan_kehayias">Blog</a>) and SQL Server Internals.  The session was very good and I learned a few new things.</p>
<p>Lunch came quickly and I headed to my first contributing part in PASS 2010 as a member in the <a href="http://www.sqlpass.org/summit/na2010/Connect/BirdsofaFeather.aspx">Birds of a Feather Luncheon</a>.  My table topic was, Cheapest DR/HA Options on SQL Server.  I dropped my bag off and went for food.  By the time I got back to the table, it was full of people ready to chat in a casual manner about the topic.  Several attendees asked about Mirroring for HA and also using the feature in a DR manner with centers located in completely different geographical locations.  Log shipping was a heavy topic and also some replication.  I won&#8217;t go into details (scope and all) but can say that we all had a great time.  I hope the luncheon is repeated next year.  I think this was not only a lot of fun, but I had the chance to help many other people get some good starting points when they returned to work.<br />
Tuesday night: SQL Karaoke.  Need I say more?</p>
<h3><strong>Wednesday</strong></h3>
<p>Wednesday was just a little harder to wake up.  PASS never sleeps!  Well, Karaoke never sleeps.  When you come to PASS and if you have great intentions on networking; put SQL Karaoke on the schedule.  I had the pleasure of meeting several people that I probably would not have been able to find otherwise.  All of which exchanged business cards and I look forward to keeping in touch with until the next SQL event gets us back together.</p>
<p>During the keynote, I was watching my twitter feed and saw this tweet come through from Jessica Moss (<a href="http://twitter.com/jessicammoss">Twitter</a> | <a href="http://jessicammoss.blogspot.com/">Blog</a>)</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/ITProfessionals/pass01.gif" alt="" title="" width="458" height="176" /></div>
</p>
<p>I took this to heart (even with my own first timer ribbon) and walked out of the main doors to the area just outside the keynote.  I found five people sitting alone and with the first timer ribbon and sparked a conversation up with them.  All had very different areas of SQL Server they were interested in and attending PASS for.  One first timer was more interested in the developer and BI side of things.  After talking at some length, we started talking about <a href="http://lessthandot.com/">LessThanDot</a>, <a href="http://mvp.support.microsoft.com/gp/aboutmvp">MVP award</a> and then into blogging and speaking.  I took that conversation further in knowing Kendal Van Dyke (<a href="http://twitter.com/sqldba">Twitter</a> | <a href="http://www.kendalvandyke.com/">Blog</a>) was giving a presentation just following the keynote titled, &#8220;Getting started with blogging and speaking&#8221;.  I invited the first timer into the room and was happy to see that he (and two others I told) did show up.  I found myself up in the front of the room with Rob Farley (<a href="http://twitter.com/rob_farley">Twitter</a> | <a href="http://sqlblog.com/blogs/rob_farley/">Blog</a>), Aaron Bertrand (<a href="http://twitter.com/aaronbertrand">Twitter</a> | <a href="http://sqlblog.com/blogs/aaron_bertrand/">Blog</a>), Buck Woody (<a href="http://twitter.com/buckwoody">Twitter</a> | <a href="http://buckwoody.com/">Blog</a>), Todd McDermid (<a href="http://twitter.com/todd_mcdermid">Twitter</a> | <a href="http://toddmcdermid.blogspot.com/">Blog</a>), Mike Walsh (<a href="http://twitter.com/mike_walsh">Twitter</a> | <a href="http://www.straightpathsql.com/">Blog</a>), Tom LaRock (<a href="http://twitter.com/sqlrockstar">Twitter</a> | <a href="http://thomaslarock.com/backstage/">Blog</a>), Stacia Misner (<a href="http://twitter.com/StaciaMisner">Twitter</a> | <a href="http://sqlblog.com/blogs/stacia_misner">Blog</a>), Patrick (<a href="http://twitter.com/patrickdba">Twitter</a> | <a href="http://sqldownsouth.blogspot.com/">Blog</a>), Andy Warren (<a href="http://twitter.com/SQLAndy">Twitter</a> | <a href="http://www.sqlservercentral.com/blogs/andy_warren/default.aspx">Blog</a>) and Brent Ozar (<a href="http://twitter.com/brento">Twitter</a> | <a href="http://www.brentozar.com/what-i-do/twitter/">Blog</a>).  All of us were representing experienced bloggers and speakers while Kendal went through his presentation.  This presentation was extremely good and the interaction it sparked with the attendees was excellent.  Every question that was asked is the same question everyone up on the panel had asked themselves early on.  I think with Kendal leading the presentation and our feedback, there will be many more bloggers and speakers coming to the SQL Community.  Great job, Kendal!</p>
<p>Later in the day I attended the lightening talk&#8217;s session.   I&#8217;ll be completely honest that I think these sessions were the most enjoyable for me.  It is amazing to see what people like Adam Machanic and Rob Farley can do with five minutes and a slide deck.  I have to also say that Adam hands down wins the prize of the best five minute session.  I have never seen such harmony between a rapid speaking while being perfectly in sync with what seemed to be, well over twenty or so slides.  In five minutes!  I&#8217;d say it was easily a 90 minute session packed into 5 and still taught everyone something.</p>
<p>Wednesday early evening, Jason Strate and I met up with Jonathan Kehayias and Arnie Rowland (<a href="http://sqlblog.com/blogs/arnie_rowland/">Blog</a>).  We ended up at the SQL Sentry after party and again, I had the chance to meet some exceptional people in the community.  I had more time to chat with Aaron Bertrand and Denny Cherry among many others.  I met Zach <a href="http://twitter.com/widba">WIDBA</a>, who I had been trying to catch all week so far.  <a href="http://www.sqlsentry.com/">SQL Sentry</a> puts on one hell of a after party (and has some pretty fantastic and brilliant products like the new <a href="http://sqlsentry.net/plan-explorer/sql-server-query-view.asp">Plan Explorer Tool</a>)</p>
<p>Wednesday night: SQL Karaoke.  Need I say more?  I was lucky enough to meet Meredith Ryan-Smith (<a href="http://twitter.com/coffegrl">Twitter</a>) and Gill Rowley (<a href="http://twitter.com/BadgerBully">Twitter</a> | <a href="http://gillrowley.wordpress.com/">Blog</a>)</p>
<h3><strong>Thursday</strong></h3>
<p>Thursday meant PASS was coming to an end for me and far too quickly.  The day started with a keynote that I probably will never forget and one that I will be reviewing the slide deck and the video more than once over.  Dr. Dewitt himself gave a comprehensive and very in-depth look at the optimizer.  I don&#8217;t think I was alone in saying this was the best keynote hands down that PASS has had.  We need more like this!  Marketing is important but we can only take so much.</p>
<p>Thursday wasn&#8217;t only the third day of PASS but was also Veterans Day in the United States.  One of my good friends Jonathan Kehayias is a Drill Sergeant in the Army and I needed to first, show my appreciation for this devotion to protecting all of us and second, do something so everyone else attending knew he was.  I found a shirt making store in the convention center and made Jonathan a shirt to show that appreciation.  Once I had the shirt in hand, I quickly went to his last session on performance tuning (which was top notch as always).  After Jason Strate and I gave Jonathan his gift, he immediately said he was going to wear it in the session.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/ITProfessionals/pass02.gif" alt="" title="" width="269" height="358" /></div>
<p>The man really is superman, both with SQL and his abilities to serve for all of us.</p>
<p>Thursday ended and that concluded the three days of normal sessions.  I have to say that PASS knows how to make a person come back.  Knowledge, networking and vendor interactions alone make this the most valuable conference there is for SQL Server.</p>
<p>Thursday night I attended the <a href="http://www.red-gate.com/about/community_relations/friends_of_RG.htm">Friends of Red Gate</a> Dinner.  Red Gate has always been strong in the community.  They know exactly how to get us (the community) involved and part of their product and company.  They have a name that is widely known and widely known product line that is solid and most of all, useful.  I feel absolutely fortunate to be a member of this group.  I had a chance to further talk with Tim Mitchell and also Tony Davis at the dinner.  Tony Davis is a great guy and I&#8217;m glad I had this chance to talk with him.  It will greatly help my future working with <a href="http://www.simple-talk.com/">simply-talk</a> publishing.</p>
<p>Annabel Bradford is our leader and is a great person that really knows how to pull people together in order to communicate and bring the community upfront with Red Gate.  She holds us all together and ensures we know what is going on both with Red Gate and the product line.  I have several blog posts coming on the new SQL Monitor and I think everyone that reads my blog will be very impressed with the portability, ease of installation and monitoring abilities this release has in it.<br />
Thursday night: SQL Karaoke.  Need I say more?</p>
<h3><strong>Friday</strong></h3>
<p>That was it.  I had to fly out Friday early afternoon.  Flying out Friday was a hardship as I missed a great deal both on post-con and the MVP materials.  Next year this will not happen and I will plan much farther in advance to stay the extra days.  Knowing PASS 2011 is October already, I can do that now.  I highly recommend you do as well.</p>
<p>I&#8217;d like to thank everyone that had all of the really great feedback about my blogs and other work I&#8217;ve done in the community.  I had the chance to chat with so many people and get what is good and bad about some of my writing.  Feedback is so important to us and when we can get it, we truly appreciate it.</p>
<p><strong>Everything has to end</strong></p>
<p>Friday morning I headed back to the airport.  PASS was really as great as everyone always told me it was.  I won&#8217;t be missing another one from here out.  The value in this week was far too great to skip out on.  So in closing, you have my full recommendation to start the process now in getting your employer to pay your way.  If they still won&#8217;t, the value in saving your pennies until next October is still worth it.</p>
<p>I know I missed many that I met this week.  Don&#8217;t worry, all of you made the week great and I have everyone&#8217;s business cards and will keep in touch.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/professionaldevelopment/sql-pass-2010/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Execution Plans &#8211; Indexing to achieve optimal query plans</title>
		<link>/index.php/datamgmt/dbprogramming/execution-plan-tuning-sql-server/</link>
		<comments>/index.php/datamgmt/dbprogramming/execution-plan-tuning-sql-server/#comments</comments>
		<pubDate>Mon, 25 Oct 2010 16:45:55 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[execution plans]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server community]]></category>
		<category><![CDATA[tuning]]></category>

		<guid isPermaLink="false">/index.php/2010/10/execution-plan-tuning-sql-server/</guid>
		<description><![CDATA[Execution plan analysis is a critical aspect to keeping SQL Server running optimally.  With any amount of hardware, the risk factor of a poorly written or unsupported statement being executed in a production environment has the ability to bring service availability to a halt.  Testing on a futuristic sizing of tables and indexes is also a part of tuning that should be taken into account.  Data will grow and, with that growth, queries will react differently if not tuned to their full potential.]]></description>
				<content:encoded><![CDATA[<blockquote><p>(Given the size of this article, a download e-paper is also available <a href="/wp-content/uploads/blogs/DataMgmt/Execution_Plan_and_Tuning.pdf" title="">here</a>)</p></blockquote>
<p><strong>The obstacle</strong></p>
<p>SQL Server and data storage itself is only as good as the means in which we can read the data.  Very seldom are databases created only for the purpose of inserting and storing data without the intent of ever reading that data.  While the type of structure or design of the data storage will vary depending on the type and majority of transactions that will occur on the database, the fact remains that the mechanisms in place must return the data quickly and without directly affecting other transactions from committing their own primary objectives.  With SQL Server, execution plans are a foundation and starting point of the tuning process after the infrastructure phases of building a database server have been optimized.</p>
<p>By utilizing execution plans in SQL Server, developers and administrators have the ability to prevent non-optimal statements from entering our production systems.  Implementing the steps of code reviews and initial tuning processes promotes this and removes the major risk that comes with not performing them.</p>
<p><strong>Plan Cache</strong></p>
<p>In order to tune a query, there is value in understanding how a query is processed and then stored for later reuse.  This section will briefly discuss the flow that a statement will take when it is passed to SQL Server.  For our reference, a statement will be directly related to any DML statement.  There are three major steps or processes that a statement goes through.  The first of these steps is called the parser.  The parser name says exactly what this process accomplishes.  The parser takes the statement and parses out all the steps that the statement has within it and creates these steps in what is called the parse tree.   This is also the process that will dictate if the statement is well formed or not and rejected or allowed to proceed.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_1.gif" alt="" title="" width="619" height="92" /></div>
<p>Following the parser, the next step is to hand the parse tree off to the Algebrizer.  Within the Algebrizer, all name resolving is performed.  For example, if a table name is not fully qualified, the Algebrizer will handle determining the exact location.  The Algebrizer also determines data types such as, VARCHAR(10) and NUMERIC(2,2).  With the Algebrizer completing successfully, a query processor tree is created.  The query processor tree is the final product that is required in order for the finishing task to finally create the execution plan &#8211; The Optimizer.</p>
<p>The optimizer has several tasks to accomplish in order to come to a valid execution plan.  During these tasks, the optimizer will determine the resources and objects available to use in order to create the most efficient execution possible.  Part of this is determined on statistics that are created in your database.  After everything has been calculated and the optimizer has found the most efficient execution plan possible, it is then compared to others in the plan cache. Plan cache is an allocated section in memory where SQL Server stores all of the execution plans that have been created.  These plans are not estimated but the actual execution plans that have been created from running statements in SQL Server.  If the optimizer finds a plan that matches the estimated plan it has created, it will use the plan that is already in plan cache.  This provides a few things for SQL Server in respect to speed.  It will prevent multiple plans from being cached that are identical and using memory that can be utilized for other plans.</p>
<p>When using execution plans to tune any query, it is a best practice to ensure the cache is clear of plans that may interfere with the true performance of the query as it is developed.  This allows the processing of a statement from start to completion and the overall performance of the statement to be measured.</p>
<p>To clear the cache, use DBCC FREEPROCCACHE</p>
<p><a href="http://msdn.microsoft.com/en-us/library/ms174283.aspx">FREEPROCCACHE</a> accepts either sql_handle or plan_handle as a parameter.  This allows for the clearing of only one cached plan over clearing the entire cache (calling FREEPROCCACHE with no parameter specified).  Clearing the entire plan cache will cause performance degradation due to the need for all statements being processed to be cached again.  This process involves more resources such as CPU and disk IO.  Best practice tells us that development should always occur on designated development and test database servers but this will still cause other development projects to be adversely affected in a negative way.</p>
<blockquote><p><span class="MT_red">Note: Never develop, test or alter a statement in production or clear the cache as it will affect performance in a negative way.</span></p></blockquote>
<p>Executing FREEPROCCACHE</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DBCC</span> FREEPROCCACHE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DBCC FREEPROCCACHE
GO</pre></div></div>

<p>We can test removing a single plan by running the following query on the AdventureWorks database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;SalesOrderNumber
<span class="kw1">FROM</span> &nbsp; &nbsp;AdventureWorks.<span class="me1">Sales</span>.<span class="me1">SalesOrderHeader</span> header
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> AdventureWorks.<span class="me1">Sales</span>.<span class="me1">SalesOrderDetail</span> details <span class="kw1">ON</span> header.<span class="me1">salesorderid</span> <span class="sy0">=</span> details.<span class="me1">salesorderid</span>
<span class="kw1">WHERE</span> &nbsp; customerid <span class="sy0">=</span> <span class="nu0">11091</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  SalesOrderNumber
FROM    AdventureWorks.Sales.SalesOrderHeader header
        JOIN AdventureWorks.Sales.SalesOrderDetail details ON header.salesorderid = details.salesorderid
WHERE   customerid = 11091</pre></div></div>

<p>Once this Adhoc query has been cached we can search for it with a simplified join of the DMVs (sys) dm_exec_query_stats, dm_exec_cached_plans and DMFs dm_exec_sql_text and dm_exec_query_plan.  </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;<span class="br0">&#91;</span><span class="kw1">text</span><span class="br0">&#93;</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; cp.<span class="me1">plan_handle</span> ,
&nbsp; &nbsp; &nbsp; &nbsp; sql_handle
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">dm_exec_query_stats</span> qs
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> sys.<span class="me1">dm_exec_cached_plans</span> cp <span class="kw1">ON</span> qs.<span class="me1">plan_handle</span> <span class="sy0">=</span> cp.<span class="me1">plan_handle</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>qs.<span class="me1">plan_handle</span><span class="br0">&#41;</span> <span class="kw1">AS</span> query
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">OUTER</span> APPLY sys.<span class="me1">dm_exec_query_plan</span><span class="br0">&#40;</span>qs.<span class="me1">plan_handle</span><span class="br0">&#41;</span> <span class="kw1">AS</span> executionplan
<span class="kw1">WHERE</span> &nbsp; objtype <span class="sy0">=</span> <span class="st0">'Adhoc'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  [text] ,
        cp.plan_handle ,
        sql_handle
FROM    sys.dm_exec_query_stats qs
        JOIN sys.dm_exec_cached_plans cp ON qs.plan_handle = cp.plan_handle
        CROSS APPLY sys.dm_exec_sql_text(qs.plan_handle) AS query
        OUTER APPLY sys.dm_exec_query_plan(qs.plan_handle) AS executionplan
WHERE   objtype = 'Adhoc'</pre></div></div>

</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_2.gif" alt="" title="" width="868" height="19" /></div>
<p>Once the plan has been identified and the decision has been made to remove it, FREEPROCCACHE can be executed with either the sql_handle or plan_handle.  </p>
<p>Execute DBCC FREEPROCCACHE with the sql_handle as a parameter from our previous output</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DBCC</span> FREEPROCCACHE <span class="br0">&#40;</span>0x06000C00FCCD0D0FB8C0500B000000000000000000000000<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DBCC FREEPROCCACHE (0x06000C00FCCD0D0FB8C0500B000000000000000000000000)
GO</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_3.gif" alt="" title="" width="747" height="110" /></div>
</p>
<p>If we then search for the plan by the sql_handle, weâ€™ll see it has been removed</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_4.gif" alt="" title="" width="721" height="265" /></div>
</p>
<p><strong>Tuning Execution Plans</strong></p>
<p>To show some more common operations and tuning methods utilizing execution plans, we will create a database to work in.  The database name will be PLANLAB and we will import data from AdventureWorks tables &#8211; Sales.SalesOrderHeader and Sales.SalesOrderDetails.</p>
<p>To prepare the database, tables and import the data from an already existing AdventureWorks database local to the instance, run the following statements in the order they appear.  Modify the file paths to match your own development file system structure.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> Master
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>PLANLAB<span class="br0">&#93;</span> <span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'PLANLAB_DATA_1'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAPLANLAB_DATA_1.mdf'</span> , 
<span class="kw1">SIZE</span> <span class="sy0">=</span> 100MB , MAXSIZE <span class="sy0">=</span> UNLIMITED, FILEGROWTH <span class="sy0">=</span> 10MB <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'PLANLAB_TRAN_1_log'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAPLANLAB_TRAN_1_log.ldf'</span> , 
<span class="kw1">SIZE</span> <span class="sy0">=</span> 100MB , MAXSIZE <span class="sy0">=</span> 2GB , FILEGROWTH <span class="sy0">=</span> <span class="nu0">3</span><span class="sy0">%</span><span class="br0">&#41;</span>
GO
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>PLANLAB<span class="br0">&#93;</span> <span class="kw1">SET</span> RECOVERY SIMPLE 
GO
<span class="kw1">USE</span> <span class="br0">&#91;</span>PLANLAB<span class="br0">&#93;</span>
GO
<span class="kw1">CREATE</span> <span class="kw1">SCHEMA</span> <span class="br0">&#91;</span>WISSUG<span class="br0">&#93;</span> <span class="kw1">AUTHORIZATION</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>
GO
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> WISSUG.<span class="br0">&#91;</span>SalesOrderHeader<span class="br0">&#93;</span><span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="kw1">IDENTITY</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="kw1">FOR</span> <span class="kw1">REPLICATION</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>RevisionNumber<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">tinyint</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>OrderDate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">datetime</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>DueDate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">datetime</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ShipDate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">datetime</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>Status<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">tinyint</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>OnlineOrderFlag<span class="br0">&#93;</span> <span class="kw1">smallint</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>SalesOrderNumber<span class="br0">&#93;</span> &nbsp;<span class="kw1">AS</span> <span class="br0">&#40;</span>isnull<span class="br0">&#40;</span>N<span class="st0">'SO'</span><span class="sy0">+</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw1">nvarchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">23</span><span class="br0">&#41;</span>,<span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span>,<span class="nu0">0</span><span class="br0">&#41;</span>,N<span class="st0">'*** ERROR ***'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>PurchaseOrderNumber<span class="br0">&#93;</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">30</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>AccountNumber<span class="br0">&#93;</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">30</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>CustomerID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ContactID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>SalesPersonID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>TerritoryID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>BillToAddressID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ShipToAddressID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ShipMethodID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>CreditCardID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>CreditCardApprovalCode<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">15</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>CurrencyRateID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>SubTotal<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">money</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>TaxAmt<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">money</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>Freight<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">money</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>TotalDue<span class="br0">&#93;</span> &nbsp;<span class="kw1">AS</span> <span class="br0">&#40;</span>isnull<span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#91;</span>SubTotal<span class="br0">&#93;</span><span class="sy0">+</span><span class="br0">&#91;</span>TaxAmt<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#91;</span>Freight<span class="br0">&#93;</span>,<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>Comment<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">nvarchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">128</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>rowguid<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">uniqueidentifier</span><span class="br0">&#93;</span> <span class="kw1">ROWGUIDCOL</span> &nbsp;<span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ModifiedDate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">datetime</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
GO
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> WISSUG.<span class="br0">&#91;</span>SalesOrderDetail<span class="br0">&#93;</span><span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>SalesOrderDetailID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="kw1">IDENTITY</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>CarrierTrackingNumber<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">nvarchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">25</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>OrderQty<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">smallint</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ProductID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>SpecialOfferID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>UnitPrice<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">money</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>UnitPriceDiscount<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">money</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>LineTotal<span class="br0">&#93;</span> &nbsp;<span class="kw1">AS</span> <span class="br0">&#40;</span>isnull<span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#91;</span>UnitPrice<span class="br0">&#93;</span><span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">1.0</span><span class="br0">&#41;</span><span class="sy0">-</span><span class="br0">&#91;</span>UnitPriceDiscount<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">*</span><span class="br0">&#91;</span>OrderQty<span class="br0">&#93;</span>,<span class="br0">&#40;</span><span class="nu0">0.0</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>rowguid<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">uniqueidentifier</span><span class="br0">&#93;</span> <span class="kw1">ROWGUIDCOL</span> &nbsp;<span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>ModifiedDate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">datetime</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
&nbsp;
GO
&nbsp;
<span class="kw1">USE</span> PLANLAB
GO
&nbsp;
<span class="kw1">SET</span> <span class="kw1">IDENTITY_INSERT</span> WISSUG.<span class="me1">SalesOrderHeader</span> <span class="kw1">ON</span> 
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> WISSUG.<span class="me1">SalesOrderHeader</span> 
<span class="br0">&#40;</span><span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>RevisionNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>OrderDate<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>DueDate<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ShipDate<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>Status<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>OnlineOrderFlag<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>PurchaseOrderNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>AccountNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CustomerID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ContactID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SalesPersonID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>TerritoryID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>BillToAddressID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ShipToAddressID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ShipMethodID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CreditCardID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CreditCardApprovalCode<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CurrencyRateID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SubTotal<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>TaxAmt<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>Freight<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>Comment<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>rowguid<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ModifiedDate<span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> 
&nbsp; &nbsp; &nbsp; &nbsp;<span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>RevisionNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>OrderDate<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>DueDate<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ShipDate<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>Status<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>OnlineOrderFlag<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>PurchaseOrderNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>AccountNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CustomerID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ContactID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SalesPersonID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>TerritoryID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>BillToAddressID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ShipToAddressID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ShipMethodID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CreditCardID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CreditCardApprovalCode<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CurrencyRateID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SubTotal<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>TaxAmt<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>Freight<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>Comment<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>rowguid<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ModifiedDate<span class="br0">&#93;</span>
<span class="kw1">FROM</span> AdventureWorks.<span class="me1">Sales</span>.<span class="me1">SalesOrderHeader</span>
<span class="kw1">SET</span> <span class="kw1">IDENTITY_INSERT</span> WISSUG.<span class="me1">SalesOrderHeader</span> <span class="kw1">OFF</span> 
&nbsp;
<span class="kw1">SET</span> <span class="kw1">IDENTITY_INSERT</span> WISSUG.<span class="me1">SalesOrderDetail</span> <span class="kw1">ON</span> 
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> WISSUG.<span class="me1">SalesOrderDetail</span>
<span class="br0">&#40;</span><span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SalesOrderDetailID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CarrierTrackingNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>OrderQty<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ProductID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SpecialOfferID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>UnitPrice<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>UnitPriceDiscount<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>rowguid<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ModifiedDate<span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> 
<span class="br0">&#91;</span>SalesOrderID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SalesOrderDetailID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>CarrierTrackingNumber<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>OrderQty<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ProductID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>SpecialOfferID<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>UnitPrice<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>UnitPriceDiscount<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>rowguid<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; ,<span class="br0">&#91;</span>ModifiedDate<span class="br0">&#93;</span>
<span class="kw1">FROM</span> AdventureWorks.<span class="me1">Sales</span>.<span class="me1">SalesOrderDetail</span>
<span class="kw1">SET</span> <span class="kw1">IDENTITY_INSERT</span> WISSUG.<span class="me1">SalesOrderDetail</span> <span class="kw1">OFF</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE Master
GO

CREATE DATABASE [PLANLAB] ON  PRIMARY 
( NAME = N'PLANLAB_DATA_1', FILENAME = N'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAPLANLAB_DATA_1.mdf' , 
SIZE = 100MB , MAXSIZE = UNLIMITED, FILEGROWTH = 10MB )
 LOG ON 
( NAME = N'PLANLAB_TRAN_1_log', FILENAME = N'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAPLANLAB_TRAN_1_log.ldf' , 
SIZE = 100MB , MAXSIZE = 2GB , FILEGROWTH = 3%)
GO
ALTER DATABASE [PLANLAB] SET RECOVERY SIMPLE 
GO
USE [PLANLAB]
GO
CREATE SCHEMA [WISSUG] AUTHORIZATION [dbo]
GO


CREATE TABLE WISSUG.[SalesOrderHeader](
	[SalesOrderID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[RevisionNumber] [tinyint] NOT NULL,
	[OrderDate] [datetime] NOT NULL,
	[DueDate] [datetime] NOT NULL,
	[ShipDate] [datetime] NULL,
	[Status] [tinyint] NOT NULL,
	[OnlineOrderFlag] smallint NOT NULL,
	[SalesOrderNumber]  AS (isnull(N'SO'+CONVERT([nvarchar](23),[SalesOrderID],0),N'*** ERROR ***')),
	[PurchaseOrderNumber] varchar(30) NULL,
	[AccountNumber] varchar(30) NULL,
	[CustomerID] [int] NOT NULL,
	[ContactID] [int] NOT NULL,
	[SalesPersonID] [int] NULL,
	[TerritoryID] [int] NULL,
	[BillToAddressID] [int] NOT NULL,
	[ShipToAddressID] [int] NOT NULL,
	[ShipMethodID] [int] NOT NULL,
	[CreditCardID] [int] NULL,
	[CreditCardApprovalCode] [varchar](15) NULL,
	[CurrencyRateID] [int] NULL,
	[SubTotal] [money] NOT NULL,
	[TaxAmt] [money] NOT NULL,
	[Freight] [money] NOT NULL,
	[TotalDue]  AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))),
	[Comment] [nvarchar](128) NULL,
	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
	[ModifiedDate] [datetime] NOT NULL)
GO


CREATE TABLE WISSUG.[SalesOrderDetail](
	[SalesOrderID] [int] NOT NULL,
	[SalesOrderDetailID] [int] IDENTITY(1,1) NOT NULL,
	[CarrierTrackingNumber] [nvarchar](25) NULL,
	[OrderQty] [smallint] NOT NULL,
	[ProductID] [int] NOT NULL,
	[SpecialOfferID] [int] NOT NULL,
	[UnitPrice] [money] NOT NULL,
	[UnitPriceDiscount] [money] NOT NULL,
	[LineTotal]  AS (isnull(([UnitPrice]*((1.0)-[UnitPriceDiscount]))*[OrderQty],(0.0))),
	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
	[ModifiedDate] [datetime] NOT NULL)

GO

USE PLANLAB
GO

SET IDENTITY_INSERT WISSUG.SalesOrderHeader ON 
INSERT INTO WISSUG.SalesOrderHeader 
([SalesOrderID]
      ,[RevisionNumber]
      ,[OrderDate]
      ,[DueDate]
      ,[ShipDate]
      ,[Status]
      ,[OnlineOrderFlag]
      ,[PurchaseOrderNumber]
      ,[AccountNumber]
      ,[CustomerID]
      ,[ContactID]
      ,[SalesPersonID]
      ,[TerritoryID]
      ,[BillToAddressID]
      ,[ShipToAddressID]
      ,[ShipMethodID]
      ,[CreditCardID]
      ,[CreditCardApprovalCode]
      ,[CurrencyRateID]
      ,[SubTotal]
      ,[TaxAmt]
      ,[Freight]
      ,[Comment]
      ,[rowguid]
      ,[ModifiedDate])
SELECT 
	   [SalesOrderID]
      ,[RevisionNumber]
      ,[OrderDate]
      ,[DueDate]
      ,[ShipDate]
      ,[Status]
      ,[OnlineOrderFlag]
      ,[PurchaseOrderNumber]
      ,[AccountNumber]
      ,[CustomerID]
      ,[ContactID]
      ,[SalesPersonID]
      ,[TerritoryID]
      ,[BillToAddressID]
      ,[ShipToAddressID]
      ,[ShipMethodID]
      ,[CreditCardID]
      ,[CreditCardApprovalCode]
      ,[CurrencyRateID]
      ,[SubTotal]
      ,[TaxAmt]
      ,[Freight]
      ,[Comment]
      ,[rowguid]
      ,[ModifiedDate]
FROM AdventureWorks.Sales.SalesOrderHeader
SET IDENTITY_INSERT WISSUG.SalesOrderHeader OFF 

SET IDENTITY_INSERT WISSUG.SalesOrderDetail ON 
INSERT INTO WISSUG.SalesOrderDetail
([SalesOrderID]
      ,[SalesOrderDetailID]
      ,[CarrierTrackingNumber]
      ,[OrderQty]
      ,[ProductID]
      ,[SpecialOfferID]
      ,[UnitPrice]
      ,[UnitPriceDiscount]
      ,[rowguid]
      ,[ModifiedDate])
SELECT 
[SalesOrderID]
      ,[SalesOrderDetailID]
      ,[CarrierTrackingNumber]
      ,[OrderQty]
      ,[ProductID]
      ,[SpecialOfferID]
      ,[UnitPrice]
      ,[UnitPriceDiscount]
      ,[rowguid]
      ,[ModifiedDate]
FROM AdventureWorks.Sales.SalesOrderDetail
SET IDENTITY_INSERT WISSUG.SalesOrderDetail OFF</pre></div></div>

<p><strong>Starting with a query to tune</strong></p>
<p>The below query requests five columns from the tables we created.  Within the query, the SUM() function is used on the column, LineTotal.  Note that neither of these tables have any indexes as of yet.  There are also no statistics created due to nothing being captured in the selection from any statements being processed.</p>
<p>We can see statistics by viewing them in SSMS by expanding the database/tables/table in question and then statistics node.  The system view, sys.stats, can also be queried to view statistics information on the tables.  The following query shows an example filtered on the tables we created</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;<span class="sy0">*</span>
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">STATS</span>
<span class="kw1">WHERE</span> &nbsp; <span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> <span class="kw2">OBJECT_ID</span><span class="br0">&#40;</span>N<span class="st0">'WISSUG.SalesOrderDetail'</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">OR</span> <span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> <span class="kw2">OBJECT_ID</span><span class="br0">&#40;</span>N<span class="st0">'WISSUG.SalesOrderHeader'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  *
FROM    sys.STATS
WHERE   OBJECT_ID = OBJECT_ID(N'WISSUG.SalesOrderDetail')
        OR OBJECT_ID = OBJECT_ID(N'WISSUG.SalesOrderHeader')</pre></div></div>

<p>At this time we do not need to run the query because our interest is in the estimated execution plan only.</p>
<blockquote><p><span class="MT_red">Note: Statistics are created when processing statements on indexes and column.  This is also true for viewing estimated execution plans.</span></p></blockquote>
<p>To view the estimated execution plan, click the button located in the menu strip in SSMS.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_5.gif" alt="" title="" width="311" height="108" /></div>
<p>Place the query below into a new query window while under the context of the PLANLAB database and execute the estimated execution plan.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; UnitPriceDiscount ,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">SUM</span><span class="br0">&#40;</span>LineTotal<span class="br0">&#41;</span> Total
<span class="kw1">FROM</span> &nbsp; &nbsp;WISSUG.<span class="me1">SalesOrderHeader</span> header
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> WISSUG.<span class="me1">SalesOrderDetail</span> details <span class="kw1">ON</span> header.<span class="me1">salesorderid</span> <span class="sy0">=</span> details.<span class="me1">salesorderid</span>
<span class="kw1">WHERE</span> &nbsp; customerid <span class="sy0">=</span> <span class="nu0">11091</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; UnitPriceDiscount ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        AccountNumber ,
        UnitPriceDiscount ,
        SUM(LineTotal) Total
FROM    WISSUG.SalesOrderHeader header
        JOIN WISSUG.SalesOrderDetail details ON header.salesorderid = details.salesorderid
WHERE   customerid = 11091
GROUP BY SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        UnitPriceDiscount ,
        AccountNumber </pre></div></div>

<p>The plan below that was generated from the query shows two very distinct and problematic operations.  These operations are the table scans both on SalesOrderHeader and SalesOrderDetail.  Essentially, when a table scan is performed, all the records of a table are scanned for matches.  These operations tell us that our query will cause significant disk IO due to no supporting indexes to help easily find the location of the records we want returned or aggregated.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_6.gif" alt="" title="" width="710" height="127" /></div>
<p>The process to start tuning a query like this can begin in many places.  The columns being requested, the filter values (WHERE clause) sorting operations such as ORDER BY or GROUP BY and JOIN values.</p>
<blockquote><p><span class="MT_red">Note: Each step in tuning any operation may or may not have direct effects on the total plan itself.  When tuning, start with one operation while keeping the entire plan under consideration for these effects.  In many cases, one index created with the proper columns allows for the entire plan to be optimized.  This will be shown at the end of this article.</span></p></blockquote>
<p>In the JOIN condition, SalesOrderID is being used in order to bring SalesOrderDetail into our results in order to fulfill the needs of the query.  This will require us to make sure that the join between SalesOrderHeader and SalesOrderDetail does not have an exstensive table scans to fulfill the JOIN. SalesOrderID is a unique value in our table so we have the ability to create a CLUSTERED INDEX on it.  A clustered index differs from other indexes by actually ordering the data physically.  This is also why only one clustered index is allowed per table.</p>
<p>To create a clustered index on SalesOrderID in the SalesOrderHeader table, run the following CREATE INDEX statement.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">CLUSTERED</span> <span class="kw1">INDEX</span> IDX_UNIQUEKEY <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderHeader</span><span class="br0">&#40;</span>SalesOrderID<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE CLUSTERED INDEX IDX_UNIQUEKEY ON WISSUG.SalesOrderHeader(SalesOrderID)
GO</pre></div></div>

</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_7.gif" alt="" title="" width="738" height="148" /></div>
<p>Once the clustered index is created successfully, execute the estimated execution plan again.  The table scan has been replaced by an index scan now for SalesOrderHeader.  An index scan is more optimal than a table scan. Index scans will only scan the entire contents of an index to determine the records to return. However, this operation is still not the most optimal operation to have in the plan.  An Index Seek operation would be optimal in both lower resource utilization and more selective abilities.</p>
<p>Looking further at the query and SalesOrderHeader, we can see we are requesting SalesOrderNumber, OrderDate and AccountNumber. These columns must be returned from the SalesOrderHeader table as well as SalesOrderID.  We can now bring in a nonclustered index to fulfill these new requirements in order to further tune the plan.</p>
<p>To create the nonclustered index on SalesOrderHeader, execute the following statement.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IDX_SalesNumOrderDate_Ship_ASC <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderHeader</span><span class="br0">&#40;</span>SalesOrderNumber,OrderDate,AccountNumber<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE NONCLUSTERED INDEX IDX_SalesNumOrderDate_Ship_ASC ON WISSUG.SalesOrderHeader(SalesOrderNumber,OrderDate,AccountNumber)
GO</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_8.gif" alt="" title="" width="724" height="158" /></div>
<p>As shown in the new estimated plan, the index scan on the clustered index remains even after covering the other columns we require from the table.  Covering index refers to an index that contains all of the required columns to fully cover all the paths a query is taking to utilize them.  This includes the columns that are being returned, the WHERE clause and JOIN conditions. </p>
<p>A set of properties exists with with all operations.  These properties can be seen by hovering over the operation or right clicking the operation and selecting properties.  </p>
<p>Hovering over the index scan with the mouse pointer shows that we are covering everything but CustomerID which is in our where clause and ShipDate.   ShipDate was left out previously when we thought we had covered the returned columns.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_9.gif" alt="" title="" width="300" height="345" /></div>
<p>To tune further, we now need to change our indexing so that the two columns shown in the details are included in the index.  Using the CREATE INDEX statement, use the WITH(DROP_EXISTING=ON) to make this task easier.  The DROP_EXISTING still performs the same operations of dropping the index in place already and recreating it, but does it in one statement versus multiple statements.  In the new index, we introduce another option called INCLUDE.  INCLUDE adds columns to the leaf level of the index and does not require any sorting which makes them more efficient when we are only interested in covering the column in the index.  This benefits us by reducing overhead on the index itself.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IDX_SalesNumOrderDate_Ship_ASC <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderHeader</span><span class="br0">&#40;</span>SalesOrderNumber,OrderDate,AccountNumber<span class="br0">&#41;</span>
<span class="sy0">IN</span>CLUDE <span class="br0">&#40;</span>customerid,shipdate<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span>DROP_EXIST<span class="sy0">IN</span>G<span class="sy0">=</span><span class="kw1">ON</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE NONCLUSTERED INDEX IDX_SalesNumOrderDate_Ship_ASC ON WISSUG.SalesOrderHeader(SalesOrderNumber,OrderDate,AccountNumber)
INCLUDE (customerid,shipdate)
WITH (DROP_EXISTING=ON)
GO</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_10.gif" alt="" title="" width="731" height="185" /></div>
<p>The plan that is created from the index change shows that an index scan persists on the SalesOrderHeader table.  This is the case even after covering all of the columns.  There is one more tuning task that is needed; structuring the index.  Recall that INCLUDE does not sort.  In terms of our query, this means CustomerID is forcing a scan due to the use in the WHERE clause.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_11.gif" alt="" title="" width="279" height="402" /></div>
<p>To restructure the index to handle this specific query, there is a need to move the predicate of CustomerID to the column list.   The above image shows the predicate value listed in the tooltip properties.  This will force the covering index concept to the include as the ordering is not a requirement for returning those columns.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IDX_SalesNumOrderDate_Ship_ASC <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderHeader</span><span class="br0">&#40;</span>CustomerID<span class="br0">&#41;</span>
<span class="sy0">IN</span>CLUDE <span class="br0">&#40;</span>SalesOrderNumber,OrderDate,AccountNumber,shipdate<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span>DROP_EXIST<span class="sy0">IN</span>G<span class="sy0">=</span><span class="kw1">ON</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE NONCLUSTERED INDEX IDX_SalesNumOrderDate_Ship_ASC ON WISSUG.SalesOrderHeader(CustomerID)
INCLUDE (SalesOrderNumber,OrderDate,AccountNumber,shipdate)
WITH (DROP_EXISTING=ON)
GO</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_12.gif" alt="" title="" width="695" height="180" /></div>
<p>The Index Seek is now present and performed on the SalesOrderHeader table.  This is the optimal operation to have here and the index structure accomplishes this.</p>
<p>So far, weâ€™ve learned about the need for covering indexes and also how the structure of the index is important to accomplishing the needed index seeks.  With this information we can move to the second table scan in our plan.  </p>
<p>Hover over the table scan on SalesOrderDetail.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_13.gif" alt="" title="" width="261" height="332" /></div>
<p>From the details of the table scan, the output of this operation results in the columns SalesOrderID, OrderQty, UnitPrice and UnitPriceDiscount.  Looking at the statement, the results required back are UnitPriceDiscount and LineTotal.  This tells us that we can use the INCLUDE to capture these columns.  In the JOIN condition, SalesOrderID is the next important column.  This column requires the index to be sorted so the JOIN can be accomplished without a scan.</p>
<p>With this information we can write the following nonclustered index to cover the SalesOrderDetail table.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_14.gif" alt="" title="" width="719" height="176" /></div>
<p><strong>Key Lookup</strong></p>
<p>A Key Lookup operation is performed when a supporting index operation is utilized.  However, to fulfill the requirements of the statement, a bookmark lookup must be performed in order to return the remaining output required.  This operation can cause a statementâ€™s performance to be very poor given the added need to retrieve what is needed to satisfy the requirements.</p>
<p>To show a Key Lookup, alter the index previously created to restructure the columns in order SalesOrderNumber, OrderDate and AccountNumber.  Place the CustomerID column in the index by means of INCLUDE.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IDX_SalesNumOrderDate_Ship_ASC <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderHeader</span><span class="br0">&#40;</span>SalesOrderNumber,OrderDate,AccountNumber<span class="br0">&#41;</span>
<span class="sy0">IN</span>CLUDE <span class="br0">&#40;</span>customerid<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span>DROP_EXIST<span class="sy0">IN</span>G<span class="sy0">=</span><span class="kw1">ON</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE NONCLUSTERED INDEX IDX_SalesNumOrderDate_Ship_ASC ON WISSUG.SalesOrderHeader(SalesOrderNumber,OrderDate,AccountNumber)
INCLUDE (customerid)
WITH (DROP_EXISTING=ON)
GO</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_15.gif" alt="" title="" width="701" height="251" /></div>
<p>Running the execution plan will show the new index is being used and the Key Lookup operation has been introduced.  The lookup in this case is going to return ShipDate.  ShipDate is missing from the index so there is missing support to cover this column.  Removing the Key Lookup requires the structure of the index we created earlier in order to seek on the index.</p>
<p><strong>RID Lookup</strong></p>
<p>Recall earlier that SalesOrderDetail did not have a clustered index created on it.  A table that does not have a clustered index is referred to as a HEAP.  HEAP tables play an important role in the performance of any query that is using them.  Without the physical ordering of the table from the creation of a clustered index, the table is not read optimally.  In some cases HEAP tables are beneficial and nonclustered indexes can be created on them in order to optimize statements that are running against them.  </p>
<p>One of the side effects of a HEAP table is an operation called a RID Lookup.  Like a Key Lookup, an index scan or seek is not able to completely satisfy the request so it must do a lookup in order to retrieve the remaining records.  In most cases, creating clustered indexes is the best solution to resolve RID Lookup operations.  This allows for better plan generation and also helps with maintenance of the table itself in regards to fragmentation.  Below we will show how to resolve a RID Lookup by changing our query to additionally check SalesOrderDetail.UnitPriceDiscount where the data is greater than 0.00.  This will also be added to the output CarrierTrackingNumber</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; UnitPriceDiscount ,
&nbsp; &nbsp; &nbsp; &nbsp; CarrierTrackingNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">SUM</span><span class="br0">&#40;</span>LineTotal<span class="br0">&#41;</span> Total
<span class="kw1">FROM</span> &nbsp; &nbsp;WISSUG.<span class="me1">SalesOrderHeader</span> header
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> WISSUG.<span class="me1">SalesOrderDetail</span> details <span class="kw1">ON</span> header.<span class="me1">salesorderid</span> <span class="sy0">=</span> details.<span class="me1">salesorderid</span>
<span class="kw1">WHERE</span> &nbsp; customerid <span class="sy0">=</span> <span class="nu0">11091</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> UnitPriceDiscount <span class="sy0">&gt;</span> <span class="nu0">0.00</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; UnitPriceDiscount ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; CarrierTrackingNumber</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        AccountNumber ,
        UnitPriceDiscount ,
        CarrierTrackingNumber ,
        SUM(LineTotal) Total
FROM    WISSUG.SalesOrderHeader header
        JOIN WISSUG.SalesOrderDetail details ON header.salesorderid = details.salesorderid
WHERE   customerid = 11091
        AND UnitPriceDiscount &gt; 0.00
GROUP BY SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        UnitPriceDiscount ,
        AccountNumber ,
        CarrierTrackingNumber</pre></div></div>

<p>Take a look at the execution plan generated from this query given the indexes we currently have in place.</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_16.gif" alt="" title="" width="726" height="256" /></div>
<p>If we look at the properties of the RID Lookup, we can see what the RID Lookup output list generates the following:</p>
<p>[PLANLAB].[WISSUG].[SalesOrderDetail].CarrierTrackingNumber.  </p>
<p>Also, looking at the nested loop operation, the output list results in the following:</p>
<p>[PLANLAB].[WISSUG].[SalesOrderDetail].CarrierTrackingNumber<br />
[PLANLAB].[WISSUG].[SalesOrderDetail].UnitPriceDiscount<br />
[PLANLAB].[WISSUG].[SalesOrderDetail].LineTotal</p>
<p>Moving to the index seek on SalesOrderDetail, the output list results in</p>
<p>Bmk1003,<br />
[PLANLAB].[WISSUG].[SalesOrderDetail].UnitPriceDiscount<br />
[PLANLAB].[WISSUG].[SalesOrderDetail].LineTotal</p>
<p>Between these three operations we can see that the nested loop is joining the seek output to the lookup output to obtain CarrierTrackingNumber.  This tells us that there is a covering index problem.  To fix the RID Lookup, we could alter the index IDX_SalesID_LineTotal_ASC or add a new index to support the query.  Adding new indexes may not be optimal either if the index still fulfills the needs of the other statements that it was created for.  In this case, altering the index to add CarrierTrackingNumber in the INCLUDE section makes more sense given the covering of all the statements we have tested so far.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IDX_SalesID_LineTotal_ASC <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderDetail</span><span class="br0">&#40;</span>salesorderid<span class="br0">&#41;</span>
<span class="sy0">IN</span>CLUDE <span class="br0">&#40;</span>LineTotal,UnitPriceDiscount,CarrierTrackingNumber<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span>DROP_EXIST<span class="sy0">IN</span>G<span class="sy0">=</span><span class="kw1">ON</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE NONCLUSTERED INDEX IDX_SalesID_LineTotal_ASC ON WISSUG.SalesOrderDetail(salesorderid)
INCLUDE (LineTotal,UnitPriceDiscount,CarrierTrackingNumber)
WITH (DROP_EXISTING=ON)
GO</pre></div></div>

<p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_17.gif" alt="" title="" width="682" height="179" /></div>
<p>Reviewing the execution plan, the RID Lookup has been resolved.</p>
<p><strong>Sorting</strong></p>
<p>Sorting, in general, is an expensive operation as it relates to resources.  Order By and Group By forces a sort of the data.  Sorting can be ok in execution plans but can also cause a severe performance problem.  Since sorting is done in memory, the operation can be fast.  However, if memory is not available, the sorting operation can go to the tempdb to accomplish the task which would affect the performance greatly â€“ in a negative way.</p>
<p>In some cases, sorting may not be needed at all in statements.  Even in cases when data is required to be sorted, letting front end applications and reporting do this operation may be a better option.  With the queries that were used in this article, we can&#8217;t fix the sort operation because of the SUM() on LineTotal is required forcing us to use a GROUP BY.  </p>
<p>Running the example below will show how we could return the results without the SUM(LineTotal) while utilizing something like SSRS functions and expressions to add the SUM(LineTotal) on a grouped result set directly to the dataset at the time the report is rendered.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber
<span class="kw1">FROM</span> &nbsp; &nbsp;WISSUG.<span class="me1">SalesOrderHeader</span> header
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> WISSUG.<span class="me1">SalesOrderDetail</span> details <span class="kw1">ON</span> header.<span class="me1">salesorderid</span> <span class="sy0">=</span> details.<span class="me1">salesorderid</span>
<span class="kw1">WHERE</span> &nbsp; customerid <span class="sy0">=</span> <span class="nu0">11091</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> UnitPriceDiscount <span class="sy0">&gt;</span> <span class="nu0">1.00</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        AccountNumber
FROM    WISSUG.SalesOrderHeader header
        JOIN WISSUG.SalesOrderDetail details ON header.salesorderid = details.salesorderid
WHERE   customerid = 11091
        AND UnitPriceDiscount &gt; 1.00</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_18.gif" alt="" title="" width="705" height="172" /></div>
<p><strong>Wrapping up</strong></p>
<p>In the tuning exercises so far, weâ€™ve created 3 indexes to tune the query.  However, we could accomplish this with two indexes.  The clustered index could be removed and create another HEAP table situation.  This situation is also common when the primary key (or clustered index) is another column on the table that isn&#8217;t part of the query and thus does not assist in improving performance of the statement.  </p>
<p>To show this, drop the clustered index SalesOrderHeader.IDX_UNIQUEKEY</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">INDEX</span> WISSUG.<span class="me1">SalesOrderHeader</span>.<span class="me1">IDX_UNIQUEKEY</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP INDEX WISSUG.SalesOrderHeader.IDX_UNIQUEKEY
GO</pre></div></div>

<p>To fix this without a clsutered index on SalesOrderID, change the final nonclustered index to add SalesOrderID</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> IDX_SalesNumOrderDate_Ship_ASC <span class="kw1">ON</span> WISSUG.<span class="me1">SalesOrderHeader</span><span class="br0">&#40;</span>CustomerID,SalesOrderID<span class="br0">&#41;</span>
<span class="sy0">IN</span>CLUDE <span class="br0">&#40;</span>SalesOrderNumber,OrderDate,AccountNumber,shipdate<span class="br0">&#41;</span>
<span class="kw1">WITH</span> <span class="br0">&#40;</span>DROP_EXIST<span class="sy0">IN</span>G<span class="sy0">=</span><span class="kw1">ON</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE NONCLUSTERED INDEX IDX_SalesNumOrderDate_Ship_ASC ON WISSUG.SalesOrderHeader(CustomerID,SalesOrderID)
INCLUDE (SalesOrderNumber,OrderDate,AccountNumber,shipdate)
WITH (DROP_EXISTING=ON)
GO</pre></div></div>

<p>Running the plan again will output the same plan as we accomplished earlier with three separate indexes.</p>
<p>Looking closer at the JOIN conditions, index scans may be seeks.  If our bottom join is returning a very limited number of rows, the optimizer will not need to scan on the top join in order to join the operations.  This would be relevant when a clustered index is joined from the top.  </p>
<p>Example:  Prepare this condition by dropping the nonclustered index on SalesOrderHeader we created earlier. </p>
<p>In our previous examples, this would force a scan on SalesOrderHeader if UnitPriceDiscount = 0.00 was filtered.  This is due to our estimated rows being 21 causing the results to be very small in size.  If we change to UnitPriceDiscount > 1.00 and rerun the estimated plan, the resulting scan turns into a seek and estimated number of rows of 1.</p>
<blockquote><p><span class="MT_red">Note: This is for example purposes only and to show the resulting joins make a difference in the operations that are shown by the optmizer.  You should always tune by the concept that data grows in size and prepare for that in your indexing and development of T-SQL.</span></p></blockquote>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">INDEX</span> WISSUG.<span class="me1">SalesOrderHeader</span>.<span class="me1">IDX_SalesNumOrderDate_Ship_ASC</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP INDEX WISSUG.SalesOrderHeader.IDX_SalesNumOrderDate_Ship_ASC
GO</pre></div></div>

<p>And now rerun the execution plan with the change to UnitPriceDiscount</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; UnitPriceDiscount ,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">SUM</span><span class="br0">&#40;</span>LineTotal<span class="br0">&#41;</span> Total
<span class="kw1">FROM</span> &nbsp; &nbsp;WISSUG.<span class="me1">SalesOrderHeader</span> header
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> WISSUG.<span class="me1">SalesOrderDetail</span> details <span class="kw1">ON</span> header.<span class="me1">salesorderid</span> <span class="sy0">=</span> details.<span class="me1">salesorderid</span>
<span class="kw1">WHERE</span> &nbsp; customerid <span class="sy0">=</span> <span class="nu0">11091</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> UnitPriceDiscount <span class="sy0">&gt;</span> <span class="nu0">1.00</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> SalesOrderNumber ,
&nbsp; &nbsp; &nbsp; &nbsp; OrderDate ,
&nbsp; &nbsp; &nbsp; &nbsp; ShipDate ,
&nbsp; &nbsp; &nbsp; &nbsp; UnitPriceDiscount ,
&nbsp; &nbsp; &nbsp; &nbsp; AccountNumber</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        AccountNumber ,
        UnitPriceDiscount ,
        SUM(LineTotal) Total
FROM    WISSUG.SalesOrderHeader header
        JOIN WISSUG.SalesOrderDetail details ON header.salesorderid = details.salesorderid
WHERE   customerid = 11091
        AND UnitPriceDiscount &gt; 1.00
GROUP BY SalesOrderNumber ,
        OrderDate ,
        ShipDate ,
        UnitPriceDiscount ,
        AccountNumber</pre></div></div>

<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/exec_plan_19.gif" alt="" title="" width="705" height="171" /></div>
<p><strong>Take away</strong></p>
<p>Execution plan analysis is a critical aspect to keeping SQL Server running optimally.  With any amount of hardware, the risk factor of a poorly written or unsupported statement being executed in a production environment has the ability to bring service availability to a halt.  Testing on a futuristic sizing of tables and indexes is also a part of tuning that should be taken into account.  Data will grow and, with that growth, queries will react differently if not tuned to their full potential.</p>
<p>Special thanks to Janice Lee, George Mastros, Howard Churchill, Denis Gobo and Jes Borland for the reviews of this paper.  The SQL Community is simply amazing!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/execution-plan-tuning-sql-server/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>PASS Summit is upon us</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/pass-2010-activities/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/pass-2010-activities/#comments</comments>
		<pubDate>Tue, 19 Oct 2010 16:12:06 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server community]]></category>

		<guid isPermaLink="false">/index.php/2010/10/pass-2010-activities/</guid>
		<description><![CDATA[PASS is quickly approaching.  That means you have a very small amount of time to convince your manager, director, VP or whomever you call Boss, to send you to the largest annual SQL Server conference.  If you do want to go and putting together a return of investment is not your strong point; PASS has taken into account that many a required to provide an ROI or some sort of documentation that says why the company should spend thousands of dollars for the trip.  Since this is the case, the PASS website has an actual ROI page just to help you compose your own ROI.]]></description>
				<content:encoded><![CDATA[<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/passlogo.gif" alt="" title="" width="628" height="120" /></div>
<p><a href="http://www.sqlpass.org/summit/na2010/Agenda.aspx">PASS</a>, the largest annual SQL Server conference, is quickly approaching. This means you only have a very short time to convince your Boss to make it his good deed for the year to send you. If you are required to justify why your company should spend thousands of dollars for you to attend, check out the <a href="http://www.sqlpass.org/summit/na2010/AboutSummit/ROI.aspx">ROI page on the</a> PASS website for help/tips.  Use all your charms and give it your best shot.</p>
<p><strong>My first time</strong></p>
<p>This is my first PASS conference and I&#8217;m looking forward to it as much as all of you. Itâ€™s all about SQL Server and Iâ€™m crazy about it. Iâ€™m hoping that I will finally meet those that I have interacted with on the web through Twitter, email, chat, the forums, and LessThanDot. Please introduce yourselves (Iâ€™ll do the same) and hopefully we can have the same great conversations in person as we do online. </p>
<p>Iâ€™ve also signed up for different PASS activities that would allow me to give back once again to the community.
</p>
<p><span class="MT_under">During PASS, I will be involved in the following:</span></p>
<p><strong>PASS Summit MVP Birds of a Feather Lunch</strong></p>
<p>Mike Walsh is the man who facilitates the Birds of a Feather Lunch. I know it sounds like itâ€™s just an ordinary lunch where chicken is served but itâ€™s actually more than that (and Iâ€™m not sure if theyâ€™ll serve birds at all). A bunch of MVPs and SQLCAT team members will be in the lunch area at PASS and theyâ€™ll be seated on their table of expertise. Each table will have a different topic for discussion. You can then pick the table with the topic youâ€™re most interested in and talk about the topic until youâ€™re full (literally and figuratively). You can ask about disaster recovery options just as you would ask for someone to pass the salt. Thereâ€™s no stress in openly asking questions. Iâ€™ll be seated at the &#8220;Cheapest DR/HA Options on SQL Server&#8221;. The focus will be on lowering cost while still maintaining uptime and recovery from disasters. This is definitely something you wouldnâ€™t want to miss especially after what your company spends to send you to PASS. Of course, if all you want to talk about is the weather, Iâ€™m up for that too. That is, whatâ€™s the DR for cold weather? Or we can just heckle the table next to us. One way or the other, I think we will all have a great time. </p>
<p>To read more about this part of PASS, check out Mikeâ€™s blog post, <a href="http://www.straightpathsql.com/archives/2010/10/pass-summit-mvp-birds-of-a-feather-lunch-2010/">PASS Summit MVP Birds of a Feather Lunch 2010</a>.</p>
<p><strong>Ask the Experts</strong></p>
<p>The Ask the Experts area is another great way to interact with MVPs and other experts in different areas of SQL Server. Iâ€™m not sure yet what my schedule to be there is but I will definitely be there. Please make sure to stop by and ask all the questions you have. Or just stop by to say hi and introduce yourself. </p>
<p>I encourage you to attend both of the events above even if you donâ€™t have questions. Itâ€™s a good way to expand your network and get to know some people in the community. </p>
<p>There are a few other activities Iâ€™ve signed up to be a part of. Most of these are still in the planning stages and are not yet scheduled. Once they are, I will update this post. </p>
<p>Again, I hope to meet all of you. I definitely will be looking for many of you myself. See you there!
 </p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/pass-2010-activities/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Wisconsin SQL Server User Group</title>
		<link>/index.php/datamgmt/datadesign/wissug-execution-plans/</link>
		<comments>/index.php/datamgmt/datadesign/wissug-execution-plans/#comments</comments>
		<pubDate>Mon, 11 Oct 2010 10:11:44 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[execution plans]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server user group]]></category>
		<category><![CDATA[wissug]]></category>

		<guid isPermaLink="false">/index.php/2010/10/wissug-execution-plans/</guid>
		<description><![CDATA[Tomorrow night I will be talking about Execution Plans for the Wisconsin SQL Server User Group.  This is a new session for me and I think the group and I will have a great time discussing how important it is to dig deep into plans.  Execution plans are without a doubt a point in the tuning process in which we can either make a database server live or land face first on the floor.]]></description>
				<content:encoded><![CDATA[<p>Tomorrow night I will be talking about Execution Plans for the <a href="http://wisconsin.sqlpass.org/">Wisconsin SQL Server User Group</a>.  This is a new session for me and I think the group and I will have a great time discussing how important it is to dig deep into plans.  Execution plans are without a doubt a point in the tuning process in which we can either make a database server live or land face first on the floor. </p>
<p>The meeting is held in Waukesha, WI.   </p>
<p><strong>Address</strong>: N19 W24133 Riverwood Dr., Suite 150, Waukesha, WI 53188 </p>
<p>To all my Illinois and #ChiSQL friends, the drive is actually short and an easy one.  Take I-94 straight up and just west of Milwaukee.  Check the construction schedules and detours of course.  Milwaukee area like many other areas is in an ever changing battle with those orange cones and roads closing.</p>
<p>I hope to see everyone there! Letâ€™s make the turnout a good one this month.</p>
<p><strong>Session Description</strong></p>
<p><span class="MT_smaller">
<p>Have you ever had a query take FOREVER to execute? I have and it isnâ€™t a good feeling. Often those queries still end up on Production simply because, &#8220;they work&#8221;. Letâ€™s go behind the scenes of each query and address one of the largest factors in predicting how queries will perform, and even potentially lower the resource cost on the database server itself: Execution Plans.</p>
<p>Beginning with SQL Server 2005 we are provided with a wealth of information about Execution Plans that have been executed. With this information we can finally tune queries based upon the exact process SQL Server takes to execute the commands we requested.</p>
<p>This session will go from T-SQL Statement to Execution Plan. We will uncover high cost operations that are common yet easy to fix along with discussing some DMV statements that assist us in tuning queries. Our goals we will achieve together</p>
<p><strong>Our goals we will achieve together</strong> </p>
<ul>
<li>Understand how SQL Server processes statements</li>
<li>Identify high cost operations in Execution Plans</li>
<li>Common performance problems caused by poor Execution Plans</li>
<li>Tuning with Indexes &#8211; altering existing indexes and maintaining indexes</li>
<li>Tune SQL Server itself (such as Parallelism)</li>
<li>Identify poor plans in the Execution Plan Cache</li>
</ul>
<p></span></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/wissug-execution-plans/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>SQL Connections Suburban Chicago Wrap Up</title>
		<link>/index.php/datamgmt/datadesign/sqlconns-presentation/</link>
		<comments>/index.php/datamgmt/datadesign/sqlconns-presentation/#comments</comments>
		<pubDate>Thu, 06 May 2010 11:39:48 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[community]]></category>
		<category><![CDATA[help]]></category>
		<category><![CDATA[pass]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssug]]></category>

		<guid isPermaLink="false">/index.php/2010/05/sqlconns-presentation/</guid>
		<description><![CDATA[Tuesday marked the day that I presented on SSIS basics.  The night went really good and the group and I had a great time during the discussion.  Kim Young (needs to be on twitter) started us off with stored procedures and error handling and moved into Wendy plugging PASS and the community.]]></description>
				<content:encoded><![CDATA[<p>
Tuesday marked the day that I presented on SSIS basics.  The night went really good and the group and I had a great time during the discussion.  Kim Young (needs to be on twitter) started us off with stored procedures and error handling and moved into Wendy (<a href="http://wendyverse.blogspot.com/">Blog</a> | <a href="http://twitter.com/wendy_dance">Twitter</a>) plugging PASS and the community.
</p>
<p>
The group I presented to was about the best group you could get in front of you.  Several questions were asked along the way and several attendees jumped in with their own real-life experiences and tips to SSIS trials and successes.  SSIS basics itself is a difficult session to fit in one night.  From the feedback I received after the session, I was glad to hear that several were going to do just that and jump right in.  A few attendees stayed after asking many questions about SQL Server internals and some other things they had in their own installations.  If you are attending one of these sessions, donâ€™t hesitate to do the same.  I know I truly enjoy helping in any way and getting the one on one discussions going is great for all of us to gain more knowledge.
</p>
<p>
The slides that were used for the session can be downloaded below.  Iâ€™ve also included the SSIS package and test import file that the group and I went through while learning some things about SSIS.  If you download the package, all you need to do to get it to work with your own test lab and instance is fill in the variables, sqlconn and dbname respectfully.   Then place the import.txt on your C drive and away you go!
</p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/sqlconns.gif" alt="" title="" width="448" height="196" /></div>
<p>
<a href="/wp-content/uploads/blogs/DataMgmt//SQL Server Integrated Services 90 Minutes.pdf" title="">Slides</a><br />
<br />
<a href="/wp-content/uploads/blogs/DataMgmt//SSUG Demo.zip" title="">DTSX and Import File</a></p>
<p>
If you have any problems or questions, feel free to jump into the LessThanDot forums and ask away.  The site is all yours and weâ€™re sitting here waiting to throw a helping hand all the time.<br />
<br />
I canâ€™t wait to have the opportunity to jump back in with this group and present again!  </p>
<p>I&#8217;d also liked to thank &#8220;Everyone&#8221; that pitched in and gave Wendy, Aaron and I the gift for putting on SQL Saturday in Chicago.  That was way over the top thoughtful!  Thank you!!!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sqlconns-presentation/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
