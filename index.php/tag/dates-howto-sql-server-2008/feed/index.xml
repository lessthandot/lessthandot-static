<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>dates howto sql server 2008 &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/dates-howto-sql-server-2008/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>How to return only weekend data for the last 4 weeks in SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-return-only-weekend-data-for-the/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-return-only-weekend-data-for-the/#comments</comments>
		<pubDate>Fri, 06 Aug 2010 15:00:40 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dates howto sql server 2008]]></category>
		<category><![CDATA[sql server 2005]]></category>

		<guid isPermaLink="false">/index.php/2010/08/how-to-return-only-weekend-data-for-the/</guid>
		<description><![CDATA[I answered this question today and thought it was interesting enough for a blog post. The easiest way to return all rows that are not older than 4 weeks and fall on a wekeend would be to use that handy calendar table that you have. Of course not everyone has a calendar table so here [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I answered <a href="http://stackoverflow.com/questions/3425412/sql-only-select-records-from-weekends/3425437#3425437">this question</a> today and thought it was interesting enough for a blog post.<br />
The easiest way to return all rows that are not older than 4 weeks and fall on a wekeend would be to use that handy calendar table that you have.<br />
Of course not everyone has a calendar table so here is a way to do it without.</p>
<p>First create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestData <span class="br0">&#40;</span>id <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeData <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">36</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeDate <span class="kw1">DATETIME</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestData (id INT NOT NULL PRIMARY KEY, 
			SomeData VARCHAR(36) NOT NULL, 
			SomeDate DATETIME NOT NULL)
GO</pre></div></div>

<p>Now we have to insert some data, the query below will insert 2048 rows into the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestData
<span class="kw1">SELECT</span> number, NEWID<span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="kw2">DATEADD</span><span class="br0">&#40;</span>hh,<span class="sy0">-</span> number,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">FROM</span> master..<span class="me1">spt_values</span>
<span class="kw1">WHERE</span> TYPE <span class="sy0">=</span> <span class="st0">'P'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestData
SELECT number, NEWID(), DATEADD(hh,- number,GETDATE())
FROM master..spt_values
WHERE TYPE = 'P'</pre></div></div>

<p>The rows inserted will look something like this</p>
<pre>0	286D95F8-FD33-4903-B3D2-644BC4AD88EE	2010-08-06 12:28:09.913
1	8C985938-085B-482F-A6C8-678954ADF3DA	2010-08-06 11:28:09.913
2	46437AF4-CF1C-4DF3-B9DA-36153B3844CD	2010-08-06 10:28:09.913
3	B5E15934-3F94-4543-9A6F-9C78BEEBB588	2010-08-06 09:28:09.913
4	9655A196-C434-4322-A9DC-14E676E45E25	2010-08-06 08:28:09.913
-----
-----
-----
2046	1710469B-0545-4719-95FF-B87570EC07C3	2010-05-13 06:28:09.913
2047	EF306E11-10F5-40C5-B2BC-862CAC5D5CBD	2010-05-13 05:28:09.913</pre>
<p>So what we did is take the getdate() value and then subtract one hour from it for each row</p>
<p>Next up is creating an index on the SomeDate column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> &nbsp;<span class="kw1">INDEX</span> ix_SomeDate <span class="kw1">ON</span> TestData<span class="br0">&#40;</span>SomeDate<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE  INDEX ix_SomeDate ON TestData(SomeDate)
GO</pre></div></div>

<p>Now we are ready to write our query. How do we grab all the data that is not older than 4 weeks?<br />
We can use the following for that, if you are not on SQL Server 2008 or above use DATEADD(wk, DATEDIFF(wk, 0, GETDATE())-4, 0). If you are on SQL Server 2008 or above you can use CONVERT(DATE,DATEADD(WK,-4,GETDATE()))</p>
<p>If you run that today on August 8 2010 it returns 2010-07-09 00:00:00.000<br />
Try it yourself</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATE</span>,<span class="kw2">DATEADD</span><span class="br0">&#40;</span>WK,<span class="sy0">-</span><span class="nu0">4</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="kw2">DATEADD</span><span class="br0">&#40;</span>DD, <span class="kw2">DATEDIFF</span><span class="br0">&#40;</span>dd, <span class="nu0">0</span>, <span class="kw2">DATEADD</span><span class="br0">&#40;</span>WK,<span class="sy0">-</span><span class="nu0">4</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="nu0">0</span>, <span class="nu0">0</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CONVERT(DATE,DATEADD(WK,-4,GETDATE()))

SELECT DATEADD(DD, DATEDIFF(dd, 0, DATEADD(WK,-4,GETDATE()))+0, 0)</pre></div></div>

<p>Now we have to do the weekend part, in the US the start of the week is Sunday, if you check @@DATEFIRST it should return a 7</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">@@DATEFIRST</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT @@DATEFIRST</pre></div></div>

<p>In Holland for example the week start on Saturday, run this to see what @@DATEFIRST returns for a different language</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SET</span> <span class="kw1">LANGUAGE</span> Dutch;
GO
<span class="kw1">SELECT</span> <span class="kw2">@@DATEFIRST</span>; &nbsp;<span class="co1">--1</span>
GO
<span class="kw1">SET</span> <span class="kw1">LANGUAGE</span> us_english;
GO
<span class="kw1">SELECT</span> <span class="kw2">@@DATEFIRST</span>; &nbsp;<span class="co1">--7</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SET LANGUAGE Dutch;
GO
SELECT @@DATEFIRST;  --1
GO
SET LANGUAGE us_english;
GO
SELECT @@DATEFIRST;  --7</pre></div></div>

<p>You can use DATEFIRST to change that, the command below will make the week start at 1</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SET</span> DATEFIRST <span class="nu0">1</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SET DATEFIRST 1;</pre></div></div>

<p>So DATEPART(dw, Date) will return 7 for Sunday and 1 for Saturday in the US, in order to use this we need to add it like this in SQL&#8230; DATEPART(dw,SomeDate) IN(1,7). If you are not living where the week starts on a Sunday then modify the IN(1,7) part</p>
<p>Finally the query looks like this if you are not on SQL Server 2008 yet</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestData
<span class="kw1">WHERE</span> SomeDate <span class="sy0">&gt;=</span><span class="kw2">DATEADD</span><span class="br0">&#40;</span>DD, <span class="kw2">DATEDIFF</span><span class="br0">&#40;</span>dd, <span class="nu0">0</span>, <span class="kw2">DATEADD</span><span class="br0">&#40;</span>WK,<span class="sy0">-</span><span class="nu0">4</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="nu0">0</span>, <span class="nu0">0</span><span class="br0">&#41;</span>
<span class="sy0">AND</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span>dw,SomeDate &nbsp;<span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">7</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestData
WHERE SomeDate &gt;=DATEADD(DD, DATEDIFF(dd, 0, DATEADD(WK,-4,GETDATE()))+0, 0)
AND DATEPART(dw,SomeDate  ) IN(1,7)</pre></div></div>

<p>If you are on SQl Server 2008, then you can use this query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestData
<span class="kw1">WHERE</span> SomeDate <span class="sy0">&gt;=</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATE</span>,<span class="kw2">DATEADD</span><span class="br0">&#40;</span>WK,<span class="sy0">-</span><span class="nu0">4</span>,<span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="sy0">AND</span> <span class="kw2">DATEPART</span><span class="br0">&#40;</span>dw,SomeDate &nbsp;<span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">7</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestData
WHERE SomeDate &gt;=CONVERT(DATE,DATEADD(WK,-4,GETDATE()))
AND DATEPART(dw,SomeDate  ) IN(1,7)</pre></div></div>

<p>Below are the execution plans, as you can see both queries result in an index seek</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//Execution plan.PNG" alt="" title="" width="855" height="536" /></p>
<p>Why the top query takes 60% and the bottom one 40% is a little strange to me, I know that they did some optimizations where CONVERT(DATE, Column) &#8230;. is now SARGAble but this should be executed only once</p>
<p>I will investigate that part further</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-return-only-weekend-data-for-the/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
	</channel>
</rss>
