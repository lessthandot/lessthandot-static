<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>data integrity &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/data-integrity/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Advent 2012 Day 8: Foreign Keys</title>
		<link>/index.php/datamgmt/dbprogramming/foreign-keys/</link>
		<comments>/index.php/datamgmt/dbprogramming/foreign-keys/#comments</comments>
		<pubDate>Sat, 08 Dec 2012 15:17:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[data integrity]]></category>
		<category><![CDATA[foreign keys]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/foreign-keys/</guid>
		<description><![CDATA[This is day eight of the SQL Advent 2012 series of blog posts. Today we are going to look at foreign keys

  
That is all for day eight of the SQL Advent 2012 series, come back tomorrow for the next one, you can also check out all the posts from last&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. In yesterday&#8217;s post <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">SQL Advent 2012 Day 7: Lack of constraints</a> we touched a little upon foreign key constraints but today we are going to take a closer look at foreign keys. The two things that we are going to cover are the fact that you don&#8217;t need a primary key in order to define a foreign key relationship, SQL Server by default will not index foreign keys</p>
<h2>You don&#8217;t need a primary key in order to have a foreign key</h2>
<p>Most people will define a foreign key relationship between the foreign key and a primary key. You don&#8217;t have to have a primary key in order to have a foreign key, if you have a unique index or a unique constraint then those can be used as well. Let&#8217;s take a look at what that looks like with some code examples</p>
<p><strong>A foreign key with a unique constraint instead of a primary key</strong><br />
First create a table to which we will add a unique constraint after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueConstraint(id int)
GO</pre></div></div>

<p>Add a unique constraint to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again, this should fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p><em>Msg 2627, Level 14, State 1, Line 2<br />
Violation of UNIQUE KEY constraint &#8216;ix_unique&#8217;. Cannot insert duplicate key in object &#8216;dbo.TestUniqueConstraint&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignConstraint(id int)
GO</pre></div></div>

<p>Add the foreign key to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignConstraint</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignConstraint_TestUniqueConstraint <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueConstraint</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignConstraint ADD CONSTRAINT
	FK_TestForeignConstraint_TestUniqueConstraint FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueConstraint(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(1)
INSERT TestForeignConstraint  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignConstraint_TestUniqueConstraint&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueConstraint&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueConstraint table</p>
<p><strong>A foreign key with a unique index instead of a primary key</strong><br />
This section will be similar to the previous section, the difference is that we will use a unique index instead of a unique constraint</p>
<p>First create a table to which we will add a unique index after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueIndex(id int)
GO</pre></div></div>

<p>Add the unique index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">UNIQUE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> ix_unique <span class="kw1">ON</span> TestUniqueIndex<span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE UNIQUE NONCLUSTERED INDEX ix_unique ON TestUniqueIndex(id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again , this should now fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p><em>Msg 2601, Level 14, State 1, Line 2<br />
Cannot insert duplicate key row in object &#8216;dbo.TestUniqueIndex&#8217; with unique index &#8216;ix_unique&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignIndex(id int)
GO</pre></div></div>

<p>Add the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignIndex</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignIndex_TestUniqueIndex <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueIndex</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignIndex ADD CONSTRAINT
	FK_TestForeignIndex_TestUniqueIndex FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueIndex(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(1)
INSERT TestForeignIndex  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignIndex_TestUniqueIndex&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueIndex&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueIndex table</p>
<p>As you have seen with the code example, you can have a foreign key constraint that will reference a unique index or a unique constraint in addition to be able to reference a primary key</p>
<h2>Foreign keys are not indexed by default</h2>
<p>When you create a primary key, SQL Server will by default make that a clustered index. When you create a foreign key, there is no index created</p>
<p>Scroll up to where we added the unique constraint to the TestUniqueConstraint table, you will see this code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)</pre></div></div>

<p>All we did was add the constraint, SQL Server added the index behind the scenes for us in order to help enforce uniqueness more efficiently</p>
<p>Now run this query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestUniqueIndex'</span>,<span class="st0">'TestUniqueConstraint'</span><span class="br0">&#41;</span>
<span class="sy0">AND</span> name <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestUniqueIndex','TestUniqueConstraint')
AND name IS NOT NULL</pre></div></div>

<p>You will get these results</p>
<pre>TableName	        IndexName	StorageType
---------------------   -----------     --------------
TestUniqueConstraint	ix_unique	NONCLUSTERED
TestUniqueIndex	        ix_unique	NONCLUSTERED</pre>
<p>As you can see both tables have an index</p>
<p>Now let&#8217;s look at what the case is for the foreign key tables. Run the query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestForeignIndex'</span>,<span class="st0">'TestForeignConstraint'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestForeignIndex','TestForeignConstraint')</pre></div></div>

<p>Here are the results for that query</p>
<pre>TableName	      IndexName	StorageType
--------------------- --------- -------------
TestForeignConstraint	NULL	HEAP
TestForeignIndex	NULL	HEAP</pre>
<p>As you can see no indexes have been added to the tables. Should you add indexes? In order to answer that let&#8217;s see what would happen if you did add indexes. Joins would perform faster since it can traverse the index instead of the whole table to find the matching join conditions. Updates and deletes will be faster as well since the index can be used to find the foreign keys rows to update or delete (remember this depends if you specified CASCADE or NO ACTION when you create the foreign key constraint)<br />
So to answer the question, yes, I think you should index the foreign key columns</p>
<p>That is all for day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/foreign-keys/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 7: Lack of constraints</title>
		<link>/index.php/datamgmt/dbprogramming/lack-of-constraints/</link>
		<comments>/index.php/datamgmt/dbprogramming/lack-of-constraints/#comments</comments>
		<pubDate>Fri, 07 Dec 2012 13:20:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[data integrity]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/lack-of-constraints/</guid>
		<description><![CDATA[This is day seven of the SQL Advent 2012 series of blog posts. Today we are going to look at constraints


  
SQL Server supports the following types of constraints: NOT NULL, CHECK, UNIQUE, PRIMARY KEY and FOREIGN KEY. Using constraints is preferred to using DML Triggers, rules, and defaults. The query optimizer will also use constraint definitions to build high-performance query execution plans.]]></description>
				<content:encoded><![CDATA[<p>This is day seven of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. Today we are going to look at constraints</p>
<p><a href="http://www.flickr.com/photos/bjornmeansbear/4727475559/" title="Constraints / Sacrifices by bjornmeansbear, on Flickr"><img src="http://farm2.staticflickr.com/1241/4727475559_881dab57f3_m.jpg" width="240" height="240" alt="Constraints / Sacrifices" /></a></p>
<p>SQL Server supports the following types of constraints: NOT NULL, CHECK, UNIQUE, PRIMARY KEY and FOREIGN KEY. Using constraints is preferred to using DML Triggers, rules, and defaults. The query optimizer will also use constraint definitions to build high-performance query execution plans.</p>
<p>When I interview people, I always ask how you can make sure only values between 0 and 9 are allowed in an integer column. I get a range of different answers to this question, here are some of them:</p>
<ul>
<li>Convert to char(1) and make sure it is numeric</li>
<li>Write logic in the application that will check for this</li>
<li>Use a trigger</li>
<li>Create a primary key table with only the values from 0 till 9 then make this column a foreign key in the table you want to check for this</li>
</ul>
<p>Only 25% of the people will tell you to use something that you can use from within SQL, and only 10% will actually know that this something is called a check constraint, the other ones know that there is something where you can specify some values to be used. </p>
<p>
<h2>Why do we need constraints at all?</h2>
<p>So why do we need constraints? To answer that question, first you have to answer another question: how important is it that the data in your database is correct? I would say that that is most important, after all you can have all the data in the world but if it is wrong it is useless or it might even ending up costing you money. To make sure that you don&#8217;t get invalid data, you use constraints. Constraints work at the database level, it doesn&#8217;t matter if you do the data checking from the app or web front-end, there could be someone modifying the data from SSMS. If you are importing files, constraints will prevent invalid data from making it into the tables.</p>
<p>Constraints don&#8217;t just have to have a range, constraints can handle complex validations. You can have regular expressions in check constraints as well, check out <a href="/index.php/DataMgmt/DBProgramming/sql-server-does-support-regular-expressi">SQL Server does support regular expressions in check constraints, triggers are not always needed</a> for some examples</p>
<p>
<h2>Constraints are faster than triggers</h2>
<p>The reason that check constraints are preferable over triggers is that they are not as expensive as triggers, you also don&#8217;t need an update and an insert trigger, one constraint is enough to handle both updates and inserts.</p>
<p>
<h2>Constraints are making it hard for us to keep our database scripts from blowing up</h2>
<p>This is a common complaint, when you script out the databases and the primary and foreign key tables are not in the correct order you will get errors. Luckily the tools these days are much better than they were 10 years ago. If you do it by hand just make sure that it is all in the correct order. Another complaint is that constraints are wasting developers time, they can&#8217;t just populate the tables at random but have to go in the correct order as well. </p>
<p>
<h2>Some examples of constraints</h2>
<p>Since I like the DRY principle, I won&#8217;t just copy and paste some examples that lready exist in a post I wrote a while back, take a look at this post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/dammit-people-get-to-know">Dammit people, get to know check constraints and use them!</a> to see some examples of check constraints</p>
<p>That is all for day seven of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/lack-of-constraints/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
