<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>export &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/export/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>MongoDB: Exporting data into files</title>
		<link>/index.php/datamgmt/dbprogramming/mongodb-exporting-data-into-files/</link>
		<comments>/index.php/datamgmt/dbprogramming/mongodb-exporting-data-into-files/#comments</comments>
		<pubDate>Sun, 03 Feb 2013 11:25:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[bigdata]]></category>
		<category><![CDATA[collections]]></category>
		<category><![CDATA[export]]></category>
		<category><![CDATA[mongodb]]></category>
		<category><![CDATA[nosql]]></category>

		<guid isPermaLink="false">/index.php/2013/02/mongodb-exporting-data-into-files/</guid>
		<description><![CDATA[In this post we are going to take a look at how to export data into files. We are going to export data in json format as well as in csv format. To get started first connect to mongodb and create a new database named ExportDB

You can just execute the&#8230;]]></description>
				<content:encoded><![CDATA[<p>In this post we are going to take a look at how to export data into files. We are going to export data in json format as well as in csv format. To get started first connect to mongodb and create a new database named ExportDB</p>
<p>You can just execute the following to create this database</p>
<pre>use ExportDB</pre>
<p>You should get a message like the following</p>
<pre>switched to db ExportDb</pre>
<p>Insert these 5 items</p>
<pre>db.Person.insert( { name : "Denis",  age : 20, city : "Princeton" } )
db.Person.insert( { name : "Abe",    age : 30, city : "Amsterdam" } )
db.Person.insert( { name : "John",   age : 40, city : "New York"  } )
db.Person.insert( { name : "Xavier", age : 10, city : "Barcelona" } )
db.Person.insert( { name : "Zen",    age : 50, city : "Kyoto"     } )</pre>
<p>Now it is time to do the export. To do the export we will use the mongoexport utility, you can find this in the bin directory of your MongoDB install. I my case it is in the C:NoSQLmongodbbin directory. Open up a new command window and cd into the folder where mongoexport  is located.</p>
<p>
<h2>Export in json format</h2>
<p>To export the data, we need to tell mongoexport what database to use, what collection to use and optionally we also need to specify what fields to use. If you don&#8217;t specify the fields, you will get all of them. If we wanted to export the name and age fields from the Person collection in the ExportDb database, you would specify it like this</p>
<pre>mongoexport --db ExportDb --collection Person -fields name,age</pre>
<p>Here is the output</p>
<pre>C:NoSQLmongodbbin&gt;mongoexport --db ExportDb --collection Person -fields name,age
connected to: 127.0.0.1
{ "_id" : { "$oid" : "510e5da10e0a53ddf5f2865b" }, "name" : "Denis", "age" : 20 }
{ "_id" : { "$oid" : "510e5da20e0a53ddf5f2865c" }, "name" : "Abe", "age" : 30 }
{ "_id" : { "$oid" : "510e5da20e0a53ddf5f2865d" }, "name" : "John", "age" : 40 }
{ "_id" : { "$oid" : "510e5da20e0a53ddf5f2865e" }, "name" : "Xavier", "age" : 10 }
{ "_id" : { "$oid" : "510e5da80e0a53ddf5f2865f" }, "name" : "Zen", "age" : 50 }
exported 5 records</pre>
<p>As you can see you got the output in the window. What about a file? You can use -o with the filename to redirect output into a file, all we are adding is -o Person.txt to the previous command</p>
<pre>mongoexport --db ExportDb --collection Person  -fields name,age -o Person.txt</pre>
<p>Here is the output</p>
<pre>C:NoSQLmongodbbin&gt;mongoexport --db ExportDb --collection Person  -fields name,age -o Person.txt
connected to: 127.0.0.1
exported 5 records

C:NoSQLmongodbbin&gt;</pre>
<p>If you now locate the file in the bin directory and open the file, you should see something like this</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/PersonOutput.PNG?mtime=1359896992"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/PersonOutput.PNG?mtime=1359896992" width="660" height="184" /></a></div>
<p>
<h2>Export in csv format</h2>
<p>Exporting in csv format is pretty much the same as before with the addition of &#8211;csv. Our command will look like this</p>
<pre>mongoexport --db ExportDb --collection Person --csv -fields name,age</pre>
<p>Here is the output</p>
<pre>C:NoSQLmongodbbin&gt;mongoexport --db ExportDb --collection Person --csv -fields name,age
connected to: 127.0.0.1
name,age
"Denis",20.0
"Abe",30.0
"John",40.0
"Xavier",10.0
"Zen",50.0
exported 5 records

C:NoSQLmongodbbin&gt;</pre>
<p>Just like before we want to direct the output into a file instead of onto the screen, we will just add -o Person.csv to the command , the command will look like this</p>
<p>mongoexport &#8211;db ExportDb &#8211;collection Person &#8211;csv -fields name,age -o Person.csv</p>
<pre>C:NoSQLmongodbbin&gt;mongoexport --db ExportDb --collection Person --csv -fields name,age -o Person.csv
connected to: 127.0.0.1
exported 5 records

C:NoSQLmongodbbin&gt;</pre>
<p>Now if we open up the file in notepad you will see the following</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/PersonOutputCsv.PNG?mtime=1359897545"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/PersonOutputCsv.PNG?mtime=1359897545" width="289" height="181" /></a></div>
<p>If you open up the file in Excel, it will look like this</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/PersonOutputExcel.PNG?mtime=1359897556"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/mongo/PersonOutputExcel.PNG?mtime=1359897556" width="498" height="362" /></a></div>
<p>There you have it, if you want to quickly export some data into file, you can use the mongoexport utility to accomplish that</p>
<p>
That is all for this post, if you are interested in my other MongoDB posts, you can find them here:<br />
<a href="/index.php/DataMgmt/DBProgramming/creating-mongodb-as-a-service">Install MongoDB as a Windows Service</a><br />
<a href="/index.php/DataMgmt/DBProgramming/doing-upserts-in-mongodb">UPSERTs with MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-how-to-sort-results">How to sort results in MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/indexes-in-mongodb">Indexes in MongoDB: A quick overview</a><br />
<a href="/index.php/DataMgmt/DBProgramming/multidocument-updates-with-mongodb">Multidocument updates with MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-how-to-include-and">MongoDB: How to include and exclude the fields you want in results</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-how-to-limit-results">MongoDB: How to limit results and how to page through results</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-backup-and-restore-databases">MongoDB: How to backup and restore databases</a><br />
<a href="/index.php/DataMgmt/DBAdmin/mongodb-how-to-restore-collections">MongoDB: How to restore collections</a><br />
<a href="/index.php/DataMgmt/DBAdmin/mongodb-how-to-backup-all">MongoDB: How to backup all the databases with one command</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mongodb-exporting-data-into-files/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Umm&#8230;.No&#8230;that is not how you export a table into a file with SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/umm-no-that-is-not/</link>
		<comments>/index.php/datamgmt/dbprogramming/umm-no-that-is-not/#comments</comments>
		<pubDate>Thu, 31 Jan 2013 22:28:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[export]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2013/01/umm-no-that-is-not/</guid>
		<description><![CDATA[Sometimes the creativity of the human species is truly amazing. Someone needed to export a table into a file from within SQL Server. Now there are several ways to do this like bcp, export wizard, Query..Results To File, SSIS etc etc. Today I noticed som&#8230;]]></description>
				<content:encoded><![CDATA[<p>Sometimes the creativity of the human species is truly amazing. Someone needed to export a table into a file from within SQL Server. Now there are several ways to do this like bcp, export wizard, Query..Results To File, SSIS etc etc. Today I noticed someone found yet another way&#8230;.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/UmmNo.PNG?mtime=1359677914"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/UmmNo.PNG?mtime=1359677914" width="304" height="409" /></a></div>
<p>This person decided to use a SQL Agent job to create the file. That is still not strange but here comes the interesting part&#8230;</p>
<p>Here is what the person did, first a job was added with a query.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJob.PNG?mtime=1359678193"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJob.PNG?mtime=1359678193" width="684" height="614" /></a></div>
<p>Then in the Advanced part of the step an output file was chosen</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobAdvanced.PNG?mtime=1359678202"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobAdvanced.PNG?mtime=1359678202" width="512" height="443" /></a></div>
<p>This of course will create the file, however there will be some output in the from the job itself</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobOutput.PNG?mtime=1359678223"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/FubarJobOutput.PNG?mtime=1359678223" width="666" height="292" /></a></div>
<p>The only reason I found out about this was because I was asked how to skip the &#8216;header&#8217; in SQL Server. After a good deal of puzzlement looking at this creative &#8216;solution&#8217; I told the person how to use bcp instead</p>
<p>Any crazy stories from the trenches you want to share in the comments?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/umm-no-that-is-not/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
	</channel>
</rss>
