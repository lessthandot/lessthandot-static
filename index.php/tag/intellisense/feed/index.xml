<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>intellisense &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/intellisense/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Intellisense for custom XML in Visual Studio</title>
		<link>/index.php/desktopdev/mstech/vs2012/intellisense-for-custom-xml-in/</link>
		<comments>/index.php/desktopdev/mstech/vs2012/intellisense-for-custom-xml-in/#comments</comments>
		<pubDate>Mon, 06 May 2013 13:44:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Vistual Studio 2012]]></category>
		<category><![CDATA[intellisense]]></category>
		<category><![CDATA[schema]]></category>
		<category><![CDATA[visual studio]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2013/05/intellisense-for-custom-xml-in/</guid>
		<description><![CDATA[This is one of those things that I only need once every several months and always forget how to do. Working with custom XML in Visual Studio is a whole lot easier with intellisense. Schema errors are highlighted, enumerated values are displayed, and the amount of typing goes from full tag names to just a few characters followed by tab to complete.]]></description>
				<content:encoded><![CDATA[<p>This is one of those things that I only need once every several months and always forget how to do. Working with custom XML in Visual Studio is a whole lot easier with intellisense. Schema errors are highlighted, enumerated values are displayed, and the amount of typing goes from full tag names to just a few characters followed by tab to complete.</p>
<p>There are a few ways to do this, but if you have a schema (XSD) for the file, then here are the steps to make the magic happen.</p>
<h2>Sample Files</h2>
<p>So let&#8217;s assume for the moment that you have the following sample files:</p>
<p><b>AwesomeFile.xml</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span> <span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;AwesomeList<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeItem</span> <span class="re0">AwesomenessFactor</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeType<span class="re2">&gt;</span></span></span>Is Awesome<span class="sc3"><span class="re1">&lt;/AwesomeType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/AwesomeItem<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/AwesomeList<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;AwesomeList&gt;
	&lt;AwesomeItem AwesomenessFactor="11"&gt;
		&lt;AwesomeType&gt;Is Awesome&lt;/AwesomeType&gt;
	&lt;/AwesomeItem&gt;
&lt;/AwesomeList&gt;</pre></div></div>

<p><b>Awesome.xsd</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xs:schema</span> <span class="re0">id</span>=<span class="st0">&quot;MyAwesomeSchema&quot;</span></span>
<span class="sc3"> &nbsp; &nbsp;<span class="re0">xmlns:xs</span>=<span class="st0">&quot;http://www.w3.org/2001/XMLSchema&quot;</span><span class="re2">&gt;</span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:simpleType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeLevel&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;xs:integer&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;1&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;5&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;10&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:restriction<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeElement&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeType&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xs:string&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomenessFactor&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeLevel&quot;</span> <span class="re0">use</span>=<span class="st0">&quot;required&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:attribute<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeList&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeItem&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeElement&quot;</span> <span class="re0">minOccurs</span>=<span class="st0">&quot;0&quot;</span> <span class="re0">maxOccurs</span>=<span class="st0">&quot;unbounded&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; 
<span class="sc3"><span class="re1">&lt;/xs:schema<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xs:schema id="MyAwesomeSchema"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;

	&lt;xs:simpleType name="AwesomeLevel"&gt;
		&lt;xs:restriction base="xs:integer"&gt;
			&lt;xs:enumeration value="1"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="5"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="10"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="11"&gt;&lt;/xs:enumeration&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;

	&lt;xs:complexType name="AwesomeElement"&gt;
		&lt;xs:sequence&gt;
			&lt;xs:element name="AwesomeType" type="xs:string"&gt;&lt;/xs:element&gt;
		&lt;/xs:sequence&gt;
		&lt;xs:attribute name="AwesomenessFactor" type="AwesomeLevel" use="required"&gt;&lt;/xs:attribute&gt;
	&lt;/xs:complexType&gt;

	&lt;xs:element name="AwesomeList"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element name="AwesomeItem" type="AwesomeElement" minOccurs="0" maxOccurs="unbounded"&gt;
				&lt;/xs:element&gt;
			&lt;/xs:sequence&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
	
&lt;/xs:schema&gt;</pre></div></div>

<p>Visual Studio gives us handy intellisense suggestions and warnings when we&#8217;re writing the schema because we have specified a namespace it knows, but how do we get that usefulness when we&#8217;re adding more content to our awesome XML file?</p>
<h2>More Cowbell</h2>
<p>Turns out, adding this functionality is pretty easy. Visual Studio is smart enough to use know schemas, so all we have to do is provide the information that makes our schema known and relevant for our XML file. </p>
<p>For this example I am assuming that the two files are in the same folder. I&#8217;ve also made the file complex enough that the additions we make should work for far more complex setups also.</p>
<p>Here&#8217;s the steps:</p>
<ol>
<li>Define a target namespace on the schema</li>
<li>Define the empty namespace of the schema as this namespace</li>
<li>set attributeFormDefault to unqualified so attributes in our XML file won&#8217;t require namespace declarations</li>
<li>Add the namespace declaration to the XML file</li>
</ol>
<p>Updating our files (and adding comments to reflect the list above), we have:</p>
<p><b>AwesomeFile.xml</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span> <span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;AwesomeList</span> <span class="re0">xmlns</span>=<span class="st0">&quot;my://awesomeness&quot;</span><span class="re2">&gt;</span></span> <span class="sc-1">&lt;!-- (4) --&gt;</span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeItem</span> <span class="re0">AwesomenessFactor</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeType<span class="re2">&gt;</span></span></span>Is Awesome<span class="sc3"><span class="re1">&lt;/AwesomeType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/AwesomeItem<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/AwesomeList<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;AwesomeList xmlns="my://awesomeness"&gt; &lt;!-- (4) --&gt;
	&lt;AwesomeItem AwesomenessFactor="11"&gt;
		&lt;AwesomeType&gt;Is Awesome&lt;/AwesomeType&gt;
	&lt;/AwesomeItem&gt;
&lt;/AwesomeList&gt;</pre></div></div>

<p><b>Awesome.xsd</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xs:schema</span> <span class="re0">id</span>=<span class="st0">&quot;MyAwesomeSchema&quot;</span></span>
<span class="sc3"> &nbsp; &nbsp;<span class="re0">xmlns:xs</span>=<span class="st0">&quot;http://www.w3.org/2001/XMLSchema&quot;</span></span>
<span class="sc3">&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">targetNamespace</span>=<span class="st0">&quot;my://awesomeness&quot;</span> &lt;!-- <span class="br0">&#40;</span>1<span class="br0">&#41;</span> --<span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; xmlns=&quot;my://awesomeness&quot; <span class="sc-1">&lt;!-- (2) --&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; attributeFormDefault=&quot;unqualified&quot; <span class="sc-1">&lt;!-- (3) --&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; elementFormDefault=&quot;qualified&quot;&gt;
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:simpleType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeLevel&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;xs:integer&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;1&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;5&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;10&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:restriction<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeElement&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeType&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xs:string&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomenessFactor&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeLevel&quot;</span> <span class="re0">use</span>=<span class="st0">&quot;required&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:attribute<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeList&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeItem&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeElement&quot;</span> <span class="re0">minOccurs</span>=<span class="st0">&quot;0&quot;</span> <span class="re0">maxOccurs</span>=<span class="st0">&quot;unbounded&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp;
<span class="sc3"><span class="re1">&lt;/xs:schema<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xs:schema id="MyAwesomeSchema"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
		targetNamespace="my://awesomeness" &lt;!-- (1) --&gt;
		xmlns="my://awesomeness" &lt;!-- (2) --&gt;
		attributeFormDefault="unqualified" &lt;!-- (3) --&gt;
		elementFormDefault="qualified"&gt;

	&lt;xs:simpleType name="AwesomeLevel"&gt;
		&lt;xs:restriction base="xs:integer"&gt;
			&lt;xs:enumeration value="1"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="5"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="10"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="11"&gt;&lt;/xs:enumeration&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;

	&lt;xs:complexType name="AwesomeElement"&gt;
		&lt;xs:sequence&gt;
			&lt;xs:element name="AwesomeType" type="xs:string"&gt;&lt;/xs:element&gt;
		&lt;/xs:sequence&gt;
		&lt;xs:attribute name="AwesomenessFactor" type="AwesomeLevel" use="required"&gt;&lt;/xs:attribute&gt;
	&lt;/xs:complexType&gt;

	&lt;xs:element name="AwesomeList"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element name="AwesomeItem" type="AwesomeElement" minOccurs="0" maxOccurs="unbounded"&gt;
				&lt;/xs:element&gt;
			&lt;/xs:sequence&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;

&lt;/xs:schema&gt;</pre></div></div>

<p>And there we have it.</p>
<h2>Results</h2>
<p>Now when we start typing in the XML file we will get intellisense suggestions/completion:</p>
<div style="text-align:center; margin: .5em 0;">
   <img src="http://tiernok.com/LTDBlog/XmlSchemaIntellisense/Intellisense.png" alt="Intellisense suggestions" />
</div>
<p>We also get warnings when we forget a required attribute:</p>
<div style="text-align:center; margin: .5em 0;">
   <img src="http://tiernok.com/LTDBlog/XmlSchemaIntellisense/SchemaWarning.png" alt="Intellisense suggestions" />
</div>
<p>And when we use the wrong type:</p>
<div style="text-align:center; margin: .5em 0;">
   <img src="http://tiernok.com/LTDBlog/XmlSchemaIntellisense/WrongTypeWarning.png" alt="Intellisense suggestions" />
</div>
<p><i>Hopefully the custom color scheme isn&#8217;t confusing, was feeling too lazy to switch it and switch it back</i></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/vs2012/intellisense-for-custom-xml-in/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>HTML5 Support for the Visual Studio 2010 Editor available for download</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/html5-support-for-the-visual/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/html5-support-for-the-visual/#comments</comments>
		<pubDate>Thu, 16 Jun 2011 08:45:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[AJAX]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[XHTML and CSS]]></category>
		<category><![CDATA[html5]]></category>
		<category><![CDATA[intellisense]]></category>
		<category><![CDATA[visual studio 2010]]></category>
		<category><![CDATA[web standards]]></category>

		<guid isPermaLink="false">/index.php/2011/06/html5-support-for-the-visual/</guid>
		<description><![CDATA[The first Web Standards Update for Visual Studio 2010 SP1 is available for download, you can get it here: http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83

We just released the first Web Standards Update for Visual St&#8230;]]></description>
				<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/denisgobo/5839107848/" title="HTML5 Support for the Visual Studio 2010 Editor by Denis Gobo, on Flickr"><img src="http://farm3.static.flickr.com/2734/5839107848_96b77582ac_m.jpg" width="240" height="201" alt="HTML5 Support for the Visual Studio 2010 Editor" /></a><br />
The first Web Standards Update for Visual Studio 2010 SP1 is available for download, you can get it here: http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83</p>
<blockquote><p>We just released the first Web Standards Update for Visual Studio 2010 SP1. Despite its name, the update also works for Visual Web Developer Express 2010 SP1. You can read more on our team blog.</p>
<p> In this first release of the update, we have focused on bringing the HTML5 support up-to-date, adding CSS 3 support and bring more new API’s to the JavaScript intellisense. The plan is to make a release about every 3 months to keep Visual Studio updated with the changes made by W3C.</p></blockquote>
<p>Here are some of the features that the Visual Studio Web Standards Update provides you with intellisense and validation for<br />
<strong>HTML 5 features</strong></p>
<p>Video &amp; related tags<br />
Audio &amp; related tag<br />
New input types like email, url, date etc<br />
Drag &amp; Drop support<br />
Accessibility standard WAI-ARIA<br />
Microdata<br />
Schema.org </p>
<p><strong>CSS3</strong></p>
<p>2D Transforms<br />
3D Transforms<br />
Animations<br />
Background &amp; Borders<br />
Basic Box Model<br />
Basic UI<br />
Behavior<br />
Color<br />
Flexible Box Layout<br />
Fonts<br />
Generated Content for Paged Media<br />
Hyperlink Presentation<br />
Line<br />
Lists<br />
Marquee<br />
Media Queries<br />
Multi Column<br />
Namespaces<br />
Paged Media<br />
Presentations Levels<br />
Ruby<br />
Selectors<br />
Speech<br />
Syntax<br />
Template Layout<br />
Text<br />
Transitions</p>
<p>Download it here: http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83</p>
<p>Read more about it here: http://blogs.msdn.com/b/webdevtools/archive/2011/06/15/web-standards-update-for-visual-studio-2010-sp1.aspx</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/html5-support-for-the-visual/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>How to refresh the local IntelliSense cache in SQL Server Management Studio</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-refresh-the-local-intellisense-ca/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-refresh-the-local-intellisense-ca/#comments</comments>
		<pubDate>Sat, 05 Jun 2010 12:12:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[intellisense]]></category>
		<category><![CDATA[tip]]></category>
		<category><![CDATA[trick]]></category>

		<guid isPermaLink="false">/index.php/2010/06/how-to-refresh-the-local-intellisense-ca/</guid>
		<description><![CDATA[This question came up again yesterday in our SQL Server forum so I decided to create a short blog post about it.
The version of SQL Server Management Studio that ships with SQL Server2008 comes with IntelliSense enabled, I still think IntelliSense is s&#8230;]]></description>
				<content:encoded><![CDATA[<p>This question came up again yesterday in our<a href="http://forum.lessthandot.com/viewtopic.php?f=17&amp;t=11028"> SQL Server forum</a> so I decided to create a short blog post about it.<br />
The version of SQL Server Management Studio that ships with SQL Server2008 comes with IntelliSense enabled, I still think IntelliSense is sometimes more in my way than it is useful but I won&#8217;t bore you with that. </p>
<p>What will eventually happen is that if you create new tables and stored procedures IntelliSense  will not know about those, when this happens you have to refresh the local IntelliSense  cache for it to <em>see</em> the new objects.</p>
<p>There are two ways to do it, if you are a shortcut impaired developer then here is how you do it. Click on Edit&#8211;>IntelliSense&#8211;>Refresh Local Cache</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//Intelli2.PNG" alt=" refresh the local IntelliSense cache in SQL Server Management Studio" title=" refresh the local IntelliSense cache in SQL Server Management Studio" width="483" height="463" /></p>
<p>Or you can just hit the <strong>CTRL + SHIFT + R</strong> shortcut. Of course Query Analyzer users will remember CTRL + SHIFT + R being the shortcut to uncomment something.</p>
<p>Hopefully this will help someone  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>I also created a copy of this on our wiki here: <a href="http://wiki.lessthandot.com/index.php/IntelliSense_does_not_see_new_objects_in_SQL_Server_Management_Studio">IntelliSense does not see new objects in SQL Server Management Studio</a></p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-refresh-the-local-intellisense-ca/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>jQuery will ship with ASP.NET MVC and Visual Studio!</title>
		<link>/index.php/webdev/webdesigngraphicsstyling/jquery-will-ship-with-asp-net-mvc-and-vi/</link>
		<comments>/index.php/webdev/webdesigngraphicsstyling/jquery-will-ship-with-asp-net-mvc-and-vi/#respond</comments>
		<pubDate>Mon, 29 Sep 2008 11:06:08 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Web Design, Graphics and Styling]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[asp.net mvc]]></category>
		<category><![CDATA[intellisense]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[jquery]]></category>
		<category><![CDATA[mvc]]></category>
		<category><![CDATA[visual studio]]></category>

		<guid isPermaLink="false">/index.php/2008/09/jquery-will-ship-with-asp-net-mvc-and-vi/</guid>
		<description><![CDATA[Now here is some exciting news if you are a web developer in a MSFT shop. Microsoft will ship jQuery with ASP.NET MVC and Visual Studio. John Resig writes: Microsoft is looking to make jQuery part of their official development platform. Their JavaScript offering today includes the ASP.NET Ajax Framework and they’re looking to expand [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Now here is some exciting news if you are a web developer in a MSFT shop. Microsoft will ship jQuery with ASP.NET MVC and Visual Studio.<br />
John Resig writes:<br />
<blockquote>Microsoft is looking to make jQuery part of their official development platform. Their JavaScript offering today includes the ASP.NET Ajax Framework and they’re looking to expand it with the use of jQuery. This means that jQuery will be distributed with Visual Studio (which will include jQuery intellisense, snippets, examples, and documentation).</p>
<p>Additionally Microsoft will be developing additional controls, or widgets, to run on top of jQuery that will be easily deployable within your .NET applications. jQuery helpers will also be included in the server-side portion of .NET development (in addition to the existing helpers) providing complementary functions to existing ASP.NET AJAX capabilities.</p></blockquote>
<p>Sweet, you will get jQuery intellisense <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Read Jogn Resig&#8217;s announcement here: http://jquery.com/blog/2008/09/28/jquery-microsoft-nokia/</p>
<p>Read Scott Guthrie&#8217;s post here: http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx</p>
<p>Bertrand Le Roy has also a post here: http://weblogs.asp.net/bleroy/archive/2008/09/28/jquery-now-officially-part-of-the-net-developer-s-toolbox.aspx</p>
<p>Finally Scott Hanselman has also a post about this here: http://www.hanselman.com/blog/jQueryToShipWithASPNETMVCAndVisualStudio.aspx</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/webdesigngraphicsstyling/jquery-will-ship-with-asp-net-mvc-and-vi/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
