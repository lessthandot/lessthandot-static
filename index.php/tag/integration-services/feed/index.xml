<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>integration services &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/integration-services/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Server Days 2014 &#8211; Slide deck</title>
		<link>/index.php/datamgmt/ssis/sql-server-days-2014-slide-deck/</link>
		<comments>/index.php/datamgmt/ssis/sql-server-days-2014-slide-deck/#comments</comments>
		<pubDate>Mon, 06 Oct 2014 07:45:53 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[bi]]></category>
		<category><![CDATA[integration services]]></category>
		<category><![CDATA[slides]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[sql server days]]></category>
		<category><![CDATA[ssis]]></category>

		<guid isPermaLink="false">/?p=3004</guid>
		<description><![CDATA[SQL Server Days 2014 is over, but it has been one great event. A very big thanks to the organizers! My session went pretty well, somewhere around 60 attendees I would guess and they didn&#8217;t seem too bored. I saw some other great sessions as well, such as Buck Woody (twitter) on Big Data (and [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>SQL Server Days 2014 is over, but it has been one great event. A very big thanks to the organizers! My session went pretty well, somewhere around 60 attendees I would guess and they didn&#8217;t seem too bored. I saw some other great sessions as well, such as Buck Woody (<a href="https://twitter.com/buckwoody">twitter</a>) on Big Data (and a fantastic keynote) and a demo session on Azure ML. I also attended Grants (<a href="https://twitter.com/GFritchey">twitter </a>| <a href="http://www.scarydba.com/">blog</a>) precon on execution plans and I definitely learned a lot.</p>
<p>It was great to meet up with the #sqlfamily and I can&#8217;t wait for next years edition.</p>
<p>I have uploaded my slides to <a href="http://www.slideshare.net/KoenVerbeeck/sql-server-days-2014-how-to-not-torment-your">Slideshare</a>, in case you&#8217;re interested.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/ssis/sql-server-days-2014-slide-deck/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>SSIS Performance Testing</title>
		<link>/index.php/datamgmt/ssis/ssis-performance-testing/</link>
		<comments>/index.php/datamgmt/ssis/ssis-performance-testing/#comments</comments>
		<pubDate>Tue, 08 Apr 2014 07:54:01 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[SSIS]]></category>
		<category><![CDATA[integration services]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[syndicated]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[tuning]]></category>

		<guid isPermaLink="false">/?p=2549</guid>
		<description><![CDATA[I had to do some performance testing for an upcoming MSSQLTips article and I thought I’d share the framework I used in a blog post. First of all we have to log start and end dates of the package to a table so we can easily calculate the duration a package took to finish. This [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I had to do some performance testing for an upcoming <a href="http://www.mssqltips.com/">MSSQLTips</a> article and I thought I’d share the framework I used in a blog post.</p>
<p>First of all we have to log start and end dates of the package to a table so we can easily calculate the duration a package took to finish. This can probably be calculated from the SSIS catalog as well, but I was a bit too <del>busy</del> lazy to find out how to do this. Anyway, the logging table is created using the following statement:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">IF</span> <span class="sy0">NOT</span> <span class="sy0">EXISTS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> sys.<span class="me1">objects</span> <span class="kw1">WHERE</span> <span class="kw2">object_id</span> <span class="sy0">=</span> <span class="kw2">OBJECT_ID</span><span class="br0">&#40;</span>N<span class="st0">'[dbo].[PackageLogging]'</span><span class="br0">&#41;</span> <span class="sy0">AND</span> type in <span class="br0">&#40;</span>N<span class="st0">'U'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>PackageLogging<span class="br0">&#93;</span><span class="br0">&#40;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>ID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="kw1">IDENTITY</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>RunID<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>PackageName<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>StartDate<span class="br0">&#93;</span> <span class="br0">&#91;</span>datetime2<span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">7</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#91;</span>EndDate<span class="br0">&#93;</span> <span class="br0">&#91;</span>datetime2<span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">7</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; <span class="br0">&#41;</span>;
<span class="kw1">END</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PackageLogging]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[PackageLogging](
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[RunID] [int] NOT NULL,
		[PackageName] [varchar](50) NOT NULL,
		[StartDate] [datetime2](7) NOT NULL,
		[EndDate] [datetime2](7) NULL
	);
END
GO</pre></div></div>

<p>The RunID column is populated by a package parameter; I will come back to this later on.</p>
<p><a href="/wp-content/uploads/2014/04/TestSSISPerf_parameter.png"><img class="alignnone size-full wp-image-2558" alt="TestSSISPerf_parameter" src="/wp-content/uploads/2014/04/TestSSISPerf_parameter.png" width="559" height="115" srcset="/wp-content/uploads/2014/04/TestSSISPerf_parameter.png 559w, /wp-content/uploads/2014/04/TestSSISPerf_parameter-300x61.png 300w" sizes="(max-width: 559px) 100vw, 559px" /></a></p>
<p>The package starts with an Execute SQL Task to log the start. I use the following SSIS expression to construct the SQL statement on the fly, allowing you to easy copy-paste the logging task between packages.</p>
<blockquote><p>&#8220;INSERT INTO dbo.PackageLogging(RunID, PackageName,StartDate) VALUES (&#8221; +  (DT_STR,10,1252)@[$Package::RunID] + &#8220;,'&#8221; +  @[System::PackageName] + &#8220;&#8216;,SYSDATETIME());&#8221;</p></blockquote>
<p>At the end of the control flow, there is an Execute SQL Task that updates the EndDate of the previously inserted row. The expression looks like this:</p>
<blockquote><p>&#8220;UPDATE dbo.PackageLogging SET [EndDate] = SYSDATETIME() WHERE RunID = &#8221; + (DT_STR,10,1252)  @[$Package::RunID] + &#8221; AND PackageName = &#8216;&#8221; +  @[System::PackageName] + &#8220;&#8216;;&#8221;</p></blockquote>
<p>The RunID parameter is important to link those two Execute SQL Tasks together. A typical control flow looks like this:</p>
<p><a href="/wp-content/uploads/2014/04/TestSSISPerf_controllflow.png"><img class="alignnone  wp-image-2560" alt="TestSSISPerf_controllflow" src="/wp-content/uploads/2014/04/TestSSISPerf_controllflow.png" width="286" height="329" srcset="/wp-content/uploads/2014/04/TestSSISPerf_controllflow.png 358w, /wp-content/uploads/2014/04/TestSSISPerf_controllflow-261x300.png 261w" sizes="(max-width: 286px) 100vw, 286px" /></a></p>
<p>Logging is the first step, now we have to run the package of course. I created a stored procedure that allows me to easily start a package in the SSIS catalog.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>RunPackage<span class="br0">&#93;</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>@RunID &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INT</span>
&nbsp; &nbsp; ,@PackageName &nbsp; <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>
&nbsp; &nbsp; ,@FolderName&nbsp; &nbsp; <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>
&nbsp; &nbsp; ,@ProjectName &nbsp; <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>
&nbsp; &nbsp; ,@Synchronized&nbsp; <span class="kw1">BIT</span> <span class="sy0">=</span> <span class="nu0">1</span> <span class="co1">-- run synchronously by default</span>
&nbsp; &nbsp; <span class="br0">&#41;</span>
<span class="kw1">AS</span>
<span class="kw1">DECLARE</span> @execution_id <span class="kw1">BIGINT</span>;
&nbsp;
<span class="kw1">EXEC</span> <span class="br0">&#91;</span>SSISDB<span class="br0">&#93;</span>.<span class="br0">&#91;</span><span class="kw1">catalog</span><span class="br0">&#93;</span>.<span class="br0">&#91;</span>create_execution<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp;@package_name&nbsp; &nbsp; &nbsp; <span class="sy0">=</span> @PackageName
&nbsp; &nbsp; ,@execution_id&nbsp; &nbsp; &nbsp; <span class="sy0">=</span> @execution_id <span class="kw1">OUTPUT</span>
&nbsp; &nbsp; ,@folder_name &nbsp; &nbsp; &nbsp; <span class="sy0">=</span> @FolderName
&nbsp; &nbsp; ,@project_name&nbsp; &nbsp; &nbsp; <span class="sy0">=</span> @ProjectName
&nbsp; &nbsp; ,@use32bitruntime &nbsp; <span class="sy0">=</span> <span class="kw1">False</span>
&nbsp; &nbsp; ,@reference_id&nbsp; &nbsp; &nbsp; <span class="sy0">=</span> <span class="sy0">NULL</span>;
&nbsp;
<span class="co1">--SELECT @execution_id;</span>
&nbsp;
<span class="kw1">EXEC</span> <span class="br0">&#91;</span>SSISDB<span class="br0">&#93;</span>.<span class="br0">&#91;</span><span class="kw1">catalog</span><span class="br0">&#93;</span>.<span class="br0">&#91;</span>set_execution_parameter_value<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp;@execution_id
&nbsp; &nbsp; ,@object_type &nbsp; &nbsp; &nbsp; <span class="sy0">=</span> <span class="nu0">30</span>
&nbsp; &nbsp; ,@parameter_name&nbsp; &nbsp; <span class="sy0">=</span> N<span class="st0">'RunID'</span>
&nbsp; &nbsp; ,@parameter_value &nbsp; <span class="sy0">=</span> @RunID;
&nbsp;
<span class="kw1">EXEC</span> <span class="br0">&#91;</span>SSISDB<span class="br0">&#93;</span>.<span class="br0">&#91;</span><span class="kw1">catalog</span><span class="br0">&#93;</span>.<span class="br0">&#91;</span>set_execution_parameter_value<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp;@execution_id
&nbsp; &nbsp; ,@object_type &nbsp; &nbsp; &nbsp; <span class="sy0">=</span> <span class="nu0">50</span>
&nbsp; &nbsp; ,@parameter_name&nbsp; &nbsp; <span class="sy0">=</span> N<span class="st0">'SYNCHRONIZED'</span>
&nbsp; &nbsp; ,@parameter_value &nbsp; <span class="sy0">=</span> @Synchronized;
&nbsp;
<span class="kw1">EXEC</span> <span class="br0">&#91;</span>SSISDB<span class="br0">&#93;</span>.<span class="br0">&#91;</span><span class="kw1">catalog</span><span class="br0">&#93;</span>.<span class="br0">&#91;</span>start_execution<span class="br0">&#93;</span> @execution_id;
&nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC [dbo].[RunPackage]
	(@RunID			INT
	,@PackageName	VARCHAR(50)
	,@FolderName	VARCHAR(50)
	,@ProjectName	VARCHAR(50)
	,@Synchronized	BIT = 1 -- run synchronously by default
	)
AS
DECLARE @execution_id BIGINT;

EXEC [SSISDB].[catalog].[create_execution]
	 @package_name		= @PackageName
	,@execution_id		= @execution_id OUTPUT
	,@folder_name		= @FolderName
	,@project_name		= @ProjectName
	,@use32bitruntime	= False
	,@reference_id		= NULL;

--SELECT @execution_id;

EXEC [SSISDB].[catalog].[set_execution_parameter_value]
	 @execution_id
	,@object_type		= 30
	,@parameter_name	= N'RunID'
	,@parameter_value	= @RunID;

EXEC [SSISDB].[catalog].[set_execution_parameter_value]
	 @execution_id
	,@object_type		= 50
	,@parameter_name	= N'SYNCHRONIZED'
	,@parameter_value	= @Synchronized;

EXEC [SSISDB].[catalog].[start_execution] @execution_id;

GO</pre></div></div>

<p>The proc passes the @RunID parameter to the package, as well as other usual suspects, such as the package name, folder name and project name. You can also choose if a package is run synchronously or asynchronously. When run synchronously, the stored procedure doesn’t finish until the package is finished as well.</p>
<p>Using this stored procedure, it is easy to run a package multiple times in a row using a WHILE loop.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @RunID <span class="kw1">INT</span> <span class="sy0">=</span> <span class="nu0">1</span>;
&nbsp;
<span class="kw1">WHILE</span> <span class="br0">&#40;</span>@RunID <span class="sy0">&lt;=</span> <span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">EXEC</span> dbo.<span class="me1">RunPackage</span> @RunID, <span class="st0">'myPackage.dtsx'</span>, <span class="st0">'myFolder'</span>, <span class="st0">'myProject'</span>, <span class="nu0">1</span>;
&nbsp; &nbsp; <span class="kw1">SET</span> @RunID <span class="sy0">+=</span> <span class="nu0">1</span>;
<span class="kw1">END</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @RunID INT = 1;

WHILE (@RunID &lt;= 10)
BEGIN
	EXEC dbo.RunPackage @RunID, 'myPackage.dtsx', 'myFolder', 'myProject', 1;
	SET @RunID += 1;
END</pre></div></div>

<p>The package is run synchronously, so that multiple instances do not run at the same time. This eliminates resource contention and gives us a clearer result of the performance of the individual package.</p>
<p>Using the following query, it is easy to build a nice chart in SSRS:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; &nbsp;<span class="br0">&#91;</span>RunID<span class="br0">&#93;</span>
&nbsp; &nbsp; ,<span class="br0">&#91;</span>PackageName<span class="br0">&#93;</span>
&nbsp; &nbsp; ,<span class="br0">&#91;</span>Duration<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">DATEDIFF</span><span class="br0">&#40;</span>MILLISECOND,StartDate,EndDate<span class="br0">&#41;</span> <span class="sy0">/</span> <span class="nu0">1000.0</span>
&nbsp; &nbsp; ,<span class="br0">&#91;</span>Mean<span class="br0">&#93;</span> <span class="sy0">=</span> PERCENTILE_CONT<span class="br0">&#40;</span><span class="nu0">0.5</span><span class="br0">&#41;</span> WITH<span class="sy0">IN</span> <span class="kw1">GROUP</span> <span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="kw2">DATEDIFF</span><span class="br0">&#40;</span>MILLISECOND,StartDate,EndDate<span class="br0">&#41;</span> <span class="sy0">/</span> <span class="nu0">1000.0</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">OVER</span> <span class="br0">&#40;</span>PARTITION <span class="kw1">BY</span> PackageName<span class="br0">&#41;</span>
<span class="kw1">FROM</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>PackageLogging<span class="br0">&#93;</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> ID;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	 [RunID]
	,[PackageName]
	,[Duration] = DATEDIFF(MILLISECOND,StartDate,EndDate) / 1000.0
	,[Mean] = PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY DATEDIFF(MILLISECOND,StartDate,EndDate) / 1000.0)
					OVER (PARTITION BY PackageName)
FROM [dbo].[PackageLogging]
ORDER BY ID;</pre></div></div>

<p>The result:</p>
<p><a href="/wp-content/uploads/2014/04/TestSSISPerf_chart.png"><img class="alignnone  wp-image-2559" alt="TestSSISPerf_chart" src="/wp-content/uploads/2014/04/TestSSISPerf_chart.png" width="542" height="315" srcset="/wp-content/uploads/2014/04/TestSSISPerf_chart.png 774w, /wp-content/uploads/2014/04/TestSSISPerf_chart-300x174.png 300w" sizes="(max-width: 542px) 100vw, 542px" /></a></p>
<p>I used RunID as category, PackageName as the series and the Duration/Mean as the values. I created a custom palette where I forced the Duration measure and the Mean to have the same color.</p>
<p>If you want to know what that chart is all about and what I was optimizing, keep your eye on the MSSQLTIPS website!</p>
<p><strong>UPDATE<br />
</strong>The MSSQLTips article mentioned in this blog post: <a href="http://www.mssqltips.com/sqlservertip/3217/improve-ssis-data-flow-buffer-performance/">Improve SSIS data flow buffer performance</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/ssis/ssis-performance-testing/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>When is DTEXEC installed?</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/when-is-dtexec-installed/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/when-is-dtexec-installed/#comments</comments>
		<pubDate>Tue, 12 Feb 2013 11:12:00 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[dtexec]]></category>
		<category><![CDATA[installation]]></category>
		<category><![CDATA[integration services]]></category>
		<category><![CDATA[service]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssis]]></category>

		<guid isPermaLink="false">/index.php/2013/02/when-is-dtexec-installed/</guid>
		<description><![CDATA[Which minimal components do you need to install to run SSIS packages on a server? Let's find out!]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;">Or in other words, what do I need to install during SQL Server setup in order to end up with a fully operational SSIS server with a minimal surface area configuration? I came up with this blog post after I participated in the following thread at the MSDN forum: <a href="http://social.msdn.microsoft.com/Forums/en-US/sqlintegrationservices/thread/4f29e3a3-fc8a-465c-8acc-12ecedfcb24c">“What&#8217;s the minimum configuration to run dtexec on windows 2003 server?”</a> <a href="http://msdn.microsoft.com/en-us/library/ms162810(v=SQL.105).aspx">DTEXEC</a> is the command line utility used behind the scenes to run SSIS packages. The question asker thought only the client tools needed to be installed, but I was not sure of this. Time to investigate!</p>
<p style="text-align: justify;"><strong>Methodology</strong></p>
<p style="text-align: justify;">I created two easy packages, called SimpleTest and AdvancedTest. SimpleTest reads a flat file, adds a timestamp and writes the results to another flat file.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/simplepackage.PNG?mtime=1360669546"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/simplepackage.PNG?mtime=1360669546" alt="" width="152" height="206" /></a></div>
<p><span style="text-align: justify;">The AdvancedTest package reads the same flat file, but uses a term extraction component to do a term based analysis and it writes the results to a flat file. This package is used to see if there’s any difference when an Enterprise-only  component is used (see </span><a style="text-align: justify;" href="http://msdn.microsoft.com/en-us/library/cc645993(v=sql.105).aspx">Features Supported by the Editions of SQL Server 2008 R2</a><span style="text-align: justify;">).</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/advancedpackage.PNG?mtime=1360669554"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/advancedpackage.PNG?mtime=1360669554" alt="" width="288" height="299" /></a></div>
<p><span style="text-align: justify;">The server is a Windows 2008R2 64-bit server. The edition of SQL Server being installed is SQL Server 2008R2 Developer edition.</span></p>
<p style="text-align: justify;">To test if DTEXEC is installed and if it works correctly, the following commands are used in a command window:</p>
<blockquote><p><em><span style="font-size: small;">dtexec /F “c:SimpleTest.dtsx” &gt; SimpleLog.txt</span></em></p></blockquote>
<p style="text-align: justify;">and</p>
<blockquote><p><em><span style="font-size: small;">dtexec /F “c:AdvancedTest.dtsx” &gt; AdvancedLog.txt</span></em></p></blockquote>
<p style="text-align: justify;">These commands execute a package located on the file system and output the results to a text file.</p>
<p style="text-align: justify;"><strong>Client Tools only</strong></p>
<p style="text-align: justify;">The first install is the client tools, with which I mean BIDS (Business Intelligence Development Studio) and SSMS (SQL Server Management Studio). Later on I learned the question asker meant everything listed under <em>Shared Features</em>, which is a whole lot more than just the client tools. First I installed the Management Tools only.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ManagementTools_Install.png?mtime=1360669453"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_Install.png?mtime=1360669453" alt="" width="490" height="369" /></a></div>
<p><span style="text-align: justify;"> </span></p>
<p style="text-align: justify;">I took a look in the Program Folders, but I only found a 32-bit DTEXEC. Is this enough to run a package?</p>
<p style="text-align: center;"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_Result.png?mtime=1360669459" alt="" width="435" height="189" /></p>
<p style="text-align: justify;">When the DTEXEC statements are executed in a command window, we are greeted with the following error message:</p>
<blockquote><p><em><span style="font-size: 9pt;">Description: To run a SSIS package outside of Business Intelligence Development Studio you must install Standard Edition of Integration Services or higher.</span></em></p></blockquote>
<p style="text-align: justify;">So no luck with this method. When DTEXECUI is launched, everything is grayed out and another straightforward error message tells us we really do have to install Integration Services.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ManagementTools_DTEXECUI.png?mtime=1360669438"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_DTEXECUI.png?mtime=1360669438" alt="" width="411" height="348" /></a></div>
<p><span style="text-align: justify;">However, the Import/Export wizard is also installed. When I import a flat file to another flat file – the workflow used by the SimpleTest package – the wizard executes successfully:</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ManagementTools_importwizard.png?mtime=1360669446"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_importwizard.png?mtime=1360669446" alt="" width="389" height="393" /></a></div>
<p><span style="text-align: justify;">The only reason DTEXEC was installed is to run the Import/Export wizard. Installing BIDS as well doesn’t solve the issue, as expected. You can run packages within BIDS, but I guess nobody is excited about staying up all night in order to manually kick off SSIS packages. So basically we have installed a lightweight development environment, but not a server.</span></p>
<p style="text-align: justify;"><strong>SQL Server only</strong></p>
<p style="text-align: justify;">Stubborn as I am, I ignore the logical error messages I got earlier and I install the SQL Server database engine, without any shared feature whatsoever. This time the 64-bit DTEXEC is installed. We’re making progress. When I start the SimpleTest package, the log shows the following:</p>
<blockquote>
<p style="text-align: justify;"><span style="font-size: 9pt;"><em>The component &#8220;(DER) Add timestamp&#8221; (38) cannot run on installed (64-bit) of Integration Services. It requires Standard Edition (64-bit) or higher.</em></span></p>
</blockquote>
<p style="text-align: justify;">The error doesn’t make much sense, since I haven’t installed Integration Services at all and Developer Edition is a higher edition than Standard (in functionality, not in price). Running the AdvancedTest package results in the following:</p>
<blockquote>
<p style="text-align: justify;">
<span style="font-size: 9pt;"><em>Warning: 2013-01-16 14:49:02.56  Code: 0xC0048000<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (DFT) Throw data around (SSIS.Pipeline)<br />
&nbsp;&nbsp; Description: The registry key &#8220;SOFTWAREClassesCLSID{119D450D-E2A3-4DB0-A7BC-ACDE2536673E}DTSInfo&#8221; cannot be opened.<br />
End Warning<br />
Warning: 2013-01-16 14:49:02.56   Code: 0x8004801E<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (DFT) Throw data around (SSIS.Pipeline)<br />
&nbsp;&nbsp; Description: Cannot find the &#8220;CurrentVersion&#8221; value for component {119D450D-E2A3-4DB0-A7BC-ACDE2536673E}. The CurrentVersion value for the component cannot be located. This error occurs if the component has not set its registry information to contain a CurrentVersion value in the DTSInfo section. This message occurs during component development, or when the component is used in a package, if the component is not registered properly.<br />
End Warning<br />
Error: 2013-01-16 14:49:02.56   Code: 0xC0048020<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (DFT) Throw data around (SSIS.Pipeline)<br />
&nbsp;&nbsp; Description: The version of component &#8220;(TEX) Extraction FirstName&#8221; (77) is not compatible with this version of the DataFlow.<br />
End Error<br />
Error: 2013-01-16 14:49:02.56   Code: 0xC0048020<br />
&nbsp;&nbsp; Source: (DFT) Throw data around SSIS.Pipeline<br />
&nbsp;&nbsp; Description: The version of component &#8220;(TEX) Extraction FirstName&#8221; (77) is not compatible with this version of the DataFlow.<br />
End Error<br />
…<br />
Error: 2013-01-16 14:49:02.56  Code: 0xC0048021<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (TEX) Extraction FirstName [77]<br />
&nbsp;&nbsp; Description: The component is missing, not registered, not upgradeable, or missing required interfaces. The contact information for this component is &#8220;&#8221;.<br />
End Error<br />
Error: 2013-01-16 14:49:02.56   Code: 0xC0047017<br />
&nbsp;&nbsp; Source: (DFT) Throw data around SSIS.Pipeline<br />
&nbsp;&nbsp; Description: component &#8220;(TEX) Extraction FirstName&#8221; (77) failed validation and returned error code 0xC0048021.<br />
End Error<br />
</em></span></p>
</blockquote>
<p style="text-align: justify;">First we get a whole bunch of warning related to the registry, followed by errors related to the Term Extraction component, leading to a validation failure at the end. The Enterprise-only component leads to different errors, but the result is the same: we cannot run SSIS packages using DTEXEC.</p>
<p style="text-align: justify;">So why is DTEXEC installed? First of all, to run the 64-bit version of the Import/Export wizard, but also to support maintenance plans, who use SSIS behind the scenes. Since SQL Server 2005 sp2 or SQL Server 2008 CU1/sp1, it is not necessary to install SSIS to create maintenance plans. Read more about this in the blog post <a href="http://sqlblog.com/blogs/tibor_karaszi/archive/2009/08/26/do-maintenance-plans-require-ssis.aspx">Do maintenance plans require SSIS?</a> by Tibor Karaszi (<a href="http://sqlblog.com/blogs/tibor_karaszi/default.aspx">blog</a> | <a href="https://twitter.com/TiborKaraszi">twitter</a>).</p>
<p style="text-align: justify;"><strong>Integration Services only</strong></p>
<p style="text-align: justify;">Now let’s try to do the sane thing here and install SSIS, without any other option specified.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ssis_only_install.png?mtime=1360669468"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ssis_only_install.png?mtime=1360669468" alt="" width="439" height="322" /></a></div>
<p><span style="text-align: justify;">DTEXEC is installed, as expected of course, alongside the Integrations Services service. Running DTEXEC through the command line gives us the result we were hoping for:</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/SSISonly_serviceON_dtexec_success.png?mtime=1360669481"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/SSISonly_serviceON_dtexec_success.png?mtime=1360669481" alt="" width="518" height="245" /></a></div>
<p><span style="text-align: justify;">Success at last! DTEXECUI isn’t installed, indicating this is a client component only. This is OK, because you probably won’t ever use it on a server.</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/SSISonly_nodtexecui.png?mtime=1360669475"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/SSISonly_nodtexecui.png?mtime=1360669475" alt="" width="373" height="211" /></a></div>
<p><span style="text-align: justify;">One final question remains: do we need the SSIS service? The answer is short: no. According to </span><a style="text-align: justify;" href="http://support.microsoft.com/kb/942176">Microsoft</a><span style="text-align: justify;">, the SSIS service only extends the functionality of SSMS, in the sense that it manages the storage of SSIS packages and that it monitors the running packages. So you can safely stop the service. However, you need to disable it as well; otherwise the service is started again once you run a package.</span></p>
<p style="text-align: justify;"><strong>Conclusion</strong></p>
<p style="text-align: justify;">Only when you want to set up a dedicated SSIS Server will you need to install Integration Services on its own, and if you do this you’ll need to store your packages on the file system. You can disable the Integration Services service; it is not needed to execute a package. You also might want to install the client connectivity tools as well and any other component you might need to connect to your sources.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/when-is-dtexec-installed/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Create XML Files Out Of SQL Server With SSIS And FOR XML Syntax</title>
		<link>/index.php/datamgmt/dbprogramming/create-xml-files-out-of-sql-server-with/</link>
		<comments>/index.php/datamgmt/dbprogramming/create-xml-files-out-of-sql-server-with/#comments</comments>
		<pubDate>Thu, 05 Mar 2009 14:06:17 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[integration services]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2009/03/create-xml-files-out-of-sql-server-with/</guid>
		<description><![CDATA[So you want to spit out some XML from SQL Server into a file, how can you do that? There are a couple of ways, I will show you how you can do it with SSIS. In the SSIS package you need an Execute SQL Task and a Script Task.

Let's get started

First&#8230;]]></description>
				<content:encoded><![CDATA[<p>So you want to spit out some XML from SQL Server into a file, how can you do that? There are a couple of ways, I will show you how you can do it with SSIS. In the SSIS package you need an Execute SQL Task and a Script Task.</p>
<p>Let&#8217;s get started</p>
<p>First create and populate these two tables in your database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> Artist <span class="br0">&#40;</span>ArtistID <span class="kw1">int</span> <span class="kw1">primary</span> <span class="kw1">key</span> not null,
ArtistName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">38</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
go
&nbsp;
<span class="kw1">create</span> <span class="kw1">table</span> Album<span class="br0">&#40;</span>AlbumID <span class="kw1">int</span> <span class="kw1">primary</span> <span class="kw1">key</span> not null,
ArtistID <span class="kw1">int</span> not null,
AlbumName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> not null,
YearReleased <span class="kw1">smallint</span> not null<span class="br0">&#41;</span>
go
&nbsp;
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Artist <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="st0">'Pink Floyd'</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Artist <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="st0">'Incubus'</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Artist <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span>,<span class="st0">'Prince'</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span>,<span class="st0">'Wish You Were Here'</span>,<span class="nu0">1975</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="nu0">1</span>,<span class="st0">'The Wall'</span>,<span class="nu0">1979</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span>,<span class="nu0">3</span>,<span class="st0">'Purple Rain'</span>,<span class="nu0">1984</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="nu0">3</span>,<span class="st0">'Lotusflow3r'</span>,<span class="nu0">2009</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span>,<span class="nu0">3</span>,<span class="st0">'1999'</span>,<span class="nu0">1982</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">6</span>,<span class="nu0">2</span>,<span class="st0">'Morning View'</span>,<span class="nu0">2001</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">2</span>,<span class="st0">'Light Grenades'</span>,<span class="nu0">2006</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table Artist (ArtistID int primary key not null,
ArtistName varchar(38))
go

create table Album(AlbumID int primary key not null,
ArtistID int not null,
AlbumName varchar(100) not null,
YearReleased smallint not null)
go


insert into Artist values(1,'Pink Floyd')
insert into Artist values(2,'Incubus')
insert into Artist values(3,'Prince')

insert into Album values(1,1,'Wish You Were Here',1975)
insert into Album values(2,1,'The Wall',1979)



insert into Album values(3,3,'Purple Rain',1984)
insert into Album values(4,3,'Lotusflow3r',2009)
insert into Album values(5,3,'1999',1982)


insert into Album values(6,2,'Morning View',2001)
insert into Album values(7,2,'Light Grenades',2006)</pre></div></div>

<p>Now create this proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">proc</span> prMusicCollectionXML
<span class="kw1">as</span>
<span class="kw1">declare</span> @XmlOutput xml 
<span class="kw1">set</span> @XmlOutput <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">select</span> ArtistName,AlbumName,YearReleased <span class="kw1">from</span> Album
join Artist <span class="kw1">on</span> Album.<span class="me1">ArtistID</span> <span class="sy0">=</span> Artist.<span class="me1">ArtistID</span>
<span class="kw1">FOR</span> XML AUTO, ROOT<span class="br0">&#40;</span><span class="st0">'MusicCollection'</span><span class="br0">&#41;</span>, ELEMENTS<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">select</span> @XmlOutput
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create proc prMusicCollectionXML
as
declare @XmlOutput xml 
set @XmlOutput = (select ArtistName,AlbumName,YearReleased from Album
join Artist on Album.ArtistID = Artist.ArtistID
FOR XML AUTO, ROOT('MusicCollection'), ELEMENTS)

select @XmlOutput
go</pre></div></div>

<p>After executing the proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> prMusicCollectionXML</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec prMusicCollectionXML</pre></div></div>

<p>you will see the following output</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="sc3"><span class="re1">&lt;MusicCollection<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Pink Floyd<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span> 
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Wish You Were Here<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1975<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>The Wall<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1979<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Prince<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span> 
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Purple Rain<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1984<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Lotusflow3r<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2009<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>1999<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1982<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Incubus<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span> 
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Morning View<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2001<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Light Grenades<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2006<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/MusicCollection<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> &lt;MusicCollection&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Pink Floyd&lt;/ArtistName&gt; 
 &lt;Album&gt;
  &lt;AlbumName&gt;Wish You Were Here&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1975&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;The Wall&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1979&lt;/YearReleased&gt; 
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Prince&lt;/ArtistName&gt; 
 &lt;Album&gt;
  &lt;AlbumName&gt;Purple Rain&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1984&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Lotusflow3r&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;2009&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;1999&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1982&lt;/YearReleased&gt; 
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Incubus&lt;/ArtistName&gt; 
 &lt;Album&gt;
  &lt;AlbumName&gt;Morning View&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;2001&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Light Grenades&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;2006&lt;/YearReleased&gt; 
  &lt;/Album&gt;
  &lt;/Artist&gt;
  &lt;/MusicCollection&gt;</pre></div></div>

<p>So far so good, so how do we dump that data into a file?<br />
Create a new SSIS package add an ADO.NET Connection, name it AdventureWorksConnection<br />
Drop an Execute SQL Task onto your control flow and modify the properties so it looks like this</p>
<p><img src="http://i44.tinypic.com/1zcz3hl.jpg" border="0" alt="Execute SQL Task" /></p>
<p>On the add a result set by clicking on the add button, change the variable name to User::XMLOutput if it is not already like that</p>
<p>Note!!! In SSIS 2008 this variable should be already created otherwise it will fail</p>
<p><img src="http://i44.tinypic.com/nyab2x.jpg" border="0" alt="Execute SQL Task Adding A Resultset" /></p>
<p>Now execute the package.<br />
You will be greeted with the following message:<br />
Error: 0xC00291E3 at Execute SQL Task, Execute SQL Task: The result binding name must be set to zero for full result set and XML results.<br />
Task failed: Execute SQL Task<br />
 In order to fix that, change the Result Name property from NewresultName to 0, now run it again and it should execute successfully. </p>
<p>Our next step will be to write this XML to a file.<br />
Add a Script Task to the package,double click the Script Task,click on script and type XMLOutput into the property of ReadWriteVariables. It should look like the image below</p>
<p><img src="http://i43.tinypic.com/2ug2df7.jpg" border="0" alt="SSIS Script Task" /></p>
<p>Click the Design Script button, this will open up a code window, replace all the code you see with this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="vb"><thead><tr><td colspan="2"  class="head">Visual Basic</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="de1"><pre class="de1"><span class="co1">' Microsoft SQL Server Integration Services Script Task</span>
<span class="co1">' Write scripts using Microsoft Visual Basic</span>
<span class="co1">' The ScriptMain class is the entry point of the Script Task.</span>
&nbsp;
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
&nbsp;
&nbsp;
<span class="kw2">Public</span> Class ScriptMain
&nbsp;
&nbsp; &nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> Main()
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">' Add your code here</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">Dim</span> XMLString <span class="kw4">As</span> <span class="kw1">String</span> = <span class="st0">&quot; &quot;</span>
&nbsp;
&nbsp;
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = Dts.Variables(<span class="st0">&quot;XMLOutput&quot;</span>).Value.ToString.Replace(<span class="st0">&quot;&lt;ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>).Replace(<span class="st0">&quot;&lt;/ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>)
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = <span class="st0">&quot;&lt;?xml version=&quot;</span><span class="st0">&quot;1.0&quot;</span><span class="st0">&quot; ?&gt;&quot;</span> + XMLString
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; GenerateXmlFile(<span class="st0">&quot;C:\MusicCollection.xml&quot;</span>, XMLString)
&nbsp;
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> GenerateXmlFile(<span class="kw4">ByVal</span> filePath <span class="kw4">As</span> <span class="kw1">String</span>, <span class="kw4">ByVal</span> fileContents <span class="kw4">As</span> <span class="kw1">String</span>)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">Dim</span> objStreamWriter <span class="kw4">As</span> IO.StreamWriter
&nbsp; &nbsp; &nbsp; &nbsp; Try
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter = <span class="kw2">New</span> IO.StreamWriter(filePath)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.Write(fileContents)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.<span class="kw3">Close</span>()
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Catch Excep <span class="kw4">As</span> Exception
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MsgBox(Excep.Message)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">End</span> Try
&nbsp; &nbsp; &nbsp; &nbsp; Dts.TaskResult = Dts.Results.Success
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
<span class="kw3">End</span> Class</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime


Public Class ScriptMain

   

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim XMLString As String = " "



        XMLString = Dts.Variables("XMLOutput").Value.ToString.Replace("&lt;ROOT&gt;", "").Replace("&lt;/ROOT&gt;", "")
        XMLString = "&lt;?xml version=""1.0"" ?&gt;" + XMLString

        GenerateXmlFile("C:\MusicCollection.xml", XMLString)

    End Sub

    Public Sub GenerateXmlFile(ByVal filePath As String, ByVal fileContents As String)

        Dim objStreamWriter As IO.StreamWriter
        Try

            objStreamWriter = New IO.StreamWriter(filePath)

            objStreamWriter.Write(fileContents)

            objStreamWriter.Close()

        Catch Excep As Exception

            MsgBox(Excep.Message)

        End Try
        Dts.TaskResult = Dts.Results.Success
    End Sub

End Class</pre></div></div>

<p><strong>SSIS 2008 requires a code change</strong><br />
Here is what the code should look like if you are running SSIS 2008</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="vb"><thead><tr><td colspan="2"  class="head">Visual Basic</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
</pre></td><td class="de1"><pre class="de1"><span class="co1">' Microsoft SQL Server Integration Services Script Task</span>
<span class="co1">' Write scripts using Microsoft Visual Basic 2008.</span>
<span class="co1">' The ScriptMain is the entry point class of the script.</span>
&nbsp;
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
&nbsp;
&lt;System.AddIn.AddIn(<span class="st0">&quot;ScriptMain&quot;</span>, Version:=<span class="st0">&quot;1.0&quot;</span>, Publisher:=<span class="st0">&quot;&quot;</span>, Description:=<span class="st0">&quot;&quot;</span>)&gt; _
&lt;System.CLSCompliantAttribute(<span class="kw5">False</span>)&gt; _
Partial <span class="kw2">Public</span> Class ScriptMain
&nbsp; &nbsp; Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
&nbsp;
&nbsp; &nbsp; <span class="kw1">Enum</span> ScriptResults
&nbsp; &nbsp; &nbsp; &nbsp; Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
&nbsp; &nbsp; &nbsp; &nbsp; Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw1">Enum</span>
&nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> Main()
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">' Add your code here</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">Dim</span> XMLString <span class="kw4">As</span> <span class="kw1">String</span> = <span class="st0">&quot; &quot;</span>
&nbsp;
&nbsp;
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = Dts.Variables(<span class="st0">&quot;XMLOutput&quot;</span>).Value.ToString.Replace(<span class="st0">&quot;&lt;ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>).Replace(<span class="st0">&quot;&lt;/ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>)
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = <span class="st0">&quot;&lt;?xml version=&quot;</span><span class="st0">&quot;1.0&quot;</span><span class="st0">&quot; ?&gt;&quot;</span> + XMLString
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; GenerateXmlFile(<span class="st0">&quot;C:\MusicCollection.xml&quot;</span>, XMLString)
&nbsp;
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> GenerateXmlFile(<span class="kw4">ByVal</span> filePath <span class="kw4">As</span> <span class="kw1">String</span>, <span class="kw4">ByVal</span> fileContents <span class="kw4">As</span> <span class="kw1">String</span>)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">Dim</span> objStreamWriter <span class="kw4">As</span> IO.StreamWriter
&nbsp; &nbsp; &nbsp; &nbsp; Try
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter = <span class="kw2">New</span> IO.StreamWriter(filePath)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.Write(fileContents)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.<span class="kw3">Close</span>()
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Catch Excep <span class="kw4">As</span> Exception
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MsgBox(Excep.Message)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">End</span> Try
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Dts.TaskResult = ScriptResults.Success
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
<span class="kw3">End</span> Class</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

&lt;System.AddIn.AddIn("ScriptMain", Version:="1.0", Publisher:="", Description:="")&gt; _
&lt;System.CLSCompliantAttribute(False)&gt; _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	

	

	Public Sub Main()
        '
        ' Add your code here
        '
        Dim XMLString As String = " "



        XMLString = Dts.Variables("XMLOutput").Value.ToString.Replace("&lt;ROOT&gt;", "").Replace("&lt;/ROOT&gt;", "")
        XMLString = "&lt;?xml version=""1.0"" ?&gt;" + XMLString

        GenerateXmlFile("C:\MusicCollection.xml", XMLString)

    End Sub

    Public Sub GenerateXmlFile(ByVal filePath As String, ByVal fileContents As String)

        Dim objStreamWriter As IO.StreamWriter
        Try

            objStreamWriter = New IO.StreamWriter(filePath)

            objStreamWriter.Write(fileContents)

            objStreamWriter.Close()

        Catch Excep As Exception

            MsgBox(Excep.Message)

        End Try

        Dts.TaskResult = ScriptResults.Success


    End Sub

End Class</pre></div></div>

<p>There are a couple of things you need to know, the XML will be generated inside a &lt;ROOT&gt; tag, I am stripping that out on line 23 of the code, on line 24 I am adding &lt;?xml version=&#8221;1.0&#8243; ?&gt; to the file. Line 26 has the location where the file will be written, right now it is C:MusicCollection.xml but you can modify that.</p>
<p>So now we are all done with this. It is time to run this package. Run the package and you should see that file has been created.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/create-xml-files-out-of-sql-server-with/feed/</wfw:commentRss>
		<slash:comments>62</slash:comments>
		</item>
	</channel>
</rss>
