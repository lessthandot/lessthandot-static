<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>scripting &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/scripting/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>How I use PowerShell to generate table output for blog posts from query results</title>
		<link>/index.php/datamgmt/datadesign/how-i-use-powershell-to/</link>
		<comments>/index.php/datamgmt/datadesign/how-i-use-powershell-to/#comments</comments>
		<pubDate>Thu, 19 Jan 2012 14:04:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[blogging]]></category>
		<category><![CDATA[powershell]]></category>
		<category><![CDATA[scripting]]></category>

		<guid isPermaLink="false">/index.php/2012/01/how-i-use-powershell-to/</guid>
		<description><![CDATA[If you are a blogger, you want to spend time on writing the content not on formatting tables and prettifying syntax so that it looks nice. The syntax is taken care of because we use the GeSHi syntax highlighter. formatted output is another story]]></description>
				<content:encoded><![CDATA[<p>If you are a blogger, you want to spend time on writing the content not on formatting tables and prettifying syntax so that it looks nice. The syntax is taken care of because we use the <a href="http://qbnz.com/highlighter/index.php">GeSHi</a> syntax highlighter. formatted output is another story</p>
<p>If you want to show the output of a query in a html table you have a couple of options.  Let&#8217;s first take a look at a simple query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> name,create_date
<span class="kw1">FROM</span> msdb.<span class="me1">sys</span>.<span class="me1">procedures</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> create_date</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 10 name,create_date
FROM msdb.sys.procedures
ORDER BY create_date</pre></div></div>

<p>You can of course use the PRE tag to format that somewhat, here is what it looks like</p>
<pre>name	                             create_date
sp_sqlagent_is_srvrolemember	     2010-02-06 04:12:12.100
sp_verify_category_identifiers	     2010-02-06 04:12:12.100
sp_verify_proxy_identifiers	     2010-02-06 04:12:12.107
sp_verify_credential_identifiers     2010-02-06 04:12:12.110
sp_verify_subsystems	             2010-02-06 04:12:12.130
sp_verify_subsystem_identifiers	     2010-02-06 04:12:12.137
sp_verify_login_identifiers	     2010-02-06 04:12:12.140
sp_verify_proxy	                     2010-02-06 04:12:12.143
sp_add_proxy	                     2010-02-06 04:12:12.150
sp_delete_proxy	                     2010-02-06 04:12:12.157</pre>
<p>What I want is a table, here is what that looks like</p>
<div class="tables">
<table>
<tr>
<th>name</th>
<th>create_date</th>
</tr>
<tr>
<td>sp_sqlagent_is_srvrolemember</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_category_identifiers</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_proxy_identifiers</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_credential_identifiers</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_subsystems</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_verify_subsystem_identifiers</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_verify_login_identifiers</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_verify_proxy</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_add_proxy</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_delete_proxy</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
</table>
</div>
<p>In order to accomplish that, I can grab the query result and put TD and TR tags around the columns and rows. I can also do something like the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> <span class="st0">'&lt;tr&gt;&lt;td&gt;'</span>,name,<span class="st0">'&lt;/td&gt;&lt;td&gt;'</span>,create_date,<span class="st0">'&lt;/td&gt;&lt;/tdr&gt;'</span>
<span class="kw1">FROM</span> msdb.<span class="me1">sys</span>.<span class="me1">procedures</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> create_date</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 10 '&lt;tr&gt;&lt;td&gt;',name,'&lt;/td&gt;&lt;td&gt;',create_date,'&lt;/td&gt;&lt;/tdr&gt;'
FROM msdb.sys.procedures
ORDER BY create_date</pre></div></div>

<p>But what if it is a stored proc like xp_fixeddrives? You can of course also use Excel, paste the results in there, add columns and put the TD and TR tags in those columns.  but there is a better/easier/faster way. You can use PowerShell to do this for you, you can use the <a href="http://technet.microsoft.com/en-us/library/ee156817.aspx">ConvertTo-Html Cmdlet</a></p>
<p>Here is a simple powershell script that accepts an instance parameter, runs the query and then generates a html file as output</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="powershell"><thead><tr><td colspan="2"  class="head">PowerShell</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="de1"><pre class="de1"><span class="kw3">Param</span><span class="br0">&#40;</span><span class="re0">$InstanceName</span><span class="br0">&#41;</span>
&nbsp;
<span class="re0">$SqlConnection</span> <span class="sy0">=</span> <span class="kw1">New-Object</span> System.Data.SqlClient.SqlConnection
<span class="re0">$SqlConnection</span>.ConnectionString <span class="sy0">=</span> <span class="st0">&quot;Server=$InstanceName;Database=master;Integrated Security=True&quot;</span>
&nbsp;
&nbsp;
<span class="re0">$SqlCmd</span> <span class="sy0">=</span> <span class="kw1">New-Object</span> System.Data.SqlClient.SqlCommand
<span class="re0">$SqlCmd</span>.Connection <span class="sy0">=</span> <span class="re0">$SqlConnection</span>
<span class="re0">$SqlCmd</span>.CommandTimeout <span class="sy0">=</span> <span class="nu0">0</span>
<span class="re0">$SqlCmd</span>.Connection.Open<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp;
<span class="re0">$SqlCmd</span>.CommandText <span class="sy0">=</span> <span class="st0">&quot;SELECT TOP 10 name,create_date</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FROM msdb.sys.procedures</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ORDER BY create_date&quot;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
<span class="re0">$SqlAdapter</span> <span class="sy0">=</span> <span class="kw1">New-Object</span> System.Data.SqlClient.SqlDataAdapter
<span class="re0">$SqlAdapter</span>.SelectCommand <span class="sy0">=</span> <span class="re0">$SqlCmd</span>
<span class="re0">$DataSet</span> <span class="sy0">=</span> <span class="kw1">New-Object</span> System.Data.DataSet
<span class="re0">$SqlAdapter</span>.Fill<span class="br0">&#40;</span><span class="re0">$DataSet</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="re0">$FilePath</span> &nbsp; &nbsp;<span class="sy0">=</span> <span class="st0">&quot;C:PowerShellOutput&quot;</span> <span class="sy0">+</span> <span class="re0">$InstanceName</span><span class="sy0">+</span> <span class="st0">&quot;_formattedOutput.htm&quot;</span>
<span class="re0">$Title</span> <span class="sy0">=</span> <span class="re0">$InstanceName</span><span class="sy0">+</span> <span class="st0">&quot; Formatted Results for Blog&quot;</span>
<span class="re0">$DataSet</span>.Tables<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> &nbsp;<span class="sy0">|</span> <span class="kw1">convertto-html</span> <span class="kw5">-property</span> name<span class="sy0">,</span> create_date <span class="kw5">-title</span> <span class="re0">$Title</span> <span class="sy0">&gt;</span> <span class="re0">$FilePath</span> &nbsp; </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Param($InstanceName)

$SqlConnection = New-Object System.Data.SqlClient.SqlConnection
$SqlConnection.ConnectionString = "Server=$InstanceName;Database=master;Integrated Security=True"


$SqlCmd = New-Object System.Data.SqlClient.SqlCommand
$SqlCmd.Connection = $SqlConnection
$SqlCmd.CommandTimeout = 0
$SqlCmd.Connection.Open()



$SqlCmd.CommandText = "SELECT TOP 10 name,create_date
                        FROM msdb.sys.procedures
                        ORDER BY create_date"
                        
$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
$SqlAdapter.SelectCommand = $SqlCmd
$DataSet = New-Object System.Data.DataSet
$SqlAdapter.Fill($DataSet)


$FilePath    = "C:PowerShellOutput" + $InstanceName+ "_formattedOutput.htm"
$Title = $InstanceName+ " Formatted Results for Blog"
$DataSet.Tables[0]  | convertto-html -property name, create_date -title $Title &gt; $FilePath   </pre></div></div>

<p>Save the file as FormatOutput.ps1, I have it saved in my D:Powershell folder, the file will save the output in my C:PowerShellOutput folder</p>
<p>The script has a parameter that is the name of the SQL Server instance that you want to run the query against, you specify that with -InstanceName after the filename and you then supply the name of your instance, in my case it is localhost</p>
<p>Run the PowerShell script like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="dos"><thead><tr><td colspan="2"  class="head">DOS</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">powershell.exe &quot;D:PowershellFormatOutput.ps1&quot; -InstanceName localhost</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">powershell.exe "D:PowershellFormatOutput.ps1" -InstanceName localhost</pre></div></div>

<p>You can run it from a command prompt or from the PowerShell Integrated Scripting Environment (ISE) </p>
<p>Now go in your folder where the file has been created, if you open it in notepad or if you do view source when you open it in a browser,  you will see something like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="de1"><pre class="de1"><span class="sc0">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &nbsp;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span>
<span class="sc2">&lt;<span class="kw2">html</span> xmlns<span class="sy0">=</span><span class="st0">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">head</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">title</span>&gt;</span>localhost FreeSpace<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">title</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">head</span>&gt;&lt;<span class="kw2">body</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">colgroup</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">col</span><span class="sy0">/</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">col</span><span class="sy0">/</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">colgroup</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">th</span>&gt;</span>name<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">th</span>&gt;&lt;<span class="kw2">th</span>&gt;</span>create_date<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">th</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_sqlagent_is_srvrolemember<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_category_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_proxy_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_credential_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_subsystems<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_subsystem_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_login_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_proxy<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_add_proxy<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_delete_proxy<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">body</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">html</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;title&gt;localhost FreeSpace&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col/&gt;
&lt;col/&gt;
&lt;/colgroup&gt;
&lt;tr&gt;&lt;th&gt;name&lt;/th&gt;&lt;th&gt;create_date&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_sqlagent_is_srvrolemember&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_category_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_proxy_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_credential_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_subsystems&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_subsystem_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_login_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_proxy&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_add_proxy&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_delete_proxy&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;&lt;/html&gt;</pre></div></div>

<p>All I have to do now is create this part of the code in my blogpost</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">class</span><span class="sy0">=</span><span class="st0">&quot;tables&quot;</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;! Paste stuff here &nbsp;!&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;div class="tables"&gt;
&lt;table&gt;
&lt;! Paste stuff here  !&gt;
&lt;/table&gt;
&lt;/div&gt;</pre></div></div>

<p>I then copy and paste the rows from the html table between the table tags on line 3 in the previous code example</p>
<p>Here is what I end up with</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="html4strict"><thead><tr><td colspan="2"  class="head">HTML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="sc2">&lt;<span class="kw2">div</span> <span class="kw3">class</span><span class="sy0">=</span><span class="st0">&quot;tables&quot;</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">th</span>&gt;</span>name<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">th</span>&gt;&lt;<span class="kw2">th</span>&gt;</span>create_date<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">th</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_sqlagent_is_srvrolemember<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_category_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_proxy_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_credential_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:10 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_subsystems<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_subsystem_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_login_identifiers<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_verify_proxy<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_add_proxy<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="kw2">tr</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>sp_delete_proxy<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="kw2">td</span>&gt;</span>9/29/2010 10:13:11 AM<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">td</span>&gt;&lt;<span class="sy0">/</span><span class="kw2">tr</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">table</span>&gt;</span>
<span class="sc2">&lt;<span class="sy0">/</span><span class="kw2">div</span>&gt;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;div class="tables"&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;name&lt;/th&gt;&lt;th&gt;create_date&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_sqlagent_is_srvrolemember&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_category_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_proxy_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_credential_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:10 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_subsystems&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_subsystem_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_login_identifiers&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_verify_proxy&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_add_proxy&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sp_delete_proxy&lt;/td&gt;&lt;td&gt;9/29/2010 10:13:11 AM&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;</pre></div></div>

<p>And that will then look like this</p>
<div class="tables">
<table>
<tr>
<th>name</th>
<th>create_date</th>
</tr>
<tr>
<td>sp_sqlagent_is_srvrolemember</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_category_identifiers</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_proxy_identifiers</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_credential_identifiers</td>
<td>9/29/2010 10:13:10 AM</td>
</tr>
<tr>
<td>sp_verify_subsystems</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_verify_subsystem_identifiers</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_verify_login_identifiers</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_verify_proxy</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_add_proxy</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
<tr>
<td>sp_delete_proxy</td>
<td>9/29/2010 10:13:11 AM</td>
</tr>
</table>
</div>
<p>Pretty cool and simple</p>
<p><strong>Next steps</strong><br />
I am no PowerShell expert and I am sure that the script in this post can be improved, leave me a comment if you see a major mistake</p>
<p>Of course you don&#8217;t want to hard code the query either, you could make the script generic so that you can supply the query as a parameter instead</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-i-use-powershell-to/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Scripting data in SQL Server 2012</title>
		<link>/index.php/datamgmt/datadesign/scripting-data-in-sql-server/</link>
		<comments>/index.php/datamgmt/datadesign/scripting-data-in-sql-server/#comments</comments>
		<pubDate>Mon, 02 Jan 2012 20:35:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[scripting]]></category>

		<guid isPermaLink="false">/index.php/2012/01/scripting-data-in-sql-server/</guid>
		<description><![CDATA[SQL Server 2008 has the Generate Scripts option inside the script wizard. In SQL Server 2012, this has changed and is kind of buried. Here is how to find it now

Right click on the database select Tasks-->Generate Scripts-->Set Scripting Options-->Adv&#8230;]]></description>
				<content:encoded><![CDATA[<p>SQL Server 2008 has the Script Data option inside the script wizard. </p>
<p>You would right click on the database, select Tasks&#8211;>Generate Scripts&#8211;>Pick the DB<br />
and then you would be presented with scripting options, one of the options would be to script data, this is located under Table/View options. See the image below of how it looks like</p>
<div class="image_block"><a href="/wp-content/uploads/users/SQLDenis/ScriptWizard2008.png?mtime=1325606711"><img alt="" src="/wp-content/uploads/users/SQLDenis/ScriptWizard2008.png?mtime=1325606711" width="485" height="430" /></a></div>
<p>In SQL Server 2012, this has changed and is kind of buried. Here is how to find it now.</p>
<p>Right click on the database, select Tasks&#8211;>Generate Scripts&#8211;>Set Scripting Options&#8211;>Advanced. Scroll down to Types of data to script</p>
<p>Now you can select Schema only, Data only, Schema and Data. See image below of what the options should look like</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/scriptData.PNG?mtime=1325543364"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/scriptData.PNG?mtime=1325543364" width="463" height="411" /></a></div>
<p>Don&#8217;t forget to install the <a href="http://www.ssmstoolspack.com/">SSMS Toolspack</a>, that will enable you to script just one table or just results from a query as well</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/scripting-data-in-sql-server/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>Machete &#8211; A scripting runtime for .NET</title>
		<link>/index.php/desktopdev/mstech/machete-a-scripting-runtime-for/</link>
		<comments>/index.php/desktopdev/mstech/machete-a-scripting-runtime-for/#comments</comments>
		<pubDate>Mon, 07 Mar 2011 20:21:00 +0000</pubDate>
		<dc:creator><![CDATA[chaospandion]]></dc:creator>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Microsoft Technologies]]></category>
		<category><![CDATA[.net]]></category>
		<category><![CDATA[c#]]></category>
		<category><![CDATA[ecmascript]]></category>
		<category><![CDATA[f#]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[machete]]></category>
		<category><![CDATA[scripting]]></category>

		<guid isPermaLink="false">/index.php/2011/03/machete-a-scripting-runtime-for/</guid>
		<description><![CDATA[In an attempt to overcome by perfectionism I've decided to open source my long term side project Machete for the world to see. Machete is my own dialect of the ECMAScript 5 standard or as it is more commonly called JavaScript. 


  The compiler is wr&#8230;]]></description>
				<content:encoded><![CDATA[<p>In an attempt to overcome my perfectionism I&#8217;ve decided to open source my long term side project Machete for the world to see. Machete is my own dialect of the ECMAScript 5 standard or as it is more commonly called JavaScript.</p>
<h1>Features</h1>
<p>Cleaner lambda expressions:</p>
<pre style="background-color:#EEEEEE;padding:5px;"><code>var succinct = (x, y) x + y;
var verbose = function (x, y) { return x + y; };</code></pre>
<p>First class iteration support with the foreach loop and generators.</p>
<pre style="background-color:#EEEEEE;padding:5px;"><code>var numbers = generator {
    yield 1;
    yield 2;
    yield 3;
};

foreach (var n in numbers) {
    Output.write(n);
}   

foreach (var e in ["Array", " objects", " are", " iterable", "!"]) {
    Output.write(e);
} 

foreach (var c in "Strings are iterable!") {
    Output.write(c);
}</code></pre>
<h1 style="margin-bottom:10px;margin-top:15px">Implementation</h1>
<ul>
<li>The compiler is written in F# and uses the library <a href="https://bitbucket.org/fparsec/main/overview">FParsec</a>.</li>
<li>The runtime is written in C# and is hosted by .NET.</li>
<li>It currently has over 400 tests with many more on the way.</li>
</ul>
<p>Machete is the product of almost a years worth of research, design, and coding. I have it hosted on GitHub so please stop by and fork the project. I would really love to up my test count dramatically and test cases from the community would be invaluable. Without further ado, the link to my repository.</p>
<p><a href="https://github.com/ChaosPandion/Machete">GitHub Repository For Machete</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/machete-a-scripting-runtime-for/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>Scripting All The Jobs On Your SQL Server Instance Into Separate Files By Using SMO</title>
		<link>/index.php/datamgmt/dbprogramming/scripting-all-the-jobs-on-your-sql-serve/</link>
		<comments>/index.php/datamgmt/dbprogramming/scripting-all-the-jobs-on-your-sql-serve/#comments</comments>
		<pubDate>Tue, 18 Aug 2009 14:02:38 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[jobs]]></category>
		<category><![CDATA[msdb]]></category>
		<category><![CDATA[scripting]]></category>
		<category><![CDATA[smo]]></category>

		<guid isPermaLink="false">/index.php/2009/08/scripting-all-the-jobs-on-your-sql-serve/</guid>
		<description><![CDATA[You inherited a brand new SQL server, one of the first questions you ask is of course where is the source control for this servers I want to see all the procedures and jobs. The answer might be that they use daily backups as source control or just don&#8217;t do any source control at all. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You inherited  a brand new SQL server, one of the first questions you ask is of course where is the source control for this servers I want to see all the procedures and jobs. The answer might be that they use daily backups as source control or just don&#8217;t do any source control at all.<br />
If you want all jobs into one file then you don&#8217;t need to use SMO since there is an easier solution, take a look here: <a href="/index.php/DataMgmt/DBProgramming/scripting-all-jobs-on-sql-server-2005-20">Scripting all jobs on SQL Server 2005/2008 into one file</a></p>
<p>If you want all the jobs into their own separate file then keep on reading here. What you do NOT want to do is script all these jobs one by one. I wrote a little C# console app that will scripts out all the jobs on a server and save them into separate files with a sql extension, this way you can dump them into a source control folder.</p>
<p>Before I show the code I want to point out the code you need to change depending if you use SQL or windows authentication.</p>
<p>If you want to do windows authentication then use these 4 lines</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1">ServerConnection conn <span class="sy0">=</span> <span class="kw3">new</span> ServerConnection<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
conn<span class="sy0">.</span><span class="me1">LoginSecure</span> <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span>
conn<span class="sy0">.</span><span class="me1">ServerInstance</span> <span class="sy0">=</span> <span class="st0">&quot;localhost&quot;</span><span class="sy0">;</span>
Server srv <span class="sy0">=</span> <span class="kw3">new</span> Server<span class="br0">&#40;</span>conn<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ServerConnection conn = new ServerConnection();
conn.LoginSecure = true;
conn.ServerInstance = "localhost";
Server srv = new Server(conn);</pre></div></div>

<p>If you need to use SQL authentication then use the following 6 lines</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1">ServerConnection conn <span class="sy0">=</span> <span class="kw3">new</span> ServerConnection<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
conn<span class="sy0">.</span><span class="me1">LoginSecure</span> <span class="sy0">=</span> <span class="kw1">false</span><span class="sy0">;</span>
conn<span class="sy0">.</span><span class="me1">Login</span> <span class="sy0">=</span> <span class="st0">&quot;YourUserName&quot;</span><span class="sy0">;</span>
conn<span class="sy0">.</span><span class="me1">Password</span> <span class="sy0">=</span> <span class="st0">&quot;YourPassword&quot;</span><span class="sy0">;</span>
conn<span class="sy0">.</span><span class="me1">ServerInstance</span> <span class="sy0">=</span> <span class="st0">&quot;localhost&quot;</span><span class="sy0">;</span>
Server srv <span class="sy0">=</span> <span class="kw3">new</span> Server<span class="br0">&#40;</span>conn<span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ServerConnection conn = new ServerConnection();
conn.LoginSecure = false;
conn.Login = "YourUserName";
conn.Password = "YourPassword";
conn.ServerInstance = "localhost";
Server srv = new Server(conn);</pre></div></div>

<p>Below is the complete program, it is nothing fancy and you probably want to refactor some stuff out into their own methods.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections.Generic</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Linq</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Text</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">Microsoft.SqlServer.Management.Smo</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">Microsoft.SqlServer.Management.Smo.Agent</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">Microsoft.SqlServer.Management.Common</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Collections.Specialized</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.IO</span><span class="sy0">;</span>
&nbsp;
&nbsp;
<span class="kw1">namespace</span> ConsoleApplicationJobs
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw4">class</span> Program
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">static</span> <span class="kw4">void</span> Main<span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; StringCollection sc <span class="sy0">=</span> <span class="kw3">new</span> StringCollection<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ScriptingOptions so <span class="sy0">=</span> <span class="kw3">new</span> ScriptingOptions<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; so<span class="sy0">.</span><span class="me1">IncludeDatabaseContext</span> <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Setup connection, this is windows authentication</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ServerConnection conn <span class="sy0">=</span> <span class="kw3">new</span> ServerConnection<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn<span class="sy0">.</span><span class="me1">LoginSecure</span> <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn<span class="sy0">.</span><span class="me1">ServerInstance</span> <span class="sy0">=</span> <span class="st0">&quot;localhost&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Server srv <span class="sy0">=</span> <span class="kw3">new</span> Server<span class="br0">&#40;</span>conn<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> script <span class="sy0">=</span> <span class="st0">&quot;&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> JobName<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Loop over all the jobs</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span>Job J <span class="kw1">in</span> srv<span class="sy0">.</span><span class="me1">JobServer</span><span class="sy0">.</span><span class="me1">Jobs</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Output name in the console</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>J<span class="sy0">.</span><span class="me1">Name</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JobName <span class="sy0">=</span> J<span class="sy0">.</span><span class="me1">Name</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sc <span class="sy0">=</span> J<span class="sy0">.</span><span class="me1">Script</span><span class="br0">&#40;</span>so<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Get all the text for the job</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw4">string</span> s <span class="kw1">in</span> sc<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; script <span class="sy0">+=</span> s<span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Generate the file</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TextWriter tw <span class="sy0">=</span> <span class="kw3">new</span> StreamWriter<span class="br0">&#40;</span><span class="st0">&quot;C:<span class="es0">\&quot;</span> + JobName + &quot;</span><span class="sy0">.</span><span class="me1">sql</span><span class="st0">&quot;);</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;tw.Write(script);</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;tw.Close();</span>
&nbsp;
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Make the string blank again</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;script = &quot;</span><span class="st0">&quot;;</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp;}</span>
&nbsp;
<span class="st0"> &nbsp; &nbsp;}</span>
<span class="st0">}</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.SqlServer.Management.Smo;
using Microsoft.SqlServer.Management.Smo.Agent;
using Microsoft.SqlServer.Management.Common;
using System.Collections.Specialized;
using System.IO;


namespace ConsoleApplicationJobs
{
    class Program
    {
        
        static void Main(string[] args)
        
        {
            StringCollection sc = new StringCollection();
            ScriptingOptions so = new ScriptingOptions();
            so.IncludeDatabaseContext = true;
            

            //Setup connection, this is windows authentication
            ServerConnection conn = new ServerConnection();
            conn.LoginSecure = true;
            conn.ServerInstance = "localhost";
            Server srv = new Server(conn);
            
            
            
            string script = "";
            
            string JobName;
            //Loop over all the jobs
            foreach (Job J in srv.JobServer.Jobs) {

                //Output name in the console
                Console.WriteLine(J.Name.ToString());
                
                JobName = J.Name.ToString();
                sc = J.Script(so);
                
                //Get all the text for the job
                foreach (string s in sc)
                {
                    script += s;
                }
                
                //Generate the file
                TextWriter tw = new StreamWriter("C:\" + JobName + ".sql");
                tw.Write(script);
                tw.Close();

                //Make the string blank again
                script = "";
            }
        }

    }
}</pre></div></div>

<p>That is all, you could also use PowerShell combined with SMO to accomplish the same</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/scripting-all-the-jobs-on-your-sql-serve/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>How To Script Out The Whole Database In SQL Server 2005 and SQL Server 2008</title>
		<link>/index.php/datamgmt/datadesign/how-to-script-out-the-whole-database-in-2008/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-script-out-the-whole-database-in-2008/#comments</comments>
		<pubDate>Wed, 01 Jul 2009 13:36:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[scripting]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2009/07/how-to-script-out-the-whole-database-in-2008/</guid>
		<description><![CDATA[There seems to be a little bit of confusion on how to script out the database. The correct answer is of course: just run all the scripts you have in source control  :-)

So for those who do not use/have source control I will show you how to do it

L&#8230;]]></description>
				<content:encoded><![CDATA[<p>There seems to be a little bit of confusion on how to script out the database. The correct answer is of course: <strong>just run all the scripts you have in source control</strong>  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>So for those who do not use/have source control I will show you how to do it</p>
<p>Logically you would think that this would be the way: <em>Right click on the database &#8211;> Script Database As &#8211;> CREATE To and then pick your choice</em>. See also image below</p>
<p></p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SCriptOut1.png?mtime=1357605198"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SCriptOut1.png?mtime=1357605198" width="614" height="365" /></a></div>
<p>What that will do is just create the database and not much else, here is what the script might look like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>master<span class="br0">&#93;</span>
GO
&nbsp;
<span class="coMULTI">/****** Object: &nbsp;Database [AdventureWorks] &nbsp; &nbsp;Script Date: 06/30/2009 15:04:19 ******/</span>
<span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>AdventureWorks<span class="br0">&#93;</span> <span class="kw1">ON</span> &nbsp;<span class="kw1">PRIMARY</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'AdventureWorks_Data'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAAdventureWorks_Data.mdf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 174080KB , MAXSIZE <span class="sy0">=</span> UNLIMITED, FILEGROWTH <span class="sy0">=</span> 16384KB <span class="br0">&#41;</span>
&nbsp;<span class="kw2">LOG</span> <span class="kw1">ON</span> 
<span class="br0">&#40;</span> NAME <span class="sy0">=</span> N<span class="st0">'AdventureWorks_Log'</span>, FILENAME <span class="sy0">=</span> N<span class="st0">'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAAdventureWorks_Log.ldf'</span> , <span class="kw1">SIZE</span> <span class="sy0">=</span> 2048KB , MAXSIZE <span class="sy0">=</span> 2048GB , FILEGROWTH <span class="sy0">=</span> 16384KB <span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> <span class="br0">&#91;</span>AdventureWorks<span class="br0">&#93;</span> <span class="kw1">SET</span> COMPATIBILITY_LEVEL <span class="sy0">=</span> <span class="nu0">100</span>
GO
&nbsp;
<span class="kw1">IF</span> <span class="br0">&#40;</span><span class="nu0">1</span> <span class="sy0">=</span> <span class="kw2">FULLTEXTSERVICEPROPERTY</span><span class="br0">&#40;</span><span class="st0">'IsFullTextInstalled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">begin</span>
<span class="kw1">EXEC</span> <span class="br0">&#91;</span>AdventureWorks<span class="br0">&#93;</span>.<span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span><span class="kw3">sp_fulltext_database</span><span class="br0">&#93;</span> @<span class="kw1">action</span> <span class="sy0">=</span> <span class="st0">'enable'</span>
<span class="kw1">end</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [master]
GO

/****** Object:  Database [AdventureWorks]    Script Date: 06/30/2009 15:04:19 ******/
CREATE DATABASE [AdventureWorks] ON  PRIMARY 
( NAME = N'AdventureWorks_Data', FILENAME = N'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAAdventureWorks_Data.mdf' , SIZE = 174080KB , MAXSIZE = UNLIMITED, FILEGROWTH = 16384KB )
 LOG ON 
( NAME = N'AdventureWorks_Log', FILENAME = N'C:Program FilesMicrosoft SQL ServerMSSQL10.MSSQLSERVERMSSQLDATAAdventureWorks_Log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 16384KB )
GO

ALTER DATABASE [AdventureWorks] SET COMPATIBILITY_LEVEL = 100
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [AdventureWorks].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO</pre></div></div>

<p>What you have to do is actually this: <em>Right click on your database&#8211;>Tasks&#8211;>Generate Scripts</em></p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SCriptOut2.png?mtime=1357605211"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SCriptOut2.png?mtime=1357605211" width="456" height="465" /></a></div>
<p>Select the database you want to script and make sure you check  the option at the bottom that says <em>Script all objects in the selected database</em>. See image below</p>
<p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SCriptOut3.png?mtime=1357605224"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SCriptOut3.png?mtime=1357605224" width="493" height="442" /></a></div>
<p>That is all, click next a couple of times and review your options and you are set</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-script-out-the-whole-database-in-2008/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>How To Disable Autogenerated Comments When You Script Out Objects</title>
		<link>/index.php/datamgmt/datadesign/how-to-disable-autogenerated-comments-wh/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-disable-autogenerated-comments-wh/#comments</comments>
		<pubDate>Tue, 28 Apr 2009 15:44:29 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[scripting]]></category>
		<category><![CDATA[source control]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2009/04/how-to-disable-autogenerated-comments-wh/</guid>
		<description><![CDATA[This question came up recently so I decided to blog about it If you have your stored procedures in source control and you want to see if they are the same as the one on the server, all you need to do is script out the procs and do a diff right? Let&#8217;s see what [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This question came up recently so I decided to blog about it<br />
If you have your stored procedures in source control and you want to see if they are the same as the one on the server, all you need to do is script out the procs and do a diff right?</p>
<p>Let&#8217;s see what happens, create this proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">Create</span> <span class="kw1">procedure</span> prTest
<span class="kw1">as</span>
<span class="kw1">set</span> <span class="kw1">nocount</span> <span class="kw1">on</span>
<span class="kw1">if</span> exists <span class="br0">&#40;</span><span class="kw1">select</span> <span class="nu0">1</span> <span class="kw1">from</span> sys.<span class="me1">procedures</span> <span class="kw1">where</span> name <span class="sy0">=</span> <span class="st0">'prTest'</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="st0">'yes'</span>
<span class="kw1">else</span>
<span class="kw1">print</span><span class="st0">'no'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Create procedure prTest
as
set nocount on
if exists (select 1 from sys.procedures where name = 'prTest')
print 'yes'
else
print'no'</pre></div></div>

<p>Now script it out, you do this by finding the proc under your <ins>database</ins>&#8211;><ins>programmability</ins>&#8211;><ins>stored procedures</ins>. Right click on the proc, select <ins>script procedure as</ins> and then choose <ins>create to</ins> and pick <ins>a new window</ins><br />
Your procedure will look like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="coMULTI">/****** Object:StoredProcedure [dbo].[prTest] Script Date: 04/28/2009 10:07:19 ******/</span>
<span class="kw1">SET</span> ANSI_<span class="sy0">NULL</span>S <span class="kw1">ON</span>
GO
<span class="kw1">SET</span> QUOTED_IDENTIFIER <span class="kw1">ON</span>
GO
<span class="kw1">Create</span> <span class="kw1">procedure</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>prTest<span class="br0">&#93;</span>
<span class="kw1">as</span>
<span class="kw1">set</span> <span class="kw1">nocount</span> <span class="kw1">on</span>
<span class="kw1">if</span> exists <span class="br0">&#40;</span><span class="kw1">select</span> <span class="nu0">1</span> <span class="kw1">from</span> sys.<span class="me1">procedures</span> <span class="kw1">where</span> name <span class="sy0">=</span> <span class="st0">'prTest'</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="st0">'yes'</span>
<span class="kw1">else</span>
<span class="kw1">print</span><span class="st0">'no'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">/****** Object:StoredProcedure [dbo].[prTest] Script Date: 04/28/2009 10:07:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[prTest]
as
set nocount on
if exists (select 1 from sys.procedures where name = 'prTest')
print 'yes'
else
print'no'</pre></div></div>

<p>Do you see the problem? The first line has a comment and this will make your proc unique every time you script it out. Fortunately you can disable this by unchecking <ins>include descriptive headers</ins>. The process to do this is different for SQL Server 2000, 2005 and 2008</p>
<p>For SQL Server 2000 it is under the formatting tab in the Generate SQL Script object (see image below)</p>
<p><img src="http://i44.tinypic.com/1424qap.jpg" border="0" alt="Scripting in SQL Server 2000" /></p>
<p>
For SQL Server 2005 it is under Tools&#8211;>Options&#8211;>Scripting(see image below)<br />
<img src="http://i43.tinypic.com/6zvhxz.jpg" border="0" alt="Scripting in SQL Server 2005" /></p>
<p></p>
<p>For SQL Server 2008 it is under Tools&#8211;>Options&#8211;>SQL Server Object Explorer&#8211;>Scripting(see image below)<br />
<img src="http://i39.tinypic.com/e71p5e.jpg" border="0" alt="Scripting in SQL Server 2008" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-disable-autogenerated-comments-wh/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
