<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>object_definition &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/object_definition/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Advent 2011 Day 23: OBJECT_DEFINITION</title>
		<link>/index.php/datamgmt/datadesign/object_definition-sql-advent-2011-day/</link>
		<comments>/index.php/datamgmt/datadesign/object_definition-sql-advent-2011-day/#respond</comments>
		<pubDate>Fri, 23 Dec 2011 18:24:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[metadata]]></category>
		<category><![CDATA[object_definition]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[stored procedures]]></category>

		<guid isPermaLink="false">/index.php/2011/12/object_definition-sql-advent-2011-day/</guid>
		<description><![CDATA[Back in the day if you wanted to see the body of a stored procedure you had to use the syscomments table and then concatenate rows because syscomments  only stored 4000 characters per row. You could also have used sp_helptext. SQL Server introduced the OBJECT_DEFINITION function.]]></description>
				<content:encoded><![CDATA[<p>In my <a href="/index.php/DataMgmt/DataDesign/are-you-ready-for-sql">Are you ready for SQL Server 2012 or are you still partying like it is 1999?</a> post, I wrote about how you should start using SQL Server 2005 and SQL Server 2008 functionality now in order to prepare for SQL Server 2012. I still see tons of code that is written in the pre 2005 style and people still keep using those functions, procs and statements even though SQL Server 2005 and 2008 have much better functionality.</p>
<p>Today we are going to take a look at the OBJECT_DEFINITION function. I am using the AdventureWorks2008R2 for these examples but I think AdventureWorks should also work.</p>
<p>Back in the day if you wanted to see the body of a stored procedure you had to use the syscomments table and then concatenate rows because syscomments  only stored 4000 characters per row. You could also have used sp_helptext. SQL Server introduced the OBJECT_DEFINITION function. The OBJECT_DEFINITION function returns nvarchar(max) and applies to the following object types</p>
<p>C = Check constraint</p>
<p>D = Default (constraint or stand-alone)</p>
<p>P = SQL stored procedure</p>
<p>FN = SQL scalar function</p>
<p>R = Rule</p>
<p>RF = Replication filter procedure</p>
<p>TR = SQL trigger (schema-scoped DML trigger, or DDL trigger at either the database or server scope)</p>
<p>IF = SQL inline table-valued function</p>
<p>TF = SQL table-valued function</p>
<p>V = View</p>
<p>So let&#8217;s take a quick look</p>
<p>Here is how you would use sp_helptext </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_helptext</span> <span class="st0">'uspGetBillOfMaterials'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_helptext 'uspGetBillOfMaterials'</pre></div></div>

<p>That returns the definition of the stored procedure</p>
<p>Here is how to use the OBJECT_DEFINITION function</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> OBJECT_DEF<span class="sy0">IN</span>ITION<span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span><span class="br0">&#40;</span><span class="st0">'uspGetBillOfMaterials'</span><span class="br0">&#41;</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_DEFINITION(OBJECT_ID('uspGetBillOfMaterials'))</pre></div></div>

<p>That also returns the definition of the stored procedure</p>
<p>So you say&#8230;so what, what is the big deal, seems the same to me? I say, hold on, let me show you this&#8230;&#8230;what if I wanted to have the definition of every trigger, stored procedure or function that references the Production.BillOfMaterials table. Here is how simple that is</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> OBJECT_DEF<span class="sy0">IN</span>ITION<span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span>,<span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span> <span class="kw1">AS</span> &nbsp;NameOfObject
<span class="kw1">FROM</span> sys.<span class="me1">all_sql_modules</span> a
<span class="sy0">JOIN</span> sys.<span class="me1">sysobjects</span> &nbsp;s <span class="kw1">ON</span> a.<span class="kw2">object_id</span> <span class="sy0">=</span> s.<span class="me1">id</span>
<span class="sy0">AND</span> xtype <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TR'</span>,<span class="st0">'P'</span>,<span class="st0">'FN'</span>,<span class="st0">'IF'</span>,<span class="st0">'TF'</span><span class="br0">&#41;</span>
<span class="kw1">WHERE</span> OBJECTPROPERTYEX<span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span>,<span class="st0">'IsMSShipped'</span><span class="br0">&#41;</span> <span class="sy0">=</span><span class="nu0">0</span>
<span class="sy0">AND</span> <span class="kw2">REPLACE</span><span class="br0">&#40;</span><span class="kw2">REPLACE</span><span class="br0">&#40;</span>OBJECT_DEF<span class="sy0">IN</span>ITION<span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span>,<span class="st0">']'</span>,<span class="st0">''</span><span class="br0">&#41;</span>,<span class="st0">'['</span>,<span class="st0">''</span><span class="br0">&#41;</span> like <span class="st0">'%Production.BillOfMaterials%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_DEFINITION(OBJECT_ID),OBJECT_NAME(OBJECT_ID) AS  NameOfObject
FROM sys.all_sql_modules a
JOIN sys.sysobjects  s ON a.object_id = s.id
AND xtype IN('TR','P','FN','IF','TF')
WHERE OBJECTPROPERTYEX(OBJECT_ID,'IsMSShipped') =0
AND REPLACE(REPLACE(OBJECT_DEFINITION(OBJECT_ID),']',''),'[','') like '%Production.BillOfMaterials%'</pre></div></div>

<p>Notice that I am using a replace statement to filter out brackets</p>
<p>But there is an easier way, you don&#8217;t even need the function in this case, the sys.all_sql_modules object catalog view has already a definition column</p>
<p>Here is how you do it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> definition,<span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span> <span class="kw1">AS</span> &nbsp;NameOfObject
<span class="kw1">FROM</span> sys.<span class="me1">all_sql_modules</span> a
<span class="sy0">JOIN</span> sysobjects &nbsp;s <span class="kw1">ON</span> a.<span class="kw2">object_id</span> <span class="sy0">=</span> s.<span class="me1">id</span>
<span class="sy0">AND</span> xtype <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TR'</span>,<span class="st0">'P'</span>,<span class="st0">'FN'</span>,<span class="st0">'IF'</span>,<span class="st0">'TF'</span><span class="br0">&#41;</span>
<span class="kw1">WHERE</span> OBJECTPROPERTYEX<span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span>,<span class="st0">'IsMSShipped'</span><span class="br0">&#41;</span> <span class="sy0">=</span><span class="nu0">0</span>
<span class="sy0">AND</span> <span class="kw2">REPLACE</span><span class="br0">&#40;</span><span class="kw2">REPLACE</span><span class="br0">&#40;</span>definition,<span class="st0">']'</span>,<span class="st0">''</span><span class="br0">&#41;</span>,<span class="st0">'['</span>,<span class="st0">''</span><span class="br0">&#41;</span> like <span class="st0">'%Production.BillOfMaterials%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT definition,OBJECT_NAME(OBJECT_ID) AS  NameOfObject
FROM sys.all_sql_modules a
JOIN sysobjects  s ON a.object_id = s.id
AND xtype IN('TR','P','FN','IF','TF')
WHERE OBJECTPROPERTYEX(OBJECT_ID,'IsMSShipped') =0
AND REPLACE(REPLACE(definition,']',''),'[','') like '%Production.BillOfMaterials%'</pre></div></div>

<p>Create this simple proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> prTest 
<span class="kw1">AS</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Production.<span class="me1">BillOfMaterials</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE prTest 
AS
SELECT * FROM Production.BillOfMaterials
GO</pre></div></div>

<p>Run this query again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> definition,<span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span> <span class="kw1">AS</span> &nbsp;NameOfObject
<span class="kw1">FROM</span> sys.<span class="me1">all_sql_modules</span> a
<span class="sy0">JOIN</span> sysobjects &nbsp;s <span class="kw1">ON</span> a.<span class="kw2">object_id</span> <span class="sy0">=</span> s.<span class="me1">id</span>
<span class="sy0">AND</span> xtype <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TR'</span>,<span class="st0">'P'</span>,<span class="st0">'FN'</span>,<span class="st0">'IF'</span>,<span class="st0">'TF'</span><span class="br0">&#41;</span>
<span class="kw1">WHERE</span> OBJECTPROPERTYEX<span class="br0">&#40;</span><span class="kw2">OBJECT_ID</span>,<span class="st0">'IsMSShipped'</span><span class="br0">&#41;</span> <span class="sy0">=</span><span class="nu0">0</span>
<span class="sy0">AND</span> <span class="kw2">REPLACE</span><span class="br0">&#40;</span><span class="kw2">REPLACE</span><span class="br0">&#40;</span>definition,<span class="st0">']'</span>,<span class="st0">''</span><span class="br0">&#41;</span>,<span class="st0">'['</span>,<span class="st0">''</span><span class="br0">&#41;</span> like <span class="st0">'%Production.BillOfMaterials%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT definition,OBJECT_NAME(OBJECT_ID) AS  NameOfObject
FROM sys.all_sql_modules a
JOIN sysobjects  s ON a.object_id = s.id
AND xtype IN('TR','P','FN','IF','TF')
WHERE OBJECTPROPERTYEX(OBJECT_ID,'IsMSShipped') =0
AND REPLACE(REPLACE(definition,']',''),'[','') like '%Production.BillOfMaterials%'</pre></div></div>

<p>You should see one row more now compared to before.</p>
<p>Come back tomorrow for another post in this series</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/object_definition-sql-advent-2011-day/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
