<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>dtexec &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/dtexec/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Stupid me #2 &#8211; Where is my SSIS package executed?</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/stupid-me-2/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/stupid-me-2/#comments</comments>
		<pubDate>Thu, 28 Feb 2013 07:57:00 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[dtexec]]></category>
		<category><![CDATA[executed on different server]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[ssis service]]></category>

		<guid isPermaLink="false">/index.php/2013/02/stupid-me-2/</guid>
		<description><![CDATA[And it is time again for another ‚Äústupid me‚Äù! For those unfamiliar with the concept:
Every time I do something ‚Äústupid‚Äù, which happens from time to time, I‚Äôll do a little blog post on what happened and how I solved it. The reason for this is twofold: I&#8230;]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;">And it is time again for another ‚Äústupid me‚Äù! For those unfamiliar with the concept:</p>
<p style="text-align: justify;"><em>Every time I do something ‚Äústupid‚Äù, which happens from time to time, I‚Äôll do a little blog post on what happened and how I solved it. The reason for this is twofold: I‚Äôll have a solution online I can consult if it happens again and other people can benefit from my mistakes as well. Because remember the ancient Chinese proverb</em>:¬†<em>‚ÄúIt‚Äôs only stupid if you don‚Äôt turn it into a learning experience‚Äù</em><em>. Okay, I might have made that last one up‚Ä¶</em></p>
<p style="text-align: justify;"><strong>The problem</strong></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/StupidMe2/SSISservice.PNG?mtime=1362038450"><img style="float: left;" src="/wp-content/uploads/users/koenverbeeck/StupidMe2/SSISservice.PNG?mtime=1362038450" alt="" width="247" height="281" /></a></p>
<p style="text-align: justify;">Some time ago, I had developed an SSIS package which made a part of a much larger project. The package loaded some reference data needed in the data warehouse to a table. Nothing fancy, just a straight load. I had deployed the package to the development server, tested it there and after everything seemed OK, I deployed the package to the user acceptance environment (UAT).</p>
<p style="text-align: justify;"><span style="text-align: justify;">I needed to run this package so an initial load of the table could be done. I didn‚Äôt need to run the entire ETL, just the package, so I logged into the SSIS service and I execute the package. I checked the table and ‚Ä¶ it was empty. Strange. I checked the log files and I saw the package indeed transferred the correct number of rows. Double strange. As I implement best practices in my SSIS packages, I have indirect package configuration set up. Basically this means I have an environment variable on each machine telling my SSIS packages where the package can find the server and database with the configuration tables. The package uses these configuration tables to configure variables, connection strings et cetera inside the package. So I checked the environment variable and the configurations on the UAT server. Everything was fine. Triple strange. Then I checked the table on the development server. Suddenly, the number of rows had doubled! This means I was updating the development server instead of the UAT server. (Quadruple strange?) So what happened?</span></p>
<p style="text-align: justify;"><strong>The solution</strong></p>
<p style="text-align: justify;">The answer was right under my nose: I had log into the SSIS server of the UAT environment and I executed the package manually by right clicking it and selecting <em>‚ÄúRun Package‚Äù</em>. What I forgot however is that this doesn‚Äôt mean the package is executed on the UAT server, but it is indeed executed on my local machine! <strong>Indeed, an SSIS package is not executed where it is saved,</strong> <strong>but on the machine that calls DTEXEC</strong>. In other words, if I have server A storing SSIS packages, but I have a SQL Server Agent job executing them on Server B, the SSIS packages are executed on Server B, not Server A. Take this into account when you want a dedicated SSIS server: you‚Äôll need to install the SQL Server engine as well just to have SQL Server Agent.</p>
<p style="text-align: justify;">The embarrassing part is I tell people about this a lot in the forums, but when it happened to me I completely forgot about it. I blame this on the lack of caffeine and sleep <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="üôÇ" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p style="text-align: justify;"><strong>Related articles:</strong></p>
<p style="text-align: justify;"><a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/stupid-me-1-locking-myself">Stupid me #1 ‚Äì Locking myself out of SQL Server</a></p>
<p style="text-align: justify;">edit: I forgot to mention it in the article, but it was my colleague <a href="http://blog.hoegaerden.be/">Valentino</a> who had a moment of clarity and pointed out my foolishness <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="üôÇ" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/stupid-me-2/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>When is DTEXEC installed?</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/when-is-dtexec-installed/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/when-is-dtexec-installed/#comments</comments>
		<pubDate>Tue, 12 Feb 2013 11:12:00 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[dtexec]]></category>
		<category><![CDATA[installation]]></category>
		<category><![CDATA[integration services]]></category>
		<category><![CDATA[service]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[ssis]]></category>

		<guid isPermaLink="false">/index.php/2013/02/when-is-dtexec-installed/</guid>
		<description><![CDATA[Which minimal components do you need to install to run SSIS packages on a server? Let's find out!]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;">Or in other words, what do I need to install during SQL Server setup in order to end up with a fully operational SSIS server with a minimal surface area configuration? I came up with this blog post after I participated in the following thread at the MSDN forum: <a href="http://social.msdn.microsoft.com/Forums/en-US/sqlintegrationservices/thread/4f29e3a3-fc8a-465c-8acc-12ecedfcb24c">‚ÄúWhat&#8217;s the minimum configuration to run dtexec on windows 2003 server?‚Äù</a> <a href="http://msdn.microsoft.com/en-us/library/ms162810(v=SQL.105).aspx">DTEXEC</a> is the command line utility used behind the scenes to run SSIS packages. The question asker thought only the client tools needed to be installed, but I was not sure of this. Time to investigate!</p>
<p style="text-align: justify;"><strong>Methodology</strong></p>
<p style="text-align: justify;">I created two easy packages, called SimpleTest and AdvancedTest. SimpleTest reads a flat file, adds a timestamp and writes the results to another flat file.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/simplepackage.PNG?mtime=1360669546"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/simplepackage.PNG?mtime=1360669546" alt="" width="152" height="206" /></a></div>
<p><span style="text-align: justify;">The AdvancedTest package reads the same flat file, but uses a term extraction component to do a term based analysis and it writes the results to a flat file. This package is used to see if there‚Äôs any difference when an Enterprise-only¬† component is used (see </span><a style="text-align: justify;" href="http://msdn.microsoft.com/en-us/library/cc645993(v=sql.105).aspx">Features Supported by the Editions of SQL Server 2008 R2</a><span style="text-align: justify;">).</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/advancedpackage.PNG?mtime=1360669554"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/advancedpackage.PNG?mtime=1360669554" alt="" width="288" height="299" /></a></div>
<p><span style="text-align: justify;">The server is a Windows 2008R2 64-bit server. The edition of SQL Server being installed is SQL Server 2008R2 Developer edition.</span></p>
<p style="text-align: justify;">To test if DTEXEC is installed and if it works correctly, the following commands are used in a command window:</p>
<blockquote><p><em><span style="font-size: small;">dtexec /F ‚Äúc:SimpleTest.dtsx‚Äù &gt; SimpleLog.txt</span></em></p></blockquote>
<p style="text-align: justify;">and</p>
<blockquote><p><em><span style="font-size: small;">dtexec /F ‚Äúc:AdvancedTest.dtsx‚Äù &gt; AdvancedLog.txt</span></em></p></blockquote>
<p style="text-align: justify;">These commands execute a package located on the file system and output the results to a text file.</p>
<p style="text-align: justify;"><strong>Client Tools only</strong></p>
<p style="text-align: justify;">The first install is the client tools, with which I mean BIDS (Business Intelligence Development Studio) and SSMS (SQL Server Management Studio). Later on I learned the question asker meant everything listed under <em>Shared Features</em>, which is a whole lot more than just the client tools. First I installed the Management Tools only.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ManagementTools_Install.png?mtime=1360669453"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_Install.png?mtime=1360669453" alt="" width="490" height="369" /></a></div>
<p><span style="text-align: justify;"> </span></p>
<p style="text-align: justify;">I took a look in the Program Folders, but I only found a 32-bit DTEXEC. Is this enough to run a package?</p>
<p style="text-align: center;"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_Result.png?mtime=1360669459" alt="" width="435" height="189" /></p>
<p style="text-align: justify;">When the DTEXEC statements are executed in a command window, we are greeted with the following error message:</p>
<blockquote><p><em><span style="font-size: 9pt;">Description: To run a SSIS package outside of Business Intelligence Development Studio you must install Standard Edition of Integration Services or higher.</span></em></p></blockquote>
<p style="text-align: justify;">So no luck with this method. When DTEXECUI is launched, everything is grayed out and another straightforward error message tells us we really do have to install Integration Services.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ManagementTools_DTEXECUI.png?mtime=1360669438"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_DTEXECUI.png?mtime=1360669438" alt="" width="411" height="348" /></a></div>
<p><span style="text-align: justify;">However, the Import/Export wizard is also installed. When I import a flat file to another flat file ‚Äì the workflow used by the SimpleTest package ‚Äì the wizard executes successfully:</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ManagementTools_importwizard.png?mtime=1360669446"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ManagementTools_importwizard.png?mtime=1360669446" alt="" width="389" height="393" /></a></div>
<p><span style="text-align: justify;">The only reason DTEXEC was installed is to run the Import/Export wizard. Installing BIDS as well doesn‚Äôt solve the issue, as expected. You can run packages within BIDS, but I guess nobody is excited about staying up all night in order to manually kick off SSIS packages. So basically we have installed a lightweight development environment, but not a server.</span></p>
<p style="text-align: justify;"><strong>SQL Server only</strong></p>
<p style="text-align: justify;">Stubborn as I am, I ignore the logical error messages I got earlier and I install the SQL Server database engine, without any shared feature whatsoever. This time the 64-bit DTEXEC is installed. We‚Äôre making progress. When I start the SimpleTest package, the log shows the following:</p>
<blockquote>
<p style="text-align: justify;"><span style="font-size: 9pt;"><em>The component &#8220;(DER) Add timestamp&#8221; (38) cannot run on installed (64-bit) of Integration Services. It requires Standard Edition (64-bit) or higher.</em></span></p>
</blockquote>
<p style="text-align: justify;">The error doesn‚Äôt make much sense, since I haven‚Äôt installed Integration Services at all and Developer Edition is a higher edition than Standard (in functionality, not in price). Running the AdvancedTest package results in the following:</p>
<blockquote>
<p style="text-align: justify;">
<span style="font-size: 9pt;"><em>Warning: 2013-01-16 14:49:02.56¬† Code: 0xC0048000<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (DFT) Throw data around (SSIS.Pipeline)<br />
&nbsp;&nbsp; Description: The registry key &#8220;SOFTWAREClassesCLSID{119D450D-E2A3-4DB0-A7BC-ACDE2536673E}DTSInfo&#8221; cannot be opened.<br />
End Warning<br />
Warning: 2013-01-16 14:49:02.56¬†¬† Code: 0x8004801E<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (DFT) Throw data around (SSIS.Pipeline)<br />
&nbsp;&nbsp; Description: Cannot find the &#8220;CurrentVersion&#8221; value for component {119D450D-E2A3-4DB0-A7BC-ACDE2536673E}. The CurrentVersion value for the component cannot be located. This error occurs if the component has not set its registry information to contain a CurrentVersion value in the DTSInfo section. This message occurs during component development, or when the component is used in a package, if the component is not registered properly.<br />
End Warning<br />
Error: 2013-01-16 14:49:02.56¬†¬† Code: 0xC0048020<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (DFT) Throw data around (SSIS.Pipeline)<br />
&nbsp;&nbsp; Description: The version of component &#8220;(TEX) Extraction FirstName&#8221; (77) is not compatible with this version of the DataFlow.<br />
End Error<br />
Error: 2013-01-16 14:49:02.56¬†¬† Code: 0xC0048020<br />
&nbsp;&nbsp; Source: (DFT) Throw data around SSIS.Pipeline<br />
&nbsp;&nbsp; Description: The version of component &#8220;(TEX) Extraction FirstName&#8221; (77) is not compatible with this version of the DataFlow.<br />
End Error<br />
‚Ä¶<br />
Error: 2013-01-16 14:49:02.56¬† Code: 0xC0048021<br />
&nbsp;&nbsp; Source: (DFT) Throw data around (TEX) Extraction FirstName [77]<br />
&nbsp;&nbsp; Description: The component is missing, not registered, not upgradeable, or missing required interfaces. The contact information for this component is &#8220;&#8221;.<br />
End Error<br />
Error: 2013-01-16 14:49:02.56¬†¬† Code: 0xC0047017<br />
&nbsp;&nbsp; Source: (DFT) Throw data around SSIS.Pipeline<br />
&nbsp;&nbsp; Description: component &#8220;(TEX) Extraction FirstName&#8221; (77) failed validation and returned error code 0xC0048021.<br />
End Error<br />
</em></span></p>
</blockquote>
<p style="text-align: justify;">First we get a whole bunch of warning related to the registry, followed by errors related to the Term Extraction component, leading to a validation failure at the end. The Enterprise-only component leads to different errors, but the result is the same: we cannot run SSIS packages using DTEXEC.</p>
<p style="text-align: justify;">So why is DTEXEC installed? First of all, to run the 64-bit version of the Import/Export wizard, but also to support maintenance plans, who use SSIS behind the scenes. Since SQL Server 2005 sp2 or SQL Server 2008 CU1/sp1, it is not necessary to install SSIS to create maintenance plans. Read more about this in the blog post <a href="http://sqlblog.com/blogs/tibor_karaszi/archive/2009/08/26/do-maintenance-plans-require-ssis.aspx">Do maintenance plans require SSIS?</a> by Tibor Karaszi (<a href="http://sqlblog.com/blogs/tibor_karaszi/default.aspx">blog</a> | <a href="https://twitter.com/TiborKaraszi">twitter</a>).</p>
<p style="text-align: justify;"><strong>Integration Services only</strong></p>
<p style="text-align: justify;">Now let‚Äôs try to do the sane thing here and install SSIS, without any other option specified.</p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/ssis_only_install.png?mtime=1360669468"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/ssis_only_install.png?mtime=1360669468" alt="" width="439" height="322" /></a></div>
<p><span style="text-align: justify;">DTEXEC is installed, as expected of course, alongside the Integrations Services service. Running DTEXEC through the command line gives us the result we were hoping for:</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/SSISonly_serviceON_dtexec_success.png?mtime=1360669481"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/SSISonly_serviceON_dtexec_success.png?mtime=1360669481" alt="" width="518" height="245" /></a></div>
<p><span style="text-align: justify;">Success at last! DTEXECUI isn‚Äôt installed, indicating this is a client component only. This is OK, because you probably won‚Äôt ever use it on a server.</span></p>
<div class="image_block" style="text-align: center;"><a href="/media/users/koenverbeeck/DTEXEC_install/SSISonly_nodtexecui.png?mtime=1360669475"><img src="/wp-content/uploads/users/koenverbeeck/DTEXEC_install/SSISonly_nodtexecui.png?mtime=1360669475" alt="" width="373" height="211" /></a></div>
<p><span style="text-align: justify;">One final question remains: do we need the SSIS service? The answer is short: no. According to </span><a style="text-align: justify;" href="http://support.microsoft.com/kb/942176">Microsoft</a><span style="text-align: justify;">, the SSIS service only extends the functionality of SSMS, in the sense that it manages the storage of SSIS packages and that it monitors the running packages. So you can safely stop the service. However, you need to disable it as well; otherwise the service is started again once you run a package.</span></p>
<p style="text-align: justify;"><strong>Conclusion</strong></p>
<p style="text-align: justify;">Only when you want to set up a dedicated SSIS Server will you need to install Integration Services on its own, and if you do this you‚Äôll need to store your packages on the file system. You can disable the Integration Services service; it is not needed to execute a package. You also might want to install the client connectivity tools as well and any other component you might need to connect to your sources.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/when-is-dtexec-installed/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
