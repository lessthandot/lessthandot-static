<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>wmi &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/wmi/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Getting remote disk information with Windows PowerShell</title>
		<link>/index.php/sysadmins/os/windows/getting-remote-disk-information-with/</link>
		<comments>/index.php/sysadmins/os/windows/getting-remote-disk-information-with/#comments</comments>
		<pubDate>Thu, 04 Oct 2012 11:44:00 +0000</pubDate>
		<dc:creator><![CDATA[Axel Achten (axel8s)]]></dc:creator>
				<category><![CDATA[Windows]]></category>
		<category><![CDATA[disk usage]]></category>
		<category><![CDATA[powershell]]></category>
		<category><![CDATA[remote admin]]></category>
		<category><![CDATA[wmi]]></category>

		<guid isPermaLink="false">/index.php/2012/10/getting-remote-disk-information-with/</guid>
		<description><![CDATA[A couple of weeks ago someone asked me why they should upgrade to MS SQL Server 2012. I named a bunch of reasons and only remembered afterwards that the possibility to use Windows Server Core could also be a surplus. Just 2 days later this Case for Core&#8230;]]></description>
				<content:encoded><![CDATA[<p>A couple of weeks ago someone asked me why they should upgrade to MS SQL Server 2012. I named a bunch of reasons and only remembered afterwards that the possibility to use Windows Server Core could also be a surplus. Just 2 days later this <a href="http://www.brentozar.com/archive/2012/09/case-for-core/">Case for Core</a> post from Jeremiah Peschka (<a href="http://www.brentozar.com/archive/author/jeremiah-peschka/">blog </a>| <a href="https://twitter.com/peschkaj">twitter</a>) made me realize there was a lot of work for me before I could say that running MS SQL Server 2012 on Windows Server Core. I already read the book <a href="http://www.wrox.com/WileyCDA/WroxTitle/Microsoft-SQL-Server-2008-Administration-with-Windows-PowerShell.productCd-0470477288.html">Microsoft SQL Server 2008 Administration with Windows PowerShell</a> and reviewed it <a href="http://axel8s.wordpress.com/2012/01/20/book-review-microsoft-sql-server-2008-administration-with-windows-powershell/">here</a>.So I decided to try to avoid the usage of Remote Desktop as much as possible and finally start to use PowerShell on a daily basis. One of the first things I needed to do was the restore of a database on another server. So before I could start the restore I needed to check the servers&#8217; disk configuration and available space. So let&#8217;s see how to do this with PowerShell.<br />
To get information about disks we use the win32_logicaldisk wmiobject and with the -computer parameter we specify our server name:</p>
<pre>GET-WmiObject win32_logicaldisk -computer &lt;computername&gt;</pre>
<p>The result looks like this:</p>
<div class="image_block"><a href="/wp-content/uploads/users/axel8s/PSDiskInfo1.PNG?mtime=1349357595"><img alt="" src="/wp-content/uploads/users/axel8s/PSDiskInfo1.PNG?mtime=1349357595" width="232" height="536" /></a></div>
<p>As you can see, the requested information is there and if I only need to do this just once it&#8217;s fine but I&#8217;m going to need this information several times on different servers so letâ€™s make the result more user friendly.<br />
First things first, let&#8217;s just select the data I need, with a pipe I pass the input from the Get-WmiObject to the second part of my command and there I use the Select-Object to specify the object that I want:</p>
<pre>Get-WmiObject win32_logicaldisk -computer &lt;computername&gt; | select-object DeviceID, VolumeName,Size,FreeSpace</pre>
<p>This looks better:</p>
<div class="image_block"><a href="/wp-content/uploads/users/axel8s/PSDiskInfo2.png?mtime=1349357671"><img alt="" src="/wp-content/uploads/users/axel8s/PSDiskInfo2.png?mtime=1349357671" width="964" height="110" /></a></div>
<p>Next step is to see the percentage free space. Using @{Name=&#8221;&#8221;,Expression={}}:</p>
<pre>Get-WmiObject win32_logicaldisk -computer &lt;computername&gt; | select-object DeviceID, VolumeName,Size,FreeSpace,@{Name="PCTFreeSpace";Expression={$_.FreeSpace/$_.Size*100}}</pre>
<p>The code works but now I have to scroll again to see all the disk info:</p>
<div class="image_block"><a href="/wp-content/uploads/users/axel8s/PSDiskInfo3.png?mtime=1349357695"><img alt="" src="/wp-content/uploads/users/axel8s/PSDiskInfo3.png?mtime=1349357695" width="275" height="458" /></a></div>
<p>I add a second pipe and specify that I want my result formatted as a table, I also make sure the size and free space make more sense:</p>
<pre>Get-WmiObject win32_logicaldisk -computer &lt;computername&gt; | 
select-object DeviceID, VolumeName, @{Name="Size";Expression={$_.Size/1GB}},@{Name="FreeSpace";Expression={$_.FreeSpace/1GB}},
@{Name="PCTFreeSpace";Expression={
$_.FreeSpace/$_.Size*100}}|format-table</pre>
<p>Better no?</p>
<div class="image_block"><a href="/wp-content/uploads/users/axel8s/PSDiskInfo4.png?mtime=1349357709"><img alt="" src="/wp-content/uploads/users/axel8s/PSDiskInfo4.png?mtime=1349357709" width="964" height="141" /></a></div>
<p>Now you can save this script to a text file, rename the file extension to .ps1 and edit the file every time you need to query another server. Or you can use a parameter. I named my file GetDiskUsage.ps1 and started the script with param([Datatype] $Variablename):</p>
<pre>param(
	[string] $compname )
Get-WmiObject win32_logicaldisk -computer &lt;computername&gt; | 
select-object DeviceID, VolumeName, @{Name="Size";Expression={$_.Size/1GB}},@{Name="FreeSpace";Expression={$_.FreeSpace/1GB}},
@{Name="PCTFreeSpace";Expression={
$_.FreeSpace/$_.Size*100}}|Sort-Object -descending PCTfreespace|format-table</pre>
<p>Now I can execute the script with the following command:</p>
<pre>.Getdiskusage &lt;Computername&gt;</pre>
<p>Notice that I also added a Sort-Object before the format to be able to see what disk has the most available free space first:</p>
<div class="image_block"><a href="/wp-content/uploads/users/axel8s/PSDiskInfo5.png?mtime=1349357719"><img alt="" src="/wp-content/uploads/users/axel8s/PSDiskInfo5.png?mtime=1349357719" width="964" height="103" /></a></div>
<p>To finish things up a use a Throw in my parameter definition to avoid an ugly error message when I execute the script without specifying a parameter value:</p>
<pre>param(
	[string] $compname = $(Throw "Provide a Server name as first parameter") )
Get-WmiObject win32_logicaldisk -computer &lt;computername&gt; | 
select-object DeviceID, VolumeName, @{Name="Size";Expression={$_.Size/1GB}},@{Name="FreeSpace";Expression={$_.FreeSpace/1GB}},
@{Name="PCTFreeSpace";Expression={
$_.FreeSpace/$_.Size*100}}|Sort-Object -descending PCTfreespace|format-table</pre>
<p>When I now execute the script without specifying a computer name:</p>
<pre>.Getdiskusage</pre>
<p>I see I have to specify a computer name:</p>
<div class="image_block"><a href="/wp-content/uploads/users/axel8s/PSDiskInfo6.png?mtime=1349357734"><img alt="" src="/wp-content/uploads/users/axel8s/PSDiskInfo6.png?mtime=1349357734" width="953" height="72" /></a></div>
<p>I know there are alternatives to write this wmi query. This is just a way that works for me and does the trick now. Feel free to comment and/or correct me if there are better solutions.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/sysadmins/os/windows/getting-remote-disk-information-with/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
