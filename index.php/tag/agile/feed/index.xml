<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>agile &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/agile/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Modeling the Agile Data Warehouse with Data Vault – Review</title>
		<link>/index.php/datamgmt/datadesign/modeling-the-agile-data-warehouse-with-data-vault-review-2/</link>
		<comments>/index.php/datamgmt/datadesign/modeling-the-agile-data-warehouse-with-data-vault-review-2/#respond</comments>
		<pubDate>Thu, 17 Jul 2014 11:18:38 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Book Review]]></category>
		<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[data modeling]]></category>
		<category><![CDATA[data vault]]></category>
		<category><![CDATA[data warehouse]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/?p=2842</guid>
		<description><![CDATA[A few months ago I followed an introductory course about the data vault modeling technique for data warehouses at a local training provider. As part of the training, I received the book Modeling the Agile Data Warehouse with Data Vault written by Hans Hultgren who also is an instructor for the official data vault certification. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">A few months ago I followed an introductory course about <a href="http://en.wikipedia.org/wiki/Data_Vault_Modeling">the data vault modeling</a> technique for data warehouses at a <a href="https://www.infosupport.com/">local training provider</a>. As part of the training, I received the book <a href="http://www.amazon.com/Modeling-Agile-Warehouse-Vault-Volume/dp/061572308X/ref=tmm_pap_title_0?ie=UTF8&amp;qid=1405584375&amp;sr=8-2">Modeling the Agile Data Warehouse with Data Vault</a> written by <a href="http://hanshultgren.wordpress.com/">Hans Hultgren</a> who also is an instructor for the official data vault certification. This blog post is a review of this book; I will not introduce the concepts of data vault modeling.</p>
<p style="text-align: justify"><a href="/wp-content/uploads/2014/07/datavault.jpg"><img class="alignnone wp-image-2841 size-medium" src="/wp-content/uploads/2014/07/datavault-200x300.jpg" alt="datavault" width="200" height="300" srcset="/wp-content/uploads/2014/07/datavault-200x300.jpg 200w, /wp-content/uploads/2014/07/datavault.jpg 231w" sizes="(max-width: 200px) 100vw, 200px" /></a></p>
<p style="text-align: justify">First of all I am glad I received this book for “free” (read: it was most likely included in the price of the training), because the book has a list price of a whopping $95 (Amazon fortunately gives a steep discount on the paperback edition). No, the 434-page book is not made of pure gold, as you might think, but there are quite a lot of pages in color. There are 212 figures in color in the book, so I guess this contributes to the total price, but <a href="http://www.amazon.com/Information-Dashboard-Design-At---Glance/dp/1938377001/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1405585061&amp;sr=1-1&amp;keywords=information+dashboard+design&amp;dpPl=1">Information Dashboard Design</a> is also in color and has a list price of $40, less than half of the data vault book. This is of course only relevant to printed copies, where they have to cut down trees and use quite some ink, but the Kindle edition is even more expensive and is yours for a mere $84.09. Sense, it makes none. To top it off, the book unfortunately has a bit of an amateur look-‘n-feel. The cover art and the pictures used at the start of each section aren’t exactly world class. Anyway, you can’t judge a book by its cover, so we’ll take a look at the content itself.</p>
<p style="text-align: justify">I have to say, this books reads like a breeze. I finished the book in a couple of days, despite being over 400 hundred pages. This is due to the writing style of the author but also because there are 31 (!) chapters in this book. That’s about 14 pages average for one chapter only. But as I said before, there are 212 figures and each chapter has its own title page (so 31 pages less to read) and usually some white space at the end. Because each chapter finished so quickly, you have the feeling you advance really fast through the book. There are a few spelling mistakes and typos here and there, but nothing too worse. The only thing that irritated me some times is the way the author emphasizes words. A hint: he emphasizes a lot. In almost every paragraph, there is something underlined, in italic or in bold or every possible combination of those three. This gives you the feeling you are reading a high-school text book or a supermarket tabloid. And <a href="http://practicaltypography.com/underlining.html">underlining is not done</a> (yes, I am painfully aware that the URL hyperlink is underlined). Any decent editor should have paid attention to that. Another point is that the author frequently repeats itself. I guess this is because he really wants to make a point (how fantastic data vault is compared with 3NF and dimensional modeling in some aspects), but after a few times I already got the point. No need in repeating it in almost every chapter. This is also the case for figures. There’s this one particular figure that I’ve encountered about 11 times throughout the book (sometimes in very slight variations). That is being thorough all right.</p>
<p style="text-align: justify">OK, so there may be some improvements possible for form and layout, but what about the data vault stuff itself? Well, it is explained pretty well. If you have had no exposure to data vault yet, this book will teach you a solid understanding of its principles (I consider myself to this category of readers). I guess if you are a more advanced data vault modeler, there is some nuggets here and there to pick up or you can use the book as a reference.</p>
<p style="text-align: justify">The first section (Data Vault Ensemble, which teaches you why data vault is what it is) and the third section (Working with Data Vault) really dive into data vault and how you should design such a model, but there’s a large section in the middle – Data Warehousing and Business Intelligence – which is a bunch of loosely tied chapters about a variety of subjects. Some of these chapters are in my opinion not needed to explain data vault or agile modeling. They are filler and can easily be omitted from the book. It would have made the book at least 100 pages thinner (and probably a bit cheaper in price). At the back cover Hans says “This is a guide to data vault modeling and at the same time an exploration of the broader concepts surrounding data warehousing &amp; business intelligence today”, so I should not have been that surprised about those chapters, but on the other hand, if the book contains the words “agile data warehouse” and “data vault”, I expect a deep dive into both subjects. The problem is that because of all those <em>broader concepts</em>, these two subjects don’t get the attention they deserve. Especially the agile part. From time to time the author mentions agile and how data vault can quickly adapt to changes and how fast it can be loaded because of parallelism and how agile all of this is, but it never goes any deeper. There is no treatment on how to develop the data vault in an agile project setting. How to deal with scrum or sprints or whatever. None of that. But I can still live with it, I read the book to learn more about data vault and the book succeeded in that goal. It seems the word agile is just thrown into the title to serve as link bait.</p>
<p style="text-align: justify">However, I would have liked some more detailed examples. Most of the time it is a really easy example about customers and customers classes and in some cases there is also a sale, products and employees involved, but nothing more complicated than that. This is in my opinion the biggest downside of the book. I really would have liked to see for example a whole transactional process modeled in 3NF, how it is ported into data vault and how at the end the (dimensional) data marts are generated. The book stays too basic. The last chapter of the book – titled Comparison Example – shows some tables with actual rows and data and how they are transformed. I was looking forward to that chapter while reading through the book because I hoped it would finally give a thorough hands-on example. Alas, it was the same customer table used in any other example. This book is not enough hands-on. I guess you have to follow the (paid) courses to get more hands-on material.</p>
<p style="text-align: justify">The conclusion. I may have sounded a bit harsh in the previous paragraphs, but don’t get me wrong. I liked reading the book and I definitely learned a lot about data vault. I just wished the book got more hands-on examples (and maybe a decent editor). I do recommend this book to everyone who wants a solid introduction to data vault (there are not that many alternatives to be honest).</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/modeling-the-agile-data-warehouse-with-data-vault-review-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Friday SQL Nugget #1 post</title>
		<link>/index.php/datamgmt/datadesign/friday-sql-nugget-1-post/</link>
		<comments>/index.php/datamgmt/datadesign/friday-sql-nugget-1-post/#respond</comments>
		<pubDate>Fri, 13 Jan 2012 17:03:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[starting over]]></category>

		<guid isPermaLink="false">/index.php/2012/01/friday-sql-nugget-1-post/</guid>
		<description><![CDATA[I was tagged by Ted Krueger in his Friday SQL Nugget #1 post. This Friday’s nugget is: Deciding I need to delete it all and start over again.


Since programmers are lazy, they usually prefer to make changes to existing tables/packages/stored procedu&#8230;]]></description>
				<content:encoded><![CDATA[<p>I was tagged by Ted Krueger in his<a href="/index.php/ITProfessionals/ProfessionalDevelopment/friday-sql-nugget-1"> Friday SQL Nugget #1</a> post. This Friday’s nugget is: Deciding I need to delete it all and start over again.</p>
<p>Since programmers are lazy, they usually prefer to make changes to existing tables/packages/stored procedures to make something fit in instead of starting from scratch. This makes sense usually because the change is small and you don&#8217;t have to test that much. But then another changes comes along&#8230;and another&#8230;and another&#8230;and before you know it, you have created a patched up solution with so many band-aids that you better be standing close by with that mop to clean up all the leaks</p>
<p>Another reason that this happen is that you inherit someone else&#8217;s code and you are not quite sure how it all works,  you add something to it, you didn&#8217;t break functionality and you are happy. There is no ROI on reinventing the wheel and the business people will ask you why you are doing just that when all they want is a small change, these people don&#8217;t understand what is involved with programming, not everything is a silo</p>
<p>I am guilty of patching things as well, this is usually done because of time constraints. When you redesign something, you start with a clean slate, there is nothing that holds you back because you have something that needs to be in a certain table or format&#8230;this is what views are for  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>When I redesigned our current web reporting functionality, it was about 1000% faster, no code changes were needed from the applications because I created views that had the same name as the old tables.</p>
<p>I also redesigned another system because it was a maintenance nightmare, whenever you wanted to add a new product, you would have to rebuild 5 tables in the correct order and with correct sorting. This took about 30 minutes each time. I was quickly fed up with that, I recreated this from scratch and now it takes one minute to do the same thing.</p>
<p>If you get a new person to redesign an old application, do <strong>NOT</strong> show this person the old application. Let this person gather requirements and built the application from scratch if you don&#8217;t do this what you will get is the same crappy application you had before and the users won&#8217;t be happy. Remember, users don&#8217;t know what they want, they only know what they don&#8217;t want</p>
<p>Doing agile development where you deliver something every 2 weeks is a great way to get feedback often, you don&#8217;t want to hear after you took 9 months to build the application that this is not what they really wanted. Plan you sprints accordingly, get a business stakeholder on board to help you out with the sprint planning process.</p>
<p>I will leave you with an excerpt from someone&#8217;s post, I think it is fitting</p>
<blockquote><p>Tonight I was hungry. I wasn&#8217;t at home. I couldn&#8217;t go to the kitchen for a snack. I looked around and saw only McDonald&#8217;s across the street.</p>
<p>Then I was struck with the same dilemma that I face whenever I leave the comfort of my own home for any decent spread of time: Do I eat crappy food now and satisfy that hunger? Or do I stay hungry for a little longer and eat a healthy meal back at home?</p>
<p>As I pondered this dilemma I couldn&#8217;t help but notice how much it relates to code quality. </p></blockquote>
<p>You can read the complete post here: http://jstorimer.com/2012/01/09/the-hungry-programmer.html</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/friday-sql-nugget-1-post/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Building a Lightweight Project Management Process</title>
		<link>/index.php/itprofessionals/projectmanagement/building-a-lightweight-project-management-process/</link>
		<comments>/index.php/itprofessionals/projectmanagement/building-a-lightweight-project-management-process/#comments</comments>
		<pubDate>Mon, 18 Jul 2011 10:40:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[Project Management]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[lean]]></category>
		<category><![CDATA[project management]]></category>
		<category><![CDATA[visual board]]></category>

		<guid isPermaLink="false">/index.php/2011/07/building-a-lightweight-project-management-process/</guid>
		<description><![CDATA[Working as a Software Developer* in a range of small companies and organizations, I've had the opportunity to work on quite a number of different projects. That experience has given me a healthy appreciation for how not to execute projects, as well as a healthy respect for process. Recently I pulled together a basic process to help manage the development tasks I am working on, track completion against my estimates, and a number of other things. It takes roughly an hour every two weeks and 5-10 minutes per day to maintain.]]></description>
				<content:encoded><![CDATA[<p>Working as a Software Developer* in a range of small companies and organizations, I&#8217;ve had the opportunity to work on quite a number of different projects. That experience has given me a healthy appreciation for how not to execute projects, as well as a healthy respect for process. Recently I pulled together a basic process to help manage the development tasks I am working on, track completion against my estimates, and a number of other things. It takes roughly an hour every two weeks and 5-10 minutes per day to maintain.</p>
<p>This isn&#8217;t a new process or even a sales pitch on how you too can implement my process and save thousands. It&#8217;s simply a walk through of the challenges that led to the process, the tools and practices I incorporated, and the steps I followed to build a lightweight process.</p>
<p><em>*Software Developer: It seems every developer position I&#8217;ve held has had a different definition of &#8216;Developer&#8217; (<a href="/index.php/ITProfessionals/ProfessionalDevelopment/the-programmer-vs-the-developer" title="Read more on my thoughts of the Developer vs Programmer title">and &#8216;Programmer&#8217;</a>, and&#8230;you get the point). The positive side of this is lots of great experiences, the negative side is all the fun things I got to use/do and never again.</em></p>
<h2>Building a Process</h2>
<p>Just as we do (or should do) when building software, we need to have a purpose. Often the largest, clumsiest processes occur through a lack of focus or a desire to focus in every direction (ultimate flexibility, no limits, etc). That lack of focus leads everyone to add their own bits to the mix. One person adds what worked in his last project, someone else adds something she always wanted to try, more pieces are added to cover ever eventuality or risk that can be thought of&#8230;.and Colossus is born, moving so slowly that all involved often think they are moving backwards and could be beaten by a 2 man team in a garage.</p>
<p>The purpose of process is to provide consistency and ground rules. A good process is an enabler.</p>
<p>I know, that sounds odd (and many of you probably think you are totally against having any process), so lets try a comparison.</p>
<p>Say we&#8217;re working on a software development project and we are required to deliver code documentation as part of the project. Once upon a time this would have required a great deal of time to put together, keep up to date as changes occurred, etc. It probably would have been a full time job on any team over 3-4 developers. Then someone came along and said &#8220;Look, if we comment every function like so, then I can write a script to extract those comments and automatically build the documentation.&#8221;</p>
<p>In the software world we call this a &#8220;convention&#8221;. Incorporating conventions into our practice allows us to automate or get some extra value out of something simply because it&#8217;s been done in a consistent manner (possibly with an extra step or two sprinkled on top). </p>
<p>Process is not inherently bad. Like writing software, there is never only one answer and even using the latest and greatest of tools you can build a ghastly, unmaintainable mess. </p>
<h2>So Back to My Process</h2>
<p>So recently I started the new job and I was given responsibility for adding some new capabilities to a system. I had the freedom to define my own processes, determine how I was going to get the work done, and so on. The critical deliverable was only delivery of working software, added in a manner not inconsistent with the existing platform.</p>
<p><b>My focus for the process is:</b></p>
<ul>
<li>Know as far ahead of time as possible if I was diverging from initial estimates </li>
<li>Collect just enough data to re-estimate completion if order of tasks changed, interruptions occurred, etc</li>
<li>Have a sense of accomplishment, see the work getting done</li>
<li>Have a way to track how much of my time is spent on interruptive tasks, scope additions, etc</li>
</ul>
<p>So this is my bare minimum set of requirements from my process, my focus. </p>
<p><b>Then we have some challenges:</b></p>
<ul>
<li>High potential for variability/change
<ul>
<li>I am new to the company and have a poorer feel for what they need than more experienced employees</li>
<li>The company hasn&#8217;t had this type of system before, so the requirements will be more changeable and will require greater refinement along the way</li>
<li>I don&#8217;t have direct contact with stakeholders or end users</li>
</ul>
</li>
<li>Limited experience with tools (existing, in-house architecture/codebase)
<ul>
<li>I am not comfortable (or was not) with the system I was adding onto</li>
<li>Standards are limited to finding existing examples to duplicate</li>
<li>Expected to convert some existing components for wider use w/ my portion without disrupting their existing functions</li>
</ul>
</li>
<li>No automated testing &#8211; the framework is challenging for unit testing</li>
<li>Live environment &#8211; though my pieces of the system would not be live for weeks or months, the system is deployed weekly and existing portions would be used and revised</li>
<li>I am a team of one &#8211; limits flexibility, easier to get &#8220;stuck in the mud&#8221; without someone to pull me out, limited to my own experiences </li>
</ul>
<p>So having a focus and an understanding of my initial challenges, I built an initial process.</p>
<h2>The End Process</h2>
<p>From the focus and challenges above, I pulled together a minimal process. Let&#8217;s look at that process then circle back around to the &#8220;why was that piece chosen&#8221;. This process borrows heavily from Lean and Scrum processes, incorporating the idea of iterations (or sprints), a visual board, and a burndown chart. </p>
<p>I started by identifying the major features we were looking for in the system. Once I had these (through a series of conversations and prototyping), I had my manager prioritize them and help group them into potential releases. Initially this proved to be 3 major releases and a few extra features that would be prioritized after the last release.</p>
<div style="color: #666666; text-align: center; font-size: .8em;">
   <a href="http://tiernok.com/LTDBlog/process/FeaturesLg.png" title="View the fullsize version"><img src="http://tiernok.com/LTDBlog/process/FeaturesSm.png" alt="Feature list spreadsheet" /></a><br />
   Spreadsheet of prioritized features and releases
</div>
<p>I put all of these features into a spreadsheet, along with their priority and a rough estimate in ideal days. In a separate page of the spreadsheet I broke down each of the features into individual tasks and estimated those tasks in hours. There was a little variance between my individual task estimates and the feature estimates, but they averaged out. </p>
<div style="color: #666666; text-align: center; font-size: .8em;">
   <a href="http://tiernok.com/LTDBlog/process/TasksLg.png" title="View the fullsize version"><img src="http://tiernok.com/LTDBlog/process/TasksSm.png" alt="Task list spreadsheet" /></a><br />
   Spreadsheet of features broken down into tasks
</div>
<p>In a third tab, I created a list of the available workdays for the project, an iteration code, a number of hours available for each day (initially 6), a calculation for number of hours remaining in the iteration, and an empty column for the number of task hours remaining. I then created a pivot chart for this table, grouping by the iteration so I could easily display a burndown chart of the expected hours being done against the actual tasks being completed.</p>
<div style="color: #666666; text-align: center; font-size: .8em;">
   <a href="http://tiernok.com/LTDBlog/process/TrackingLg.png" title="View the fullsize version"><img src="http://tiernok.com/LTDBlog/process/TrackingSm.png" alt="Tracking spreadsheet" /></a><br />
   Spreadsheet for tracking actual vs estimated work against tasks
</div>
<div style="color: #666666; text-align: center; font-size: .8em;">
   <a href="http://tiernok.com/LTDBlog/process/BurndownLg.png" title="View the fullsize version"><img src="http://tiernok.com/LTDBlog/process/BurndownSm.png" alt="Tracking spreadsheet" /></a><br />
   Burndown chart from tracking data
</div>
<p>The last spreadsheet step was to load up my first iteration without overloading myself. Adding an iteration code to my task list tab and some calculated fields (visible in the task spreadsheet screenshot above) let me total up how many estimated hours I was loading into the iteration.</p>
<div style="color: #666666; text-align: center; font-size: .8em;">
   <img src="http://tiernok.com/LTDBlog/process/CapacityAssigned.png" alt="Tracking spreadsheet" /><br />
   Simple graphs of available capacity vs assigned tasks
</div>
<p>After setting up the spreadsheet, I setup a visual board in the corner of my whiteboard. I created columns for tasks that were ready to be worked (tasks assigned to the current iteration), tasks in progress, tasks completed and waiting for the weekly deployment, and tasks that were completed and in the live environment. Within a couple days I also added an express lane at the bottom for bugs and high priority feature revisions.</p>
<div style="text-align: center; font-size: .9em; color: #666666;">
   <img src="http://tiernok.com/LTDBlog/process/board.png" alt="Visual Board Pictures" /><br />
   Pictures of visual board over time
</div>
<p>The sticky notes were kept fairly simple. The color indicates the type and each has the name of the task and the iteration code written on it. Though I did not implement WIP limits (Kanban) on my columns, I have unofficial numbers in my head to help me limit task switching.</p>
<p>As the iterations progress, I calculate how many estimated hours of work I get done per day and update that value in the third tab of my spreadsheet. This ratio of estimation hours to real hours then helps me project forward and see if I am on track for the final release, need to refine some tasks to reduce their estimated time, or potentially have some time to pull in tasks at the end. </p>
<h2>How I Got Here</h2>
<p>So I started with a focus and some challenges and ended up with all of that (which is actually a fairly lightweight process, it just took a lot of space to write it up). Here&#8217;s the connections:</p>
<h3>Why Iterative?</h3>
<p>I chose to use an iterative process to help manage the risks for variability and my own limited experience. An iterative process would help me course correct far sooner and take advantage of my growing experience in the company and with the software instead of trying to base the entire project off of my knowledge on day one. </p>
<p>So the iterative process was chosen to help reduce the impact of risks involved with my knowledge of the software and my understanding of the requirements, as well as refinements that were expected to occur along the way.</p>
<h3>Why a spreadsheet? Why estimated hours?</h3>
<p>I chose to use a spreadsheet and this method of estimated vs real hours to address measurement of actual execution against estimated and provide an ability and data to re-estimate tasks as time progressed.</p>
<h3>Can I have your spreadsheet?</h3>
<p>Below is a link for the sample workbook I put together for the images in this post. Being an example, it hasn&#8217;t actually gone through the process of being used, revised, marked up, etc like the actual one I use. </p>
<p><a href="http://tiernok.com/LTDBlog/process/SampleWorkbook.xlsx" title="Download sample workbook">Download the workbook</a></p>
<p>It has no instructions, no notes, and is in XLSX format. </p>
<h3>Why such small tasks?</h3>
<p>Why did I break down the features at all? They&#8217;re only a few days worth of work, couldn&#8217;t I have just used those?</p>
<p>Well yes and no. By going with smaller tasks I can usually move one or two tasks from doing to done in any given day, which feeds back into my feelings of productivity and such. Smaller tasks also help me find out I&#8217;ve gone off the rails sooner or that I missed something critical. Additionally, smaller tasks are easier to move around, if I intend to do task 1A-1C but a bug comes in, I can wrap up my work on 1A, do the bug, then come back to 1B with a much lower task switching cost then if I was switching inside feature 1. </p>
<p>Small tasks also feed back into estimates, force us to evaluate the features more deeply, bring future issues to the surface early enough that we can start asking questions before we get to do-or-die time, etc.</p>
<h3>Seriously, Sticky Notes?</h3>
<p>I chose the visual board for several reasons. The first is that seeing the work flow across the board helps give me a sense of accomplishment. Good morale and a sense of accomplishment help keep me from getting bogged down or feeling like I&#8217;m not making progress. The visual board also gave me a way to see the level of revisions that were occurring and the impact they were having as the iteration progressed.</p>
<p>The final advantage was that the board reduced the time it took me to switch tasks, at any time I could glance at the board and see what I was working on last, what I would likely be working on next, etc. When I go into work after a 3 day weekend, it will take me longer to boot up my computer than to determine what I was working on. I also have a visual of how many tasks I am trying to work on simultaneously, and that causes me to try and limit that number, reducing task switching. In Lean terms, I have reduced my changeover time, some of the waste involved in those changeovers, and the number of changeovers that occur (splitting releases into features into smaller tasks also reduced my batch size).</p>
<h3>What&#8217;s Missing?</h3>
<p>The only challenges that my process did not address were a method to limit the risk of working on live software without a safety net (other than manual testing). I did address this, but that&#8217;s probably for another post.</p>
<h2>Wrapping Up</h2>
<p>The most critical part of creating a process is to know why your creating it. Without a focus, without knowing the goals and risks, you run the risk of creating something that costs more than it solves. Like programming or any other skill, selecting and building a good process is easier the more you do it. Pay attention not just to what does work, but also to what doesn&#8217;t. My process is not perfect and it will have failures, I intend to learn from them. But I&#8217;m also learning from the processes I see others following. </p>
<p>If you are interested, here are some random links on related topics (plenty more in my <a href="http://www.delicious.com/tarwn" title="Eli's bookmarks on Delicious">Delicious bookmarks</a>).</p>
<ul>
<li><a href="http://kosmothink.com/2010/12/31/the-uncertainty-principal-or-how-to-choose-the-right-methodology/" title="The Uncertainty Principle OR How to Choose the Right Methodology - Kosmothink">The Uncertainty Principle OR How to Choose the Right Methodology &#8211; Kosmothink</a></li>
<li><a href="http://www.projectsmart.co.uk/waterfall-v-agile-how-should-i-approach-my-software-development-project.html" title="Waterfall v Agile: How Should I Approach My Software Development Project?">Waterfall v Agile: How Should I Approach My Software Development Project?</a></li>
<li><a href="http://lisamdrake.wordpress.com/2011/05/28/time-boxing-strategies-to-help-you-get-things-done-in-your-project/" title="Time Boxing Strategies to Help You Get Things Done in Your Project">Time Boxing Strategies to Help You Get Things Done in Your Project</a></li>
<li><a href="http://www.jessefewell.com/2009/12/20/methodology-doesnt-matter/" title="Methodology Doesn’t Matter">Methodology Doesn’t Matter</a></li>
<li><a href="http://www.xqa.com.ar/visualmanagement/2009/02/visual-management-for-agile-teams/" title="Visual Management for Agile Teams">Visual Management for Agile Teams</a></li>
</ul>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/projectmanagement/building-a-lightweight-project-management-process/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Want To Learn Scrum? Visit About Scrum.</title>
		<link>/index.php/itprofessionals/ethicsit/want-to-learn-scrum-visit-about-scrum/</link>
		<comments>/index.php/itprofessionals/ethicsit/want-to-learn-scrum-visit-about-scrum/#respond</comments>
		<pubDate>Wed, 24 Dec 2008 11:40:18 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Ethics and IT]]></category>
		<category><![CDATA[agile]]></category>
		<category><![CDATA[best practices]]></category>
		<category><![CDATA[scrum]]></category>

		<guid isPermaLink="false">/index.php/2008/12/want-to-learn-scrum-visit-about-scrum/</guid>
		<description><![CDATA[I noticed that a new site has been launched named About Scrum This site is intended to be a resource for those who wish to learn about SCRUM and software project management in general. So far it is looking great, they have a couple of videos up and also a bunch of articles. Here is [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I noticed that a new site has been launched named <a href="http://aboutscrum.com/">About Scrum</a></p>
<p>This site is intended to be a resource for those who wish to learn about SCRUM and software project management in general. So far it is looking great, they have a couple of videos up and also a bunch of articles.</p>
<p>Here is a quote for you if you never looked at scrum before</p>
<blockquote><p>A chicken and a pig are together when the chicken says, &#8220;Let&#8217;s start a restaurant!&#8221;.<br />
The pig thinks it over and says, &#8220;What would we call this restaurant?&#8221;.<br />
The chicken says, &#8220;Ham n&#8217; Eggs!&#8221;.<br />
The pig says, &#8220;No thanks, I&#8217;d be committed, but you&#8217;d only be involved!&#8221;.</p></blockquote>
<p>So there are pigs and chickens, mmmm what else is there? There is also a Scrum Master, I like to call these Scrum Masters Scrumbags instead  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
You will learn about the role of pigs and chickens while learning Scrum</p>
<p>Here is the URL again to About Scrum: http://aboutscrum.com/</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/ethicsit/want-to-learn-scrum-visit-about-scrum/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
