<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>xml &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/xml/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Intellisense for custom XML in Visual Studio</title>
		<link>/index.php/desktopdev/mstech/vs2012/intellisense-for-custom-xml-in/</link>
		<comments>/index.php/desktopdev/mstech/vs2012/intellisense-for-custom-xml-in/#comments</comments>
		<pubDate>Mon, 06 May 2013 13:44:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Vistual Studio 2012]]></category>
		<category><![CDATA[intellisense]]></category>
		<category><![CDATA[schema]]></category>
		<category><![CDATA[visual studio]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2013/05/intellisense-for-custom-xml-in/</guid>
		<description><![CDATA[This is one of those things that I only need once every several months and always forget how to do. Working with custom XML in Visual Studio is a whole lot easier with intellisense. Schema errors are highlighted, enumerated values are displayed, and the amount of typing goes from full tag names to just a few characters followed by tab to complete.]]></description>
				<content:encoded><![CDATA[<p>This is one of those things that I only need once every several months and always forget how to do. Working with custom XML in Visual Studio is a whole lot easier with intellisense. Schema errors are highlighted, enumerated values are displayed, and the amount of typing goes from full tag names to just a few characters followed by tab to complete.</p>
<p>There are a few ways to do this, but if you have a schema (XSD) for the file, then here are the steps to make the magic happen.</p>
<h2>Sample Files</h2>
<p>So let&#8217;s assume for the moment that you have the following sample files:</p>
<p><b>AwesomeFile.xml</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span> <span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;AwesomeList<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeItem</span> <span class="re0">AwesomenessFactor</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeType<span class="re2">&gt;</span></span></span>Is Awesome<span class="sc3"><span class="re1">&lt;/AwesomeType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/AwesomeItem<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/AwesomeList<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;AwesomeList&gt;
	&lt;AwesomeItem AwesomenessFactor="11"&gt;
		&lt;AwesomeType&gt;Is Awesome&lt;/AwesomeType&gt;
	&lt;/AwesomeItem&gt;
&lt;/AwesomeList&gt;</pre></div></div>

<p><b>Awesome.xsd</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xs:schema</span> <span class="re0">id</span>=<span class="st0">&quot;MyAwesomeSchema&quot;</span></span>
<span class="sc3"> &nbsp; &nbsp;<span class="re0">xmlns:xs</span>=<span class="st0">&quot;http://www.w3.org/2001/XMLSchema&quot;</span><span class="re2">&gt;</span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:simpleType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeLevel&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;xs:integer&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;1&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;5&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;10&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:restriction<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeElement&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeType&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xs:string&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomenessFactor&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeLevel&quot;</span> <span class="re0">use</span>=<span class="st0">&quot;required&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:attribute<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeList&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeItem&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeElement&quot;</span> <span class="re0">minOccurs</span>=<span class="st0">&quot;0&quot;</span> <span class="re0">maxOccurs</span>=<span class="st0">&quot;unbounded&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; 
<span class="sc3"><span class="re1">&lt;/xs:schema<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xs:schema id="MyAwesomeSchema"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;

	&lt;xs:simpleType name="AwesomeLevel"&gt;
		&lt;xs:restriction base="xs:integer"&gt;
			&lt;xs:enumeration value="1"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="5"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="10"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="11"&gt;&lt;/xs:enumeration&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;

	&lt;xs:complexType name="AwesomeElement"&gt;
		&lt;xs:sequence&gt;
			&lt;xs:element name="AwesomeType" type="xs:string"&gt;&lt;/xs:element&gt;
		&lt;/xs:sequence&gt;
		&lt;xs:attribute name="AwesomenessFactor" type="AwesomeLevel" use="required"&gt;&lt;/xs:attribute&gt;
	&lt;/xs:complexType&gt;

	&lt;xs:element name="AwesomeList"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element name="AwesomeItem" type="AwesomeElement" minOccurs="0" maxOccurs="unbounded"&gt;
				&lt;/xs:element&gt;
			&lt;/xs:sequence&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
	
&lt;/xs:schema&gt;</pre></div></div>

<p>Visual Studio gives us handy intellisense suggestions and warnings when we&#8217;re writing the schema because we have specified a namespace it knows, but how do we get that usefulness when we&#8217;re adding more content to our awesome XML file?</p>
<h2>More Cowbell</h2>
<p>Turns out, adding this functionality is pretty easy. Visual Studio is smart enough to use know schemas, so all we have to do is provide the information that makes our schema known and relevant for our XML file. </p>
<p>For this example I am assuming that the two files are in the same folder. I&#8217;ve also made the file complex enough that the additions we make should work for far more complex setups also.</p>
<p>Here&#8217;s the steps:</p>
<ol>
<li>Define a target namespace on the schema</li>
<li>Define the empty namespace of the schema as this namespace</li>
<li>set attributeFormDefault to unqualified so attributes in our XML file won&#8217;t require namespace declarations</li>
<li>Add the namespace declaration to the XML file</li>
</ol>
<p>Updating our files (and adding comments to reflect the list above), we have:</p>
<p><b>AwesomeFile.xml</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span> <span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;AwesomeList</span> <span class="re0">xmlns</span>=<span class="st0">&quot;my://awesomeness&quot;</span><span class="re2">&gt;</span></span> <span class="sc-1">&lt;!-- (4) --&gt;</span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeItem</span> <span class="re0">AwesomenessFactor</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;AwesomeType<span class="re2">&gt;</span></span></span>Is Awesome<span class="sc3"><span class="re1">&lt;/AwesomeType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/AwesomeItem<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/AwesomeList<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;AwesomeList xmlns="my://awesomeness"&gt; &lt;!-- (4) --&gt;
	&lt;AwesomeItem AwesomenessFactor="11"&gt;
		&lt;AwesomeType&gt;Is Awesome&lt;/AwesomeType&gt;
	&lt;/AwesomeItem&gt;
&lt;/AwesomeList&gt;</pre></div></div>

<p><b>Awesome.xsd</b></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;utf-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xs:schema</span> <span class="re0">id</span>=<span class="st0">&quot;MyAwesomeSchema&quot;</span></span>
<span class="sc3"> &nbsp; &nbsp;<span class="re0">xmlns:xs</span>=<span class="st0">&quot;http://www.w3.org/2001/XMLSchema&quot;</span></span>
<span class="sc3">&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">targetNamespace</span>=<span class="st0">&quot;my://awesomeness&quot;</span> &lt;!-- <span class="br0">&#40;</span>1<span class="br0">&#41;</span> --<span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; xmlns=&quot;my://awesomeness&quot; <span class="sc-1">&lt;!-- (2) --&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; attributeFormDefault=&quot;unqualified&quot; <span class="sc-1">&lt;!-- (3) --&gt;</span>
&nbsp; &nbsp; &nbsp; &nbsp; elementFormDefault=&quot;qualified&quot;&gt;
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:simpleType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeLevel&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;xs:integer&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;1&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;5&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;10&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:enumeration</span> <span class="re0">value</span>=<span class="st0">&quot;11&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:enumeration<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:restriction<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeElement&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeType&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xs:string&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomenessFactor&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeLevel&quot;</span> <span class="re0">use</span>=<span class="st0">&quot;required&quot;</span><span class="re2">&gt;</span><span class="re1">&lt;/xs:attribute<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp;
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeList&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;xs:element</span> <span class="re0">name</span>=<span class="st0">&quot;AwesomeItem&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;AwesomeElement&quot;</span> <span class="re0">minOccurs</span>=<span class="st0">&quot;0&quot;</span> <span class="re0">maxOccurs</span>=<span class="st0">&quot;unbounded&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:sequence<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:complexType<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/xs:element<span class="re2">&gt;</span></span></span>
&nbsp;
<span class="sc3"><span class="re1">&lt;/xs:schema<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xs:schema id="MyAwesomeSchema"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
		targetNamespace="my://awesomeness" &lt;!-- (1) --&gt;
		xmlns="my://awesomeness" &lt;!-- (2) --&gt;
		attributeFormDefault="unqualified" &lt;!-- (3) --&gt;
		elementFormDefault="qualified"&gt;

	&lt;xs:simpleType name="AwesomeLevel"&gt;
		&lt;xs:restriction base="xs:integer"&gt;
			&lt;xs:enumeration value="1"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="5"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="10"&gt;&lt;/xs:enumeration&gt;
			&lt;xs:enumeration value="11"&gt;&lt;/xs:enumeration&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;

	&lt;xs:complexType name="AwesomeElement"&gt;
		&lt;xs:sequence&gt;
			&lt;xs:element name="AwesomeType" type="xs:string"&gt;&lt;/xs:element&gt;
		&lt;/xs:sequence&gt;
		&lt;xs:attribute name="AwesomenessFactor" type="AwesomeLevel" use="required"&gt;&lt;/xs:attribute&gt;
	&lt;/xs:complexType&gt;

	&lt;xs:element name="AwesomeList"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element name="AwesomeItem" type="AwesomeElement" minOccurs="0" maxOccurs="unbounded"&gt;
				&lt;/xs:element&gt;
			&lt;/xs:sequence&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;

&lt;/xs:schema&gt;</pre></div></div>

<p>And there we have it.</p>
<h2>Results</h2>
<p>Now when we start typing in the XML file we will get intellisense suggestions/completion:</p>
<div style="text-align:center; margin: .5em 0;">
   <img src="http://tiernok.com/LTDBlog/XmlSchemaIntellisense/Intellisense.png" alt="Intellisense suggestions" />
</div>
<p>We also get warnings when we forget a required attribute:</p>
<div style="text-align:center; margin: .5em 0;">
   <img src="http://tiernok.com/LTDBlog/XmlSchemaIntellisense/SchemaWarning.png" alt="Intellisense suggestions" />
</div>
<p>And when we use the wrong type:</p>
<div style="text-align:center; margin: .5em 0;">
   <img src="http://tiernok.com/LTDBlog/XmlSchemaIntellisense/WrongTypeWarning.png" alt="Intellisense suggestions" />
</div>
<p><i>Hopefully the custom color scheme isn&#8217;t confusing, was feeling too lazy to switch it and switch it back</i></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/vs2012/intellisense-for-custom-xml-in/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Dealing with the Column name &#8216;TEXT()&#8217; contains an invalid XML identifier as required by FOR XML; &#8216;(&#8216;(0x0028) is the first character at fault error</title>
		<link>/index.php/webdev/business-intelligence/dealing-with-the-column-name/</link>
		<comments>/index.php/webdev/business-intelligence/dealing-with-the-column-name/#respond</comments>
		<pubDate>Wed, 05 Dec 2012 11:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[concatenate]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[rows to column]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[t-sql]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2012/12/dealing-with-the-column-name/</guid>
		<description><![CDATA[I had to deploy a user defined function I was given yesterday, when I tried to I got the following error

Msg 6850, Level 16, State 1, Procedure fnGetBooks, Line 8
Column name 'TEXT()' contains an invalid XML identifier as required by FOR XML; '('(0x&#8230;]]></description>
				<content:encoded><![CDATA[<p>I had to deploy a user defined function I was given yesterday, when I tried to I got the following error</p>
<p>Msg 6850, Level 16, State 1, Procedure fnGetBooks, Line 8<br />
Column name &#8216;TEXT()&#8217; contains an invalid XML identifier as required by FOR XML; &#8216;(&#8216;(0x0028) is the first character at fault.</p>
<p>The function looked a little like this one</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">FUNCTION</span> fnGetBooks <span class="br0">&#40;</span>@AuthorID <span class="kw1">INT</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">RETURNS</span> <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8000</span><span class="br0">&#41;</span>
<span class="kw1">AS</span>
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;<span class="kw1">DECLARE</span> @BookList <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">8000</span><span class="br0">&#41;</span>
&nbsp;<span class="kw1">SELECT</span> @BookList <span class="sy0">=</span><span class="br0">&#40;</span>
&nbsp;
&nbsp; &nbsp; &nbsp;<span class="kw1">SELECT</span> &nbsp;BookName <span class="sy0">+</span> <span class="st0">', '</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">TEXT</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
&nbsp;
&nbsp; &nbsp; &nbsp;<span class="kw1">FROM</span> &nbsp; &nbsp;Books
&nbsp; &nbsp; &nbsp;<span class="kw1">WHERE</span> AuthorID <span class="sy0">=</span> @AuthorID
&nbsp; &nbsp; &nbsp;<span class="sy0">AND</span> BookName <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; &nbsp;<span class="kw1">ORDER</span> <span class="kw1">BY</span> BookName
&nbsp;
&nbsp; &nbsp; &nbsp;<span class="kw1">FOR</span> XML <span class="kw1">PATH</span><span class="br0">&#40;</span><span class="st0">''</span><span class="br0">&#41;</span> <span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;
<span class="kw1">RETURN</span> <span class="kw1">LEFT</span><span class="br0">&#40;</span>@BookList,<span class="br0">&#40;</span><span class="kw2">LEN</span><span class="br0">&#40;</span>@BookList<span class="br0">&#41;</span> <span class="sy0">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">END</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE FUNCTION fnGetBooks (@AuthorID INT)
 
RETURNS VARCHAR(8000)
AS
BEGIN
       
 DECLARE @BookList VARCHAR(8000)
 SELECT @BookList =(
 
     SELECT  BookName + ', ' AS [TEXT()]
 
     FROM    Books
     WHERE AuthorID = @AuthorID
     AND BookName IS NOT NULL
     ORDER BY BookName
 
     FOR XML PATH('') )
       
 
RETURN LEFT(@BookList,(LEN(@BookList) -1))
END
GO</pre></div></div>

<p>Trying to run that will give you the same error. Do you see the problem? First I determined what 0x0028 was, you can easy do this by running the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CHAR</span><span class="br0">&#40;</span>0x0028<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CHAR(0x0028)</pre></div></div>

<p>As you can see, that is the left parentheses (<br />
Interesting but not really helpful, I know I wrote stuff that uses FOR XML PATH myself in the past. I ran the following query to give me a list of objects that use FOR XML PATH</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> sys.<span class="me1">objects</span>
<span class="kw1">WHERE</span> OBJECT_DEF<span class="sy0">IN</span>ITION<span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">LIKE</span> <span class="st0">'%FOR%%XML%%PATH%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * 
FROM sys.objects
WHERE OBJECT_DEFINITION(object_id) LIKE '%FOR%%XML%%PATH%'</pre></div></div>

<p>Then I looked at some of those functions, the only thing I noticed is that TEXT was lowercase</p>
<p>Instead of</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">SELECT</span> &nbsp;BookName <span class="sy0">+</span> <span class="st0">', '</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">TEXT</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> SELECT  BookName + ', ' AS [TEXT()]</pre></div></div>

<p>It was</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="kw1">SELECT</span> &nbsp;BookName <span class="sy0">+</span> <span class="st0">', '</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">text</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> SELECT  BookName + ', ' AS [text()]</pre></div></div>

<p>Once you make the change, the error will disappear. My suspicion is that some code formatting tool made it uppercase, perhaps the programmer copied and pasted it into some window and then packaged the output&#8230;I will have to follow up on that one</p>
<p>If you are interested what that function is used for, take a look at <a href="/index.php/DataMgmt/DataDesign/the-ten-most-asked-sql-server-questions--1#10">Concatenate Values From Multiple Rows Into One Column</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/business-intelligence/dealing-with-the-column-name/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Taming RSS Feeds with XML::RSS and Template::Toolkit</title>
		<link>/index.php/webdev/serverprogramming/taming-rss-feeds-with-xml/</link>
		<comments>/index.php/webdev/serverprogramming/taming-rss-feeds-with-xml/#comments</comments>
		<pubDate>Fri, 14 Sep 2012 11:01:00 +0000</pubDate>
		<dc:creator><![CDATA[Rob Earl]]></dc:creator>
				<category><![CDATA[Perl]]></category>
		<category><![CDATA[Server Programming]]></category>
		<category><![CDATA[feed]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[rss]]></category>
		<category><![CDATA[template]]></category>
		<category><![CDATA[toolkit]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2012/09/taming-rss-feeds-with-xml/</guid>
		<description><![CDATA[This is a remarkably simple trick which I've found very handy. With a few lines of Perl you can take any RSS feed and format it to your liking.

Get the Feed

You can do this using LWP::Simple:


use LWP::Simple;

my $feed_url = 'http://feeds.b&/#8230;]]></description>
				<content:encoded><![CDATA[<p>This is a remarkably simple trick which I&#8217;ve found very handy. With a few lines of Perl you can take any RSS feed and format it to your liking.</p>
<h1></h1>
<h1>Get the Feed</h1>
<p>You can do this using <a href="http://search.cpan.org/~gaas/libwww-perl-6.04/lib/LWP/Simple.pm">LWP::Simple</a>:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw2">use</span> LWP<span class="sy0">::</span><span class="me2">Simple</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">my</span> <span class="re0">$feed_url</span> <span class="sy0">=</span> <span class="st_h">'http://feeds.bbci.co.uk/news/rss.xml'</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$feed</span> <span class="sy0">=</span> get<span class="br0">&#40;</span><span class="re0">$feed_url</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st0">&quot;Failed to fetch feed.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">use LWP::Simple;

my $feed_url = 'http://feeds.bbci.co.uk/news/rss.xml';
my $feed = get($feed_url)
        or die ("Failed to fetch feed.");</pre></div></div>

<h1></h1>
<h1>Process the Raw Result</h1>
<p>Using <a href="http://search.cpan.org/~kellan/XML-RSS-1.05/lib/RSS.pm">XML::RSS</a>, convert the raw feed into a more manageable hash.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw2">use</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">my</span> <span class="re0">$rss</span> <span class="sy0">=</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="re0">$rss</span><span class="sy0">-&gt;</span><span class="me1">parse</span><span class="br0">&#40;</span><span class="re0">$feed</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">use XML::RSS;

my $rss = XML::RSS-&gt;new();
$rss-&gt;parse($feed);</pre></div></div>

<h1></h1>
<h1>Format to Your Liking</h1>
<p><a href="http://template-toolkit.org/">Template::Toolkit</a> can take in a <a href="http://template-toolkit.org/docs/manual/Syntax.html">template</a> and a hash reference of values to substitute into the template.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="co1"># Define a template</span>
<span class="kw1">my</span> <span class="re0">$template</span> <span class="sy0">=</span> <span class="co4">&lt;&lt;&quot;TEMPLATE&quot;;</span>
<span class="co4">[% channel.title %]</span>
&nbsp;
<span class="co4">Headlines:</span>
<span class="co4">[% FOREACH item = items %]</span>
<span class="co4">[% item.pubDate %]t[% item.title %]</span>
<span class="co4">[% END %]</span>
<span class="co4">TEMPLATE</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"># Define a template
my $template = &lt;&lt;"TEMPLATE";
[% channel.title %]

Headlines:
[% FOREACH item = items %]
[% item.pubDate %]t[% item.title %]
[% END %]
TEMPLATE</pre></div></div>

<p>This simple template will take the BBC news feed from above and print out a list of headlines with publication dates.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">my</span> <span class="re0">$tt</span> <span class="sy0">=</span> Template<span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st0">&quot;Failed to load template: $Template::ERRORn&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1"># Combine the template with the processed RSS feed.</span>
<span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">process</span> <span class="br0">&#40;</span> <span class="re0">$template</span><span class="sy0">,</span> <span class="re0">$rss</span> <span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">error</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">my $tt = Template-&gt;new()
        or die ("Failed to load template: $Template::ERRORn");

# Combine the template with the processed RSS feed.
$tt-&gt;process ( $template, $rss )
        or die $tt-&gt;error();</pre></div></div>

<h1></h1>
<h1>Putting it All Together</h1>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="de1"><pre class="de1"><span class="co1">#!/usr/bin/perl</span>
<span class="kw2">use</span> strict<span class="sy0">;</span>
<span class="kw2">use</span> warnings<span class="sy0">;</span>
&nbsp;
<span class="kw2">use</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">;</span>
<span class="kw2">use</span> LWP<span class="sy0">::</span><span class="me2">Simple</span><span class="sy0">;</span>
<span class="kw2">use</span> Template<span class="sy0">;</span>
&nbsp;
<span class="co1">##################</span>
<span class="co1"># Configuration:</span>
<span class="co1">#</span>
<span class="co1">##################</span>
<span class="kw1">my</span> <span class="re0">$feed_url</span> <span class="sy0">=</span> <span class="st_h">'http://feeds.bbci.co.uk/news/rss.xml'</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$template</span> <span class="sy0">=</span> <span class="co4">&lt;&lt;&quot;TEMPLATE&quot;;</span>
<span class="co4">[% channel.title %]</span>
&nbsp;
<span class="co4">Headlines:</span>
<span class="co4">[% FOREACH item = items %]</span>
<span class="co4">[% item.pubDate %]t[% item.title %]</span>
<span class="co4">[% END %]</span>
<span class="co4">TEMPLATE</span>
&nbsp;
<span class="co1">##################</span>
<span class="co1">##################</span>
&nbsp;
<span class="kw1">my</span> <span class="re0">$tt</span> <span class="sy0">=</span> Template<span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st0">&quot;Failed to load template: $Template::ERRORn&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$feed</span> <span class="sy0">=</span> get<span class="br0">&#40;</span><span class="re0">$feed_url</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st_h">'Failed to fetch feed.'</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$rss</span> <span class="sy0">=</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="re0">$rss</span><span class="sy0">-&gt;</span><span class="me1">parse</span><span class="br0">&#40;</span><span class="re0">$feed</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">process</span> <span class="br0">&#40;</span> <span class="re0">$template</span><span class="sy0">,</span> <span class="re0">$rss</span> <span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">error</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">#!/usr/bin/perl
use strict;
use warnings;

use XML::RSS;
use LWP::Simple;
use Template;

##################
# Configuration:
#
##################
my $feed_url = 'http://feeds.bbci.co.uk/news/rss.xml';
my $template = &lt;&lt;"TEMPLATE";
[% channel.title %]

Headlines:
[% FOREACH item = items %]
[% item.pubDate %]t[% item.title %]
[% END %]
TEMPLATE

##################
##################

my $tt = Template-&gt;new()
        or die ("Failed to load template: $Template::ERRORn");
my $feed = get($feed_url)
        or die ('Failed to fetch feed.');
my $rss = XML::RSS-&gt;new();
$rss-&gt;parse($feed);

$tt-&gt;process ( $template, $rss )
        or die $tt-&gt;error();</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="bash"><thead><tr><td colspan="2"  class="head">Bash</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1">rob<span class="sy0">@</span>arrakis:~<span class="sy0">/</span>public_html<span class="sy0">/</span>rss-reader$ <span class="kw2">perl</span> rss-reader.pl 
BBC News - Home
&nbsp;
Headlines:
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">12</span>:<span class="nu0">15</span>:<span class="nu0">22</span> GMT &nbsp; Kate privacy invasion <span class="st_h">'grotesque'</span>
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">11</span>:<span class="nu0">49</span>:<span class="nu0">10</span> GMT &nbsp; US missions on film protest alert
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">12</span>:<span class="nu0">25</span>:<span class="nu0">25</span> GMT &nbsp; Alps attack girl returning to UK
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">10</span>:<span class="nu0">17</span>:03 GMT &nbsp; Woman is held after car body <span class="kw2">find</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">rob@arrakis:~/public_html/rss-reader$ perl rss-reader.pl 
BBC News - Home

Headlines:

Fri, 14 Sep 2012 12:15:22 GMT	Kate privacy invasion 'grotesque'

Fri, 14 Sep 2012 11:49:10 GMT	US missions on film protest alert

Fri, 14 Sep 2012 12:25:25 GMT	Alps attack girl returning to UK

Fri, 14 Sep 2012 10:17:03 GMT	Woman is held after car body find</pre></div></div>

<p>In this example the RSS feed and template are defined in code but they can just as easily be defined in files or a database allowing for changes/additions without deploying new code.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/serverprogramming/taming-rss-feeds-with-xml/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Use FOR XML AUTO,TYPE, ELEMENTS to get XML in the format you really want with SQL Server FOR XML Syntax</title>
		<link>/index.php/datamgmt/datadesign/use-for-xml-auto-type-elements-to-get-xm/</link>
		<comments>/index.php/datamgmt/datadesign/use-for-xml-auto-type-elements-to-get-xm/#comments</comments>
		<pubDate>Fri, 19 Jun 2009 14:13:41 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2009/06/use-for-xml-auto-type-elements-to-get-xm/</guid>
		<description><![CDATA[If you use the FOR XML syntax in SQL Server it can be a little tricky to get the XML formatted the way you really want it. For every table that you have in a join it becomes a child of the table before. What if you have a 3 table join and you want [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>If you use the FOR XML syntax in SQL Server it can be a little tricky to get the XML formatted the way you really want it.<br />
For every table that you have in a join it becomes a child of the table before. What if you have a 3 table join and you want one table to be the parent and the two tables that you are joining to be on the same level, I will show you how you can accomplish that.<br />
First let&#8217;s create some tables and insert some data</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #tempCustomer <span class="br0">&#40;</span>CustomerID <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #tempAddress <span class="br0">&#40;</span>CustomerID <span class="kw1">INT</span>,FullAddress <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #tempPhone <span class="br0">&#40;</span>CustomerID <span class="kw1">INT</span>,PhoneNumber <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> #tempCustomer <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #tempAddress <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="st0">'Some Address'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #tempPhone <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="st0">'212-111-2222'</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> #tempCustomer <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #tempAddress <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="st0">'Other Address'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #tempPhone <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="st0">'212-777-8888'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #tempCustomer (CustomerID INT)
CREATE TABLE #tempAddress (CustomerID INT,FullAddress varchar(100))
CREATE TABLE #tempPhone (CustomerID INT,PhoneNumber varchar(100))

INSERT #tempCustomer VALUES(1)
INSERT #tempAddress VALUES(1,'Some Address')
INSERT #tempPhone VALUES(1,'212-111-2222')

INSERT #tempCustomer VALUES(2)
INSERT #tempAddress VALUES(2,'Other Address')
INSERT #tempPhone VALUES(2,'212-777-8888')</pre></div></div>

<p>Now let&#8217;s see what we have by running the following select statement</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Customer.<span class="me1">CustomerID</span>,Address.<span class="me1">FullAddress</span>,Phone.<span class="me1">PhoneNumber</span>
<span class="kw1">FROM</span> #tempCustomer Customer
<span class="sy0">JOIN</span> #tempAddress Address <span class="kw1">ON</span> Address.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="sy0">JOIN</span> #tempPhone Phone <span class="kw1">ON</span> Phone.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Customer.CustomerID,Address.FullAddress,Phone.PhoneNumber
FROM #tempCustomer Customer
JOIN #tempAddress Address ON Address.CustomerID= Customer.CustomerID
JOIN #tempPhone Phone ON Phone.CustomerID= Customer.CustomerID</pre></div></div>

<p>Output</p>
<pre>--------------------------------------------
CustomerID	FullAddress	PhoneNumber
1		Some Address	212-111-2222
2		Other Address	212-777-8888</pre>
<p>That is a very simple data set</p>
<p>Now run the following query to get some XML</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Customer.<span class="me1">CustomerID</span>,Address.<span class="me1">FullAddress</span>,Phone.<span class="me1">PhoneNumber</span>
<span class="kw1">FROM</span> #tempCustomer Customer
<span class="sy0">JOIN</span> #tempAddress Address <span class="kw1">ON</span> Address.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="sy0">JOIN</span> #tempPhone Phone <span class="kw1">ON</span> Phone.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO, ELEMENTS</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Customer.CustomerID,Address.FullAddress,Phone.PhoneNumber
FROM #tempCustomer Customer
JOIN #tempAddress Address ON Address.CustomerID= Customer.CustomerID
JOIN #tempPhone Phone ON Phone.CustomerID= Customer.CustomerID
FOR XML AUTO, ELEMENTS</pre></div></div>

<p>Here is what the XML will look like.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;Customer<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;CustomerID<span class="re2">&gt;</span></span></span>1<span class="sc3"><span class="re1">&lt;/CustomerID<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;FullAddress<span class="re2">&gt;</span></span></span>Some Address<span class="sc3"><span class="re1">&lt;/FullAddress<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Phone<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;PhoneNumber<span class="re2">&gt;</span></span></span>212-111-2222<span class="sc3"><span class="re1">&lt;/PhoneNumber<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Phone<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Address<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/Customer<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;Customer<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;CustomerID<span class="re2">&gt;</span></span></span>2<span class="sc3"><span class="re1">&lt;/CustomerID<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;FullAddress<span class="re2">&gt;</span></span></span>Other Address<span class="sc3"><span class="re1">&lt;/FullAddress<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Phone<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;PhoneNumber<span class="re2">&gt;</span></span></span>212-777-8888<span class="sc3"><span class="re1">&lt;/PhoneNumber<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Phone<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Address<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/Customer<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;Customer&gt;
	&lt;CustomerID&gt;1&lt;/CustomerID&gt;
	&lt;Address&gt;
		&lt;FullAddress&gt;Some Address&lt;/FullAddress&gt;
		&lt;Phone&gt;
			&lt;PhoneNumber&gt;212-111-2222&lt;/PhoneNumber&gt;
		&lt;/Phone&gt;
	&lt;/Address&gt;
&lt;/Customer&gt;
&lt;Customer&gt;
	&lt;CustomerID&gt;2&lt;/CustomerID&gt;
	&lt;Address&gt;
		&lt;FullAddress&gt;Other Address&lt;/FullAddress&gt;
		&lt;Phone&gt;
			&lt;PhoneNumber&gt;212-777-8888&lt;/PhoneNumber&gt;
		&lt;/Phone&gt;
	&lt;/Address&gt;
&lt;/Customer&gt;</pre></div></div>

<p>Do you notice that the Phone is inside Address?  What if I want this output?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;Customer<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;CustomerID<span class="re2">&gt;</span></span></span>1<span class="sc3"><span class="re1">&lt;/CustomerID<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;FullAddress<span class="re2">&gt;</span></span></span>Some Address<span class="sc3"><span class="re1">&lt;/FullAddress<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Phone<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;PhoneNumber<span class="re2">&gt;</span></span></span>212-111-2222<span class="sc3"><span class="re1">&lt;/PhoneNumber<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Phone<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/Customer<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;Customer<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;CustomerID<span class="re2">&gt;</span></span></span>2<span class="sc3"><span class="re1">&lt;/CustomerID<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;FullAddress<span class="re2">&gt;</span></span></span>Other Address<span class="sc3"><span class="re1">&lt;/FullAddress<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Phone<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;PhoneNumber<span class="re2">&gt;</span></span></span>212-777-8888<span class="sc3"><span class="re1">&lt;/PhoneNumber<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Phone<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/Customer<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;Customer&gt;
	&lt;CustomerID&gt;1&lt;/CustomerID&gt;
	&lt;Address&gt;
		&lt;FullAddress&gt;Some Address&lt;/FullAddress&gt;
	&lt;/Address&gt;
	&lt;Phone&gt;
		&lt;PhoneNumber&gt;212-111-2222&lt;/PhoneNumber&gt;
	&lt;/Phone&gt;
&lt;/Customer&gt;
&lt;Customer&gt;
	&lt;CustomerID&gt;2&lt;/CustomerID&gt;
	&lt;Address&gt;
		&lt;FullAddress&gt;Other Address&lt;/FullAddress&gt;
	&lt;/Address&gt;
	&lt;Phone&gt;
		&lt;PhoneNumber&gt;212-777-8888&lt;/PhoneNumber&gt;
	&lt;/Phone&gt;
&lt;/Customer&gt;</pre></div></div>

<p>As you can see Phone and Address are on the same level</p>
<p>Here is the query that will accomplish that</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Customer.<span class="me1">CustomerID</span>,
<span class="br0">&#40;</span><span class="kw1">SELECT</span> FullAddress
<span class="kw1">FROM</span> #tempAddress Address
<span class="kw1">WHERE</span> Address.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO,TYPE, ELEMENTS<span class="br0">&#41;</span>,
<span class="br0">&#40;</span><span class="kw1">SELECT</span> PhoneNumber
<span class="kw1">FROM</span> #tempPhone Phone
<span class="kw1">WHERE</span> Phone.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO,TYPE, ELEMENTS<span class="br0">&#41;</span>
<span class="kw1">FROM</span> #tempCustomer Customer
<span class="kw1">FOR</span> XML AUTO,TYPE, ELEMENTS</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Customer.CustomerID,
(SELECT FullAddress
FROM #tempAddress Address
WHERE Address.CustomerID= Customer.CustomerID
FOR XML AUTO,TYPE, ELEMENTS),
(SELECT PhoneNumber
FROM #tempPhone Phone
WHERE Phone.CustomerID= Customer.CustomerID
FOR XML AUTO,TYPE, ELEMENTS)
FROM #tempCustomer Customer
FOR XML AUTO,TYPE, ELEMENTS</pre></div></div>

<p>As you can see we used some subqueries to accomplish that.<br />
Actually we can eliminate one of the subqueries and use a join between Customer and Address and all we need is put Phone in a subquery in the select of Customer to make it the same level as address.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Customer.<span class="me1">CustomerID</span>,Address.<span class="me1">FullAddress</span>,
<span class="br0">&#40;</span><span class="kw1">SELECT</span> PhoneNumber
<span class="kw1">FROM</span> #tempPhone Phone
<span class="kw1">WHERE</span> Phone.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO,TYPE, ELEMENTS<span class="br0">&#41;</span>
<span class="kw1">FROM</span> #tempCustomer Customer
<span class="sy0">JOIN</span> #tempAddress Address <span class="kw1">ON</span> Address.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO,TYPE, ELEMENTS</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Customer.CustomerID,Address.FullAddress,
(SELECT PhoneNumber
FROM #tempPhone Phone
WHERE Phone.CustomerID= Customer.CustomerID
FOR XML AUTO,TYPE, ELEMENTS)
FROM #tempCustomer Customer
JOIN #tempAddress Address ON Address.CustomerID= Customer.CustomerID
FOR XML AUTO,TYPE, ELEMENTS</pre></div></div>

<p>Did you notice we used FOR XML AUTO,TYPE, ELEMENTS? We need to use TYPE in the subquery otherwise you will get &amp;lt ;Phone&amp;gt ; instead of &lt;Phone&gt; ( I had to put a space between &amp;gt and ; because it would show &gt; in this post, same for the XML below )</p>
<p>Run this query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Customer.<span class="me1">CustomerID</span>,Address.<span class="me1">FullAddress</span>,
<span class="br0">&#40;</span><span class="kw1">SELECT</span> PhoneNumber
<span class="kw1">FROM</span> #tempPhone Phone
<span class="kw1">WHERE</span> Phone.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO, ELEMENTS<span class="br0">&#41;</span>
<span class="kw1">FROM</span> #tempCustomer Customer
<span class="sy0">JOIN</span> #tempAddress Address <span class="kw1">ON</span> Address.<span class="me1">CustomerID</span><span class="sy0">=</span> Customer.<span class="me1">CustomerID</span>
<span class="kw1">FOR</span> XML AUTO, ELEMENTS</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Customer.CustomerID,Address.FullAddress,
(SELECT PhoneNumber
FROM #tempPhone Phone
WHERE Phone.CustomerID= Customer.CustomerID
FOR XML AUTO, ELEMENTS)
FROM #tempCustomer Customer
JOIN #tempAddress Address ON Address.CustomerID= Customer.CustomerID
FOR XML AUTO, ELEMENTS</pre></div></div>

<p>Here is the output</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;Customer<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;CustomerID<span class="re2">&gt;</span></span></span>1<span class="sc3"><span class="re1">&lt;/CustomerID<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;FullAddress<span class="re2">&gt;</span></span></span>Some Address<span class="sc3"><span class="re1">&lt;/FullAddress<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc1">&amp;lt ;</span>Phone<span class="sc1">&amp;gt ;&amp;lt ;</span>PhoneNumber<span class="sc1">&amp;gt ;</span>212-111-2222<span class="sc1">&amp;lt ;</span>/PhoneNumber<span class="sc1">&amp;gt ;&amp;lt ;</span>/Phone<span class="sc1">&amp;gt ;</span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Address<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/Customer<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;Customer<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;CustomerID<span class="re2">&gt;</span></span></span>2<span class="sc3"><span class="re1">&lt;/CustomerID<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Address<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;FullAddress<span class="re2">&gt;</span></span></span>Other Address<span class="sc3"><span class="re1">&lt;/FullAddress<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc1">&amp;lt ;</span>Phone<span class="sc1">&amp;gt ;&amp;lt ;</span>PhoneNumber<span class="sc1">&amp;gt ;</span>212-777-8888<span class="sc1">&amp;lt ;</span>/PhoneNumber<span class="sc1">&amp;gt ;&amp;lt;</span>/Phone<span class="sc1">&amp;gt ;</span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Address<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/Customer<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;Customer&gt;
	&lt;CustomerID&gt;1&lt;/CustomerID&gt;
	&lt;Address&gt;
		&lt;FullAddress&gt;Some Address&lt;/FullAddress&gt;
		&amp;lt ;Phone&amp;gt ;&amp;lt ;PhoneNumber&amp;gt ;212-111-2222&amp;lt ;/PhoneNumber&amp;gt ;&amp;lt ;/Phone&amp;gt ;
	&lt;/Address&gt;
&lt;/Customer&gt;
&lt;Customer&gt;
	&lt;CustomerID&gt;2&lt;/CustomerID&gt;
	&lt;Address&gt;
		&lt;FullAddress&gt;Other Address&lt;/FullAddress&gt;
		&amp;lt ;Phone&amp;gt ;&amp;lt ;PhoneNumber&amp;gt ;212-777-8888&amp;lt ;/PhoneNumber&amp;gt ;&amp;lt;/Phone&amp;gt ;
	&lt;/Address&gt;
&lt;/Customer&gt;</pre></div></div>

<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/use-for-xml-auto-type-elements-to-get-xm/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Creating A XSD Schema From A Table In SQL Server With FOR XML Syntax</title>
		<link>/index.php/datamgmt/datadesign/creating-a-xsd-schema-from-a-table-in-sq/</link>
		<comments>/index.php/datamgmt/datadesign/creating-a-xsd-schema-from-a-table-in-sq/#comments</comments>
		<pubDate>Mon, 11 May 2009 17:21:31 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[xml]]></category>
		<category><![CDATA[xsd]]></category>

		<guid isPermaLink="false">/index.php/2009/05/creating-a-xsd-schema-from-a-table-in-sq/</guid>
		<description><![CDATA[You have a table and you would like to create a XSD schema based on that table. What is the easiest way to do that in SQL Server? The easiest way to do that would be to use FOR XML syntax with AUTO, ELEMENTS and XMLSCHEMA. If your table is named test and you want [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You have a table and you would like to create a XSD schema based on that table. What is the easiest way to do that in SQL Server? The easiest way to do that would be to use FOR XML syntax with AUTO, ELEMENTS and XMLSCHEMA. If your table is named test and you want your schema to be named TestXsdSchema then you would do the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Test <span class="kw1">FOR</span> XML AUTO, ELEMENTS, XMLSCHEMA<span class="br0">&#40;</span><span class="st0">'TestXsdSchema'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM Test FOR XML AUTO, ELEMENTS, XMLSCHEMA('TestXsdSchema')</pre></div></div>

<p>Let&#8217;s look at a complete example. First create the table below</p>
<pre>create table Test(id int identity,
SomeName varchar(53) not null,
SomeValue decimal(20,10) not null,
SomeGuid uniqueidentifier not null default newsequentialid())</pre>
<p>Now execute the following block of code</p>
<pre>DECLARE @XsdSchema xml
SET @XsdSchema = (SELECT * FROM Test FOR XML AUTO, ELEMENTS, XMLSCHEMA('TestXsdSchema'))
SELECT @XsdSchema</pre>
<p>This is the schema that gets generated</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;xsd:schema</span> <span class="re0">targetNamespace</span>=<span class="st0">&quot;TestXsdSchema&quot;</span> <span class="re0">elementFormDefault</span>=<span class="st0">&quot;qualified&quot;</span><span class="re2">&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:import</span> <span class="re0">namespace</span>=<span class="st0">&quot;http://schemas.microsoft.com/sqlserver/2004/sqltypes&quot;</span> <span class="re0">schemaLocation</span>=<span class="st0">&quot;http://schemas.microsoft.com/sqlserver/2004/sqltypes/sqltypes.xsd&quot;</span><span class="re2">/&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;Test&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:complexType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:sequence<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;id&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;sqltypes:int&quot;</span><span class="re2">/&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;SomeName&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:simpleType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;sqltypes:varchar&quot;</span> <span class="re0">sqltypes:localeId</span>=<span class="st0">&quot;1033&quot;</span> <span class="re0">sqltypes:sqlCompareOptions</span>=<span class="st0">&quot;IgnoreCase IgnoreKanaType IgnoreWidth&quot;</span> <span class="re0">sqltypes:sqlSortId</span>=<span class="st0">&quot;52&quot;</span><span class="re2">&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:maxLength</span> <span class="re0">value</span>=<span class="st0">&quot;53&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:restriction<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;SomeValue&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;xsd:simpleType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;xsd:restriction</span> <span class="re0">base</span>=<span class="st0">&quot;sqltypes:decimal&quot;</span><span class="re2">&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:totalDigits</span> <span class="re0">value</span>=<span class="st0">&quot;20&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:fractionDigits</span> <span class="re0">value</span>=<span class="st0">&quot;10&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:restriction<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:simpleType<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;SomeGuid&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;sqltypes:uniqueidentifier&quot;</span><span class="re2">/&gt;</span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:sequence<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:complexType<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;/xsd:schema<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;xsd:schema targetNamespace="TestXsdSchema" elementFormDefault="qualified"&gt;
 &lt;xsd:import namespace="http://schemas.microsoft.com/sqlserver/2004/sqltypes" schemaLocation="http://schemas.microsoft.com/sqlserver/2004/sqltypes/sqltypes.xsd"/&gt;
&lt;xsd:element name="Test"&gt;
&lt;xsd:complexType&gt;
&lt;xsd:sequence&gt;
 &lt;xsd:element name="id" type="sqltypes:int"/&gt;
&lt;xsd:element name="SomeName"&gt;
&lt;xsd:simpleType&gt;
&lt;xsd:restriction base="sqltypes:varchar" sqltypes:localeId="1033" sqltypes:sqlCompareOptions="IgnoreCase IgnoreKanaType IgnoreWidth" sqltypes:sqlSortId="52"&gt;
 &lt;xsd:maxLength value="53"/&gt;
 &lt;/xsd:restriction&gt;
 &lt;/xsd:simpleType&gt;
 &lt;/xsd:element&gt;
&lt;xsd:element name="SomeValue"&gt;
&lt;xsd:simpleType&gt;
&lt;xsd:restriction base="sqltypes:decimal"&gt;
 &lt;xsd:totalDigits value="20"/&gt;
 &lt;xsd:fractionDigits value="10"/&gt;
 &lt;/xsd:restriction&gt;
 &lt;/xsd:simpleType&gt;
 &lt;/xsd:element&gt;
 &lt;xsd:element name="SomeGuid" type="sqltypes:uniqueidentifier"/&gt;
 &lt;/xsd:sequence&gt;
 &lt;/xsd:complexType&gt;
 &lt;/xsd:element&gt;
 &lt;/xsd:schema&gt;</pre></div></div>

<p>See, that was pretty simple wasn&#8217;t it?</p>
<p>
*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/creating-a-xsd-schema-from-a-table-in-sq/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>How to import a bunch of XML files from a directory in T-SQL</title>
		<link>/index.php/datamgmt/datadesign/how-to-import-a-bunch-of-xml-files-from/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-import-a-bunch-of-xml-files-from/#comments</comments>
		<pubDate>Tue, 28 Apr 2009 18:01:36 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[import]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2009/04/how-to-import-a-bunch-of-xml-files-from/</guid>
		<description><![CDATA[A couple of days ago onpnt posted the following blogpost: Import directory of XML files into SQL Server 2005 In that post he was using SQLCLR to import a bunch of files. Some of you might not be so familiar with .NET so I am providing a T-SQL way to do something similar You will [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>A couple of days ago onpnt posted the following blogpost: <a href="/index.php/DataMgmt/DataDesign/import-directory-of-xml-files-into-sql-s-2005">Import directory of XML files into SQL Server 2005</a><br />
In that post he was using SQLCLR to import a bunch of files. Some of you might not be so familiar with .NET so I am providing a T-SQL way to do something similar</p>
<p>You will need to create a directory testxml on the c drive and put a bunch of XML files in there. If you don&#8217;t have any XML files then save the following two as file1.xml and file2.xml</p>
<p>file1.xml</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;MusicCollection<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Pink Floyd<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Wish You Were Here<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1975<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>The Wall<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1979<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Prince<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Purple Rain<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1984<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Lotusflow3r<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2009<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>1999<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1982<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Incubus<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Morning View<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2001<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Light Grenades<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2006<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/MusicCollection<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;MusicCollection&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Pink Floyd&lt;/ArtistName&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Wish You Were Here&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1975&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;The Wall&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1979&lt;/YearReleased&gt;
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Prince&lt;/ArtistName&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Purple Rain&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1984&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Lotusflow3r&lt;/AlbumName&gt;
  &lt;YearReleased&gt;2009&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;1999&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1982&lt;/YearReleased&gt;
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Incubus&lt;/ArtistName&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Morning View&lt;/AlbumName&gt;
  &lt;YearReleased&gt;2001&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Light Grenades&lt;/AlbumName&gt;
  &lt;YearReleased&gt;2006&lt;/YearReleased&gt;
  &lt;/Album&gt;
  &lt;/Artist&gt;
  &lt;/MusicCollection&gt;</pre></div></div>

<p>file2.xml</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;MusicCollection<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Pink Floyd<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Wish You Were Here<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1975<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>The Wall<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1979<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Prince<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Purple Rain<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1984<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Lotusflow3r<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2009<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>1999<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1982<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/MusicCollection<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;MusicCollection&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Pink Floyd&lt;/ArtistName&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Wish You Were Here&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1975&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;The Wall&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1979&lt;/YearReleased&gt;
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Prince&lt;/ArtistName&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Purple Rain&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1984&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Lotusflow3r&lt;/AlbumName&gt;
  &lt;YearReleased&gt;2009&lt;/YearReleased&gt;
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;1999&lt;/AlbumName&gt;
  &lt;YearReleased&gt;1982&lt;/YearReleased&gt;
  &lt;/Album&gt;
  &lt;/Artist&gt;
&lt;/MusicCollection&gt;</pre></div></div>

<p>Now that we have our files we are ready to grab all the files in the directory. We will use a plain vanilla DOS dir command for this with the B switch so that we don&#8217;t get a lot of garbage returned. Here is what this block of code looks like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="de1"><pre class="de1"><span class="kw1">IF</span> <span class="kw2">OBJECT_ID</span><span class="br0">&#40;</span><span class="st0">'tempdb..#tempList'</span><span class="br0">&#41;</span> <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #tempList
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #tempList <span class="br0">&#40;</span><span class="br0">&#91;</span>FileName<span class="br0">&#93;</span> <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1">--plain vanilla dos dir command with /B switch (bare format)</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> #tempList
<span class="kw1">EXEC</span> MASTER..<span class="me1">XP_CMDSHELL</span> <span class="st0">'dir c:testxml /B'</span>
&nbsp;
&nbsp;
<span class="co1">--delete the null values</span>
<span class="kw1">DELETE</span> #tempList <span class="kw1">WHERE</span> <span class="br0">&#91;</span>FileName<span class="br0">&#93;</span> <span class="kw1">IS</span> <span class="sy0">NULL</span>
&nbsp;
<span class="co1">-- Delete all the files that don't have xml extension</span>
<span class="kw1">DELETE</span> #tempList <span class="kw1">WHERE</span> <span class="br0">&#91;</span>FileName<span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">LIKE</span> <span class="st0">'%.xml'</span>
&nbsp;
<span class="co1">--this will be used to loop over the table</span>
<span class="kw1">alter</span> <span class="kw1">table</span> #tempList <span class="kw1">add</span> id <span class="kw1">int</span> <span class="kw1">identity</span>
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">IF OBJECT_ID('tempdb..#tempList') IS NOT NULL
DROP TABLE #tempList

CREATE TABLE #tempList ([FileName] VARCHAR(500))

--plain vanilla dos dir command with /B switch (bare format)
INSERT INTO #tempList
EXEC MASTER..XP_CMDSHELL 'dir c:testxml /B'


--delete the null values
DELETE #tempList WHERE [FileName] IS NULL

-- Delete all the files that don't have xml extension
DELETE #tempList WHERE [FileName] NOT LIKE '%.xml'

--this will be used to loop over the table
alter table #tempList add id int identity
go</pre></div></div>

<p>Now let&#8217;s see what has actually been inserted into the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> #tempList</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from #tempList</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<pre>FileName	id
file1.xml	1
file2.xml	2</pre>
<p>The following table will be used to store the XML.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>XMLImport<span class="br0">&#93;</span><span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="br0">&#91;</span>filename<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">VARCHAR</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>timecreated<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">DATETIME</span><span class="br0">&#93;</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; <span class="br0">&#91;</span>xmldata<span class="br0">&#93;</span> <span class="br0">&#91;</span>xml<span class="br0">&#93;</span> <span class="sy0">NULL</span>
<span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE [dbo].[XMLImport](
    [filename] [VARCHAR](500) NULL,
    [timecreated] [DATETIME] NULL,
    [xmldata] [xml] NULL
) ON [PRIMARY]
GO</pre></div></div>

<p>Here is where the import happens, since we have to use dynamic SQL to do the XML import it is better to use SP_EXECUTESQL instead of EXEC since SP_EXECUTESQL has output parameters.<br />
I have put comments in this codeblock but if you need more information how exactly this works then leave me a comment.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
</pre></td><td class="de1"><pre class="de1"><span class="kw1">truncate</span> <span class="kw1">table</span> XMLImport <span class="co1">--in case you want to rerun just this codeblock</span>
<span class="kw1">declare</span> @Directory <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>
<span class="kw1">select</span> @Directory <span class="sy0">=</span> <span class="st0">'c:testxml'</span>
&nbsp;
<span class="kw1">declare</span> @FileExist <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @FileName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>,@DeleteCommand <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,@FullFileName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">SQL</span> <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>,@xml xml
&nbsp;
<span class="co1">--This is so that we know how long the loop lasts</span>
<span class="kw1">declare</span> @LoopID <span class="kw1">int</span>, @MaxID <span class="kw1">int</span>
<span class="kw1">SELECT</span> @LoopID <span class="sy0">=</span> <span class="kw2">min</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span>,@MaxID <span class="sy0">=</span> <span class="kw2">max</span><span class="br0">&#40;</span>ID<span class="br0">&#41;</span>
<span class="kw1">FROM</span> #tempList
&nbsp;
&nbsp;
&nbsp;
<span class="kw1">WHILE</span> @LoopID <span class="sy0">&lt;=</span> @MaxID
<span class="kw1">BEGIN</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @FileNAme <span class="sy0">=</span> filename
&nbsp; &nbsp; <span class="kw1">from</span> #tempList
&nbsp; &nbsp; <span class="kw1">where</span> id <span class="sy0">=</span> @LoopID
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @FullFileName <span class="sy0">=</span> @Directory <span class="sy0">+</span> @FileName 
&nbsp; &nbsp; 
&nbsp; &nbsp; <span class="kw1">exec</span> xp_fileexist @FullFileName , @FileExist <span class="kw1">output</span>
&nbsp; &nbsp; <span class="kw1">if</span> @FileExist <span class="sy0">=</span><span class="nu0">1</span> <span class="co1">--sanity check in case some evil person removed the file</span>
&nbsp; &nbsp; <span class="kw1">begin</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> N<span class="st0">'select @xml = xml </span>
<span class="st0">&nbsp; &nbsp; &nbsp; &nbsp; FROM OPENROWSET(BULK '</span><span class="st0">''</span> <span class="sy0">+</span> @FullFileName <span class="sy0">+</span><span class="st0">''</span><span class="st0">' ,Single_BLOB) as TEMP(xml)'</span>
&nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; <span class="co1">-- Just like in the bedroom, this is where the magic happens</span>
&nbsp; &nbsp; <span class="co1">-- We use the output functionality to fill the xml variable for later use</span>
&nbsp; &nbsp; <span class="kw1">EXEC</span> <span class="kw3">SP_EXECUTESQL</span> @<span class="kw1">SQL</span>, N<span class="st0">'@xml xml OUTPUT'</span>, @xml <span class="kw1">OUTPUT</span>
&nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; 
&nbsp; &nbsp; <span class="co1">--The actual insert happens here, as you can see we use the output value (@xml)</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> XMLImport <span class="br0">&#40;</span><span class="br0">&#91;</span>filename<span class="br0">&#93;</span>,timecreated,xmldata<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @FileName,<span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,@xml
&nbsp; &nbsp; 
&nbsp; &nbsp; <span class="kw1">SET</span> @DeleteCommand <span class="sy0">=</span> <span class="st0">'del '</span> <span class="sy0">+</span> &nbsp;@Directory <span class="sy0">+</span> @FileName 
&nbsp; &nbsp; <span class="co1">--maybe you want to delete or move the file to another directory</span>
&nbsp; &nbsp; <span class="co1">-- ** here is how to delete the files you just imported</span>
&nbsp; &nbsp; <span class="co1">-- uncomment line below to delete the file just inserted</span>
&nbsp; &nbsp; <span class="co1">--EXEC MASTER..XP_CMDSHELL @DeleteCommand</span>
&nbsp; &nbsp; <span class="co1">-- ** end of here is how to delete the files</span>
&nbsp; &nbsp; <span class="kw1">end</span>
&nbsp;
&nbsp; &nbsp; <span class="co1">--Get the next id, instead of +1 we grab the next value in case of skipped id values</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @LoopID <span class="sy0">=</span> <span class="kw2">min</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> #tempList
&nbsp; &nbsp; <span class="kw1">where</span> id <span class="sy0">&gt;</span> @LoopID
<span class="kw1">END</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">truncate table XMLImport --in case you want to rerun just this codeblock
declare @Directory varchar(50)
select @Directory = 'c:testxml'

declare @FileExist int
DECLARE @FileName varchar(500),@DeleteCommand varchar(1000),@FullFileName varchar(500)

DECLARE @SQL NVARCHAR(1000),@xml xml

--This is so that we know how long the loop lasts
declare @LoopID int, @MaxID int
SELECT @LoopID = min(id),@MaxID = max(ID)
FROM #tempList



WHILE @LoopID &lt;= @MaxID
BEGIN

	SELECT @FileNAme = filename
	from #tempList
	where id = @LoopID

	SELECT @FullFileName = @Directory + @FileName 
	
	exec xp_fileexist @FullFileName , @FileExist output
	if @FileExist =1 --sanity check in case some evil person removed the file
	begin
	SELECT @SQL = N'select @xml = xml 
		FROM OPENROWSET(BULK ''' + @FullFileName +''' ,Single_BLOB) as TEMP(xml)'
	 
	-- Just like in the bedroom, this is where the magic happens
	-- We use the output functionality to fill the xml variable for later use
	EXEC SP_EXECUTESQL @SQL, N'@xml xml OUTPUT', @xml OUTPUT
	 
	
	--The actual insert happens here, as you can see we use the output value (@xml)
	INSERT XMLImport ([filename],timecreated,xmldata)
	SELECT @FileName,getdate(),@xml
	
	SET @DeleteCommand = 'del ' +  @Directory + @FileName 
	--maybe you want to delete or move the file to another directory
	-- ** here is how to delete the files you just imported
	-- uncomment line below to delete the file just inserted
	--EXEC MASTER..XP_CMDSHELL @DeleteCommand
	-- ** end of here is how to delete the files
	end

	--Get the next id, instead of +1 we grab the next value in case of skipped id values
	SELECT @LoopID = min(id)
	FROM #tempList
	where id &gt; @LoopID
END</pre></div></div>

<p>So that is all the code that you need to make this happen, let&#8217;s see what is actually inserted into the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> XMLImport</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from XMLImport</pre></div></div>

<p>output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<pre>filename	timecreated		xmldata
file1.xml	2009-04-29 09:18:42.313	&lt;MusicCollection&gt;&lt;Artist&gt;&lt;ArtistName&gt;Pink Floyd....
file2.xml	2009-04-29 09:18:42.330	&lt;MusicCollection&gt;&lt;Artist&gt;&lt;ArtistName&gt;Pink Floyd....</pre>
<p></p>
<h3>Attention/warning!!</h3>
<p>Here are a couple of warnings for you. </p>
<p><strong>xp_cmdshell</strong><br />
It is not a best practice to have xp_cmdshell enabled. As a matter of fact beginning with SQL Server 2005, the product ships with xp_cmdshell disabled. If you try to run xp_cmdshell you will get the following message if it is not enabled<br />
Server: Msg 15281, Level 16, State 1, Procedure xp_cmdshell, Line 1</p>
<p>SQL Server blocked access to procedure &#8216;sys.xp_cmdshell&#8217; of component &#8216;xp_cmdshell&#8217; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of &#8216;xp_cmdshell&#8217; by using sp_configure. For more information about enabling &#8216;xp_cmdshell&#8217;, see &#8220;Surface Area Configuration&#8221; in SQL Server Books Online.</p>
<p>To enable xp_cmdshell execute the following code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'xp_cmdshell'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE SP_CONFIGURE 'show advanced options', 1
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'xp_cmdshell', '1'
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'show advanced options', 0
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p><strong>OPENROWSET </strong><br />
In SQL Server 2005 and 2008 OPENROWSET is also disabled by default, if you try to run an OPENROWSET query then you will see the following message:</p>
<p>Server: Msg 15281, Level 16, State 1, Line 1<br />
SQL Server blocked access to STATEMENT &#8216;OpenRowset/OpenDatasource&#8217; of component &#8216;Ad Hoc Distributed Queries&#8217; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of &#8216;Ad Hoc Distributed Queries&#8217; by using sp_configure. For more information about enabling &#8216;Ad Hoc Distributed Queries&#8217;, see &#8220;Surface Area Configuration&#8221; in SQL Server Books Online.</p>
<p>To enable OPENROWSET and OPENQUERY you can use the previous script but instead of &#8216;xp_cmdshell&#8217; you will use &#8216;Ad Hoc Distributed Queries&#8217;. The script to enable Ad Hoc Distributed Queries is below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'Ad Hoc Distributed Queries'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE SP_CONFIGURE 'show advanced options', 1
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'Ad Hoc Distributed Queries', '1'
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'show advanced options', 0
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p><strong>xp_fileexist</strong><br />
The stored proc xp_fileexist is undocumented so be aware that it could change with a service pack or be removed all together</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-import-a-bunch-of-xml-files-from/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Create XML Files Out Of SQL Server With SSIS And FOR XML Syntax</title>
		<link>/index.php/datamgmt/dbprogramming/create-xml-files-out-of-sql-server-with/</link>
		<comments>/index.php/datamgmt/dbprogramming/create-xml-files-out-of-sql-server-with/#comments</comments>
		<pubDate>Thu, 05 Mar 2009 14:06:17 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[integration services]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[ssis]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2009/03/create-xml-files-out-of-sql-server-with/</guid>
		<description><![CDATA[So you want to spit out some XML from SQL Server into a file, how can you do that? There are a couple of ways, I will show you how you can do it with SSIS. In the SSIS package you need an Execute SQL Task and a Script Task.

Let's get started

First&#8230;]]></description>
				<content:encoded><![CDATA[<p>So you want to spit out some XML from SQL Server into a file, how can you do that? There are a couple of ways, I will show you how you can do it with SSIS. In the SSIS package you need an Execute SQL Task and a Script Task.</p>
<p>Let&#8217;s get started</p>
<p>First create and populate these two tables in your database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> Artist <span class="br0">&#40;</span>ArtistID <span class="kw1">int</span> <span class="kw1">primary</span> <span class="kw1">key</span> not null,
ArtistName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">38</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
go
&nbsp;
<span class="kw1">create</span> <span class="kw1">table</span> Album<span class="br0">&#40;</span>AlbumID <span class="kw1">int</span> <span class="kw1">primary</span> <span class="kw1">key</span> not null,
ArtistID <span class="kw1">int</span> not null,
AlbumName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> not null,
YearReleased <span class="kw1">smallint</span> not null<span class="br0">&#41;</span>
go
&nbsp;
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Artist <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="st0">'Pink Floyd'</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Artist <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="st0">'Incubus'</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Artist <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span>,<span class="st0">'Prince'</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span>,<span class="st0">'Wish You Were Here'</span>,<span class="nu0">1975</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="nu0">1</span>,<span class="st0">'The Wall'</span>,<span class="nu0">1979</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span>,<span class="nu0">3</span>,<span class="st0">'Purple Rain'</span>,<span class="nu0">1984</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="nu0">3</span>,<span class="st0">'Lotusflow3r'</span>,<span class="nu0">2009</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span>,<span class="nu0">3</span>,<span class="st0">'1999'</span>,<span class="nu0">1982</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">6</span>,<span class="nu0">2</span>,<span class="st0">'Morning View'</span>,<span class="nu0">2001</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> <span class="kw1">into</span> Album <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="nu0">2</span>,<span class="st0">'Light Grenades'</span>,<span class="nu0">2006</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table Artist (ArtistID int primary key not null,
ArtistName varchar(38))
go

create table Album(AlbumID int primary key not null,
ArtistID int not null,
AlbumName varchar(100) not null,
YearReleased smallint not null)
go


insert into Artist values(1,'Pink Floyd')
insert into Artist values(2,'Incubus')
insert into Artist values(3,'Prince')

insert into Album values(1,1,'Wish You Were Here',1975)
insert into Album values(2,1,'The Wall',1979)



insert into Album values(3,3,'Purple Rain',1984)
insert into Album values(4,3,'Lotusflow3r',2009)
insert into Album values(5,3,'1999',1982)


insert into Album values(6,2,'Morning View',2001)
insert into Album values(7,2,'Light Grenades',2006)</pre></div></div>

<p>Now create this proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">proc</span> prMusicCollectionXML
<span class="kw1">as</span>
<span class="kw1">declare</span> @XmlOutput xml 
<span class="kw1">set</span> @XmlOutput <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">select</span> ArtistName,AlbumName,YearReleased <span class="kw1">from</span> Album
join Artist <span class="kw1">on</span> Album.<span class="me1">ArtistID</span> <span class="sy0">=</span> Artist.<span class="me1">ArtistID</span>
<span class="kw1">FOR</span> XML AUTO, ROOT<span class="br0">&#40;</span><span class="st0">'MusicCollection'</span><span class="br0">&#41;</span>, ELEMENTS<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">select</span> @XmlOutput
go</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create proc prMusicCollectionXML
as
declare @XmlOutput xml 
set @XmlOutput = (select ArtistName,AlbumName,YearReleased from Album
join Artist on Album.ArtistID = Artist.ArtistID
FOR XML AUTO, ROOT('MusicCollection'), ELEMENTS)

select @XmlOutput
go</pre></div></div>

<p>After executing the proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">exec</span> prMusicCollectionXML</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">exec prMusicCollectionXML</pre></div></div>

<p>you will see the following output</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="de1"><pre class="de1">&nbsp;<span class="sc3"><span class="re1">&lt;MusicCollection<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Pink Floyd<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span> 
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Wish You Were Here<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1975<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>The Wall<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1979<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Prince<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span> 
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Purple Rain<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1984<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Lotusflow3r<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2009<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>1999<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>1982<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;ArtistName<span class="re2">&gt;</span></span></span>Incubus<span class="sc3"><span class="re1">&lt;/ArtistName<span class="re2">&gt;</span></span></span> 
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Morning View<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2001<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp;<span class="sc3"><span class="re1">&lt;Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;AlbumName<span class="re2">&gt;</span></span></span>Light Grenades<span class="sc3"><span class="re1">&lt;/AlbumName<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;YearReleased<span class="re2">&gt;</span></span></span>2006<span class="sc3"><span class="re1">&lt;/YearReleased<span class="re2">&gt;</span></span></span> 
&nbsp; <span class="sc3"><span class="re1">&lt;/Album<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Artist<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/MusicCollection<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> &lt;MusicCollection&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Pink Floyd&lt;/ArtistName&gt; 
 &lt;Album&gt;
  &lt;AlbumName&gt;Wish You Were Here&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1975&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;The Wall&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1979&lt;/YearReleased&gt; 
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Prince&lt;/ArtistName&gt; 
 &lt;Album&gt;
  &lt;AlbumName&gt;Purple Rain&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1984&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Lotusflow3r&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;2009&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;1999&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;1982&lt;/YearReleased&gt; 
  &lt;/Album&gt;
  &lt;/Artist&gt;
 &lt;Artist&gt;
  &lt;ArtistName&gt;Incubus&lt;/ArtistName&gt; 
 &lt;Album&gt;
  &lt;AlbumName&gt;Morning View&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;2001&lt;/YearReleased&gt; 
  &lt;/Album&gt;
 &lt;Album&gt;
  &lt;AlbumName&gt;Light Grenades&lt;/AlbumName&gt; 
  &lt;YearReleased&gt;2006&lt;/YearReleased&gt; 
  &lt;/Album&gt;
  &lt;/Artist&gt;
  &lt;/MusicCollection&gt;</pre></div></div>

<p>So far so good, so how do we dump that data into a file?<br />
Create a new SSIS package add an ADO.NET Connection, name it AdventureWorksConnection<br />
Drop an Execute SQL Task onto your control flow and modify the properties so it looks like this</p>
<p><img src="http://i44.tinypic.com/1zcz3hl.jpg" border="0" alt="Execute SQL Task" /></p>
<p>On the add a result set by clicking on the add button, change the variable name to User::XMLOutput if it is not already like that</p>
<p>Note!!! In SSIS 2008 this variable should be already created otherwise it will fail</p>
<p><img src="http://i44.tinypic.com/nyab2x.jpg" border="0" alt="Execute SQL Task Adding A Resultset" /></p>
<p>Now execute the package.<br />
You will be greeted with the following message:<br />
Error: 0xC00291E3 at Execute SQL Task, Execute SQL Task: The result binding name must be set to zero for full result set and XML results.<br />
Task failed: Execute SQL Task<br />
 In order to fix that, change the Result Name property from NewresultName to 0, now run it again and it should execute successfully. </p>
<p>Our next step will be to write this XML to a file.<br />
Add a Script Task to the package,double click the Script Task,click on script and type XMLOutput into the property of ReadWriteVariables. It should look like the image below</p>
<p><img src="http://i43.tinypic.com/2ug2df7.jpg" border="0" alt="SSIS Script Task" /></p>
<p>Click the Design Script button, this will open up a code window, replace all the code you see with this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="vb"><thead><tr><td colspan="2"  class="head">Visual Basic</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="de1"><pre class="de1"><span class="co1">' Microsoft SQL Server Integration Services Script Task</span>
<span class="co1">' Write scripts using Microsoft Visual Basic</span>
<span class="co1">' The ScriptMain class is the entry point of the Script Task.</span>
&nbsp;
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
&nbsp;
&nbsp;
<span class="kw2">Public</span> Class ScriptMain
&nbsp;
&nbsp; &nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> Main()
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">' Add your code here</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">Dim</span> XMLString <span class="kw4">As</span> <span class="kw1">String</span> = <span class="st0">&quot; &quot;</span>
&nbsp;
&nbsp;
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = Dts.Variables(<span class="st0">&quot;XMLOutput&quot;</span>).Value.ToString.Replace(<span class="st0">&quot;&lt;ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>).Replace(<span class="st0">&quot;&lt;/ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>)
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = <span class="st0">&quot;&lt;?xml version=&quot;</span><span class="st0">&quot;1.0&quot;</span><span class="st0">&quot; ?&gt;&quot;</span> + XMLString
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; GenerateXmlFile(<span class="st0">&quot;C:\MusicCollection.xml&quot;</span>, XMLString)
&nbsp;
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> GenerateXmlFile(<span class="kw4">ByVal</span> filePath <span class="kw4">As</span> <span class="kw1">String</span>, <span class="kw4">ByVal</span> fileContents <span class="kw4">As</span> <span class="kw1">String</span>)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">Dim</span> objStreamWriter <span class="kw4">As</span> IO.StreamWriter
&nbsp; &nbsp; &nbsp; &nbsp; Try
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter = <span class="kw2">New</span> IO.StreamWriter(filePath)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.Write(fileContents)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.<span class="kw3">Close</span>()
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Catch Excep <span class="kw4">As</span> Exception
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MsgBox(Excep.Message)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">End</span> Try
&nbsp; &nbsp; &nbsp; &nbsp; Dts.TaskResult = Dts.Results.Success
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
<span class="kw3">End</span> Class</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime


Public Class ScriptMain

   

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim XMLString As String = " "



        XMLString = Dts.Variables("XMLOutput").Value.ToString.Replace("&lt;ROOT&gt;", "").Replace("&lt;/ROOT&gt;", "")
        XMLString = "&lt;?xml version=""1.0"" ?&gt;" + XMLString

        GenerateXmlFile("C:\MusicCollection.xml", XMLString)

    End Sub

    Public Sub GenerateXmlFile(ByVal filePath As String, ByVal fileContents As String)

        Dim objStreamWriter As IO.StreamWriter
        Try

            objStreamWriter = New IO.StreamWriter(filePath)

            objStreamWriter.Write(fileContents)

            objStreamWriter.Close()

        Catch Excep As Exception

            MsgBox(Excep.Message)

        End Try
        Dts.TaskResult = Dts.Results.Success
    End Sub

End Class</pre></div></div>

<p><strong>SSIS 2008 requires a code change</strong><br />
Here is what the code should look like if you are running SSIS 2008</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="vb"><thead><tr><td colspan="2"  class="head">Visual Basic</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
</pre></td><td class="de1"><pre class="de1"><span class="co1">' Microsoft SQL Server Integration Services Script Task</span>
<span class="co1">' Write scripts using Microsoft Visual Basic 2008.</span>
<span class="co1">' The ScriptMain is the entry point class of the script.</span>
&nbsp;
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
&nbsp;
&lt;System.AddIn.AddIn(<span class="st0">&quot;ScriptMain&quot;</span>, Version:=<span class="st0">&quot;1.0&quot;</span>, Publisher:=<span class="st0">&quot;&quot;</span>, Description:=<span class="st0">&quot;&quot;</span>)&gt; _
&lt;System.CLSCompliantAttribute(<span class="kw5">False</span>)&gt; _
Partial <span class="kw2">Public</span> Class ScriptMain
&nbsp; &nbsp; Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
&nbsp;
&nbsp; &nbsp; <span class="kw1">Enum</span> ScriptResults
&nbsp; &nbsp; &nbsp; &nbsp; Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
&nbsp; &nbsp; &nbsp; &nbsp; Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw1">Enum</span>
&nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; 
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> Main()
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">' Add your code here</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">'</span>
 &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">Dim</span> XMLString <span class="kw4">As</span> <span class="kw1">String</span> = <span class="st0">&quot; &quot;</span>
&nbsp;
&nbsp;
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = Dts.Variables(<span class="st0">&quot;XMLOutput&quot;</span>).Value.ToString.Replace(<span class="st0">&quot;&lt;ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>).Replace(<span class="st0">&quot;&lt;/ROOT&gt;&quot;</span>, <span class="st0">&quot;&quot;</span>)
&nbsp; &nbsp; &nbsp; &nbsp; XMLString = <span class="st0">&quot;&lt;?xml version=&quot;</span><span class="st0">&quot;1.0&quot;</span><span class="st0">&quot; ?&gt;&quot;</span> + XMLString
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; GenerateXmlFile(<span class="st0">&quot;C:\MusicCollection.xml&quot;</span>, XMLString)
&nbsp;
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
&nbsp; &nbsp; <span class="kw2">Public</span> <span class="kw2">Sub</span> GenerateXmlFile(<span class="kw4">ByVal</span> filePath <span class="kw4">As</span> <span class="kw1">String</span>, <span class="kw4">ByVal</span> fileContents <span class="kw4">As</span> <span class="kw1">String</span>)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">Dim</span> objStreamWriter <span class="kw4">As</span> IO.StreamWriter
&nbsp; &nbsp; &nbsp; &nbsp; Try
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter = <span class="kw2">New</span> IO.StreamWriter(filePath)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.Write(fileContents)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; objStreamWriter.<span class="kw3">Close</span>()
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Catch Excep <span class="kw4">As</span> Exception
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MsgBox(Excep.Message)
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">End</span> Try
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Dts.TaskResult = ScriptResults.Success
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw3">End</span> <span class="kw2">Sub</span>
&nbsp;
<span class="kw3">End</span> Class</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic 2008.
' The ScriptMain is the entry point class of the script.

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

&lt;System.AddIn.AddIn("ScriptMain", Version:="1.0", Publisher:="", Description:="")&gt; _
&lt;System.CLSCompliantAttribute(False)&gt; _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum
	

	

	Public Sub Main()
        '
        ' Add your code here
        '
        Dim XMLString As String = " "



        XMLString = Dts.Variables("XMLOutput").Value.ToString.Replace("&lt;ROOT&gt;", "").Replace("&lt;/ROOT&gt;", "")
        XMLString = "&lt;?xml version=""1.0"" ?&gt;" + XMLString

        GenerateXmlFile("C:\MusicCollection.xml", XMLString)

    End Sub

    Public Sub GenerateXmlFile(ByVal filePath As String, ByVal fileContents As String)

        Dim objStreamWriter As IO.StreamWriter
        Try

            objStreamWriter = New IO.StreamWriter(filePath)

            objStreamWriter.Write(fileContents)

            objStreamWriter.Close()

        Catch Excep As Exception

            MsgBox(Excep.Message)

        End Try

        Dts.TaskResult = ScriptResults.Success


    End Sub

End Class</pre></div></div>

<p>There are a couple of things you need to know, the XML will be generated inside a &lt;ROOT&gt; tag, I am stripping that out on line 23 of the code, on line 24 I am adding &lt;?xml version=&#8221;1.0&#8243; ?&gt; to the file. Line 26 has the location where the file will be written, right now it is C:MusicCollection.xml but you can modify that.</p>
<p>So now we are all done with this. It is time to run this package. Run the package and you should see that file has been created.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/create-xml-files-out-of-sql-server-with/feed/</wfw:commentRss>
		<slash:comments>62</slash:comments>
		</item>
	</channel>
</rss>
