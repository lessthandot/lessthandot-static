<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>group by &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/group-by/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Use the GROUPING function to determine whether a value is NULL because of ROLLUP</title>
		<link>/index.php/datamgmt/datadesign/use-the-grouping-function-to/</link>
		<comments>/index.php/datamgmt/datadesign/use-the-grouping-function-to/#comments</comments>
		<pubDate>Wed, 23 Mar 2011 13:58:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[aggregations]]></category>
		<category><![CDATA[functions]]></category>
		<category><![CDATA[group by]]></category>
		<category><![CDATA[grouping]]></category>
		<category><![CDATA[rollup]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2011/03/use-the-grouping-function-to/</guid>
		<description><![CDATA[If you have been writing queries that use ROLLUP, you are probably aware that the aggregated rows return NULL for the column that you are grouping by. What if you already have a NULL value in that column, how can you know which row is the aggregated row&#8230;]]></description>
				<content:encoded><![CDATA[<p>If you have been writing queries that use ROLLUP, you are probably aware that the aggregated rows return NULL for the column that you are grouping by. What if you already have a NULL value in that column, how can you know which row is the aggregated row? Let&#8217;s take a look, first create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestRollup<span class="br0">&#40;</span>Country <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span>,Col1 <span class="kw1">INT</span>, col2 <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'United States'</span>,<span class="nu0">20</span>,<span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'United States'</span>,<span class="nu0">30</span>,<span class="nu0">90</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'Denmark'</span>,<span class="nu0">20</span>,<span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'Denmark'</span>,<span class="nu0">44</span>,<span class="nu0">33</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'Zimbabwe'</span>,<span class="nu0">20</span>,<span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'Zimbabwe'</span>,<span class="nu0">20</span>,<span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'Zimbabwe'</span>,<span class="nu0">20</span>,<span class="nu0">1000</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">'Zimbabwe'</span>,<span class="nu0">2000</span>,<span class="nu0">10</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestRollup(Country VARCHAR(20),Col1 INT, col2 INT)
INSERT TestRollup VALUES('United States',20,10)
INSERT TestRollup VALUES('United States',30,90)

INSERT TestRollup VALUES('Denmark',20,10)
INSERT TestRollup VALUES('Denmark',44,33)

INSERT TestRollup VALUES('Zimbabwe',20,10)
INSERT TestRollup VALUES('Zimbabwe',20,10)
INSERT TestRollup VALUES('Zimbabwe',20,1000)
INSERT TestRollup VALUES('Zimbabwe',2000,10)</pre></div></div>

<p>Now let&#8217;s do our simple ROLLUP query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Country, <span class="kw2">SUM</span><span class="br0">&#40;</span>Col1<span class="br0">&#41;</span> Col1Sum, <span class="kw2">SUM</span><span class="br0">&#40;</span>col2<span class="br0">&#41;</span> <span class="kw1">AS</span> Col2Sum
<span class="kw1">FROM</span> TestRollup
<span class="kw1">GROUP</span> <span class="kw1">BY</span> Country <span class="kw1">WITH</span> <span class="kw1">ROLLUP</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Country, SUM(Col1) Col1Sum, SUM(col2) AS Col2Sum
FROM TestRollup
GROUP BY Country WITH ROLLUP</pre></div></div>

<p>Here is the results</p>
<div class="tables">
<table>
<tr>
<th>Country</th>
<th>	Col1Sum</th>
<th>	Col2Sum</th>
</tr>
<tr>
<td>Denmark	</td>
<td>64</td>
<td>	43</td>
</tr>
<tr>
<td>United States</td>
<td>	50</td>
<td>	100</td>
</tr>
<tr>
<td>Zimbabwe	</td>
<td>2060</td>
<td>	1030</td>
</tr>
<tr>
<td>NULL	</td>
<td>2174</td>
<td>	1173</td>
</tr>
</table>
</div>
<p>We can easily determine that the Country column that has the value NULL is the total. What happens when we add the following row</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestRollup <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="sy0">NULL</span>,<span class="nu0">2000</span>,<span class="nu0">3000</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestRollup VALUES(NULL,2000,3000)</pre></div></div>

<p>Now when we run the same query again, we have two rows where Country is NULL</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Country, <span class="kw2">SUM</span><span class="br0">&#40;</span>Col1<span class="br0">&#41;</span> Col1Sum, <span class="kw2">SUM</span><span class="br0">&#40;</span>col2<span class="br0">&#41;</span> <span class="kw1">AS</span> Col2Sum
<span class="kw1">FROM</span> TestRollup
<span class="kw1">GROUP</span> <span class="kw1">BY</span> Country <span class="kw1">WITH</span> <span class="kw1">ROLLUP</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Country, SUM(Col1) Col1Sum, SUM(col2) AS Col2Sum
FROM TestRollup
GROUP BY Country WITH ROLLUP</pre></div></div>

<div class="tables">
<p>Here are the results</p>
<table>
<tr>
<th>Country</th>
<th>	Col1Sum</th>
<th>	Col2Sum</th>
</tr>
<tr>
<td>NULL</td>
<td>	2000</td>
<td>	3000</td>
</tr>
<tr>
<td>Denmark	</td>
<td>64</td>
<td>	43</td>
</tr>
<tr>
<td>United States</td>
<td>	50</td>
<td>	100</td>
</tr>
<tr>
<td>Zimbabwe	</td>
<td>2060</td>
<td>	1030</td>
</tr>
<tr>
<td>NULL	</td>
<td>4174</td>
<td>	4173</td>
</tr>
</table>
</div>
<p>To figure out which of the two is the one that is caused by ROLLUP, you can use the GROUPING function, the function will return 1 if it is aggregated and 0 otherwise.</p>
<p>Here is what Books On Line has to say about <a href="http://msdn.microsoft.com/en-us/library/ms178544.aspx">GROUPING</a></p>
<p><em><strong>GROUPING</strong><br />
Indicates whether a specified column expression in a GROUP BY list is aggregated or not. GROUPING returns 1 for aggregated or 0 for not aggregated in the result set. GROUPING can be used only in the SELECT &lt;select&gt; list, HAVING, and ORDER BY clauses when GROUP BY is specified.</p>
<p>GROUPING is used to distinguish the null values that are returned by ROLLUP, CUBE or GROUPING SETS from standard null values. The NULL returned as the result of a ROLLUP, CUBE or GROUPING SETS operation is a special use of NULL. This acts as a column placeholder in the result set and means all.</em></p>
<p>Now, let&#8217;s add GROUPING(Country) to our query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Country, <span class="kw2">SUM</span><span class="br0">&#40;</span>Col1<span class="br0">&#41;</span> Col1Sum, <span class="kw2">SUM</span><span class="br0">&#40;</span>col2<span class="br0">&#41;</span> <span class="kw1">AS</span> Col2Sum, <span class="kw1">GROUPING</span><span class="br0">&#40;</span>Country<span class="br0">&#41;</span> <span class="kw1">AS</span> GroupingCountry
<span class="kw1">FROM</span> TestRollup
<span class="kw1">GROUP</span> <span class="kw1">BY</span> Country <span class="kw1">WITH</span> <span class="kw1">ROLLUP</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Country, SUM(Col1) Col1Sum, SUM(col2) AS Col2Sum, GROUPING(Country) AS GroupingCountry
FROM TestRollup
GROUP BY Country WITH ROLLUP</pre></div></div>

<p>Here are the results, as you can see the function returns 1 for the aggregated row</p>
<div class="tables">
<table>
<tr>
<th>Country</th>
<th>	Col1Sum</th>
<th>	Col2Sum</th>
<th>	GroupingCountry</th>
</tr>
<tr>
<td>NULL</td>
<td>	2000</td>
<td>	3000</td>
<td>	0</td>
</tr>
<tr>
<td>Denmark</td>
<td>	64</td>
<td>	43</td>
<td>	0</td>
</tr>
<tr>
<td>United States</td>
<td>	50</td>
<td>	100</td>
<td>	0</td>
</tr>
<tr>
<td>Zimbabwe</td>
<td>	2060</td>
<td>	1030</td>
<td>	0</td>
</tr>
<tr>
<td>NULL</td>
<td>	4174</td>
<td>	4173</td>
<td>	1</td>
</tr>
</table>
</div>
<p>Now we can simply add a CASE expression to display Total for the aggregated column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CASE</span> &nbsp;<span class="kw1">GROUPING</span><span class="br0">&#40;</span>Country<span class="br0">&#41;</span> <span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'Total'</span> <span class="kw1">ELSE</span> Country <span class="kw1">END</span> Country, <span class="kw2">SUM</span><span class="br0">&#40;</span>Col1<span class="br0">&#41;</span> Col1Sum, <span class="kw2">SUM</span><span class="br0">&#40;</span>col2<span class="br0">&#41;</span> <span class="kw1">AS</span> Col2Sum
<span class="kw1">FROM</span> TestRollup
<span class="kw1">GROUP</span> <span class="kw1">BY</span> Country <span class="kw1">WITH</span> <span class="kw1">ROLLUP</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CASE  GROUPING(Country) WHEN 1 THEN 'Total' ELSE Country END Country, SUM(Col1) Col1Sum, SUM(col2) AS Col2Sum
FROM TestRollup
GROUP BY Country WITH ROLLUP</pre></div></div>

<p>Here is what the results look like </p>
<div class="tables">
<table>
<tr>
<th>Country</th>
<th>	Col1Sum</th>
<th>	Col2Sum</th>
</tr>
<tr>
<td>NULL	</td>
<td>2000</td>
<td>	3000</td>
</tr>
<tr>
<td>Denmark	</td>
<td>64</td>
<td>	43</td>
</tr>
<tr>
<td>United States	</td>
<td>50</td>
<td>	100</td>
</tr>
<tr>
<td>Zimbabwe	</td>
<td>2060</td>
<td>	1030</td>
</tr>
<tr>
<td>Total	</td>
<td>4174</td>
<td>	4173</td>
</tr>
</table>
</div>
<p>That is it for this post, hopefully it will help someone</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/use-the-grouping-function-to/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
