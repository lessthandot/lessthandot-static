<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>null &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/null/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Unique index difference between Oracle and SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/unique-index-difference-between-oracle/</link>
		<comments>/index.php/datamgmt/dbprogramming/unique-index-difference-between-oracle/#comments</comments>
		<pubDate>Tue, 19 Mar 2013 21:55:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[Oracle]]></category>
		<category><![CDATA[Oracle Admin]]></category>
		<category><![CDATA[gotcha]]></category>
		<category><![CDATA[null]]></category>
		<category><![CDATA[oracle]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2013/03/unique-index-difference-between-oracle/</guid>
		<description><![CDATA[When working with different database systems you have to be aware that some things work differently from one system to another. I already blogged a couple of times about differences between SQl Server and Oracle, those post are the following
Truncate r&#8230;]]></description>
				<content:encoded><![CDATA[<p>When working with different database systems you have to be aware that some things work differently from one system to another. I already blogged a couple of times about differences between SQl Server and Oracle, those post are the following<br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/truncate-rollback-differences-between-sql">Truncate rollback differences between SQL Server and Oracle</a><br />
<a href="/index.php/DataMgmt/DBProgramming/Oracle/differences-between-oracle-and-sql">Differences between Oracle and SQL Server when working with NULL and blank values</a><br />
<a href="/index.php/DataMgmt/DBProgramming/Oracle/an-oracle-null-blank-gotcha">An Oracle NULL/Blank gotcha when coming from SQL Server</a>. </p>
<p>Today we are going to look at the difference between a unique index in Oracle and in SQL Server.</p>
<p>Let&#8217;s start with SQL Server. First create this table and also this index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUnique <span class="br0">&#40;</span>Id <span class="kw1">int</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">UNIQUE</span> <span class="kw1">INDEX</span> SomeIndex <span class="kw1">ON</span> TESTUNIQUE <span class="br0">&#40;</span>ID<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUnique (Id int)


CREATE UNIQUE INDEX SomeIndex ON TESTUNIQUE (ID);</pre></div></div>

<p>Insert the following two rows</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> TestUnique <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>;
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> TestUnique <span class="kw1">VALUES</span><span class="br0">&#40;</span>null<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO TestUnique VALUES(1);
INSERT INTO TestUnique VALUES(null);</pre></div></div>

<p>Now let&#8217;s insert one more NULL</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> TestUnique <span class="kw1">VALUES</span><span class="br0">&#40;</span>null<span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO TestUnique VALUES(null);</pre></div></div>

<p>Here is the error<br />
<em>Msg 2601, Level 14, State 1, Line 1<br />
Cannot insert duplicate key row in object &#8216;dbo.TestUnique&#8217; with unique index &#8216;SomeIndex&#8217;. The duplicate key value is (<null>).<br />
The statement has been terminated.</null></em></p>
<p>As you can see you can only have one NULL value in the table</p>
<p>What about Oracle? Let&#8217;s take a look. Run this whole block, it will create a table, a unique index and will insert the same data<br />
</p>
<pre>CREATE TABLE TestUnique (Id int);

CREATE UNIQUE INDEX INDEX1 ON TESTUNIQUE (ID);

INSERT INTO TestUnique VALUES(1);
INSERT INTO TestUnique VALUES(null);
INSERT INTO TestUnique VALUES(null);

SELECT * FROM TestUnique;</pre>
<p>Here is what it looks like from SQL developer</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/OracleSQLOutput.PNG?mtime=1363737088"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/OracleSQLOutput.PNG?mtime=1363737088" width="379" height="377" /></a></div>
<p>As you can see SQL Server only allows one NULL value while Oracle allows multiple NULL values. You have to be aware of these differences otherwise you might get unintended behavior from your programs</p>
<p>If you try to insert the value 1 again, you will get the following error</p>
<p>Error report:</p>
<pre>SQL Error: ORA-00001: unique constraint (SYSTEM.INDEX1) violated
00001. 00000 -  "unique constraint (%s.%s) violated"
*Cause:    An UPDATE or INSERT statement attempted to insert a duplicate key.
           For Trusted Oracle configured in DBMS MAC mode, you may see
           this message if a duplicate entry exists at a different level.
*Action:   Either remove the unique restriction or do not insert the key.</pre>
<p>Come back tomorrow to see how you can create an index in SQL Server that will allow multiple NULL values. You can find that post here: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/creating-a-sql-server-unique">Creating a SQL Server Unique Index that behaves like an Oracle Unique Index</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/unique-index-difference-between-oracle/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>MongoDB: Returning documents where fields are null or not existing</title>
		<link>/index.php/datamgmt/dbprogramming/mongodb-returning-documents-where-fields/</link>
		<comments>/index.php/datamgmt/dbprogramming/mongodb-returning-documents-where-fields/#respond</comments>
		<pubDate>Sun, 17 Feb 2013 16:48:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[bigdata]]></category>
		<category><![CDATA[collections]]></category>
		<category><![CDATA[mongodb]]></category>
		<category><![CDATA[nosql]]></category>
		<category><![CDATA[null]]></category>

		<guid isPermaLink="false">/index.php/2013/02/mongodb-returning-documents-where-fields/</guid>
		<description><![CDATA[In a regular SQL database, you can check if a column is null by using IS NULL
For example if you wanted to return all rows where the age is null, you would do the following

SELECT * 
FROM SomeTable
WHERE age IS NULL

In a NoSQL database it is po&#8230;]]></description>
				<content:encoded><![CDATA[<p>In a regular SQL database, you can check if a column is null by using IS NULL<br />
For example if you wanted to return all rows where the age is null, you would do the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="sql"><thead><tr><td colspan="2"  class="head">SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> SomeTable
<span class="kw1">WHERE</span> age <span class="kw1">IS</span> <span class="kw1">NULL</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * 
FROM SomeTable
WHERE age IS NULL</pre></div></div>

<p>In a NoSQL database it is possible that half the documents in a collection are omitted and maybe five are there with the value null. How can you know if the field is missing or has the value null?</p>
<p>Let&#8217;s take a quick look. First insert the following document into your collection</p>
<pre>db.Blog.insert( { name : "Denis2" } )</pre>
<p>As you can see it just has a name. Now let&#8217;s add another document this time with age as well, we will make the age NULL</p>
<pre>db.Blog.insert( { name : "Denis",  age : NULL} )</pre>
<p>You get the following error<br />
Sun Feb 17 13:44:58 ReferenceError: NULL is not defined (shell):1</p>
<p>This error occurs because you need to pass null in lowercase</p>
<pre>db.Blog.insert( { name : "Denis",  age : null } )</pre>
<p>Now if you execute the following</p>
<pre>db.Blog.find({age:null});</pre>
<p>You get back both document<br />
{ &#8220;_id&#8221; : ObjectId(&#8220;512118a7c1eca3d7ffcd00f9&#8221;), &#8220;name&#8221; : &#8220;Denis&#8221;, &#8220;age&#8221; : null }<br />
{ &#8220;_id&#8221; : ObjectId(&#8220;512123d9c1eca3d7ffcd00fa&#8221;), &#8220;name&#8221; : &#8220;Denis2&#8221; }</p>
<p>In order to return the document where the value that is stored is null, you can use <code>$type: 10</code>. What that means is that the field is of BSON Type Null </p>
<pre>db.Blog.find( { age: { $type: 10 } } )</pre>
<p>Here is the output</p>
<pre>{ "_id" : ObjectId("512118a7c1eca3d7ffcd00f9"), "name" : "Denis", "age" : null }</pre>
<p>In order to return the document where the field does not exist, you can use  <code>$exists: false</code></p>
<pre>db.Blog.find( { age: { $exists: false } } )</pre>
<p>Here is the output</p>
<pre>{ "_id" : ObjectId("512123d9c1eca3d7ffcd00fa"), "name" : "Denis2" }</pre>
<p>
That is all for this post, if you are interested in my other MongoDB posts, you can find them here:<br />
<a href="/index.php/DataMgmt/DBProgramming/creating-mongodb-as-a-service">Install MongoDB as a Windows Service</a><br />
<a href="/index.php/DataMgmt/DBProgramming/doing-upserts-in-mongodb">UPSERTs with MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-how-to-sort-results">How to sort results in MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/indexes-in-mongodb">Indexes in MongoDB: A quick overview</a><br />
<a href="/index.php/DataMgmt/DBProgramming/multidocument-updates-with-mongodb">Multidocument updates with MongoDB</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-how-to-include-and">MongoDB: How to include and exclude the fields you want in results</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-how-to-limit-results">MongoDB: How to limit results and how to page through results</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-backup-and-restore-databases">MongoDB: How to backup and restore databases</a><br />
<a href="/index.php/DataMgmt/DBAdmin/mongodb-how-to-restore-collections">MongoDB: How to restore collections</a><br />
<a href="/index.php/DataMgmt/DBAdmin/mongodb-how-to-backup-all">MongoDB: How to backup all the databases with one command</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-exporting-data-into-files">MongoDB: Exporting data into files</a><br />
<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/mongodb-how-to-drop-databases">MongoDB: How to drop databases and collections</a><br />
<a href="/index.php/DataMgmt/DBProgramming/mongodb-creating-capped-collections">MongoDB: Creating capped collections</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mongodb-returning-documents-where-fields/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>An Oracle NULL/Blank gotcha when coming from SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/an-oracle-null-blank-gotcha/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/an-oracle-null-blank-gotcha/#respond</comments>
		<pubDate>Sun, 10 Feb 2013 19:43:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Oracle]]></category>
		<category><![CDATA[gotcha]]></category>
		<category><![CDATA[null]]></category>
		<category><![CDATA[oracle]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2013/02/an-oracle-null-blank-gotcha/</guid>
		<description><![CDATA[In my Differences between Oracle and SQL Server when working with NULL and blank values  post I already showed you how blanks and NULLS are handled differently between Oracle and SQL Server. Today I found another interesting tidbit.

I you have a varc&#8230;]]></description>
				<content:encoded><![CDATA[<p>In my <a href="/index.php/DataMgmt/DBProgramming/Oracle/differences-between-oracle-and-sql">Differences between Oracle and SQL Server when working with NULL and blank values</a>  post I already showed you how blanks and NULLS are handled differently between Oracle and SQL Server. Today I found another interesting tidbit.</p>
<p>I you have a varchar or char datatype in SQL Server and you store a blank, you get back a blank or padded spaces.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @Test1 <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">''</span>
<span class="kw1">DECLARE</span> @Test2 <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">''</span>
&nbsp;
<span class="kw1">SELECT</span> @Test1,@Test2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @Test1 varchar(10) = ''
DECLARE @Test2 char(10) = ''

SELECT @Test1,@Test2</pre></div></div>

<p>The output is one blank and ten spaces.  </p>
<p>You can verify this by using the <code>DATALENGTH </code>function .</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @Test1 <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">''</span>
<span class="kw1">DECLARE</span> @Test2 <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">''</span>
&nbsp;
<span class="kw1">SELECT</span> datalength<span class="br0">&#40;</span>@Test1<span class="br0">&#41;</span>,datalength<span class="br0">&#40;</span>@Test2<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @Test1 varchar(10) = ''
DECLARE @Test2 char(10) = ''

SELECT datalength(@Test1),datalength(@Test2)</pre></div></div>

<p>Ouput</p>
<pre>0     10</pre>
<p>In Oracle&#8230;not the same</p>
<p>If you run this</p>
<pre>SET SERVEROUTPUT ON
 DECLARE 
    Test1 varchar(10):='';
    Test2 char(10):='';
BEGIN
  IF Test1 IS NULL 
  THEN
  DBMS_OUTPUT.PUT_LINE('Test1 is null');
  ELSE
  DBMS_OUTPUT.PUT_LINE('Test1 is NOT null');
  END IF;
  IF Test2 IS NULL 
  THEN
  DBMS_OUTPUT.PUT_LINE('Test2 is null');
  ELSE
  DBMS_OUTPUT.PUT_LINE('Test2 is NOT null');
  END IF;
END;</pre>
<p>Output</p>
<pre>anonymous block completed
Test1 is null
Test2 is NOT null</pre>
<p>As you can see the varchar variable becomes NULL while the nchar variable gets padded</p>
<p>However when inserting into a table this becomes a little bit different with Oracle</p>
<p>Running this in SQL Server</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestNull<span class="br0">&#40;</span>Col1 <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>,Col2 <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> TestNull <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="sy0">NULL</span>,<span class="sy0">NULL</span><span class="br0">&#41;</span>;
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> TestNull <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="st0">''</span>,<span class="st0">''</span><span class="br0">&#41;</span>;
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestNull;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestNull(Col1 CHAR(10),Col2 VARCHAR(10));
INSERT INTO TestNull VALUES(NULL,NULL);
INSERT INTO TestNull VALUES('','');

SELECT * FROM TestNull;</pre></div></div>

<p>Output</p>
<pre>Col1	Col2
NULL	NULL
          	</pre>
<p>You get a row with NULLS and a row with blanks, same as with the variables</p>
<p>Running that in Oracle</p>
<pre>CREATE TABLE TestNull(Col1 CHAR(10),Col2 VARCHAR(10));
INSERT INTO TestNull VALUES(NULL,NULL);
INSERT INTO TestNull VALUES('','');

SELECT * FROM TestNull;</pre>
<p>Here is what you get</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/OracleOutput.PNG?mtime=1360532250"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/OracleOutput.PNG?mtime=1360532250" width="290" height="229" /></a></div>
<p>As you can see when inserting NULL or a blank into a char column into a table, it does NOT get padded like it did with the variable<br />
If converting code between these two database systems be aware of these kind of things</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/an-oracle-null-blank-gotcha/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Differences between Oracle and SQL Server when working with NULL and blank values</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/differences-between-oracle-and-sql/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/differences-between-oracle-and-sql/#comments</comments>
		<pubDate>Sun, 06 Jan 2013 09:45:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[Oracle]]></category>
		<category><![CDATA[Oracle Admin]]></category>
		<category><![CDATA[gotcha]]></category>
		<category><![CDATA[null]]></category>
		<category><![CDATA[oracle]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2013/01/differences-between-oracle-and-sql/</guid>
		<description><![CDATA[If you ever have to start working with Oracle you have to keep in mind that NULLs and blank values don't work exactly the same as in SQL Server. Let's take a look at some examples

Create this table and insert some rows
create table TestNull(Col2 var&#8230;]]></description>
				<content:encoded><![CDATA[<p>If you ever have to start working with Oracle you have to keep in mind that NULLs and blank values don&#8217;t work exactly the same as in SQL Server. Let&#8217;s take a look at some examples</p>
<p>Create this table and insert some rows</p>
<pre>create table TestNull(Col2 varchar(100));
insert into TestNull values(NULL);
insert into TestNull values('Bla');
insert into TestNull values('');
insert into TestNull values(' ');</pre>
<p>As you can see we inserted four rows, one row is null, one row is blank, one row has a space and one row has Bla.</p>
<p>Now let&#8217;s run the following query</p>
<pre>SELECT Col2,
  NVL(Col2,'EmptyOrNull') a,
  COALESCE(Col2,'EmptyOrNull') b,
  ascii(col2) c
FROM TestNull;</pre>
<p>Here are the results in a html table</p>
<div class="tables">
<table border="1">
<tr>
<th>COL2</th>
<th>	A</th>
<th>	B</th>
<th>	C</th>
</tr>
<tr>
<td>null</td>
<td>	EmptyOrNull</td>
<td>	EmptyOrNull</td>
<td>null</td>
</tr>
<tr>
<td>Bla</td>
<td>	Bla</td>
<td>	Bla</td>
<td>	66</td>
</tr>
<tr>
<td>null</td>
<td>	EmptyOrNull</td>
<td>	EmptyOrNull</td>
<td>null</td>
</tr>
<tr>
<td> </td>
<td>	 </td>
<td>	 </td>
<td>	32</td>
</tr>
</table>
</div>
<p>Here is an image of the same results<br />
<a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/OracleResults.PNG?mtime=1357471831"><img alt="Oracle SQL Developer Results" title="Oracle SQL Developer Results" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/OracleResults.PNG?mtime=1357471831" width="318" height="135" /></a></p>
<p>See what happened, Oracle changed the blanks to NULLs. </p>
<p>We can easily test this theory, let&#8217;s create a table with a column that has a not null constraint</p>
<pre>create table TestNull2(Col2 varchar(100) not null);</pre>
<p>Now of course if you try to insert a NULL it will blow up</p>
<pre>insert into TestNull2 values(NULL);</pre>
<p>Here is the error<br />
<em>SQL Error: ORA-01400: cannot insert NULL into (&#8220;SYSTEM&#8221;.&#8221;TESTNULL2&#8243;.&#8221;COL2&#8243;)<br />
01400. 00000 &#8211;  &#8220;cannot insert NULL into (%s)&#8221;</em></p>
<p>Inserting Bla works without a problem</p>
<pre>insert into TestNull2 values('Bla');</pre>
<p>What about a blank, what will happen now?</p>
<pre>insert into TestNull2 values('');</pre>
<p><em>SQL Error: ORA-01400: cannot insert NULL into (&#8220;SYSTEM&#8221;.&#8221;TESTNULL2&#8243;.&#8221;COL2&#8243;)<br />
01400. 00000 &#8211;  &#8220;cannot insert NULL into (%s)&#8221;</em></p>
<p>As you can see the blank gets converted to a NULL and you get the same error. This is very different from SQL Server.</p>
<p>Will a space succeed?</p>
<pre>insert into TestNull2 values(' ');</pre>
<p>A space is no problem.</p>
<p><strong>Coalesce differences</strong><br />
Just be aware that coalesce won&#8217;t work the same either. Oracle doesn&#8217;t have isnull but it has the nvl function instead</p>
<p>Run the following two statements</p>
<pre>select nvl('','No') as a
from dual;</pre>
<pre>select coalesce('','No') as a
from dual;</pre>
<p>In both cases you are getting No back from the function, as you can see a blank is treated as null.</p>
<p>Be aware of these differences between Oracle and SQL Server, you could have some strange results back from queries if you assume it works the same</p>
<p>We will take a look at that strange table <em>dual </em>in another post</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/differences-between-oracle-and-sql/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Calculating The Percentage Of Null Values In A Column With Transact SQL</title>
		<link>/index.php/datamgmt/dbprogramming/calculating-the-percentage-of-null-value/</link>
		<comments>/index.php/datamgmt/dbprogramming/calculating-the-percentage-of-null-value/#comments</comments>
		<pubDate>Fri, 02 Oct 2009 12:31:24 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[null]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2009/10/calculating-the-percentage-of-null-value/</guid>
		<description><![CDATA[What is the percentage of null values in a table for a column? This question comes up every now and then and it is pretty easy to answer this question We will start by creating the following table T-SQL1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>What is the percentage of null values in a table for a column? This question comes up every now and then and it is pretty easy to answer this question</p>
<p>We will start by creating the following table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #perc <span class="br0">&#40;</span> Column1 <span class="kw1">INT</span>,Column2 <span class="kw1">INT</span>,Column3 <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> #perc
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">1</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="sy0">NULL</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="sy0">NULL</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">1</span>,<span class="nu0">1</span>,<span class="sy0">NULL</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">2</span>,<span class="nu0">1</span>,<span class="nu0">2</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">3</span>,<span class="nu0">1</span>,<span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #perc ( Column1 INT,Column2 INT,Column3 INT)
INSERT INTO #perc
SELECT NULL,1,1
UNION ALL
SELECT 1,1,1
UNION ALL
SELECT NULL,NULL,1
UNION ALL
SELECT NULL,1,NULL
UNION ALL
SELECT NULL,1,1
UNION ALL
SELECT 1,1,NULL
UNION ALL
SELECT NULL,1,1
UNION ALL
SELECT 2,1,2
UNION ALL
SELECT 3,1,1</pre></div></div>

<p>There are a couple of ways to calculate this but first we need to understand one thing: COUNT(*) and COUNT(ColumnName) behave differently, <strong>COUNT(*) will count NULLS while COUNT(ColumnName) does not!!!</strong></p>
<p>Here is one way to calculate the percentages, you use the following formula</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> ColumnName <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SUM(CASE WHEN ColumnName IS NULL THEN 1 ELSE 0 END) / COUNT(*)</pre></div></div>

<p>Run this query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> Column1 <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column1Percent,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> Column2 <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column2Percent,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> Column3 <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column3Percent
<span class="kw1">FROM</span> #perc</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 100.0 * SUM(CASE WHEN Column1 IS NULL THEN 1 ELSE 0 END) / COUNT(*) AS Column1Percent,
100.0 * SUM(CASE WHEN Column2 IS NULL THEN 1 ELSE 0 END) / COUNT(*) AS Column2Percent,
100.0 * SUM(CASE WHEN Column3 IS NULL THEN 1 ELSE 0 END) / COUNT(*) AS Column3Percent
FROM #perc</pre></div></div>

<p>output</p>
<pre>Column1Percent	Column2Percent	Column3Percent
55.555555555555	11.111111111111	22.222222222222</pre>
<p>Instead of using SUM and a CASE statement you can also just do the formula below to get the percentage of NULLS</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="br0">&#40;</span><span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="sy0">-</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span>ColumnName<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">(COUNT(*) - COUNT(ColumnName)) / COUNT(*)</pre></div></div>

<p>The query below will return the same output as the query above</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">100.0</span> <span class="sy0">*</span> <span class="br0">&#40;</span><span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="sy0">-</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span>Column1<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column1Percent,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="br0">&#40;</span><span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="sy0">-</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span>Column2<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column2Percent,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="br0">&#40;</span><span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="sy0">-</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span>Column3<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column3Percent
<span class="kw1">FROM</span> #perc</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 100.0 * (COUNT(*) - COUNT(Column1)) / COUNT(*) AS Column1Percent,
100.0 * (COUNT(*) - COUNT(Column2)) / COUNT(*) AS Column2Percent,
100.0 * (COUNT(*) - COUNT(Column3)) / COUNT(*) AS Column3Percent
FROM #perc</pre></div></div>

<p>output</p>
<pre>Column1Percent	Column2Percent	Column3Percent
55.555555555555	11.111111111111	22.222222222222</pre>
<p>What if you want to get a percentage of all values in the column? So for example we will take Column3 from the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> Column3 <span class="kw1">from</span> #perc</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select Column3 from #perc</pre></div></div>

<pre>1
1
1
NULL
1
NULL
1
2
1</pre>
<p>As you can see we have<br />
2 rows with a value of NULL  = 22.22% (select (2.0/9.0) * 100)<br />
1 row with a value of 2 = 11.11% (select (1.0/9.0) * 100<br />
6 rows with a value of 1 = 22.22% (select (6.0/9.0) * 100)</p>
<p>Here is the query which accomplishes this requirement</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">COALESCE</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>,Column3<span class="br0">&#41;</span>,<span class="st0">'NULL'</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">Value</span>,
<span class="kw2">COUNT</span><span class="br0">&#40;</span>Column3<span class="br0">&#41;</span> <span class="kw1">AS</span> ValueCount,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">FROM</span> #perc <span class="br0">&#41;</span> <span class="kw1">AS</span> Percentage
<span class="kw1">FROM</span> #perc
<span class="kw1">GROUP</span> <span class="kw1">BY</span> Column3
<span class="kw1">ORDER</span> <span class="kw1">BY</span> Percentage <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT COALESCE(CONVERT(VARCHAR(50),Column3),'NULL') AS Value,
COUNT(Column3) AS ValueCount,
100.0 * COUNT(*)/(SELECT COUNT(*) FROM #perc ) AS Percentage
FROM #perc
GROUP BY Column3
ORDER BY Percentage DESC</pre></div></div>

<p>And here is the output<br />
Output</p>
<pre>Value	ValueCount	Percentage
1	6		66.666666666666
NULL	0		22.222222222222
2	1		11.111111111111</pre>
<p>That is all, as you can see it is pretty trivial to calculate NULLS in a column</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/calculating-the-percentage-of-null-value/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Getting The Percentage Of NULLS And Values In A SQL Server Table</title>
		<link>/index.php/datamgmt/datadesign/title-1/</link>
		<comments>/index.php/datamgmt/datadesign/title-1/#respond</comments>
		<pubDate>Tue, 05 Aug 2008 12:09:49 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[math]]></category>
		<category><![CDATA[null]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sqlserver]]></category>

		<guid isPermaLink="false">/index.php/2008/08/title-1/</guid>
		<description><![CDATA[Sometimes you want to know what the percentage is of null values in a table for a Column Or you might want to know what the percentage of all values in a Column is grouped by value You can get these answers by running the code below First create this table T-SQL1 2 3 4 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to know what the percentage is of null values in a table for a Column<br />
Or you might want to know what the percentage of all values in a Column is grouped by value<br />
You can get these answers by running the code below</p>
<p>First create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #perc <span class="br0">&#40;</span> Column1 <span class="kw1">INT</span>,Column2 <span class="kw1">INT</span>,Column3 <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> #perc
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">1</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="sy0">NULL</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="sy0">NULL</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">1</span>,<span class="nu0">1</span>,<span class="sy0">NULL</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="sy0">NULL</span>,<span class="nu0">1</span>,<span class="nu0">1</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">2</span>,<span class="nu0">1</span>,<span class="nu0">2</span>
<span class="kw1">UNION</span> <span class="sy0">ALL</span>
<span class="kw1">SELECT</span> <span class="nu0">3</span>,<span class="nu0">1</span>,<span class="nu0">1</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #perc ( Column1 INT,Column2 INT,Column3 INT)
INSERT INTO #perc
SELECT NULL,1,1
UNION ALL
SELECT 1,1,1
UNION ALL
SELECT NULL,NULL,1
UNION ALL
SELECT NULL,1,NULL
UNION ALL
SELECT NULL,1,1
UNION ALL
SELECT 1,1,NULL
UNION ALL
SELECT NULL,1,1
UNION ALL
SELECT 2,1,2
UNION ALL
SELECT 3,1,1</pre></div></div>

<p>Get the percentage of nulls in all the Columns in my table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> Column1 <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column1Percent,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> Column2 <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column2Percent,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">SUM</span><span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> Column3 <span class="kw1">IS</span> <span class="sy0">NULL</span> <span class="kw1">THEN</span> <span class="nu0">1</span> <span class="kw1">ELSE</span> <span class="nu0">0</span> <span class="kw1">END</span><span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> Column3Percent
<span class="kw1">FROM</span> #perc</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 100.0 * SUM(CASE WHEN Column1 IS NULL THEN 1 ELSE 0 END) / COUNT(*) AS Column1Percent,
100.0 * SUM(CASE WHEN Column2 IS NULL THEN 1 ELSE 0 END) / COUNT(*) AS Column2Percent,
100.0 * SUM(CASE WHEN Column3 IS NULL THEN 1 ELSE 0 END) / COUNT(*) AS Column3Percent
FROM #perc</pre></div></div>

<p>Output</p>
<pre>Column1Percent	Column2Percent	Column3Percent
55.555555555555	11.111111111111	22.222222222222</pre>
<p>Get the values and the percentage of all values for a Column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> Column3 <span class="kw1">AS</span> <span class="kw1">Value</span>,<span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> ValueCount,
<span class="nu0">100.0</span> <span class="sy0">*</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="kw1">coalesce</span><span class="br0">&#40;</span>Column3,<span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">FROM</span> #perc <span class="br0">&#41;</span> <span class="kw1">AS</span> Percentage
<span class="kw1">FROM</span> #perc
<span class="kw1">GROUP</span> <span class="kw1">BY</span> Column3
<span class="kw1">ORDER</span> <span class="kw1">BY</span> Percentage <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT Column3 AS Value,COUNT(*) AS ValueCount,
100.0 * COUNT(coalesce(Column3,0))/(SELECT COUNT(*) FROM #perc ) AS Percentage
FROM #perc
GROUP BY Column3
ORDER BY Percentage DESC</pre></div></div>

<p>Output</p>
<pre>Value	ValueCount	Percentage
1	6	66.666666666666
NULL	2	22.222222222222
2	1	11.111111111111</pre>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/title-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
