<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>tables &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/tables/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Giving only insert permissions to a table for a new login</title>
		<link>/index.php/datamgmt/dbprogramming/giving-only-insert-permissions-to/</link>
		<comments>/index.php/datamgmt/dbprogramming/giving-only-insert-permissions-to/#respond</comments>
		<pubDate>Mon, 04 Mar 2013 13:00:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[security]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/03/giving-only-insert-permissions-to/</guid>
		<description><![CDATA[There was a requirement to create a new user who would have only insert permissions to one table, this user would also have insert and select permissions to another table.

This is pretty simple to accomplish. First create this simple database with tw&#8230;]]></description>
				<content:encoded><![CDATA[<p>There was <a href="http://stackoverflow.com/questions/15204118/how-do-i-create-a-user-in-sql-server-that-only-has-access-to-one-table-and-can">a requirement</a> to create a new user who would have only insert permissions to one table, this user would also have insert and select permissions to another table.</p>
<p>This is pretty simple to accomplish. First create this simple database with two tables</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> TestPermission
GO
&nbsp;
<span class="kw1">USE</span> TestPermissions
GO
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> &nbsp;TestAccess<span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestAccess <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> &nbsp;TestAccess2<span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestAccess2 <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE TestPermission
GO

USE TestPermissions
GO


CREATE TABLE  TestAccess(id INT)
INSERT TestAccess VALUES (1)
GO

CREATE TABLE  TestAccess2(id INT)
INSERT TestAccess2 VALUES (1)
GO</pre></div></div>

<p>Create the new user</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>master<span class="br0">&#93;</span>
GO
<span class="kw1">CREATE</span> LOG<span class="sy0">IN</span> <span class="br0">&#91;</span>SomeTestUser<span class="br0">&#93;</span> <span class="kw1">WITH</span> PASSW<span class="sy0">OR</span>D<span class="sy0">=</span>N<span class="st0">'TestPAss'</span>, DEFAULT_DATABASE<span class="sy0">=</span><span class="br0">&#91;</span>master<span class="br0">&#93;</span>, CHECK_EXPIRATION<span class="sy0">=</span><span class="kw1">OFF</span>, CHECK_POLICY<span class="sy0">=</span><span class="kw1">OFF</span>
GO
<span class="kw1">USE</span> <span class="br0">&#91;</span>TestPermissions<span class="br0">&#93;</span>
GO
<span class="kw1">CREATE</span> <span class="kw1">USER</span> <span class="br0">&#91;</span>SomeTestUser<span class="br0">&#93;</span> <span class="kw1">FOR</span> LOG<span class="sy0">IN</span> <span class="br0">&#91;</span>SomeTestUser<span class="br0">&#93;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [master]
GO
CREATE LOGIN [SomeTestUser] WITH PASSWORD=N'TestPAss', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO
USE [TestPermissions]
GO
CREATE USER [SomeTestUser] FOR LOGIN [SomeTestUser]
GO</pre></div></div>

<p>Now just give the user insert permissions to the TestAccess  table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> TestPermissions
GO
&nbsp;
&nbsp;
<span class="kw1">GRANT</span> <span class="kw1">INSERT</span> <span class="kw1">ON</span> TestAccess <span class="kw1">TO</span> SomeTestUser</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE TestPermissions
GO


GRANT INSERT ON TestAccess TO SomeTestUser</pre></div></div>

<p>Login as the newly created user and try to run the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestAccess</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestAccess</pre></div></div>

<p>Here is the error message that you will get</p>
<p><em>Msg 229, Level 14, State 5, Line 1<br />
The SELECT permission was denied on the object &#8216;TestAccess&#8217;, database &#8216;TestPermissions&#8217;, schema &#8216;dbo&#8217;.</em></p>
<p>Running the insert statement is no problem</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestAccess <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestAccess VALUES (1)</pre></div></div>

<p>Go back to the admin connection and run the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">GRANT</span> <span class="kw1">SELECT</span>,<span class="kw1">INSERT</span> <span class="kw1">ON</span> TestAccess2 <span class="kw1">TO</span> SomeTestUser</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">GRANT SELECT,INSERT ON TestAccess2 TO SomeTestUser</pre></div></div>

<p>As you can see you can combine privileges with the GRANT statement, you don&#8217;t have to do the separately</p>
<p>You just gave insert and select permissions to SomeTestUser for the TestAccess2  table</p>
<p>Now if you go back to the connection, you can run the following without a problem</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestAccess2 <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestAccess2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestAccess2 VALUES (1)
SELECT * FROM TestAccess2</pre></div></div>

<p>In general you probably want a user to have read permissions or write permissions for all the tables, in that case you can use a role. The following will give read and write permissions for all the tables in the database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> <span class="br0">&#91;</span>TestPermissions<span class="br0">&#93;</span>
GO
<span class="kw1">EXEC</span> <span class="kw3">sp_addrolemember</span> N<span class="st0">'db_datareader'</span>, N<span class="st0">'SomeTestUser'</span>
GO
<span class="kw1">EXEC</span> <span class="kw3">sp_addrolemember</span> N<span class="st0">'db_datawriter'</span>, N<span class="st0">'SomeTestUser'</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE [TestPermissions]
GO
EXEC sp_addrolemember N'db_datareader', N'SomeTestUser'
GO
EXEC sp_addrolemember N'db_datawriter', N'SomeTestUser'
GO</pre></div></div>

]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/giving-only-insert-permissions-to/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Column name or number of supplied values does not match table definition when dealing with temp tables</title>
		<link>/index.php/datamgmt/dbprogramming/column-name-or-number-of/</link>
		<comments>/index.php/datamgmt/dbprogramming/column-name-or-number-of/#comments</comments>
		<pubDate>Sun, 03 Mar 2013 19:25:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[gotcha]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[tables]]></category>
		<category><![CDATA[temp tables]]></category>

		<guid isPermaLink="false">/index.php/2013/03/column-name-or-number-of/</guid>
		<description><![CDATA[The other day I was doing some testing and then from the same connection I executed a stored procedure only to be greeted with the following message

Msg 213, Level 16, State 1, Procedure prTestTemp, Line 5
Column name or number of supplied values do&#8230;]]></description>
				<content:encoded><![CDATA[<p>The other day I was doing some testing and then from the same connection I executed a stored procedure only to be greeted with the following message</p>
<p>Msg 213, Level 16, State 1, Procedure prTestTemp, Line 5<br />
Column name or number of supplied values does not match table definition.</p>
<p>I looked at the proc, hasn&#8217;t changed in months, I decided to run it from a different window and no problem. I took me a couple of minutes to realize what was going on.</p>
<p>Let&#8217;s duplicate this here with some code that you can run. Make sure that you run the code all in the same window</p>
<p>First create this stored procedure, do not close this window after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> prTestTemp
<span class="kw1">AS</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #temp <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #temp
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE prTestTemp
AS

CREATE TABLE #temp (id int)
INSERT #temp VALUES(1)

SELECT * FROM #temp
GO</pre></div></div>

<p>In the same window now create the following temp table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>id <span class="kw1">int</span>, id2 <span class="kw1">int</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #temp <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #temp</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #temp (id int, id2 int)
INSERT #temp VALUES(1,2)

SELECT * FROM #temp</pre></div></div>

<p>Now run the procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> prTestTemp</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC prTestTemp</pre></div></div>

<p>Here is the error<br />
<em>Msg 213, Level 16, State 1, Procedure prTestTemp, Line 5<br />
Column name or number of supplied values does not match table definition.</em></p>
<p>Drop the table and we will try again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TABLE</span> #temp</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TABLE #temp</pre></div></div>

<p>Run the procedure again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> prTestTemp</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC prTestTemp</pre></div></div>

<p>This time there was no error</p>
<p>Let&#8217;s do another experiment, create the table again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>id <span class="kw1">int</span>, id2 <span class="kw1">int</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #temp <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #temp</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #temp (id int, id2 int)
INSERT #temp VALUES(1,2)

SELECT * FROM #temp</pre></div></div>

<p>Now, let&#8217;s try modifying the procedure, change create to alter and run it again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">PROCEDURE</span> prTestTemp
<span class="kw1">AS</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #temp <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #temp
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER PROCEDURE prTestTemp
AS

CREATE TABLE #temp (id int)
INSERT #temp VALUES(1)

SELECT * FROM #temp
GO</pre></div></div>

<p>Here is the error<br />
<em>Msg 213, Level 16, State 1, Procedure prTestTemp, Line 5<br />
Column name or number of supplied values does not match table definition.</em></p>
<p>As you can see, you can&#8217;t modify the procedure in the same window, copy and paste the code in another window and you won&#8217;t have a problem.</p>
<p>The reason you run into this because the temporary table is local to your connection, it is not dropped until you close the connection. If you have a temporary table with the same name inside a proc that you try to execute you will run into this problem. One way to avoid this is by not naming a temporary table the same in every stored procedure that you have, for example #temp</p>
<p>BTW, doing something like this is no problem</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> prTestTemp2
<span class="kw1">AS</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>id <span class="kw1">int</span>, id2 <span class="kw1">int</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #temp <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> #temp
&nbsp;
<span class="kw1">EXEC</span> prTestTemp
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE prTestTemp2
AS
 
CREATE TABLE #temp (id int, id2 int)
INSERT #temp VALUES(1,2)
 
SELECT * FROM #temp

EXEC prTestTemp
GO</pre></div></div>

<p>As you can see both procedure have a temporary table named #temp and you get back two resultsets, one has 1 column, the other one has 2 columns</p>
<p>Just be aware of how this works because you could be scratching your head for hours trying to figure something like this out</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/column-name-or-number-of/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>Getting file size, space used and space free information for a SQL Server database</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/getting-file-size-space-used/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/getting-file-size-space-used/#comments</comments>
		<pubDate>Wed, 13 Feb 2013 18:14:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/getting-file-size-space-used/</guid>
		<description><![CDATA[Sometimes you want to quickly see how many files a database has, how much space a file is using and how much space is free. You can use the sysfiles/sys.files views or compatible views for that. From SQL Server 2005 onward you can also use the sys.datab&#8230;]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see how many files a database has, how much space a file is using and how much space is free. You can use the sysfiles/sys.files views or compatible views for that. From SQL Server 2005 onward you can also use the sys.database_files catalog view. </p>
<p>The sizes in these files are stored in 8k pages, in order to get the size in MB you need to divide by 128. If something is 131072 8K pages and you divide it by 128 you will get 1024</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">131072</span><span class="sy0">/</span><span class="nu0">128.0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 131072/128.0</pre></div></div>

<p>That query gives you 1024</p>
<p>For SQL Server 2000 and up you can use this query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; a.<span class="me1">FILEID</span> <span class="kw1">AS</span> <span class="kw2">file_id</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>file_size_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>space_used_mb<span class="br0">&#93;</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>free_space_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; a.<span class="me1">NAME</span> <span class="kw1">AS</span> name,
&nbsp; &nbsp; a.<span class="me1">FILENAME</span> <span class="kw1">AS</span> physical_name
<span class="kw1">FROM</span>
&nbsp; &nbsp; sysfiles a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	a.FILEID AS file_id,
	CONVERT(DECIMAL(12,2),ROUND(a.size/128.000,2)) AS [file_size_mb],
	CONVERT(DECIMAL(12,2),ROUND(FILEPROPERTY(a.name,'SpaceUsed')/128.000,2)) AS [space_used_mb] ,
	CONVERT(DECIMAL(12,2),ROUND((a.size-FILEPROPERTY(a.name,'SpaceUsed'))/128.000,2)) AS [free_space_mb],
	a.NAME AS name,
	a.FILENAME AS physical_name
FROM
	sysfiles a</pre></div></div>

<p>For SQL Server 2005 and up you can use the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; a.<span class="me1">FILEID</span> <span class="kw1">AS</span> <span class="kw2">file_id</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>file_size_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>space_used_mb<span class="br0">&#93;</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>free_space_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; a.<span class="me1">NAME</span> <span class="kw1">AS</span> name,
&nbsp; &nbsp; a.<span class="me1">FILENAME</span> <span class="kw1">AS</span> physical_name
<span class="kw1">FROM</span>
&nbsp; &nbsp; sys.<span class="me1">sysfiles</span> a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	a.FILEID AS file_id,
	CONVERT(DECIMAL(12,2),ROUND(a.size/128.000,2)) AS [file_size_mb],
	CONVERT(DECIMAL(12,2),ROUND(FILEPROPERTY(a.name,'SpaceUsed')/128.000,2)) AS [space_used_mb] ,
	CONVERT(DECIMAL(12,2),ROUND((a.size-FILEPROPERTY(a.name,'SpaceUsed'))/128.000,2)) AS [free_space_mb],
	a.NAME AS name,
	a.FILENAME AS physical_name
FROM
	sys.sysfiles a</pre></div></div>

<p>The only difference between the two queries is that the top query uses the system table sysfiles  while the query below it uses the sys.sysfiles compatibility view</p>
<p>You can also use the sys.database_files catalog view from SQL Server 2005 onward. Here is what the query looks like, it is mostly the same except for some column names</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; a.<span class="kw2">file_id</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span>a.<span class="kw1">size</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>file_size_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>space_used_mb<span class="br0">&#93;</span> ,
&nbsp; &nbsp; <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="nu0">2</span><span class="br0">&#41;</span>,<span class="kw2">ROUND</span><span class="br0">&#40;</span><span class="br0">&#40;</span>a.<span class="me1">size</span><span class="sy0">-</span><span class="kw2">FILEPROPERTY</span><span class="br0">&#40;</span>a.<span class="me1">name</span>,<span class="st0">'SpaceUsed'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">128.000</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#91;</span>free_space_mb<span class="br0">&#93;</span>,
&nbsp; &nbsp; name,
&nbsp; &nbsp; a.<span class="me1">physical_name</span>
<span class="kw1">FROM</span>
&nbsp;sys.<span class="me1">database_files</span> a</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
	a.file_id ,
	CONVERT(DECIMAL(12,2),ROUND(a.size/128.000,2)) AS [file_size_mb],
	CONVERT(DECIMAL(12,2),ROUND(FILEPROPERTY(a.name,'SpaceUsed')/128.000,2)) AS [space_used_mb] ,
	CONVERT(DECIMAL(12,2),ROUND((a.size-FILEPROPERTY(a.name,'SpaceUsed'))/128.000,2)) AS [free_space_mb],
	name,
	a.physical_name
FROM
 sys.database_files a</pre></div></div>

<p>This post will be added to the informational section of SQLCop</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/getting-file-size-space-used/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Discovering new things (for me) in SSMS</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/#comments</comments>
		<pubDate>Sun, 10 Feb 2013 12:42:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[ssms]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/discovering-new-things-for-me/</guid>
		<description><![CDATA[One of the good things about working in technology is that you always will discover new things. The other day I created a blog post: Listing all your SQL Server databases ordered by size. Buck Woody replied to me on twitter that this is also built into&#8230;]]></description>
				<content:encoded><![CDATA[<p>One of the good things about working in technology is that you always will discover new things. The other day I created a blog post: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/listing-all-your-sql-server">Listing all your SQL Server databases ordered by size</a>. Buck Woody replied to me on twitter that this is also built into SSMS. He tweeted the following link: <a href="http://blogs.msdn.com/b/buckwoody/archive/2008/09/02/selecting-columns-to-display-in-ssms.aspx">Selecting Columns to Display in SSMS</a></p>
<p>I decided to check it out. I knew already about the details pane, I use it all the time if I need to script more than one object. I blogged about it here as well: <a href="/index.php/DataMgmt/DBProgramming/scripting-all-jobs-on-sql-server-2005-20">Scripting all jobs on SQL Server 2005/2008 into one file</a></p>
<p>What I did not know is that you can change the columns that are shown. Click on he databases folder in SSMS and press F7, this will bring up the details pane, it looks somewhat like the image below</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails.PNG?mtime=1360507029"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails.PNG?mtime=1360507029" width="926" height="343" /></a></div>
<p>Right click on any of the columns and you will see the following menu</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTailsChoose.PNG?mtime=1360507043"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTailsChoose.PNG?mtime=1360507043" width="247" height="497" /></a></div>
<p>Now I don&#8217;t care for some of the things that are shown by default, I unchecked some of them and checked others. Here is what it looks like now, much better for what I need to see at a glance</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails2.PNG?mtime=1360507051"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/Oracle/DatabasesDeTails2.PNG?mtime=1360507051" width="860" height="342" /></a></div>
<p>You can sort the results by clicking on a column, click it again and it is sorted in the reversed order<br />
Did you know that if you do CTRL + A, CTRL + C, it copies it as TAB delimited, just paste it into Excel</p>
<p>What about you, what &#8216;new&#8217; things have you discovered in SSMS?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/discovering-new-things-for-me/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Getting the tables with the most rows from your database</title>
		<link>/index.php/datamgmt/dbprogramming/getting-the-tables-with-the/</link>
		<comments>/index.php/datamgmt/dbprogramming/getting-the-tables-with-the/#respond</comments>
		<pubDate>Fri, 08 Feb 2013 15:50:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/getting-the-tables-with-the/</guid>
		<description><![CDATA[Sometimes you want to quickly see what tables have the most rows in your database. This is especially rue if you inherited a new database and you want to know some stats about this database. Instead of doing a count(*) against every table, I usually just use the sp_spaceused stored procedure. this will run many times faster, usually it is instantaneous.]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see what tables have the most rows in your database. This is especially true if you inherited a new database and you want to know some stats about this database. Instead of doing a count(*) against every table, I usually just use the sp_spaceused stored procedure. this will run many times faster, usually it is instantaneous. </p>
<p>Just be aware of these remarks from Books On Line</p>
<blockquote><p>When you drop or rebuild large indexes, or drop or truncate large tables, the Database Engine defers the actual page deallocations, and their associated locks, until after the transaction commits. Deferred drop operations do not release allocated space immediately. Therefore, the values returned by sp_spaceused immediately after dropping or truncating a large object may not reflect the actual disk space available. </p></blockquote>
<p>You could use updateusage but I don&#8217;t bother, I just want to get a rough count</p>
<p>Here is the query that will give you that</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">rows</span> <span class="kw1">int</span>,reserved <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">data</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,index_size &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,unused &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #loop <span class="br0">&#40;</span>id <span class="kw1">int</span> <span class="kw1">identity</span>, name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #loop
<span class="kw1">SELECT</span> SCHEMA_NAME<span class="br0">&#40;</span>schema_id<span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">'.'</span> <span class="sy0">+</span> name 
<span class="kw1">FROM</span> sys.<span class="me1">tables</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'U'</span>
&nbsp;
&nbsp;
<span class="kw1">SET</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>
<span class="kw1">DECLARE</span> @LoopId <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @MaxID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @cmd <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1100</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @TableName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> @LoopId<span class="sy0">=</span> <span class="nu0">1</span>
<span class="kw1">SELECT</span> @MaxID <span class="sy0">=</span> <span class="kw2">max</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">from</span> #loop
&nbsp;
<span class="kw1">WHILE</span> @LoopId <span class="sy0">&lt;=</span> @MaxID
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> <span class="st0">'insert #temp exec sp_spaceused '</span><span class="st0">''</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @TableName <span class="sy0">=</span> name <span class="kw1">from</span> #loop <span class="kw1">where</span> id <span class="sy0">=</span> @LoopId
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> @cmd <span class="sy0">+</span> @TableName <span class="sy0">+</span> <span class="st0">''</span><span class="st0">''</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">EXEC</span><span class="br0">&#40;</span> @cmd <span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SET</span> @LoopId <span class="sy0">=</span> @LoopId <span class="sy0">+</span> <span class="nu0">1</span>
<span class="kw1">END</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> name, <span class="kw1">rows</span> 
<span class="kw1">FROM</span> #temp
<span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="kw1">rows</span> <span class="kw1">DESC</span>
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #temp, #loop</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #temp (name varchar(100), rows int,reserved varchar(100), data varchar(100),index_size  varchar(100),unused  varchar(100))

CREATE TABLE #loop (id int identity, name varchar(1000))
INSERT #loop
SELECT SCHEMA_NAME(schema_id) +'.' + name 
FROM sys.tables
WHERE type = 'U'


SET NOCOUNT ON
DECLARE @LoopId int
DECLARE @MaxID int
DECLARE @cmd varchar(1100)
DECLARE @TableName varchar(1000)


SELECT @LoopId= 1
SELECT @MaxID = max(id) from #loop

WHILE @LoopId &lt;= @MaxID
BEGIN
	SELECT @cmd = 'insert #temp exec sp_spaceused '''
	SELECT @TableName = name from #loop where id = @LoopId
	SELECT @cmd = @cmd + @TableName + ''''

	EXEC( @cmd )


	SET @LoopId = @LoopId + 1
END


SELECT TOP 10 name, rows 
FROM #temp
ORDER BY rows DESC

DROP TABLE #temp, #loop</pre></div></div>

<p>This post is part of the informational section of SQLCop. I have written the SQL in this way because I want SQLCop to be able to run this against a SQL Server 2000 instance</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/getting-the-tables-with-the/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Getting the biggest tables in your SQL Server database</title>
		<link>/index.php/datamgmt/dbprogramming/getting-the-biggest-tables-in/</link>
		<comments>/index.php/datamgmt/dbprogramming/getting-the-biggest-tables-in/#comments</comments>
		<pubDate>Fri, 08 Feb 2013 08:07:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[sqlcop]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2013/02/getting-the-biggest-tables-in/</guid>
		<description><![CDATA[Sometimes you want to quickly see what the biggest tables are in your database. Maybe someone just gave you a brand new database and you want to see which tables take up the most space. I usually use the sp_spaceused stored procedure, it runs quickly and gives me the data that I need. Just be aware of these remarks]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see what the biggest tables are in your database. Maybe someone just gave you a brand new database and you want to see which tables take up the most space. I usually use the sp_spaceused stored procedure, it runs quickly and gives me the data that I need. Just be aware of these remarks</p>
<blockquote><p>When you drop or rebuild large indexes, or drop or truncate large tables, the Database Engine defers the actual page deallocations, and their associated locks, until after the transaction commits. Deferred drop operations do not release allocated space immediately. Therefore, the values returned by sp_spaceused immediately after dropping or truncating a large object may not reflect the actual disk space available. </p></blockquote>
<p>You could use updateusage but I don&#8217;t bother, I just want to get a rough size</p>
<p>Here is the query that will give you the 10 biggest tables in your SQL Server database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #temp <span class="br0">&#40;</span>name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">rows</span> <span class="kw1">int</span>,reserved <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, <span class="kw1">data</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,index_size &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,unused &nbsp;<span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> #loop <span class="br0">&#40;</span>id <span class="kw1">int</span> <span class="kw1">identity</span>, name <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> #loop
<span class="kw1">SELECT</span> SCHEMA_NAME<span class="br0">&#40;</span>schema_id<span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">'.'</span> <span class="sy0">+</span> name 
<span class="kw1">FROM</span> sys.<span class="me1">tables</span>
<span class="kw1">WHERE</span> type <span class="sy0">=</span> <span class="st0">'U'</span>
&nbsp;
&nbsp;
<span class="kw1">SET</span> <span class="kw1">NOCOUNT</span> <span class="kw1">ON</span>
<span class="kw1">DECLARE</span> @LoopId <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @MaxID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @cmd <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1100</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @TableName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> @LoopId<span class="sy0">=</span> <span class="nu0">1</span>
<span class="kw1">SELECT</span> @MaxID <span class="sy0">=</span> <span class="kw2">max</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">from</span> #loop
&nbsp;
<span class="kw1">WHILE</span> @LoopId <span class="sy0">&lt;=</span> @MaxID
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> <span class="st0">'insert #temp exec sp_spaceused '</span><span class="st0">''</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @TableName <span class="sy0">=</span> name <span class="kw1">from</span> #loop <span class="kw1">where</span> id <span class="sy0">=</span> @LoopId
&nbsp; &nbsp; <span class="kw1">SELECT</span> @cmd <span class="sy0">=</span> @cmd <span class="sy0">+</span> @TableName <span class="sy0">+</span> <span class="st0">''</span><span class="st0">''</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">EXEC</span><span class="br0">&#40;</span> @cmd <span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SET</span> @LoopId <span class="sy0">=</span> @LoopId <span class="sy0">+</span> <span class="nu0">1</span>
<span class="kw1">END</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> #temp
<span class="kw1">ORDER</span> <span class="kw1">BY</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">bigint</span>,<span class="kw2">REPLACE</span><span class="br0">&#40;</span>reserved,<span class="st0">' KB'</span>,<span class="st0">''</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">DESC</span>
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> #temp, #loop</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE #temp (name varchar(100), rows int,reserved varchar(100), data varchar(100),index_size  varchar(100),unused  varchar(100))

CREATE TABLE #loop (id int identity, name varchar(1000))
INSERT #loop
SELECT SCHEMA_NAME(schema_id) +'.' + name 
FROM sys.tables
WHERE type = 'U'


SET NOCOUNT ON
DECLARE @LoopId int
DECLARE @MaxID int
DECLARE @cmd varchar(1100)
DECLARE @TableName varchar(1000)


SELECT @LoopId= 1
SELECT @MaxID = max(id) from #loop

WHILE @LoopId &lt;= @MaxID
BEGIN
	SELECT @cmd = 'insert #temp exec sp_spaceused '''
	SELECT @TableName = name from #loop where id = @LoopId
	SELECT @cmd = @cmd + @TableName + ''''

	EXEC( @cmd )


	SET @LoopId = @LoopId + 1
END


SELECT TOP 10 * 
FROM #temp
ORDER BY CONVERT(bigint,REPLACE(reserved,' KB','')) DESC

DROP TABLE #temp, #loop</pre></div></div>

<p>This post is part of the informational section of SQLCop, this is why I wrote the code in such a way that you can still run it against a SQL Server 2000 instance.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/getting-the-biggest-tables-in/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012, here is what is coming</title>
		<link>/index.php/datamgmt/dbprogramming/sql-advent-2012-here-is/</link>
		<comments>/index.php/datamgmt/dbprogramming/sql-advent-2012-here-is/#comments</comments>
		<pubDate>Sun, 25 Nov 2012 22:40:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2012/11/sql-advent-2012-here-is/</guid>
		<description><![CDATA[I decided to do a SQL Advent series of posts this year as well, this year I will focus on best practices. In case you are interested in last year's posts, all of them are listed here: SQL Advent 2011 Recap

Here is what the preliminary 25 posts will l&#8230;]]></description>
				<content:encoded><![CDATA[<p>I decided to do a SQL Advent series of posts this year as well, this year I will focus on best practices. In case you are interested in last year&#8217;s posts, all of them are listed here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
<p>Here is what the 25 posts will look like, the order that the posts are listed is not the same that they will be posted, I will randomly pick and choose</p>
<p>1 <a href="/index.php/DataMgmt/DBProgramming/data-types">Data types storage differences</a><br />
2 <a href="/index.php/DataMgmt/DBProgramming/sargable-queries">Sargable queries</a><br />
3 Recap<br />
4 <a href="/index.php/DataMgmt/DBProgramming/triggers-what-to-do-what">Triggers, what to do, what not to do</a><br />
5 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sizing-database-files">Sizing Files</a><br />
6 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/benefits-of-indexes">Benefits of Indexes</a><br />
7 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/foreign-keys">Foreign Keys</a><br />
8 <a href="/index.php/DataMgmt/DBProgramming/standardized-naming-and-other-conventions">Standardized naming conventions</a><br />
9 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/do-not-trust-the-ssms">Don’t trust the designers</a><br />
10 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">Lack of constraints</a><br />
11 <a href="/index.php/DataMgmt/business-intelligence-1/when-to-say-no">When to say no</a><br />
12 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/features-enabled-that-are-not">Features enabled that are not used</a><br />
13 <a href="/index.php/DataMgmt/business-intelligence-1/sql-server-maintenance">Maintenance</a><br />
14 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/proactive-notifications">Proactive notifications</a><br />
15 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2012-day-10">Reinventing the wheel</a><br />
16 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/cursors-and-loops">Loops and cursors</a><br />
17 <a href="/index.php/DataMgmt/DataDesign/lack-of-database-design-and">Lack of database design and normalization</a><br />
18 <a href="/index.php/DataMgmt/business-intelligence-1/use-the-new-features">Use the new features</a><br />
19 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/stay-relevant-and-marketable">Stay relevant and marketable</a><br />
20 <a href="/index.php/DataMgmt/business-intelligence-1/get-the-tools-you-need">Get the tools you need to be more productive</a><br />
21 <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/getting-help">How to get help</a><br />
22 <a href="/index.php/DataMgmt/business-intelligence-1/testing-your-backup-and-failoverhttp:///index.php/DataMgmt/business-intelligence-1/testing-your-backup-and-failover">Testing a backup strategy</a><br />
23 <a href="/index.php/DataMgmt/business-intelligence-1/no-matter-how-long-you">No matter how long you are on the wrong path, go back</a><br />
24 <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/with-vldbs-it-matters-what">With VLDBs it matters what you do and how you do it</a><br />
25 <a href="/index.php/DataMgmt/DBProgramming/how-to-improve-your-tech">How to improve your tech skills</a></p>
<p>Let me know if that list seems fine or if you would like to see something else, also let me know in which topic you have absolutely no interest in</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sql-advent-2012-here-is/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2011 Recap</title>
		<link>/index.php/datamgmt/datadesign/sql-advent-2011-recap/</link>
		<comments>/index.php/datamgmt/datadesign/sql-advent-2011-recap/#respond</comments>
		<pubDate>Sun, 25 Dec 2011 10:22:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-advent-2011-recap/</guid>
		<description><![CDATA[Here is a recap of all the 24 SQL Advent 2011 posts
Day 1: Date and time
In this post I covered the new date, datetime2 and time datatypes
  
Day 2: System tables and catalog views
In this post we took a look what the replacements are for the all s&#8230;]]></description>
				<content:encoded><![CDATA[<p>SQL Advent 2011 has come to an end. I had lots of fun writing these but I wished I started earlier instead of 2 days before December 1, on some days I was really racing against the clock and I feel like I made some posts much shorter than I had in mind initially. But it is what it is, I hope you enjoyed them, maybe I will do this again next year.</p>
<p>Here is a recap of all the 24 SQL Advent 2011 posts.</p>
<p>Day 1: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-1">Date and time</a><br />
In this post I covered the new date, datetime2 and time datatypes</p>
<p>Day 2: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sql-advent-2011-day-2">System tables and catalog views</a><br />
In this post we took a look what the replacements are for the all system tables and also gave you a table with the new catalog view/compatibility view equivalent of the old system table</p>
<p>Day 3: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-3">Partitioning</a><br />
In this post I looked at partitioning in pre sql 2005 days by showing you how to create partitioned views. I also showed you how to user partitioned function in sql 2005 and up</p>
<p>Day 4: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-4">Schemas</a><br />
In this post I show you what schemas are and how they can help with security and logical grouping of objects</p>
<p>Day 5: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-5">Common Table Expressions</a><br />
The Common Table Expressions post showed you what Common Table Expressions are and how they can be used to simplify your code</p>
<p>Day 6: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-6">Windowing functions</a><br />
The Windowing functions post showed you how to do different kinds of rankings</p>
<p>Day 7: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-7">Crosstab with PIVOT</a><br />
This post was all about pivoting/transposing/crosstabbing data with the PIVOT operator, also was shown how to do it dynamically</p>
<p>Day 8: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-8">UNPIVOT</a><br />
This post showed you how to use UNPIVOT to get the reversed effect of PIVOT</p>
<p>Day 9: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-9">Dynamic TOP</a><br />
The dynamic TOP post showed you how to do dynamic TOP without dynamic SQL or SET ROWCOUNT</p>
<p>Day 10: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-10">Upsert by using the Merge statement</a><br />
This post was all about how to use MERGE to do an UPSERT (Update if it exists otherwise insert)</p>
<p>Day 11: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-11">DML statements with the OUTPUT clause</a><br />
This post showed the usefulness of the OUTPUT clause</p>
<p>Day 12: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-12">Table Value Constructor</a><br />
This post showed you how to use Table Value Constructor</p>
<p>Day 13: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sql-advent-2011-day-13">DDL Triggers</a><br />
The DDL trigger post showed you how to use DDL triggers and also explained why you might want to use them</p>
<p>Day 14: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-14">EXCEPT and INTERSECT SET Operations</a><br />
This post was all about the two new SET Operations EXCEPT and INTERSECT </p>
<p>Day 15: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-15">Joins</a><br />
This post showed you how to use the newer ANSI SQL JOIN syntax and also showed you what was deprecated</p>
<p>Day 16: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-16">CROSS APPLY and OUTER APPLY</a><br />
Shown was how to use APPLY with derived tables as well as functions</p>
<p>Day 17: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-17">varchar(max)</a><br />
In this post I showed you why varchar(max) is much better than the text data type</p>
<p>Day 18: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-advent-2011-day-18">Table-valued Parameters</a><br />
I showed you how to use Table-valued Parameters to pass around tables</p>
<p>Day 19: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/sql-advent-2011-day-19">Filtered Indexes</a><br />
In this post I showed you how to create a filtered index and why it can be beneficial in your database</p>
<p>Day 20: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-day-20">Indexes with Included Columns</a><br />
On this day I showed you how to cover you query by using Indexes with Included Columns</p>
<p>Day 21: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/try-catch-sql-advent-2011">TRY CATCH</a><br />
Error handling go better in SQL Server 2005 and I show you how to use TRY CATCH</p>
<p>Day 22: <a href="/index.php/DataMgmt/DataDesign/dynamic-management-views">Dynamic Management Views</a><br />
In this post I show how you can use Dynamic Management Views to get all kinds of information about your server and databases</p>
<p>Day 23: <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/object_definition-sql-advent-2011-day">OBJECT_DEFINITION</a><br />
The OBJECT_DEFINITION covers ways to get the text of an object and also show you why it is better than sp_helptext or syscomments</p>
<p>Day 24: <a href="/index.php/DataMgmt/DataDesign/index-rebuild-and-reorganize-sql">Index REBUILD and REORGANIZE</a><br />
This post is all about rebuilding and reorganizing(defragmenting) indexes</p>
<p>There are tons of other things that I did not cover, here is just a small list of them</p>
<p>SQLCLR<br />
ServiceBroker<br />
FILESTREAM<br />
Geometry, Geography and HierarchyID data types<br />
Transparent Data Encryption<br />
DB Mirroring<br />
Policy Management<br />
Resource Governor</p>
<p>Tomorrow we will finally look at some new and shiny T-SQL enhancements in SQL Server 2012, I will provide a list of all the new  SQL Server 2012 post I have written in the last 6 months or so</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sql-advent-2011-recap/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2011 Day 5: Common Table Expressions</title>
		<link>/index.php/datamgmt/datadesign/sql-advent-2011-day-5/</link>
		<comments>/index.php/datamgmt/datadesign/sql-advent-2011-day-5/#comments</comments>
		<pubDate>Mon, 05 Dec 2011 03:12:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[common table expression]]></category>
		<category><![CDATA[cte]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-advent-2011-day-5/</guid>
		<description><![CDATA[In my Are you ready for SQL Server 2012 or are you still partying like it is 1999? post, I wrote about how you should start using SQL Server 2005 and SQL Server 2008 functionality now in order to prepare for SQL Server 2012. I still see tons of code tha&#8230;]]></description>
				<content:encoded><![CDATA[<p>In my <a href="/index.php/DataMgmt/DataDesign/are-you-ready-for-sql">Are you ready for SQL Server 2012 or are you still partying like it is 1999?</a> post, I wrote about how you should start using SQL Server 2005 and SQL Server 2008 functionality now in order to prepare for SQL Server 2012. I still see tons of code that is written in the pre 2005 style and people still keep using those functions, procs and statements even though SQL Server 2005 and 2008 have much better functionality.</p>
<p>In today&#8217;s post I will cover Common Table Expressions(CTEs). Common Table Expressions were introduced in SQL Server 2005 and you can think of them as a derived table in another form of a table expression.</p>
<p>The syntax looks like this</p>
<pre>[ WITH &lt;common_table_expression&gt; [ ,...n ] ]

&lt;common_table_expression&gt;::=
    expression_name [ ( column_name [ ,...n ] ) ]
    AS
    ( CTE_query_definition )

&lt;/common_table_expression&gt;&lt;/common_table_expression&gt;</pre>
<p>Here are the arguments:</p>
<p><strong>expression_name</strong><br />
Is a valid identifier for the common table expression. expression_name must be different from the name of any other common table expression defined in the same WITH <common_table_expression> clause, but expression_name can be the same as the name of a base table or view. Any reference to expression_name in the query uses the common table expression and not the base object.</p>
<p><strong>column_name</strong><br />
Specifies a column name in the common table expression. Duplicate names within a single CTE definition are not allowed. The number of column names specified must match the number of columns in the result set of the CTE_query_definition. The list of column names is optional only if distinct names for all resulting columns are supplied in the query definition.</p>
<p><strong>CTE_query_definition</strong><br />Specifies a SELECT statement whose result set populates the common table expression. The SELECT statement for CTE_query_definition must meet the same requirements as for creating a view, except a CTE cannot define another CTE. </p>
<p>If more than one CTE_query_definition is defined, the query definitions must be joined by one of these set operators: UNION ALL, UNION, EXCEPT, or INTERSECT.</p>
<p>
<hr />
<p>With Common Table Expressions you can use two form of table aliasing; external and internal. If the columns are aliased in the query definition itself then this is an internal alias</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="co1">--inline column alias</span>
;<span class="kw1">WITH</span> cte <span class="kw1">AS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">AS</span> col1,<span class="nu0">2</span> <span class="kw1">AS</span> col2<span class="br0">&#41;</span> 
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> cte</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">--inline column alias
;WITH cte AS (SELECT 1 AS col1,2 AS col2) 

SELECT * FROM cte</pre></div></div>

<p>If you supply the column names in the parentheses right after the Common Table Expression name then this is external aliasing</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="co1">-- external column alias</span>
;<span class="kw1">WITH</span> cte<span class="br0">&#40;</span>col1,col2<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span>,<span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> cte</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">-- external column alias
;WITH cte(col1,col2) AS (SELECT 1,2)

SELECT * FROM cte</pre></div></div>

<p>If you use both external and internal then the external names will show up in the result</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1">;<span class="kw1">WITH</span> cte<span class="br0">&#40;</span>bla,bla2<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">AS</span> col1,<span class="nu0">2</span> <span class="kw1">AS</span> col2<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> cte</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">;WITH cte(bla,bla2) AS (SELECT 1 AS col1,2 AS col2)

SELECT * FROM cte</pre></div></div>

<p>Output</p>
<pre>bla	bla2
-------------
1	2</pre>
<p></common_table_expression></p>
<p>Every Common Table Expression has to start with WITH, the statement before it has to be terminated with a semicolon. What you can do is start your Common Table Expression with semicolon followed by WITH (;WITH) this way if someone adds some code before your Common Table Expression it won&#8217;t mess up the proc or sql script</p>
<p>Here is an example of one Common Table Expression where the previous statement wasn&#8217;t terminated with a semicolon</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">1</span>
<span class="kw1">WITH</span> cte <span class="kw1">AS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">AS</span> col1,<span class="nu0">2</span> <span class="kw1">AS</span> col2<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> cte</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 1
WITH cte AS (SELECT 1 AS col1,2 AS col2)

SELECT * FROM cte</pre></div></div>

<p>And here is the error<br />
<em>Msg 319, Level 15, State 1, Line 2<br />
Incorrect syntax near the keyword &#8216;with&#8217;. If this statement is a common table expression, an xmlnamespaces clause or a change tracking context clause, the previous statement must be terminated with a semicolon.</em></p>
<p>Adding the semicolon before WITH fixes that</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="nu0">1</span>
;<span class="kw1">WITH</span> cte <span class="kw1">AS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">AS</span> col1,<span class="nu0">2</span> <span class="kw1">AS</span> col2<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> cte</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT 1
;WITH cte AS (SELECT 1 AS col1,2 AS col2)

SELECT * FROM cte</pre></div></div>

<p>Some more examples</p>
<h2>Paging with Common Table Expressions</h2>
<p>I will cover the windowing functions tomorrow but here is just a small example of how you can use a Common Table Expression to do paging</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> master
GO
&nbsp;
;<span class="kw1">WITH</span> cte <span class="kw1">AS</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span><span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> name<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">row</span>,<span class="sy0">*</span>
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">row</span>, name
<span class="kw1">FROM</span> cte
<span class="kw1">WHERE</span> <span class="kw1">row</span> <span class="sy0">BETWEEN</span> <span class="nu0">11</span> <span class="sy0">AND</span> <span class="nu0">20</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE master
GO

;WITH cte AS(SELECT ROW_NUMBER() OVER(ORDER BY name) AS row,*
FROM sys.sysobjects)

SELECT row, name
FROM cte
WHERE row BETWEEN 11 AND 20
GO</pre></div></div>

<p>Here are my results</p>
<p>row	name<br />
11	assembly_types<br />
12	asymmetric_keys<br />
13	availability_group_listener_ip_addresses<br />
14	availability_group_listeners<br />
15	availability_groups<br />
16	availability_read_only_routing_lists<br />
17	availability_replicas<br />
18	backup_devices<br />
19	certificates<br />
20	change_tracking_databases</p>
<p>Okay that is all fine, what if I want to also add a total count? You can reference a Common Table Expression more than once in a query so that is no problem, here is what the query looks like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1">;<span class="kw1">WITH</span> cte <span class="kw1">AS</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span><span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> name<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">row</span>,<span class="sy0">*</span>
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">SELECT</span> <span class="kw1">row</span>, name, <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">FROM</span> cte<span class="br0">&#41;</span> <span class="kw1">AS</span> TotalCount
<span class="kw1">FROM</span> cte
<span class="kw1">WHERE</span> <span class="kw1">row</span> <span class="sy0">BETWEEN</span> <span class="nu0">11</span> <span class="sy0">AND</span> <span class="nu0">20</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">;WITH cte AS(SELECT ROW_NUMBER() OVER(ORDER BY name) AS row,*
FROM sys.sysobjects)

SELECT row, name, (SELECT COUNT(*) FROM cte) AS TotalCount
FROM cte
WHERE row BETWEEN 11 AND 20
GO</pre></div></div>

<p>Here is another example that selects more than once from the same Common Table Expression</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1">;<span class="kw1">WITH</span> cte <span class="kw1">AS</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span><span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> name<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">row</span>,<span class="sy0">*</span>
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">as</span> TheCount,
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">Min</span><span class="br0">&#40;</span><span class="kw1">row</span><span class="br0">&#41;</span> <span class="kw1">from</span> cte<span class="br0">&#41;</span> <span class="kw1">as</span> MinRow,
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">Max</span><span class="br0">&#40;</span><span class="kw1">row</span><span class="br0">&#41;</span> <span class="kw1">from</span> cte<span class="br0">&#41;</span> <span class="kw1">as</span> MaxRow
<span class="kw1">FROM</span> cte</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">;WITH cte AS(SELECT ROW_NUMBER() OVER(ORDER BY name) AS row,*
FROM sys.sysobjects)


SELECT COUNT(*) as TheCount,
	(SELECT Min(row) from cte) as MinRow,
	(SELECT Max(row) from cte) as MaxRow
FROM cte</pre></div></div>

<p>However if you reference the Common Table Expression in more than one query you will get an error, run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1">;<span class="kw1">WITH</span> cte <span class="kw1">AS</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span><span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> name<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">row</span>,<span class="sy0">*</span>
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">as</span> TheCount <span class="kw1">from</span> cte
<span class="kw1">SELECT</span> <span class="kw2">Min</span><span class="br0">&#40;</span><span class="kw1">row</span><span class="br0">&#41;</span> <span class="kw1">from</span> cte <span class="kw1">as</span> MinRow</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">;WITH cte AS(SELECT ROW_NUMBER() OVER(ORDER BY name) AS row,*
FROM sys.sysobjects)


SELECT COUNT(*) as TheCount from cte
SELECT Min(row) from cte as MinRow</pre></div></div>

<p>Msg 208, Level 16, State 1, Line 6<br />
Invalid object name &#8216;cte&#8217;.</p>
<p>As you can see, you got an invalid object name error.</p>
<p>If you put a UNION in between the two queries, it will also work fine since it is considered one query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1">;<span class="kw1">WITH</span> cte <span class="kw1">AS</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> ROW_NUMBER<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">OVER</span><span class="br0">&#40;</span><span class="kw1">ORDER</span> <span class="kw1">BY</span> name<span class="br0">&#41;</span> <span class="kw1">AS</span> <span class="kw1">row</span>,<span class="sy0">*</span>
<span class="kw1">FROM</span> sys.<span class="me1">sysobjects</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
<span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">as</span> TheCount <span class="kw1">from</span> cte
<span class="kw1">union</span> all
<span class="kw1">SELECT</span> <span class="kw2">Min</span><span class="br0">&#40;</span><span class="kw1">row</span><span class="br0">&#41;</span> <span class="kw1">from</span> cte <span class="kw1">as</span> MinRow</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">;WITH cte AS(SELECT ROW_NUMBER() OVER(ORDER BY name) AS row,*
FROM sys.sysobjects)


SELECT COUNT(*) as TheCount from cte
union all
SELECT Min(row) from cte as MinRow</pre></div></div>

<p>You can also do multiple levels of recursion with Common Table Expression. Here is an example from <a href="http://msdn.microsoft.com/en-us/library/ms175972.aspx">books on line</a>. First create this table in the AdventureWorks2008R2 database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> AdventureWorks2008R2;
GO
&nbsp;
<span class="co1">-- Create an Employee table.</span>
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> dbo.<span class="me1">MyEmployees</span>
<span class="br0">&#40;</span>
&nbsp; &nbsp; EmployeeID <span class="kw1">smallint</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; FirstName <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">30</span><span class="br0">&#41;</span> &nbsp;<span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; LastName &nbsp;<span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">40</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; Title <span class="kw1">nvarchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; DeptID <span class="kw1">smallint</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>,
&nbsp; &nbsp; ManagerID <span class="kw1">int</span> <span class="sy0">NULL</span>,
&nbsp;<span class="kw1">CONSTRAINT</span> PK_EmployeeID <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">CLUSTERED</span> <span class="br0">&#40;</span>EmployeeID <span class="kw1">ASC</span><span class="br0">&#41;</span> 
<span class="br0">&#41;</span>;
<span class="co1">-- Populate the table with values.</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> dbo.<span class="me1">MyEmployees</span> <span class="kw1">VALUES</span> 
&nbsp;<span class="br0">&#40;</span><span class="nu0">1</span>, N<span class="st0">'Ken'</span>, N<span class="st0">'Sánchez'</span>, N<span class="st0">'Chief Executive Officer'</span>,<span class="nu0">16</span>,<span class="sy0">NULL</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">273</span>, N<span class="st0">'Brian'</span>, N<span class="st0">'Welcker'</span>, N<span class="st0">'Vice President of Sales'</span>,<span class="nu0">3</span>,<span class="nu0">1</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">274</span>, N<span class="st0">'Stephen'</span>, N<span class="st0">'Jiang'</span>, N<span class="st0">'North American Sales Manager'</span>,<span class="nu0">3</span>,<span class="nu0">273</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">275</span>, N<span class="st0">'Michael'</span>, N<span class="st0">'Blythe'</span>, N<span class="st0">'Sales Representative'</span>,<span class="nu0">3</span>,<span class="nu0">274</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">276</span>, N<span class="st0">'Linda'</span>, N<span class="st0">'Mitchell'</span>, N<span class="st0">'Sales Representative'</span>,<span class="nu0">3</span>,<span class="nu0">274</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">285</span>, N<span class="st0">'Syed'</span>, N<span class="st0">'Abbas'</span>, N<span class="st0">'Pacific Sales Manager'</span>,<span class="nu0">3</span>,<span class="nu0">273</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">286</span>, N<span class="st0">'Lynn'</span>, N<span class="st0">'Tsoflias'</span>, N<span class="st0">'Sales Representative'</span>,<span class="nu0">3</span>,<span class="nu0">285</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">16</span>, &nbsp;N<span class="st0">'David'</span>,N<span class="st0">'Bradley'</span>, N<span class="st0">'Marketing Manager'</span>, <span class="nu0">4</span>, <span class="nu0">273</span><span class="br0">&#41;</span>
,<span class="br0">&#40;</span><span class="nu0">23</span>, &nbsp;N<span class="st0">'Mary'</span>, N<span class="st0">'Gibson'</span>, N<span class="st0">'Marketing Specialist'</span>, <span class="nu0">4</span>, <span class="nu0">16</span><span class="br0">&#41;</span>;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE AdventureWorks2008R2;
GO

-- Create an Employee table.
CREATE TABLE dbo.MyEmployees
(
	EmployeeID smallint NOT NULL,
	FirstName nvarchar(30)  NOT NULL,
	LastName  nvarchar(40) NOT NULL,
	Title nvarchar(50) NOT NULL,
	DeptID smallint NOT NULL,
	ManagerID int NULL,
 CONSTRAINT PK_EmployeeID PRIMARY KEY CLUSTERED (EmployeeID ASC) 
);
-- Populate the table with values.
INSERT INTO dbo.MyEmployees VALUES 
 (1, N'Ken', N'Sánchez', N'Chief Executive Officer',16,NULL)
,(273, N'Brian', N'Welcker', N'Vice President of Sales',3,1)
,(274, N'Stephen', N'Jiang', N'North American Sales Manager',3,273)
,(275, N'Michael', N'Blythe', N'Sales Representative',3,274)
,(276, N'Linda', N'Mitchell', N'Sales Representative',3,274)
,(285, N'Syed', N'Abbas', N'Pacific Sales Manager',3,273)
,(286, N'Lynn', N'Tsoflias', N'Sales Representative',3,285)
,(16,  N'David',N'Bradley', N'Marketing Manager', 4, 273)
,(23,  N'Mary', N'Gibson', N'Marketing Specialist', 4, 16);</pre></div></div>

<p>Now this is the query that will give you the first two levels of the employee hierarchy</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="de1"><pre class="de1"><span class="kw1">WITH</span> DirectReports<span class="br0">&#40;</span>ManagerID, EmployeeID, Title, EmployeeLevel<span class="br0">&#41;</span> <span class="kw1">AS</span> 
<span class="br0">&#40;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> ManagerID, EmployeeID, Title, <span class="nu0">0</span> <span class="kw1">AS</span> EmployeeLevel
&nbsp; &nbsp; <span class="kw1">FROM</span> dbo.<span class="me1">MyEmployees</span> 
&nbsp; &nbsp; <span class="kw1">WHERE</span> ManagerID <span class="kw1">IS</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; <span class="kw1">UNION</span> <span class="sy0">ALL</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> e.<span class="me1">ManagerID</span>, e.<span class="me1">EmployeeID</span>, e.<span class="me1">Title</span>, EmployeeLevel <span class="sy0">+</span> <span class="nu0">1</span>
&nbsp; &nbsp; <span class="kw1">FROM</span> dbo.<span class="me1">MyEmployees</span> <span class="kw1">AS</span> e
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">INNER</span> <span class="sy0">JOIN</span> DirectReports <span class="kw1">AS</span> d
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">ON</span> e.<span class="me1">ManagerID</span> <span class="sy0">=</span> d.<span class="me1">EmployeeID</span> 
<span class="br0">&#41;</span>
<span class="kw1">SELECT</span> ManagerID, EmployeeID, Title, EmployeeLevel 
<span class="kw1">FROM</span> DirectReports
<span class="kw1">WHERE</span> EmployeeLevel <span class="sy0">&lt;=</span> <span class="nu0">2</span> ;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">WITH DirectReports(ManagerID, EmployeeID, Title, EmployeeLevel) AS 
(
    SELECT ManagerID, EmployeeID, Title, 0 AS EmployeeLevel
    FROM dbo.MyEmployees 
    WHERE ManagerID IS NULL
    UNION ALL
    SELECT e.ManagerID, e.EmployeeID, e.Title, EmployeeLevel + 1
    FROM dbo.MyEmployees AS e
        INNER JOIN DirectReports AS d
        ON e.ManagerID = d.EmployeeID 
)
SELECT ManagerID, EmployeeID, Title, EmployeeLevel 
FROM DirectReports
WHERE EmployeeLevel &lt;= 2 ;
GO</pre></div></div>

<p></p>
<pre>ManagerID   EmployeeID Title                                    EmployeeLevel
----------- ---------- -------------------------------------------------- ---
NULL        1          Chief Executive Officer                            0
1           273        Vice President of Sales                            1
273         16         Marketing Manager                                  2
273         274        North American Sales Manager                       2
273         285        Pacific Sales Manager                              2</pre>
<p>You can also limit the number of recursions by applying a hint, for example OPTION (MAXRECURSION 5), that will limit it to 5 levels.</p>
<p>Besides just selecting from Common Table Expression you can also manipulate data through them, the underlying tables will then have the changes. See my post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/use-common-table-expressions-to-simplify-your-updates-in-sql-server">Use common table expressions to simplify your updates in SQL Server</a> to learn more about that</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sql-advent-2011-day-5/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Use alter table alter column to change datatypes for a column in SQL Server</title>
		<link>/index.php/datamgmt/datadesign/use-alter-table-alter-column-to-change-d/</link>
		<comments>/index.php/datamgmt/datadesign/use-alter-table-alter-column-to-change-d/#respond</comments>
		<pubDate>Tue, 19 Jan 2010 16:10:48 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[tables]]></category>

		<guid isPermaLink="false">/index.php/2010/01/use-alter-table-alter-column-to-change-d/</guid>
		<description><![CDATA[This question popped in the microsoft.public.sqlserver.programming forum yesterday. A person wanted to change a column from varchar 500 to varchar 2000. This is actually pretty easy to do in SQL Server, you can use the alter table alter column command Let&#8217;s take a quick look at how this works First create this table T-SQL1 2 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This question popped in the<a href="http://groups.google.com/group/microsoft.public.sqlserver.programming/browse_thread/thread/91c5da9982cfb1cf?hl=en#"> microsoft.public.sqlserver.programming</a> forum yesterday. A person wanted to change a column from varchar 500 to varchar 2000. This is actually pretty easy to do in SQL Server, you can use the <em>alter table alter column</em> command<br />
Let&#8217;s take a quick look at how this works<br />
First create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span> <span class="br0">&#40;</span>
<span class="br0">&#91;</span>id<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">int</span><span class="br0">&#93;</span> <span class="kw1">IDENTITY</span> <span class="br0">&#40;</span><span class="nu0">1</span>, <span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> ,
<span class="br0">&#91;</span>itemdate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">datetime</span><span class="br0">&#93;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> ,
<span class="br0">&#91;</span>title<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> ,
<span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE [TestTable] (
[id] [int] IDENTITY (1, 1) NOT NULL ,
[itemdate] [datetime] NOT NULL ,
[title] [varchar] (500) NOT NULL ,
) ON [PRIMARY]</pre></div></div>

<p>Now insert one row of data</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">insert</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span>
<span class="kw1">select</span> <span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="st0">'bla'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">insert [TestTable]
select getdate(),'bla'</pre></div></div>

<p>Now do a simple select and verify that you have one row of data</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from [TestTable]</pre></div></div>

<p>Results</p>
<pre>id          itemdate                title
----------- ----------------------- ----------
1           2010-01-18 17:28:19.820 bla</pre>
<p>We will change the column from varchar 500 to varchar 2000. All you have to do is alter table [table name] alter column [column name] [new data type and length]<br />
So in this case the command would look like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">alter</span> <span class="kw1">table</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span> <span class="kw1">alter</span> <span class="kw1">column</span> <span class="br0">&#91;</span>title<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="nu0">2000</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">alter table [TestTable] alter column [title] [varchar] (2000)</pre></div></div>

<p>To verify that indeed the column is now varchar 2000 run the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH
<span class="kw1">from</span> <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">COLUMNS</span>
<span class="kw1">where</span> table_name <span class="sy0">=</span> <span class="st0">'TestTable'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH
from INFORMATION_SCHEMA.COLUMNS
where table_name = 'TestTable'</pre></div></div>

<p>Results</p>
<pre>COLUMN_NAME    DATA_TYPE       CHARACTER_MAXIMUM_LENGTH
-------------- -----------------------------------------
id              int             NULL
itemdate        datetime        NULL
title           varchar         2000</pre>
<p>Now let&#8217;s change the datetime column to a varchar, execute the following query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">alter</span> <span class="kw1">table</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span> <span class="kw1">alter</span> <span class="kw1">column</span> <span class="br0">&#91;</span>itemdate<span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="kw1">varchar</span><span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="nu0">49</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">alter table [TestTable] alter column [itemdate] [varchar] (49)</pre></div></div>

<p>Now verify that it was changed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH
<span class="kw1">from</span> <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">COLUMNS</span>
<span class="kw1">where</span> table_name <span class="sy0">=</span> <span class="st0">'TestTable'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH
from INFORMATION_SCHEMA.COLUMNS
where table_name = 'TestTable'</pre></div></div>

<p>Results</p>
<pre>COLUMN_NAME    DATA_TYPE       CHARACTER_MAXIMUM_LENGTH
-------------- -----------------------------------------
id              int             NULL
itemdate        varchar         49
title           varchar         2000</pre>
<p>Insert a new row</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">insert</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span>
<span class="kw1">select</span> <span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="st0">'bla'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">insert [TestTable]
select getdate(),'bla'</pre></div></div>

<p>Now check what is in the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from [TestTable]</pre></div></div>

<p>Results</p>
<pre>id          itemdate                                          title
----------- ------------------------------------------------- -----------
1           Jan 18 2010  5:28PM                               bla
2           Jan 18 2010  5:30PM                               bla</pre>
<p>Now we will add a column. The command to add a column is very similar to the one where you alter a column, the difference is that you don&#8217;t use the column keyword. Below is a query that will add an int column with a default of 0</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">alter</span> <span class="kw1">table</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span> <span class="kw1">add</span> &nbsp;<span class="br0">&#91;</span>SomeInt<span class="br0">&#93;</span> <span class="kw1">int</span> <span class="kw1">default</span> <span class="nu0">0</span> not null</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">alter table [TestTable] add  [SomeInt] int default 0 not null</pre></div></div>

<p>Run this query to see what is in the table now</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from [TestTable]</pre></div></div>

<p>Results</p>
<pre>id          itemdate                    title     SomeInt
----------- ---------------------------- ---------- -----------
1           Jan 18 2010  5:28PM         bla       0
2           Jan 18 2010  5:30PM         bla       0</pre>
<p>As you can see the column was added and the default of 0 was used.</p>
<p>We can interrogate the INFORMATION_SCHEMA.COLUMNS view again to verify that the column is there</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH
<span class="kw1">from</span> <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="me1">COLUMNS</span>
<span class="kw1">where</span> table_name <span class="sy0">=</span> <span class="st0">'TestTable'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH
from INFORMATION_SCHEMA.COLUMNS
where table_name = 'TestTable'</pre></div></div>

<p>Results</p>
<pre>COLUMN_NAME    DATA_TYPE       CHARACTER_MAXIMUM_LENGTH
-------------- -----------------------------------------
id              int             NULL
itemdate        varchar         49
title           varchar         2000
SomeInt		int		NULL</pre>
<p>Now let&#8217;s insert a row, we will use a value of 2 for the newly added SomeInt column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">insert</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span>
<span class="kw1">select</span> <span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="st0">'bla'</span>,<span class="nu0">2</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">insert [TestTable]
select getdate(),'bla',2</pre></div></div>

<p>When we run this query again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from [TestTable]</pre></div></div>

<p>We can see that the value 2 is there</p>
<p>Results</p>
<pre>id          itemdate			title     SomeInt
----------- ------------------------------------------------- 
1           Jan 18 2010  5:28PM           bla       0
2           Jan 18 2010  5:30PM           bla       0
3           Jan 18 2010  5:33PM           bla       2</pre>
<p>If you try to change a column to a datatype which is incompatible with the data that is stored you will get an error message</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">alter</span> <span class="kw1">table</span> <span class="br0">&#91;</span>TestTable<span class="br0">&#93;</span> <span class="kw1">alter</span> <span class="kw1">column</span> <span class="br0">&#91;</span>itemdate<span class="br0">&#93;</span> <span class="kw1">int</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">alter table [TestTable] alter column [itemdate] int</pre></div></div>

<p>Here is the error for the above command<br />
<strong>Msg 245, Level 16, State 1, Line 1<br />
Conversion failed when converting the varchar value &#8216;Jan 18 2010  5:12PM&#8217; to data type int.<br />
The statement has been terminated.</strong></p>
<p>That is it for this post, as you can see it is pretty easy to change the data type of a column by using the alter table alter column command</p>
<p>*** <strong>Remember, if you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/use-alter-table-alter-column-to-change-d/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
