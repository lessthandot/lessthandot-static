<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>toread &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/toread/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>5 Books Every Developer Should Read</title>
		<link>/index.php/desktopdev/mstech/5-books-every-developer-should-read/</link>
		<comments>/index.php/desktopdev/mstech/5-books-every-developer-should-read/#comments</comments>
		<pubDate>Sun, 20 Jul 2008 18:12:06 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Microsoft Technologies]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[design patterns]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[programming]]></category>
		<category><![CDATA[toread]]></category>

		<guid isPermaLink="false">/index.php/2008/07/5-books-every-developer-should-read/</guid>
		<description><![CDATA[Which books should you read/buy when you are a programmer? I have listed 5 books that have helped me a lot. The books that I have chosen are not specific to any language although some of the books have examples in one language only. Design Patterns has examples in smalltalk and C++ but since the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Which books should you read/buy when you are a programmer? I have listed 5 books that have helped me a lot. The books that I have chosen are not specific to any language although some of the books have examples in one language only. Design Patterns has examples in smalltalk and C++ but since the code is not very complicated you should have no problem converting it to your language of choice. I have included links to sample chapters for the books where I could find them. For some of the books I have also provided links to the author&#8217;s site; some of them have additional material so that you can look at that. I have also provided Amazon links so that you can read reviews. All of these books are rated 4 stars or higher. I have also provided alternate books if I felt that there were more choices for the same subject</p>
<p><strong><span style="font-size:130%;color:#cc0000;"><a href="http://www.amazon.com/exec/obidos/ASIN/0201633612/sql08-20/102-1687136-8876917?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">Design Patterns</a></span></strong><br />
This book is one of the seminal books on patterns in software development. If you are a professional software developer, you must read this. If you are learning to write good software, this is a book that you will need to take on at some point</p>
<p>Design Patterns <a href="http://lci.cs.ubbcluj.ro/~raduking/Books/Design%20Patterns/">Site</a></p>
<p><span style="font-size:130%;color:#cc0000;"><strong><a href="http://www.amazon.com/exec/obidos/ASIN/0735619670/sql08-20/102-5735017-0910517?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">Code Complete</a><br />
</strong></span>Code complete provides the reader with an insight into how<br />
to write good and easy to understand code. You will come away from this book with an appreciation of the thought process that should go into writing every class, routine, comment etc&#8230;</p>
<p>Software development steps are outlined clearly. Pitfalls to avoid are discussed and rewards obtained from good code is explained. The author tells you what you need to know and most importantly why you need this information. If one applies the ideas in this book, I think you will be a better programmer.</p>
<p>Sample Chapter: <a href="http://www.cc2e.com/docs/Chapter1-Welcome.pdf">Chapter 1: Welcome (pdf)</a><br />
Sample Chapter: <a href="http://www.cc2e.com/docs/Chapter5-Design.pdf">Chapter 5: Design in Construction (pdf)</a></p>
<p>Code Complete Author&#8217;s <a href="http://www.cc2e.com/">Site</a></p>
<p><span style="font-size:130%;color:#cc0000;"><strong><a href="http://www.amazon.com/exec/obidos/ASIN/020161622X/sql08-20/102-5735017-0910517?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">The Pragmatic Programmer</a><br />
</strong></span>The pragmatic programmer provides invaluable advice to those who are just starting to program, and those who have been programing for years. By following the authors&#8217; simple rules you should have gained some programming wisdom that a programmer would realize in a decade.</p>
<p><strong>Extracts from the book</strong><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/preface.html">The Preface</a><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/no_broken_windows.html">Software Entropy</a><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/coincidence.html">Programming by Coincidence</a><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/wizards.html">Evil Wizards</a><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/balance_resources.html">Balance Resources</a><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/rule_list.html">Summary of the book&#8217;s tips</a><br />
<a href="http://www.pragmaticprogrammer.com/ppbook/extracts/contents.html">Contents</a></p>
<p><strong><a href="http://www.amazon.com/exec/obidos/ASIN/0201485672/sql08-20/102-5735017-0910517?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2"><span style="font-size:130%;">Refactoring</span> </a><br />
</strong>This book will change the way you think about and working with exisiting code. It&#8217;ll teach you that changing/modifying software is a fact of life. Martin Fowler does a awesome job of describing how to improve the design of existing code by performing various refactorings. Various design patterns are mentioned throughout the text, that is another reason why the design patterns book is so important</p>
<p>Sample Chapter: <a href="http://www.awprofessional.com/content/images/0201485672/samplechapter/chap4.html">Refactoring, a First Example</a></p>
<p><span style="font-size:130%;color:#cc0000;"><strong><a href="http://www.amazon.com/exec/obidos/ASIN/0321321278/sql08-20/102-5735017-0910517?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">UML 2 and the Unified Process: Practical Object-Oriented Analysis and Design, 2nd Edition</a></strong></span><br />
UML has grown. A few years ago, when UML was just getting accepted, a book on how to use it would have been much thinner. But the successful broad uptake of UML led to its semantic notation being expanded. What the authors give us here is a thorough exposition of UML 2.0 and how to use it. It also goes into the Unified Process for running a project, and how this can be documented in UML</p>
<p>Sample Chapter: <a href="http://www.awprofessional.com/content/images/0321321278/samplechapter/arlow_ch09.pdf">Relationships </a></p>
<p>And here are a couple of more choices instead of the books above<br />
<a href="http://www.amazon.com/exec/obidos/ASIN/0135974445/sql08-20/102-1687136-8876917?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">Agile Software Development, Principles, Patterns, and Practices</a><br />
<a href="http://www.amazon.com/exec/obidos/ASIN/0471197130/sql08-20/102-1687136-8876917?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">AntiPatterns</a><br />
<a href="http://www.amazon.com/exec/obidos/ASIN/0596008740/sql08-20/102-1687136-8876917?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">Prefactoring </a><br />
<a href="http://www.amazon.com/exec/obidos/ASIN/1932394613/sql08-20/102-5735017-0910517?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">Ajax in Action</a><br />
<a href="http://www.amazon.com/exec/obidos/ASIN/0596007124/sql08-20/102-5735017-0910517?%5Fencoding=UTF8&amp;camp=1789&amp;link%5Fcode=xm2">Head First Design Patterns</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/5-books-every-developer-should-read/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>Good SQL Articles To Read If You Can&#8217;t Afford Books</title>
		<link>/index.php/datamgmt/datadesign/good-sql-articles-to-read-if-you-can-t-a/</link>
		<comments>/index.php/datamgmt/datadesign/good-sql-articles-to-read-if-you-can-t-a/#comments</comments>
		<pubDate>Fri, 23 May 2008 13:11:30 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[deadlocks]]></category>
		<category><![CDATA[functions]]></category>
		<category><![CDATA[howto]]></category>
		<category><![CDATA[math]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sqlserver]]></category>
		<category><![CDATA[tips]]></category>
		<category><![CDATA[toread]]></category>
		<category><![CDATA[tricks]]></category>

		<guid isPermaLink="false">/index.php/2008/05/good-sql-articles-to-read-if-you-can-t-a/</guid>
		<description><![CDATA[You have only $50 left and you can buy two DVDs or one SQL book, what do you do? I would buy the book but not every person has the same idea of a fun time. This is the reason why I present you with a bunch of links to articles which will give you [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You have only $50 left and you can buy two DVDs or one SQL book, what do you do? I would buy the book but not every person has the same idea of a fun time. This is the reason why I present you with a bunch of links to articles which will give you very good info. Some of this you won&#8217;t be able to find in a book anyway.</p>
<p><a href="http://www.sommarskog.se/dynamic_sql.html">The curse and blessings of dynamic SQL</a>. How you use dynamic SQL, when you should &#8211; and when you should not.</p>
<p><a href="http://www.sommarskog.se/arrays-in-sql.html">Arrays and Lists in SQL Server</a>. Several methods on how to pass an array of values from a client to SQL Server, and performance data about the methods. Two versions are available, one for SQL 2005 and one for SQL 2000 and earlier.</p>
<p><a href="http://www.sommarskog.se/error-handling-II.html">Implementing Error Handling with Stored Procedures</a> and <a href="http://www.sommarskog.se/error-handling-I.html">Error Handling in SQL Server – a Background</a>. Two articles on error handling in SQL Server.</p>
<p><a href="http://www.karaszi.com/SQLServer/info_datetime.asp">The ultimate guide to the datetime datatypes</a><br />
The purpose of this article is to explain how the datetime datatypes work in SQL Server, including common pitfalls and general recommendations.</p>
<p><a href="http://www.karaszi.com/SQLServer/info_sp_recompile_set.asp">Stored procedure recompiles and SET options</a><br />
Using stored procedures is generally considered a good thing. One advantage of stored procedures is that they are precompiled. This means that at execution time, SQL Server will fetch the precompiled procedure plan from cache memory (if exists) and execute it. This is generally faster than optimizing and compiling the code for each execution. However, under some circumstances, a procedure needs to be recompiled during execution.</p>
<p><a href="http://dotnetsamplechapters.blogspot.com/2007/09/do-you-know-how-between-works-with.html">Do You Know How Between Works With Dates?</a><br />
article explaining why it can be dangerous to use between with datetime data types</p>
<p><a href="http://dotnetsamplechapters.blogspot.com/2007/09/how-are-dates-stored-internally-in-sql.html">How Are Dates Stored Internally In SQL Server?</a><br />
Article explaining how datetimes are actually stored internally</p>
<p>Three part deadlock troubleshooting post, a must read if you want to understand how to resolve deadlocks.<br />
<a href="http://blogs.msdn.com/bartd/archive/2006/09/09/Deadlock-Troubleshooting_2C00_-Part-1.aspx">Deadlock Troubleshooting, Part 1</a><br />
<a href="http://blogs.msdn.com/bartd/archive/2006/09/13/Deadlock-Troubleshooting_2C00_-Part-2.aspx">Deadlock Troubleshooting, Part 2</a><br />
<a href="http://blogs.msdn.com/bartd/archive/2006/09/25/deadlock-troubleshooting-part-3.aspx">Deadlock Troubleshooting, Part 3</a></p>
<p><a href="http://dotnetsamplechapters.blogspot.com/2007/03/sql-server-2005-whitepapers-list.html">SQL Server 2005 Whitepapers List</a><br />
A list of 29 different SQL Server 2005 Whitepapers</p>
<p><a href="http://vyaskn.tripod.com/sql_server_check_identity_columns.htm">Keep a check on your IDENTITY columns in SQL Server</a>This article shows you how to keep an eye on your IDENTITY columns and find out before they run out of values, and fail with an arithmetic overflow error. </p>
<p><a href="http://www.projectdmx.com/tsql/strcleanup.aspx">Character replacements in T-SQL</a><br />
Quite often SQL programmers are left with the dirty job of working with badly formatted strings mostly generated from external sources. Typical examples are badly structured date values, social security numbers with misplaced hyphens, badly formatted phone numbers etc. When the data set if small, in many cases, one can easily fix by a one time cleanup code snippet, but for larger sets one will need more generalized routines.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/good-sql-articles-to-read-if-you-can-t-a/feed/</wfw:commentRss>
		<slash:comments>19</slash:comments>
		</item>
	</channel>
</rss>
