<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>interview &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/interview/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>T-SQL Tuesday #54: An Interview Invitation</title>
		<link>/index.php/uncategorized/t-sql-tuesday-52-an-interview-invitation/</link>
		<comments>/index.php/uncategorized/t-sql-tuesday-52-an-interview-invitation/#comments</comments>
		<pubDate>Tue, 13 May 2014 06:50:59 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Professional Development]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[syndicated]]></category>
		<category><![CDATA[t-sql tuesday]]></category>

		<guid isPermaLink="false">/?p=2617</guid>
		<description><![CDATA[It‚Äôs time for another T-SQL Tuesday! This month‚Äôs blog party is hosted by Boris Hristov (blog &#124; twitter) and the subject is about interviews and hiring. First I thought about writing a rant about the beginning of every interview and hiring process: recruiters. You can‚Äôt live with them and you can live without them. But [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify"><a href="http://borishristov.com/blog/t-sql-tuesday-54-interview-invitation/"><img class="alignnone size-full wp-image-2241" alt="TSQL2sday" src="/wp-content/uploads/2014/01/TSQL2sday.png" width="133" height="134" /></a></p>
<p style="text-align: justify"><span style="line-height: 1.5em">It‚Äôs time for another T-SQL Tuesday! This month‚Äôs blog party is hosted by Boris Hristov (</span><a style="line-height: 1.5em" href="http://borishristov.com/blog/">blog</a><span style="line-height: 1.5em"> | </span><a style="line-height: 1.5em" href="https://twitter.com/BorisHristov">twitter</a><span style="line-height: 1.5em">) and the subject is about </span><a style="line-height: 1.5em" href="http://borishristov.com/blog/t-sql-tuesday-54-interview-invitation/">interviews and hiring</a><span style="line-height: 1.5em">.</span></p>
<p style="text-align: justify">First I thought about writing a rant about the beginning of every interview and hiring process: recruiters. You can‚Äôt live with them and you can live without them. But I noticed ¬†¬†¬† James Serra (<a href="http://www.jamesserra.com/">blog</a> | <a href="https://twitter.com/JamesSerra">twitter</a>) has already written extensively <a href="http://www.jamesserra.com/archive/2013/06/low-rate-recruiters-the-bane-of-my-existence/">about this subject</a>. Then I considered writing about all of those crazy job adverts that are floating around, but Thomas LaRock (<a href="http://thomaslarock.com/">blog</a> | <a href="https://twitter.com/SQLRockstar">twitter</a>) has already covered this <a href="http://thomaslarock.com/2010/09/a-better-dba-job-description-for-everyone/">nicely</a>.</p>
<p style="text-align: justify">So I kept on thinking and finally decided to brainstorm about interview questions. More specifically, what questions would I ask if I conducted a technical interview with a potential business intelligence developer?</p>
<p style="text-align: justify">First of all, I believe you have to adjust your questions to the expected level of the person being interviewed. If you interview a junior person, I wouldn‚Äôt start asking how they would implement partition switching in order to speed up the bulk loading of a fact table. If they claim to be senior, you can bring out the big guns after a while. Note I mentioned ‚Äúafter a while‚Äù. I would start asking basic questions to test their knowledge and then gradually move on to the more difficult stuff. Immediately starting with insane questions to make your conversation partner nervous or uncomfortable is just bad form in my opinion.</p>
<p style="text-align: justify">These are the main subject areas I would test:</p>
<ul style="text-align: justify">
<li>SSIS (of course). Although some people think of business intelligence just as creating some dashboards and reports, the data has to be there as well. A working knowledge of SSIS is always useful. I‚Äôd start with basic questions ‚Äì what is the data flow and the control flow ‚Äì and then work myself up to more advanced, broader questions, such as ‚Äúhow would you implement custom logging or restartability in your packages?‚Äù.</li>
<li>Data warehouses. Architectures and modelling, that kind of stuff. I don‚Äôt expect everyone to recite the differences between Kimball, Inmon and data vaults, but I do expect that there is a basic knowledge about facts, dimensions, star schema versus snowflake and so on (except for very junior people). If a person seems to be well versed in architecting data warehouses, you could go deeper such as for example on the different types of slowly changing dimensions (mini dimensions, outriggers, that kind of stuff. It should provide good discussions) or how to index a data warehouse.</li>
<li>T-SQL. Every BI developer that calls himself worthy should know a fair bit of SQL. If it is not for the ETL process, it is for writing reports. Start with the basics (how do you remove duplicates), to more advanced (windowing functions for example). I wouldn‚Äôt go to deep here (I‚Äôm not an expert myself), but I think I would dare to give the interviewee a cursor and ask how they would optimize it.</li>
<li>SSAS. I would stay fairly high level on this one. I think you can notice fairly quick if someone knows their way around SSAS or not. I probably would never ask about MDX, DAX or DMX. That would be cruel.</li>
<li>SSRS. Again fairly high level questions I think. Maybe because I‚Äôm more of an ETL developer and I don‚Äôt deal with SSRS all the time. I do expect people how to work with shared data sets and shared data sources. A possible scenario to ask in the interview is to give them a slow running report and ask them to optimize it (put filters in the query instead of the report for example).</li>
<li>Data Visualizations Tools. Microsoft has a lot of choices: Excel, SSRS, Power View and PerformancePoint. It might be a good idea to propose some scenarios and ask which tool they would use and why.</li>
<li>SQL Server itself. It depends on the position, but usually I deal with some light SQL Server administration and development. How to use stored procedures and functions, how to create a database (and which default settings they would change), how to back up a database and so on. Another question would be how they would optimize a database to support bulk loading of data.</li>
</ul>
<p style="text-align: justify">If I‚Äôm in a really bad mood, I could ask about SharePoint integration <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="üôÇ" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Anyway, questions can test for knowledge and experience, but passion and personality are very important as well. I don&#8217;t really care if someone can&#8217;t recite all the protection levels in SSIS, these can easily be found with a search engine.<br />
But in the end, I‚Äôll let the interview depend on this crucial question: would you use a bar chart or a pie chart?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/uncategorized/t-sql-tuesday-52-an-interview-invitation/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Interview with me about the chapters I wrote for the SQL Server Deep Dives book</title>
		<link>/index.php/datamgmt/dbprogramming/interview-with-me-about-the-chapters-i-w/</link>
		<comments>/index.php/datamgmt/dbprogramming/interview-with-me-about-the-chapters-i-w/#respond</comments>
		<pubDate>Fri, 26 Mar 2010 11:41:06 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/03/interview-with-me-about-the-chapters-i-w/</guid>
		<description><![CDATA[The folks at http://sqlperspectives.wordpress.com/ are reviewing the SQL Server Deep Dives book a chapter at a time (one chapter per week). The review is usually done by more than one person, so far there are already 8 chapters reviewed. I think that this is a very cool idea, it is almost like a book club. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The folks at http://sqlperspectives.wordpress.com/ are reviewing the  SQL Server Deep Dives book a chapter at a time (one chapter per week). The review is usually done by more than one person, so far there are already 8 chapters reviewed. I think that this is a very cool idea, it is almost like a book club.</p>
<p>Since they reviewed my chapter about the <em>minimally logged bulk insert</em>, they asked me to do an interview. You can find that interview here:  http://sqlperspectives.wordpress.com/2010/03/26/an-interview-with-denis-gobo/</p>
<p>You can also find the reviews by Richard Rodriguez, Chris Shaw and Jeremy Lowell here: http://sqlperspectives.wordpress.com/category/chapter-8/</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/interview-with-me-about-the-chapters-i-w/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Interview with Brent Ozar about the book Professional SQL Server 2008 Internals and Troubleshooting</title>
		<link>/index.php/datamgmt/dbprogramming/interview-with-brent-ozar-about-the-book/</link>
		<comments>/index.php/datamgmt/dbprogramming/interview-with-brent-ozar-about-the-book/#comments</comments>
		<pubDate>Wed, 13 Jan 2010 19:01:27 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[performance tuning]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/01/interview-with-brent-ozar-about-the-book/</guid>
		<description><![CDATA[I noticed Brent Ozar worked on a SQL book titled: Professional SQL Server 2008 Internals and Troubleshooting. This book is now available and I decided to ask Brent some questions about this book. This interview was conducted by email, enjoy. Denis: Is the book geared towards a beginner/intermediate level user or do you have to [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I noticed Brent Ozar worked on a SQL book titled: <a href="http://www.amazon.com/gp/product/0470484284?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470484284">Professional SQL Server 2008 Internals and Troubleshooting</a>. This book is now available and I decided to ask Brent some questions about this book. This interview was conducted by email, enjoy.</p>
<p><strong>Denis: Is the book geared towards a beginner/intermediate level user or do you have to be an advanced user to really utilize the information in this book?</strong></p>
<p>I like to think that the reader is somebody who&#8217;s been managing SQL Servers for a year or two and is getting frustrated.  He doesn&#8217;t understand what&#8217;s going on inside the engine when a query runs.  He&#8217;s not satisfied with just creating more indexes or running sp_who2 &#8211; he wants to know what&#8217;s actually happening under the hood.  He can&#8217;t afford top-notch consultants, or he can&#8217;t get good ones locally, or he wants to BECOME a top-notch consultant.</p>
<p>This book covers so many gray areas that traditional books haven&#8217;t covered.  CPUs matter.  Memory matters.  Storage matters.  Latching matters.  Traditional SQL books haven&#8217;t dived deeply enough into these subjects, and I think this book does.</p>
<p><strong>Denis: What are the most important things a person can do to master SQL troubleshooting?</strong></p>
<p>Don&#8217;t change anything you don&#8217;t fully understand, and don&#8217;t take anybody&#8217;s word for anything.  Just because you read a recommendation in a forum that your server will go faster when MAXDOP is set to 1 doesn&#8217;t mean it&#8217;s going to work in your individual situation.  Just because MAXDOP = 1 makes one of your servers faster doesn&#8217;t mean it&#8217;ll make them all faster.  When you change settings, you change the way SQL Server behaves, and you should understand the ramifications.</p>
<p>One of the first things I do when I&#8217;m troubleshooting a server is find out all of the non-default settings.  Don&#8217;t assume AUTO_CLOSE is turned off &#8211; people do crazy things.  I make a list of everything that isn&#8217;t set at factory defaults, and I start asking why.  Don&#8217;t get me wrong &#8211; there&#8217;s some easy knobs to turn in order to make SQL Server go faster, like Instant File Initialization, but there&#8217;s not a lot of surefire tweaks that work in every single situation.</p>
<p><strong>Denis: With the addition of Dynamic Management Views is it now easier to find bottlenecks than before?</strong></p>
<p>Without a doubt.  Whenever I present on DMVs, I hear a chorus of questions asking how to get that same information in SQL Server 2000.  DMVs are without a doubt the most helpful thing in my troubleshooting and tuning.  Managing a SQL Server without querying the DMVs is like trying to bake a cake without knowing how the oven temperature control works.  Your results will definitely vary from cake to cake.</p>
<p><strong>Denis: What is your favorite Dynamic Management View to troubleshoot performance?</strong></p>
<p>sys.dm_db_missing_index_details, I wish I could quit you.</p>
<p>I do &#8220;weekend&#8221; performance tuning on the side, so when I troubleshoot performance, I&#8217;m usually looking at a database I&#8217;ve never seen before.  Indexing is tough to do right, and easy to do wrong.  I can usually get huge performance improvements by tweaking the index strategy.  The missing index DMVs give me a starting point without having to run traces.  They&#8217;re still not a silver bullet &#8211; they&#8217;re like the Index Tuning WIzard or Database Tuning Advisor in that they can give some pretty nasty advice.  When used properly, though, they can give huge performance boosts. </p>
<p><strong>Denis: Is there a place for Solid State Drives, perhaps for tempdb or is it still too early for mission critical servers?</strong></p>
<p>Last year when I spoke about performance tuning at a Quest event in California, there were already several folks there using SSD drives packaged in PCI Express cards like Fusion-io, and they were using it for more than just TempDB too.  When you&#8217;re really desperate for performance, like when your app just won&#8217;t scale and you&#8217;re out of space for more SAN gear, you get desperate, and you&#8217;ll try those cutting-edge technologies before the rest of us.  Those people are out there already, dancing on the edge, and I&#8217;m hearing good reports back.</p>
<p>I think it&#8217;s a bad idea for mission critical servers because truly mission critical databases should be on clusters, and most SANs don&#8217;t take solid state drives yet.  I think the best use for SSDs in SANs is for automated tiering systems where the SAN controller automatically moves data around based on how often it&#8217;s accessed.  Data that&#8217;s very, very frequently read can get migrated onto SSD.  That&#8217;s still a high-end SAN feature though, not mainstream.</p>
<p><strong>Denis: Should we be looking at Page Life Expectancy or Buffer Cache Hit Ratio and why?</strong></p>
<p>We should be looking at Page Life Expectancy, but only in combination with all of the metrics packaged together.  I talked about this in my blog post, Bottlenecks and Bank Balances:</p>
<p>http://www.brentozar.com/archive/2009/10/bottlenecks-and-bank-balances/</p>
<p>At the end of the day, does it really matter whether your Page Life Expectancy is 70 or 700 or 7000?  Is that your biggest bottleneck, and are the application users satisfied with performance?  I&#8217;ve managed servers with abysmal Page Life Expectancy numbers (like below 60) that the business was completely satisfied with.  Some applications just aren&#8217;t important or aren&#8217;t worth spending extra money/time/resources on.</p>
<p><strong>Denis: What part of SQL troubleshooting do people struggle the most with?</strong></p>
<p>Reading execution plans and doing something about it.  I bought Grant Fritchey&#8217;s book, SQL Server 2008 Query Performance Tuning Distilled, for that exact reason &#8211; I just couldn&#8217;t read the plans well enough, and the question comes up so gosh-darned often.  I&#8217;m working with a company now that sends me execution plans so large that I would need to print them out on wallpaper and paste it up in a conference room.  There comes a point where you have to draw the line and say, &#8220;It&#8217;s not a matter of tuning this query &#8211; it&#8217;s a matter of dumping this query and asking what the user is really trying to accomplish, and how we can meet their needs.&#8221;</p>
<p><strong>Denis: Can you name some tools that will help with troubleshooting performance?<br />
</strong><br />
I work for Quest Software, but even if I didn&#8217;t, I&#8217;d name-drop Foglight Performance Analysis.  It samples SQL Server&#8217;s memory space, captures performance data without requiring a trace, and gives you a gorgeous slice &amp; dice user interface to quickly find the nastiest queries, applications, and users.  There&#8217;s flat-out nothing like it on the market.</p>
<p>I couldn&#8217;t imagine performance tuning without Bill Graziano&#8217;s fantastic utility ClearTrace.  If you don&#8217;t have Foglight PA, you&#8217;ll be running traces to capture queries, and ClearTrace really helps you make sense of trace file contents.  I can fire up ClearTrace and find problem queries very fast.</p>
<p>In the book, I wrote the Performance Dashboard chapter, and I&#8217;d highly recommend that for anybody who has zero budget for SQL Server tools.  It&#8217;s not perfect &#8211; it&#8217;s far from it &#8211; but it&#8217;s one heck of a big leap forward when you&#8217;re stumbling around in the dark trying to find bottlenecks.</p>
<p><strong>Denis: What are some of the biggest mistakes people make when setting up a new server in terms of performance?</strong> </p>
<p>Not using Instant File Initialization, not aligning their partitions, and remote desktopping into the server to run things like SQL Server Management Studio.  STOP remote controlling your servers.  SSMS burns up memory that should be dedicated to the database engine.  I&#8217;ve got a setup checklist on my site, too:</p>
<p>http://www.brentozar.com/archive/2008/03/sql-server-2005-setup-checklist-part-1-before-the-install/</p>
<p><strong>Denis: Which chapter was the hardest to write and can you explain why?<br />
Both of them.</strong></p>
<p>Lemme make one thing perfectly clear: I am the dumbest author involved in this book.  For real.  When I first got the chance to be involved with this book, I looked at the available chapter list and said, &#8220;I&#8217;ll take storage and the Performance Dashboard.&#8221;  I took storage because I loooooove storage, and I took the Performance Dashboard because I thought it would be easy.</p>
<p>The storage chapter was hard because I wanted to keep working on it forever.  One of my coauthors said he spent 1,200 hours on one chapter, and I can see how that would happen.  As I was writing and editing the storage chapter, I just kept thinking of more and more things I wanted to throw in there, but when you&#8217;re writing, you have to make sure you&#8217;re covering each subject well enough.  I didn&#8217;t want to do a half-ass job covering a million topics.  I eventually had to cut myself off to do my day job, and I&#8217;m still killing myself over things I didn&#8217;t get to include.  I didn&#8217;t include the infamous 15-second IO warning events, for example.  I&#8217;m hoping we get to do a SQL 2008 R2 version so I can expand it.</p>
<p>The Performance Dashboard chapter was hard because I wrote it and then said, &#8220;Okay, this is not nearly enough information.&#8221;  I dove into creating new reports because really, if you&#8217;re going to go down the Performance Dashboard route, you&#8217;re going to want to roll your own stuff too.  I didn&#8217;t originally sign onto the project to write an SSRS book (because I&#8217;m an SSRS noob) but I had to include some stuff on it, and that made me nervous.</p>
<p><strong>Denis: Will you write another book?</strong><br />
Originally I said no.  I yelled no from the mountaintops.  Now, wouldn&#8217;t you know it, I&#8217;m finishing an ebook as we speak.  This one&#8217;s on Twitter though.  I don&#8217;t think I&#8217;ll do another ground-up from-scratch technical book.  I have amazing respect for guys like Ross Mistry who keep banging out books.</p>
<p><strong>Denis: What SQL books are on your bookshelf?</strong></p>
<p>SQL Server Query Performance Tuning Distilled by Grant Fritchey<br />
SQL Server 2005 Performance Tuning by Steven Wort, Christian Bolton, Justin Langford, and more<br />
Inside SQL Server 2008 T-SQL Querying by Itzik Ben Gan and others<br />
Oracle and VMware by Bert Scalzo<br />
The Wine Trials 2010 by Robin Goldstein and Alexis Herschkowitsch (databases and drinks go together like developers and cursors)<br />
And tons more, but that&#8217;s a good start.</p>
<p><strong>Denis: Who are your favorite authors?</strong></p>
<p>I really like reading James Rowland-Jones&#8217; chapter on Latching in our book.  He has a really good sense of humor that plays well in print.</p>
<p>I like that Kevin Kline writes like he talks &#8211; he makes complex topics deceptively simple.  Anybody can sandblast you with fifty-cent words, but Kevin distills things down in a way that&#8217;s easy to read quickly.</p>
<p>Tim Ford spends entirely too much time writing his next book and needs to blog more, because he&#8217;s hilarious, and I&#8217;m going through withdrawal.</p>
<p>My favorite authors of all time, though, would be Dave Eggers, Douglas Adams, and Garrison Keillor &#8211; and the poet W. H. Auden for good measure.  I&#8217;m no Paul Randal &#8211; I think I read maybe 10 books in 2009, and I don&#8217;t see that changing in 2010.</p>
<p><strong>Denis: How are you involved with SQLServerpedia?</strong></p>
<p>There&#8217;s only two of us really heavily involved on a day-to-day basis.  Brett Epps handles everything technical &#8211; if it involves PHP, graphics, MySQL, anything like that, that&#8217;s his full time job.  (I&#8217;m thankful for him, because when I was the guy doing that, the site looked bad and performed worse.)  I handle everything else &#8211; working with the bloggers, checking article submissions, planning promotions, coming up with what we&#8217;re going to do next.  I get a lot of logistical support from a bunch of Questies &#8211; Christian Hasker, Andy Grant, Betsy Mendenhall, Heather Eichman, and Stephanie McCulloch &#8211; but most of the work is still me.</p>
<p>I love it.  I really wish I had more hours in the day to spend on SQLServerPedia.  We&#8217;ve got a million cool ideas, and it just comes down to manpower.</p>
<p><strong>Denis: Where can we expect to see you in 2010? Any conferences, seminars, trade shows or classrooms perhaps?</strong></p>
<p>EVERYWHERE, MUHAHAHA.  Okay, maybe not.  I&#8217;ll be at the WorkTamer conferences in Canada, the Microsoft MVP Summit in Seattle, SQLSaturday Chicago, the PASS Summit in Seattle, and maybe the European one as well.  I&#8217;m aiming for the Microsoft Certified Master program in March, and if that happens, I&#8217;ll be off the radar for a few weeks.</p>
<p>I&#8217;ve got a day-long free virtual event coming in February with Kevin Kline and Ari Weil, too &#8211; we&#8217;ll be talking DMVs all day long.  More news soon&#8230;</p>
<p>That is it,  thanks to Brent for the interview, you can visit Brent&#8217;s site here: http://www.brentozar.com/ and you can follow him on twitter here: http://twitter.com/brento</p>
<p>To check out the book, visit the wrox site here: http://www.wrox.com/WileyCDA/WroxTitle/Professional-SQL-Server-2008-Internals-and-Troubleshooting.productCd-0470484284.html or Amazon here: <a href="http://www.amazon.com/gp/product/0470484284?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470484284">Professional SQL Server 2008 Internals and Troubleshooting</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/interview-with-brent-ozar-about-the-book/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Interview With Rod Colledge About The Book SQL Server 2008 Administration in Action</title>
		<link>/index.php/datamgmt/datadesign/interview-with-rod-colledge-about-the-bo/</link>
		<comments>/index.php/datamgmt/datadesign/interview-with-rod-colledge-about-the-bo/#comments</comments>
		<pubDate>Mon, 12 Oct 2009 16:35:02 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[administration]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2009/10/interview-with-rod-colledge-about-the-bo/</guid>
		<description><![CDATA[I read SQL Server 2008 Administration in Action and really like this book, I have reviewed SQL Server 2008 Administration in Action here: Review of SQL Server 2008 Administration in Action I decided to ping Rod Colledge about doing an interview and he said yes. Some of the questions came from our forum users in [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I read <a href="http://www.amazon.com/gp/product/193398872X?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=193398872X">SQL Server 2008 Administration in Action</a> and really like this book, I have reviewed SQL Server 2008 Administration in Action here: <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/review-of-sql-server-2008-administration">Review of SQL Server 2008 Administration in Action</a></p>
<p>I decided to ping Rod Colledge about doing an interview and he said yes. Some of the questions came from our forum users in the following thread: http://forum.lessthandot.com/viewtopic.php?f=17&amp;t=8089</p>
<p>Below is the interview.</p>
<p><strong>What level of competence should a reader have before reading this book? Is this book good for accidental DBAs?</strong></p>
<p>It‚Äôs interesting that you ask about the &#8220;accidental DBA&#8221;. I recently blogged <a href="http://www.rodcolledge.com/rod_colledge/2009/08/the-great-dba-schism.html">The Great DBA Schism</a> in which I noted that these types of DBAs are becoming much more common. My book is perfect for these DBAs as they‚Äôre typically bright people with experience in other areas who want to quickly learn DBA best practices without having to wade through lots of text. </p>
<p>A lot of books patronize their readers and drag them through painful reproductions of simple tasks. Worse still, these books often reproduce information that is easily accessible from other free sources, for example, Books Online. As a result, the page count blows out, and most of the book goes unread.</p>
<p>With my book, I‚Äôve avoided reproducing such information and spent more time on explaining why things are important, and where appropriate, directed the reader to the appropriate resource for more information should they need it. The end result is a concise book, and one that concentrates on best practices. </p>
<p>I‚Äôve had great feedback from both experienced and new DBAs, and although the book has ‚ÄúSQL Server 2008‚Äù in its title, its major themes are applicable to earlier versions as well.</p>
<p><strong>What are some of the pitfalls that catch DBAs over and over again?</strong></p>
<p>SQL Server is often sold on the premise of a low administration overhead. While that‚Äôs true (and good), it often results in DBAs becoming complacent about the database and ignoring important proactive maintenance tasks. Things like relying on autogrow and leaving the database in full recovery mode (without taking transaction log backups), are classic examples of this complacency.</p>
<p><strong>What are the most important things a person can do to become an exceptional DBA?</strong></p>
<p>Become familiar with your customer‚Äôs service level agreements (SLAs), be cautiously pessimistic when planning for disaster, and spend time each day on research/learning.</p>
<p>Firstly, SLAs. SLAs are crucial in order to build appropriate solutions that meet the customer‚Äôs expectations without wasting money better spent in other areas. DBAs often design database infrastructure in the absence of SLAs. That‚Äôs like an architect who assumes their client doesn‚Äôt need any more than 3 bedrooms, but must have a full size tennis court in the backyard.</p>
<p>Secondly, disaster recovery planning. Disasters happen, and we need to be prepared for a wide variety of them. The last thing you want is to be confronted with a production problem at 3am that you‚Äôve never thought about before. In those situations, the adrenaline is surging and you‚Äôre likely to make silly mistakes. Simulate a wide variety of different types of disasters, and practice recovering from them in a test environment. When they happen for real, you‚Äôll be more prepared and calm. Further, this process exposes any weaknesses you have in your current setup, and gives you the chance to fix them before an actual disaster strikes.</p>
<p>Finally, research. There‚Äôs only so much you can learn in your current job, and the longer you stay in that job, the less opportunity you have to further your knowledge. Regularly reading SQL Server newsgroups/forums are a fantastic (and low risk) way of expanding your horizons by enabling you to peer into other people‚Äôs problems, think about how you would go about solving them, and seeing how others would solve them.</p>
<p><strong>Can you list any third party tools that you find useful to have as a SQL Server developer/admin?</strong></p>
<p>I can‚Äôt live without Redgate‚Äôs <a href="http://www.red-gate.com/products/SQL_Compare/index.htm">SQL Compare</a> and Quest‚Äôs <a href="http://www.quest.com/litespeed-for-sql-server/">Litespeed</a>. I use both of those on a daily basis.</p>
<p><strong>Do you think the resource governor in sql server 2008 answers the DBAs prayers to finally keeping ad-hoc queries from killing overall database server performance?</strong></p>
<p>Almost <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="üôÇ" class="wp-smiley" style="height: 1em; max-height: 1em;" /> It‚Äôs a great move in the right direction. If only we could constrain disk and network resources in the same way as CPU and memory. Hopefully that will be addressed in the next version of SQL Server.</p>
<p>The other interesting thing about Resource Governor is that as well as constraining resource usage, we can also use it to measure resource usage by group, and use that for time costing purposes &#8211; like they used to do in the old mainframe days.</p>
<p><strong>Will DBAs finally realize high availability with mirroring is not a disasterrecovery solution after reading SQL Server 2008 Administration in Action?</strong></p>
<p>Great question. High availability and disaster recovery are different things, and DBAs often confuse the two. High availability solutions such as database mirroring are designed to increase the availability of a database during planned and unplanned downtime. Disaster/recovery planning is about all of the things that need to happen before, during and after a disaster to minimize data loss.</p>
<p>Effective disaster recovery planning is as much a state of mind as it is a feature or switch. DBAs often make the mistake of thinking that their disaster recovery planning begins and ends with a single feature such as database mirroring. Mirroring will not automatically protect every database on a server, nor will it enable you to recover to a specific point in time, and unless the client connections are SNAC enabled, they won‚Äôt automatically redirect to the mirroring partner in the event of a failure.</p>
<p>Mirroring is a great feature, but it has its limitations, and needs to be used in the appropriate way.</p>
<p><strong>For seasoned DBAs that have seen most of the bad things that go along with the job, would SQL Server 2008 Administration in Action still benefit them and are there particular sections you recommend to key in on for those level DBAs?</strong></p>
<p>At the close of each chapter, I‚Äôve got a summarized list of best practice bullet points. Perhaps the best way for experienced DBAs to read the book is to read the best practice list first, and then open the chapter to the appropriate section should they need further information/clarification.</p>
<p>For experienced DBAs that haven‚Äôt yet upgraded to SQL Server 2008, I‚Äôve made sure that new 2008 features are clearly marked, so they can target-read those sections. I‚Äôve also spent a bit of time on the 2008 upgrade process in the installation chapter, including different techniques to minimize the upgrade time, such as using transaction log shipping.</p>
<p><strong>What&#8217;s the next step for a DBA after reading this book?</strong></p>
<p>Each chapter has a link to a specific page on <a href="http://sqlcrunch.com/">SQLCrunch.com</a>, the website I created and run. This site includes summarized links to best practice articles, whitepapers and blogs from Microsoft and other SQL Server MVPs. This is a great way to obtain further information on topics of interest.</p>
<p>My hope is that DBAs will also read Appendix A, Top 25 DBA worst practices, and try and eliminate as many as those as possible.</p>
<p><strong>Does a DBA need to know T-SQL to do his job effectively?</strong></p>
<p>Yes. Manually clicking through wizards is possibly ok for managing one or two small servers, but automation is crucial for managing large and complex environments. Anything that occurs more than once should be scripted and scheduled with appropriate monitoring and alerting systems.</p>
<p>One of the nice things about SQL Server 2008 (also included in 2005) is that most dialog boxes include a ‚Äúscript‚Äù button that converts what you‚Äôve just done in the dialog box into a T-SQL script. This is a great way of learning how to use T-SQL, as well as understanding what SQL Server is doing behind the scenes.</p>
<p><strong>What new features in Sql Server 2008 are you most excited about as a DBA?</strong></p>
<p>Policy-based management is without a doubt the best new feature for DBAs. It enables us to start moving from exception-based management (dealing with all the things that go wrong) to intent-based management; for example, make this production server the same as all those other production servers. For large and complex SQL Server environments, it‚Äôs absolutely brilliant, particularly when combined with the Central Management Servers feature which lets us evaluate, and in some cases, correct, policy compliance across large groups of servers in a single action.</p>
<p>The Management Data Warehouse and Data Collector features are also very welcome, enabling us to easily collect performance related metrics for use in a baseline analysis exercise. Resource Governor, which we spoke about earlier, is also great, particularly for constraining resources in mixed use environments such as servers used for both line of business data entry and reporting.</p>
<p>The list goes on; backup compression, transparent data encryption and automatic page recovery with database mirroring. These are all great features, and makes our lives a lot easier.</p>
<p><strong>Which chapter was the hardest to write and can you explain why?</strong></p>
<p>The first chapter (which doesn‚Äôt exist anymore) <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="üôÇ" class="wp-smiley" style="height: 1em; max-height: 1em;" /> I wrote that chapter about 9 times in various different ways as I searched around for the best ‚Äúfeel‚Äù for the book.</p>
<p>Writing a (good) book is hard work. You need to engage the reader, gain their trust, and hopefully teach them something as well. I hope I‚Äôve succeeded in that task.</p>
<p><strong>What SQL books are on your bookshelf?</strong></p>
<p>Grant Fritchey‚Äôs Query Performance Tuning Distilled, and Kalen Delaney‚Äôs Inside/Internals series. I‚Äôm also spending more time in the Business Intelligence space, so I‚Äôm stocking up on a lot of books in that area as well. </p>
<p>I was fortunate to be involved in the production of the upcoming SQL Server MVP Deep Dives book which features collected works from your good self :-). That‚Äôs going to be a blockbuster book for SQL Server fans, and I can‚Äôt wait to get the hard copy at SQLPass next month.</p>
<p><strong>Where can we expect to see you in 2009/2010? Any conferences, seminars, trade shows or classrooms perhaps?</strong></p>
<p>You can see me on the golf course and at the bar <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="üôÇ" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Beyond that, I‚Äôm looking forward to <a href="http://summit2009.sqlpass.org/Agenda/ProgramSessions/DBAsBehavingBadlyWorstPracticesfor.aspx">speaking at SQLPASS</a> this year, where I hope to meet lots of fantastic and like minded SQL Server enthusiasts. I also enjoy travelling and presenting at local SQL Server user groups, so I‚Äôm hoping to be invited to speak at lots of different groups next year!</p>
<p>Thanks again to Rod for doing the interview, below are 2 chapters that you can download to check out the book</p>
<p>Sample chapter 4 <a href="http://www.manning.com/colledge/SampleCh04.pdf">Installing and upgrading SQL Server 2008</a><br />
Sample chapter 10 <a href="http://www.manning.com/colledge/SampleCh10.pdf">Backup and recovery</a></p>
<p>There is some more info about the book on the publisher&#8217;s website: http://www.manning.com/colledge/</p>
<p>You can also checkout the book on Amazon for more reviews: <a href="http://www.amazon.com/gp/product/193398872X?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=193398872X">SQL Server 2008 Administration in Action</a></p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/interview-with-rod-colledge-about-the-bo/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>An Interview With Kevin Kline About SQL In A Nutshell Third Edition</title>
		<link>/index.php/datamgmt/dbprogramming/an-interview-with-kevin-kline-about-sql/</link>
		<comments>/index.php/datamgmt/dbprogramming/an-interview-with-kevin-kline-about-sql/#comments</comments>
		<pubDate>Wed, 04 Feb 2009 12:42:52 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[Oracle]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[mysql]]></category>
		<category><![CDATA[oracle]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2009/02/an-interview-with-kevin-kline-about-sql/</guid>
		<description><![CDATA[Most of the database developers these days don&#8217;t work with just one RDBMS, a large percentage will work with at least two of them. SQL In A Nutshell will help you with that, no longer do you have the need for two or more books open at the same time. I asked Kevin Kline if [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Most of the database developers these days don&#8217;t work with just one RDBMS, a large percentage will work with at least two of them. <a href="http://www.amazon.com/gp/product/0596518846?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596518846">SQL In A Nutshell</a> will help you with that, no longer do you have the need for two or more books open at the same time. I asked Kevin Kline if he would be interested in an interview and as you can see he said yes.</p>
<p><strong>Denis: Is the book geared towards a beginner/intermediate level user or do you have to be an advanced user to really utilize the information in this book?</strong></p>
<p>KK> This book is more of an intermediate + book, since it is a syntax reference.  For example, the book assumes you know what command you want to look up and doesn&#8217;t spend a lot of time educating you as to which command you should use for a given business requirement, as is the case with most O&#8217;Reilly books from the &#8220;In a Nutshell&#8221; series.  For beginning SQL, I recommend &#8220;Learning SQL&#8221; also published by O&#8217;Reilly &amp; Associates.</p>
<p><strong>Denis:  What are the most important things a person can do to master SQL?</strong></p>
<p>KK> Practice!  You simply cannot expect to master SQL, or any programming language for that matter, without doing a lot of it.</p>
<p><strong>Denis: What part of SQL do people struggle the most with?</strong></p>
<p>KK> There are a couple areas that tend to be programmatic for those who are new to SQL.  But I&#8217;d say that the biggest area of struggle, far and away, is getting used to Set Theory.  Set theory governs how data is managed in large sets of records.  It&#8217;s the way that relational databases manipulate data, but most people especially those who&#8217;ve programmed in other popular languages are used to thinking about data one row at a time.  This lead to performance problems.</p>
<p><strong>Denis: Between the second edition and the third edition of your book, from a pure SQL standpoint which RDBMS has added the most features?</strong></p>
<p>KK> If I&#8217;m measuring the most progress against the ANSI standard, I&#8217;d have to say that MySQL has added the most new SQL features.  On the other hand, MySQL started from a deficit, meaning that in early editions of my book, MySQL didn&#8217;t meet the ANSI standard for many commands and functions.  So just by complying with the ANSI standard in their latest release, they&#8217;ve added the most new features.  If I&#8217;m measuring by the most new features regardless of the ANSI standard, I&#8217;d have to say that Microsoft SQL Server has made the most progress with their many new data types and commands.  By comparison, Oracle tends to add new features via add-on products outside of the main relational engine which you must buy separately, while SQL Server adds them at no added charge right in the box.  An example of this might include the spatial data type, in the box with SQL Server, but a separate bolt-on with Oracle.</p>
<p><strong>Denis: From each RDBMS covered in your book can you name your favorite feature which is unique to that RDBMS?</strong></p>
<p>KK> I cover fewer database in the 3rd edition than in the 2nd edition since few readers expressed an interest in continuing coverage of IBM&#8217;s DB2 UDB or Sybase&#8217;s Adaptive Server.  Having said that, we still cover the ANSI standard plus the four most popular database &#8211; Oracle, Microsoft SQL Server, MySQL, and PostgreSQL.  For Oracle, I love the incredibly powerful MODEL statement and the DECODE function.  They rock!  For SQL Server, I enjoy the PIVOT and UNPIVOT statements and its XML handling features.  MySQL has a very nifty capability of utilizing several different transaction processing engines, such as InnoDB and MyISAM, some of which focus on raw processing power by dispensing with the niceties.  And I really, really like PostgreSQL unwaivering support of the ANSI standard in all of their SQL statements.</p>
<p><strong>Denis: Should people write pure ANSI SQL or are there times when it is okay to write proprietary SQL?</strong></p>
<p>KK> I&#8217;m a big believer in going for performance, and that means writing proprietary code.  Most internal IT shops should usually go with the proprietary code since the application will be for an internal customer who will run the application on only one database platform.  On the other hand, most ISV&#8217;s write their database applications for multiple database platforms to support the widest possible customer base and, invariably, these applications are always performance wastelands.  ANSI SQL is the place to get your fundamental schooling from, but in my opinion, it should not be the destination to take your application to.</p>
<p><strong>Denis: Is there a large percentage of people who work with more than one RDBMS at the same time?</strong></p>
<p>KK> We&#8217;d seen a long time span from the late 1990&#8217;s til late in this decade where most database professionals focused on only one database.  However, something that has happened in the last two years is a major upsurge in corporate mergers and acquisitions.  As a result, many more people are being asked to take on a database platform outside of their comfort zone.  I&#8217;d say that the percentages have shifted from about 15% of multi-platform enterprise DBAs a few years ago to as much as 25% today.</p>
<p><strong>Denis: What SQL books are on your bookshelf?</strong></p>
<p>KK> I still keep a copy of SQL99: Complete &#8211; Really! as well as the ANSI 2006 SQL standard.  I have Celco&#8217;s SQL for Smarties, Feuerstein&#8217;s PL/SQL Programming, and Ben-Gan&#8217;s Inside Transact-SQL Programming and Inside Transact-SQL Queries.  In addition, I&#8217;ll always keep a copy of my late friend Ken Henderson&#8217;s The Guru&#8217;s Guide to Transact-SQL for sentimental reasons.  I also have general database books about all the database platforms.</p>
<p><strong>Denis: Why do you write technical books?</strong></p>
<p>KK> It started out with a bit of an ironic twist.  When I wrote my first book in the early 1990&#8217;s, I was planning on completing a master&#8217;s degree with a thesis.  I pitched the thesis abstract to a book publishing company and was surprised when the accepted it.  And the simple truth is that I always wanted to write and enjoy writing.  That&#8217;s why I still do it today.</p>
<p><strong>Denis: Which chapter was the hardest to write and can you explain why?</strong></p>
<p>KK> There&#8217;s no doubt that the section of SQL in a Nutshell that covers ALTER, CREATE, and DROP statements was the most difficult.  And I fully blame Oracle for this.  Here&#8217;s an example derived from the vendor documentation.  The CREATE TABLE statement for MySQL and PostgreSQL runs to about 25 pages each.  The same statement has more variations on Microsoft SQL Server and so runs to about 55 pages in their documentation.  But on Oracle, the CREATE TABLE statement runs well over 160 pages with more variation, permutations, and sub-permutations than is imaginable.  No offense to the vendors here, but there is such a thing as overloading a statement or function with too much weight.  So you can imagine how much time and energy it took to distill these statements down to a digestable size!</p>
<p><strong>Denis: Who are your favorite authors?</strong></p>
<p>KK> In the database world, my two favorite authors are Kalen Delaney of Inside SQL Server fame and Steven Feuerstein, author of PL/SQL Programming and many other excellent Oracle books and a fine blog as well.  Outside of the database world, I&#8217;m a voracious reader on all topics, both fiction and non-fiction.  However, I will always read anything put out by two non-fiction writers &#8211; Jared Diamond, author of Guns, Germs and Steel, and Michael Pollan, author of The Omnivore&#8217;s Delimma.</p>
<p><strong>Denis: Where can we expect to see you in 2009? Any conferences, seminars, trade shows or classrooms perhaps?</strong></p>
<p>KK> It&#8217;s no secret that the economy has taken a downturn.  So it&#8217;s almost a certainty that I&#8217;ll speak at fewer local user groups this year than in years past.  However, I&#8217;m sure to be at TechEd this May and at the PASS 2009 Summit in Seattle this fall.  I hope to see you there!</p>
<p>Thanks goes out to Kevin Kline for doing the interview, here is some info on the book and I also provided an Amazon link, make sure to check it out</p>
<p><a href="http://www.amazon.com/gp/product/0596518846?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596518846">SQL in a Nutshell, Third Edition A Desktop Quick Reference Guide</a><br />
By Kevin Kline, Daniel Kline, Brand Hunt<br />
Published: November 2008<br />
Pages: 591<br />
Series: In a Nutshell</p>
<p>Description<br />
The essential reference to the SQL language used in today&#8217;s most popular database products, this new edition of SQL in a Nutshell clearly documents every SQL command according to the latest ANSI standard. It also details how these commands are implemented in the Microsoft SQL Server 2008 and Oracle 11g commercial database packages, and the MySQL 5.1 and PostgreSQL 8.3 open source database products.</p>
<p>If you are interested in Kevin Kline&#8217;s blog, you can find that here: http://sqlblog.com/blogs/kevin_kline/default.aspx</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/an-interview-with-kevin-kline-about-sql/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Google Interview Questions</title>
		<link>/index.php/itprofessionals/ethicsit/google-interview-questions/</link>
		<comments>/index.php/itprofessionals/ethicsit/google-interview-questions/#comments</comments>
		<pubDate>Wed, 08 Oct 2008 10:49:16 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Ethics and IT]]></category>
		<category><![CDATA[google]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[job]]></category>

		<guid isPermaLink="false">/index.php/2008/10/google-interview-questions/</guid>
		<description><![CDATA[Google Interview Questions

So the economy is really bad and your job might be on the line, Google is always looking for new talent. Here are 2 questions that they asked a friend of mine. What would you answer?

1. You have been shrunk down to the s&#8230;]]></description>
				<content:encoded><![CDATA[<h3>Google Interview Questions</h3>
<p>So the economy is really bad and your job might be on the line, Google is always looking for new talent. Here are 2 questions that they asked a friend of mine. What would you answer?</p>
<p><em>1. You have been shrunk down to the size of a nickel and tossed into a blender. You are told that the blender blades will start in 60 seconds.What would you do to save your life?</p>
<p>2. Design and describe a system/application that will most efficiently produce a report of the top 1 million Google search requests.These are the particulars.</p>
<p>* You are given 12 servers to work with. They are all dual-processor machines with 4Gb of RAM, 4x400GB hard drives and networked together.(Basically, nothing more than high-end PC&#8217;s)</p>
<p>* The log data has already been cleaned for you. It consists of 100 Billion log lines, broken down into 12 320 GB files of 40-byte search terms per line.</p>
<p>* You can use only custom written applications or available free open-source software.</em></p>
<p>So what do you think, could you answer these questions?</p>
<p>And don&#8217;t forget, if you have any tech questions then don&#8217;t hesitate to ask in our <a href="http://forum.lessthandot.com/">forums</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/ethicsit/google-interview-questions/feed/</wfw:commentRss>
		<slash:comments>20</slash:comments>
		</item>
		<item>
		<title>Interview With Louis Davidson Author of Pro SQL Server 2008 Relational Database Design and Implementation</title>
		<link>/index.php/datamgmt/datadesign/interview-with-louis-davidson-author-of/</link>
		<comments>/index.php/datamgmt/datadesign/interview-with-louis-davidson-author-of/#comments</comments>
		<pubDate>Thu, 18 Sep 2008 22:23:24 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[data modeling]]></category>
		<category><![CDATA[database design]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2008/09/interview-with-louis-davidson-author-of/</guid>
		<description><![CDATA[Pro SQL Server 2008 Relational Database Design and Implementation is one of those books that should be in the hands of every SQL Server developer. There are tons of SQL Server programming books around but none of them covers the fundamentals of a good S&#8230;]]></description>
				<content:encoded><![CDATA[<p><a href="http://www.amazon.com/gp/product/143020866X/002-3562882-4309664?ie=UTF8&amp;tag=sql08-20&amp;linkCode=xm2&amp;camp=1789&amp;creativeASIN=143020866X">Pro SQL Server 2008 Relational Database Design and Implementation</a> is one of those books that should be in the hands of every SQL Server developer. There are tons of SQL Server programming books around but none of them covers the fundamentals of a good SQL Server database, the design. If your design is &#8216;broken&#8217; then it is a lot harder to fix it down the road, design is probably the number one reason people have all kinds of problems with their databases. </p>
<p>I have both the 2000 and 2005 edition of the Pro SQL Server 2008 Relational Database Design and Implementation so I was very excited when I noticed that Louis had finished his latest version. I contacted him to see if he would be willing to do an interview and as you can see he did. Make sure to read the whole interview because there is a way to win a copy.</p>
<p><strong>Is the book geared towards a beginner/intermediate level user or do you have to be an advanced user to really utilize the information in this book?</strong></p>
<p>Well, yes and no.  Certainly not &#8220;beginner&#8221; in the completely uninitiated sense at all.  Like I wouldn&#8217;t give my wife or daughter the book and say &#8220;go for it.&#8221; (Neither of them being technically oriented enough to completely grasp my Logitech remote control at times.)  However, a beginner to database programming/design would not be a terrible thing, and I think that they could really get a quick feel for the theory.  I don&#8217;t cover T-SQL much at all, pretty much limited to writing triggers and some architecture advice.</p>
<p>I set the book up much like a college level course would be set up.  Theory first, then implementation, and finally a touch of programming. Of course, in college you are sort of a captive audience, so in some ways I wonder who might actually read the first chapter(s) of the book (if I could find out, I have a job offer for them though!)  Once I finally get over the whole process of writing the book, I hope to do some polls/focus groups on the book and see how people feel about it as I need to do some trimming for the next version as I expanded so much with the example code this time (good thing, but if the book grows larger so will the price.)  Every time I write a new edition, I think to myself &#8220;this is the last time&#8221; and I make my wife promise to hit me with a baseball bat if I start again, but when I find out that people are actually reading it, well it gets me interested again‚Ä¶and my wife wouldn&#8217;t hit me with a bat unless I did something far more‚Ä¶well‚Ä¶I digress.</p>
<p><strong>What are some of the common mistakes you see when people are designing databases?</strong></p>
<p>Well, not designing their databases would certainly be tops on the list.  So much of what I see wrong on the forums is where people are just going with what they know from writing C# or VB, often just treating tables like arrays.  The problem with this is that relational coding is NOT the same as functional coding, and the database is the central most piece of almost every system.  Screw that up and nothing is ever going to be quite right in that system.  In the end, the data is definitely all that the users care about, so getting it right it so important.</p>
<p>Part of the reason I include theory in my book is to help people understand why you need to program a relational database using relation programming concepts. Many people talk about normalization like it is some sort of ancient method for making the database more difficult to work with.  The fact is, the SQL language was and is built with normalization in mind.  It is very hard to disassemble parts of your structures, either in a row or in a column, but the opposite is very easy.  Two columns can be concatenated to form one column.  Two rows can be joined to produce a single row.  </p>
<p>I know that I often come off as a zealot, but frankly once you understand normalization, and do it a few times, everything else seems horribly wrong. The thing I find most bewildering is that people feel they can &#8220;improve&#8221; upon relational theory without even understanding it in the first place.  I am a fan of starting every chapter with a quote, and my quote I use for this situation is from C.S.Lewis: &#8220;There are no variations except for those who know a norm, and no subtleties for those who have not grasped the obvious.&#8221;  If you don&#8217;t know the current agreed upon right way, you cannot argue against it and make changes.  So understanding theory first is the first thing to do.</p>
<p><strong>Do you think every database should have a sequence table?</strong></p>
<p>Pretty much, yeah. In my new book, I dedicate quite a few pages to the concept of sequence tables and calendar tables. Both of these give you the ability to do some things using relational methods that were freaking ugly using T-SQL&#8217;s string handling and date functions.  I also included some example code that does the sum of two cubes, and finds values where a value is the sum of two cubes in 2 or 3 different ways.  Fun stuff. Not terribly practical, but workable and a good thought experiment.  One thing I love about writing (and answering forum questions) is that it allows you to break away from &#8220;normality&#8221; and just enjoy solving problems that have no tomorrow (at least not for you.)</p>
<p>I try to include a utility and a tools schema in every database I design that has dba utilities (like row count history for example) and end user tools (the sequence table and a calendar table) that can be customized to meet the needs of the users/programmers, like if you want to have string manipulation functions, including CLR objects that might get created.</p>
<p>Which brings up the question‚Ä¶Should T-SQL have better math/looping/string handling capabilities?  Wait, you are interviewing me, I don&#8217;t have to answer that one, whew.</p>
<p><strong>People are using triggers instead of constraints for data integrity; do you think that triggers are abused or maybe even misunderstood? </strong></p>
<p>Abused AND misunderstood. Not that triggers aren&#8217;t (in my at least somewhat humble opinion) very useful, but too often it seems that they are used in bad ways. I don‚Äôt know how many times I have seen trigger code that ignores the fact that more than one row can be modified, but it is more times than I have seen triggers written assuming sets of data could change (well, at least when I wasn&#8217;t writing them!)</p>
<p>I am also writing a section in an upcoming book that the MVP&#8217;s are producing about SQL Server that covers succinctly the different tools that SQL Server has to offer to protect data.  Triggers are near the bottom of the list, just before stored procedures and certainly after any declarative constraints like foreign keys, check constraints, and defaults. That section will be around 15 pages, while in my design book it is around 66 pages‚Ä¶so far less code examples, but that is the way it goes.  I wouldn&#8217;t want to take away from the other amazing authors on that project (nor would I want you to get all the good stuff from my book, he says just a little bit selfishly)</p>
<p><strong>Finally we have date and time data types, will this be of any help in designing databases and querying against those columns?</strong></p>
<p>The date data type is probably my favorite new feature in SQL Server 2008. This is the one feature that will eventually change SQL Server designs for the better.  It certainly will make working with date data easier. Never needing to store time data when you don&#8217;t need time data is going to change the world.  </p>
<p>The crazy date values and roundoff issues with all of the SQL Server 2005 and earlier types were just a pain, especially with datetime.  The fact that times of &#8217;23:59:59.999&#8242; rounded off to the next day confused everyone at one time or another. </p>
<p>The only thing I wish they had added was a time type that didn&#8217;t just hold a time of day, but held a time duration.  Time as it is will be somewhat useful, but it certainly won&#8217;t be as earth shatteringly useful as the date type. </p>
<p><strong>Why do you think people have concurrency issue, is it mostly design or bad code?</strong></p>
<p>Well, it certainly can be design, but too often it is just basically a matter of tuning.  Now here is where things can get bogged down in terminology.  A well designed database, in my opinion, doesn&#8217;t include indexes. This would even be true if SQL Server implemented unique constraints without using indexes (which could certainly be possible.) To me, the database design is complete when data is protected via design and constraint (and even triggers) from poor data.  Performance is another level of problem‚Ä¶implementation if you will.</p>
<p>The next thing I do is to start accessing the data (generally in a moderately controlled development environment), and this access is where you we start to tune access. During the development process we start to create data and tune access.  Then you do testing for performance and realize what paths the data is accessed in.  By this point it seems that 80-90% of the indexes have been found and any changes to the design can be made, for performance&#8217; sake.  Once real users are involved I usually find the other indexes that need to be added, as well as adjusting the concurrency level as needed.  Some change to the design can be necessary, but more often than not it seems that good code plus good indexing is all that is necessary for good concurrency.</p>
<p>My favorite new feature in SQL Server 2005 was the READ_COMMITTED_SNAPSHOT setting you could apply to the database.  Where snapshot isolation level allows the transaction to see how the data looked at the start of the transaction, READ_COMMITTED_SNAPSHOT allowed this to occur at a statement level only, giving you pretty much the same effect as read committed, but with not locking or blocking on reads.  For &#8220;canned&#8221; systems where you can&#8217;t make major changes to the structures, particularly where they use an optimistic locking method (or no concurrency control in code) that it can greatly improve concurrency.</p>
<p>So, while it certainly can be a design issue, it seems to me that concurrency is more of a tuning effort than anything. A good design can have poor concurrency, as can a bad one.  Of course, the good design is easier to tune, no doubt about it. </p>
<p><strong>What are the most important things a person can do to master SQL?</strong></p>
<p>Use it. I mean really, that is the key. My advice is to look yourself in the eye and say to yourself: &#8220;I will not use a cursor.  I will not use a temp table. I will not use a function.&#8221;  Then follow that advice until you just can&#8217;t figure out how not to.  I was at one time the king of the cursor, even before it was implemented in SQL Server as a first class citizen. (Hint, we used a temp table and set rowcount 1, get a row, delete that row, do our business, then get the next row.)  </p>
<p>Then, as I was getting decent at SQL, I went to a class on SQL taught by Dr. David Rozenshtein and he really pounded into our heads about the concepts of relational set-based programming. Paraphrasing, but he basically drilled it into our heads to do all that you can in one statement and let the engine do its thing. This isn&#8217;t always the case, but it is a good way to start.  I also loved his excellent book &#8220;The Essence of SQL : A Guide to Learning Most of SQL in the Least Amount of Time&#8221; and lots of practice and I was a fan.  Of course I was pretty much unable to do any functional programming after that (I was a VB fan in the early days‚Ä¶even wrote a compiler for a senior project in college in VB 1.0.  Got a good grad, but the professor thought I was nuts).</p>
<p><strong>Can you list any third party tools that you find useful to have as a SQL Server developer/admin?</strong></p>
<p>Well, first is a data modeling tool.  I use ERwin from CA, but there are several others out there.  I know some architects that do things directly via scripts, but I am very visual (I have very little memory for details, regularly looking things up in books, often even my own, one of the reasons I like writing!) and really need the overview and relationship information from the graphical part of the data model.  I like to work with the same tool to generate most of the DDL for my tables, constraints, etc, rather than maintaining a script.</p>
<p>The second important tool that I think a designer can have is a database comparison tool. The fact is, no matter how good of a process you might have, changes always seem to get made to the different environments during the development and tuning process.  Add to that that sometimes the implementer misses something in the process from dev to production (with stops along the way for testing, tuning, and qa) it certainly isn&#8217;t a bad idea.  I also highly recommend that when working with 3rd party databases that you compare the database before and after any service packs, so you know what is done.  You don&#8217;t want them to drop your customizations (like indexes) and all of the sudden your system runs like retired baseball catcher.</p>
<p>Part of my design process is to use my modeling tool to generate an &#8220;ideal&#8221; version of a database and then compare it to the last version, building a script for applying to upgrade a database, starting with the compare tool&#8217;s script, and adding in the other stuff that might need done (like loading a table.)</p>
<p>Next most important to me is a good code formatter.  People tend to format their code in really weird ways, sometimes just that I don&#8217;t like, and sometimes in ways that makes it simply obvious why their code didn&#8217;t work in the first place.</p>
<p>Since I mentioned Erwin, I will mention that I am also a big fan of the RedGate tools for sure.  (full disclosure, I am a member of their &#8220;Friends of Redgate&#8221; http://www.red-gate.com/About/community_relations/friends_of_RG.htm program,) and use them quite often. </p>
<p><strong>Name your three favorite new things in SQL Server 2008</strong></p>
<p>Date data type for sure. I mentioned that a few questions back, so I won&#8217;t go into that.</p>
<p>Table constructors are pretty nice.  Because they take up less space, I probably saved 2 or 3 pages in my book of useless UNION ALL clauses along.</p>
<p>And, even though they aren&#8217;t quite as wonderful as I would have hoped, the new dependency dynamic management views are pretty nice. It was kind of weird.  They were working pretty cool until RC0, then they changed how they worked and errors started to be raised in places that makes them awkward to use. Not impossible, but not as nice as you would hope.  Even still, you can use these views in your releases to see if all objects that are needed (less dynamic calls, of course) actually exist. </p>
<p>The problem with this question for me is that I had high hopes for SQL Server 2008, and quite often they really weren&#8217;t met (in Microsoft&#8217;s defense, I wasn&#8217;t actually led to believe things would happen, just hopes.)  For example, the table constructors. If fully implemented the horrible UPDATE syntax with JOINs could finally be retired and replaced by a syntax that protects you from updating the same row to different values in the same statement. Oh well, maybe next time?</p>
<p>I don&#8217;t want to make it sound like I am not pleased with 2008.  I am, and would suggest upgrading as soon as you could.  There are so many cool new features like Resource Governor, Auditing, Transparent Data Encryption, MERGE, etc that make it a wonderful next step in the process.  It just feels like the core T-SQL components could have progressed a little further.  I mean it is SQL Server after all.</p>
<p><strong>Where can we expect to see you in 2008/2009? Any conferences, seminars or trade shows perhaps?</strong></p>
<p>My house in front of my new HDTV, for sure. And there are two hot fried chicken places in Nashville that I just can&#8217;t get enough of‚Ä¶Any readers want to go have lunch with me, we will go to either of them pretty much anytime you want.  </p>
<p>To answer your actual question, I just spoke with Paul Nielsen at the devlink conference in Nashville (www.devlink.net) which is just a fabulous time. John Kellar does an amazing job.  Plan to be back there next year.</p>
<p>Next up for me is speaking at the Nashville SQL Server Users&#8217; group (http://nashville.sqlpass.org/) on September 26th of 2008.  My publisher is sponsoring and I am trying to arrange food that is non-pizza.  Following that I will be at the PASS conference (www.sqlpass.org) in November, again speaking with Paul Nielsen on database design, as well as a session on Tuning with Dynamic Management Views.</p>
<p>I am always willing to go more places, but I am just an average moderately average speaker at this point.  I am more comfortable sitting here at my desk in super media heaven (I have two computers, three monitors, my TV, an amp and a digital frame all in front of me at my desk.)  When I am writing I have myself to edit me at least a few times. As an example, I really don&#8217;t like meetings where people are throwing around ideas, especially when there is an adversarial air to things. When writing I can craft a response, do research, and not end up agreeing to whatever is said.  Too often meetings are won by the charismatic, not the most knowledgeable. No one is really charismatic on paper, it is just words.  Of course, the hardest part is getting people to actually read emails.  Or long interviews, I reckon.</p>
<p><strong> One way to make a person read the whole book is to include Easter eggs and then have a competition, any hidden things like that this time?</strong></p>
<p>I did this last time and it went over like a lead zeppelin.  In fact, I will make it easy for one of your readers.  A free copy of my Pro SQL Server 2008 Relational Database Design and Implementation (I love that title. Next title will be so big that it takes two volumes just for the title alone.)  book to the first two persons who email Louis@drsql.org telling me where the hidden message was in my 2005 book. </p>
<p>Thanks to Louis for this interview, if you wonder what to give that DBA/SQL Developer this Holiday Season then you can&#8217;t go wrong with <a href="http://www.amazon.com/gp/product/143020866X/002-3562882-4309664?ie=UTF8&amp;tag=sql08-20&amp;linkCode=xm2&amp;camp=1789&amp;creativeASIN=143020866X">Pro SQL Server 2008 Relational Database Design and Implementation</a></p>
<p>Download chapter 1 here: http://www.apress.com/book/downloadfile/4090</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/interview-with-louis-davidson-author-of/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>
		</item>
	</channel>
</rss>
