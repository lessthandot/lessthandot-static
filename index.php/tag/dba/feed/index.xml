<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>dba &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/dba/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Server Management: Compatibility Levels</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/sql-server-management-compatibility-levels/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/sql-server-management-compatibility-levels/#comments</comments>
		<pubDate>Thu, 28 Mar 2013 11:12:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[compatibility level]]></category>
		<category><![CDATA[dba]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2013/03/sql-server-management-compatibility-levels/</guid>
		<description><![CDATA[So you think compatibility levels will solve all your problems?  Think again!]]></description>
				<content:encoded><![CDATA[<p>There was a conversation on twitter today about SQL Server Compatibility Levels because someone’s vendor wanted them to use level 80 (SQL 2000) on a SQL 2012 Instance.  </p>
<p>There are two issues with what that vendor wanted.  The first is that SQL Server only supports Current Version + 2.  Meaning SQL Server 2012 supports SQL Server 2005 and SQL Server 2008 (and 2008R2).  SQL Server 2008 and 2008R2 have the same major release number (10).  So what this vendor was asking for is not possible because compatibility levels in SQL Server 2012 only go back to 90 (SQL 2005).</p>
<p>The second (and in my opinion the bigger) issue is why does the vendor want the compatibility level set back at all?  </p>
<p>I’ve seen many people who thing that if you set the compatibility level back to a previous version, then everything that worked in that previous version will work now.  For example, they had a SQL 2005 Instance which they migrated to SQL 2012 and they think that setting the compatibility level at 90 means all the discontinued commands will go back to working.</p>
<p>This is completely incorrect and a dangerous trap!  Compatibility levels are meant to partially run the database in the version you selected while you troubleshoot, fix and then change the compatibility level to the current version.  </p>
<p>Doing a search on the internet, I cannot find anything directly from Microsoft about what the compatibility levels really do.  However, I’ve seen and experienced firsthand that they do not allow discontinued code to suddenly work.</p>
<p>For example, in SQL 2005 you can use a command called “RAISEERROR” (note the use of two e’s in the middle).  If you try that command on a database in SQL 2012 (no matter what compatibility level you have it set at), it will not work because it was discontinued.</p>
<p>What I’m trying to say is this, you cannot skip testing and removing discontinued code by using compatibility levels.  You must test, removed discontinued code and work on migrate deprecated code to a supported solution.  It like the old saying “If something appears too good to be true, it probably is too good to be true”.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/sql-server-management-compatibility-levels/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Diagnostic Manager &#8211; Alert Statuses</title>
		<link>/index.php/datamgmt/dbadmin/diagnostic-manager-alert-statuses/</link>
		<comments>/index.php/datamgmt/dbadmin/diagnostic-manager-alert-statuses/#respond</comments>
		<pubDate>Thu, 14 Jun 2012 13:22:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dba]]></category>
		<category><![CDATA[diagnostic manager]]></category>
		<category><![CDATA[idera]]></category>
		<category><![CDATA[sql]]></category>

		<guid isPermaLink="false">/index.php/2012/06/diagnostic-manager-alert-statuses/</guid>
		<description><![CDATA[As you might imagine, I rely on Idera's Diagnostic Manager quite a bit.  Diagnostic Manager monitors many different things within each SQL Instance will alert to them when they met the thresholds you configure.  Now if you only a few SQL Instances monit&#8230;]]></description>
				<content:encoded><![CDATA[<p>As you might imagine, I rely on Idera&#8217;s Diagnostic Manager quite a bit.  Diagnostic Manager monitors many different things within each SQL Instance will alert to them when they met the thresholds you configure.  Now if you only a few SQL Instances monitored, you may not have many alerts, but if you have dozens of SQL Instances monitored, you could have several dozen alerts all the time.  </p>
<p>Maybe some of those alerts are not going to cause your system to crash right away, but you want to keep them in mind to show your boss that you need more memory or disk space.</p>
<p>So how do you know if something critical just happened that you really should look at and isn&#8217;t part of the other 50 alerts that just noise for right now?</p>
<p>This is where I use the different alert statuses and have defined what each status means.</p>
<p>Critical (Red) status means I want our support center who is watching the alerts page 24&#215;7 to call me anytime of the day or night about it.  I keep things like job failures, disk space that is really low and custom alerts about backups being really behind for example in this spot.  When a alert goes to critical and it is not something that I need to know about immediately, I will re-adjust to only go as far as a warning level.</p>
<p>Warning (Yellow) status means that this is something that I want to know about and could be become a serious issue, but I don&#8217;t need a 3AM wake up call about it.  For me it&#8217;s almost as important as a critical alert and is something that I will look at, but I won&#8217;t drop everything right now for it.</p>
<p>OK (Blue) status means it&#8217;s something I need to be aware of, but could go for days or weeks before I do something about it.  For example, our dev system is using 90% of the available memory.  That&#8217;s fine because it won&#8217;t be growing larger than that and we are actually migrating SQL Instances over to a new 2012 Environment.</p>
<p>This allows me to quickly sort through the alerts to see which ones I should be working on and concerned about (aka, prioritizing my time!)</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/diagnostic-manager-alert-statuses/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Diagnostic Manager Quick Tip &#8211; New Server Tag</title>
		<link>/index.php/datamgmt/datadesign/diagnostic-manager-quick-tip-new/</link>
		<comments>/index.php/datamgmt/datadesign/diagnostic-manager-quick-tip-new/#respond</comments>
		<pubDate>Mon, 04 Jun 2012 23:59:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[dba]]></category>
		<category><![CDATA[diagnostic manager]]></category>
		<category><![CDATA[idera]]></category>
		<category><![CDATA[sql]]></category>

		<guid isPermaLink="false">/index.php/2012/06/diagnostic-manager-quick-tip-new/</guid>
		<description><![CDATA[Where I work, we like to buy Diagnostic Manager Licenses in batches.  So every quarter or so I add in a bunch of new instances.  When you start getting over 25 instances being monitored, it gets tricky to remember which 5 instances you just added into t&#8230;]]></description>
				<content:encoded><![CDATA[<p>Where I work, we like to buy Diagnostic Manager Licenses in batches.  So every quarter or so I add in a bunch of new instances.  When you start getting over 25 instances being monitored, it gets tricky to remember which 5 instances you just added into the mix.</p>
<p>One solution that I like to use, is to create a &#8220;New Server&#8221; tag and slap it on each server as it add it.</p>
<p>Let&#8217;s just right in and create the &#8220;New Server&#8221; tag.  From the File Menu choose Manage Tags.</p>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/tag1.jpg?mtime=1338861169"><img alt="" src="/wp-content/uploads/users/kconan/tag1.jpg?mtime=1338861169" width="231" height="150" /></a></div>
<p>Near the bottom of the Manage Tags screen, choose Add.</p>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/tag2.jpg?mtime=1338861170"><img alt="" src="/wp-content/uploads/users/kconan/tag2.jpg?mtime=1338861170" width="578" height="544" /></a></div>
<p>Enter &#8220;New Server&#8221; into the Name field and click on ok.</p>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/tag3.JPG?mtime=1338861170"><img alt="" src="/wp-content/uploads/users/kconan/tag3.JPG?mtime=1338861170" width="359" height="121" /></a></div>
<p>Now as you add servers, assign them to the &#8220;New Server&#8221; tag and then you can filter on them!</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/diagnostic-manager-quick-tip-new/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Diagnostic Manager Quick Tip &#8211; Job Messages</title>
		<link>/index.php/datamgmt/dbadmin/diagnostic-manager-quick-tip/</link>
		<comments>/index.php/datamgmt/dbadmin/diagnostic-manager-quick-tip/#respond</comments>
		<pubDate>Thu, 24 May 2012 09:39:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dba]]></category>
		<category><![CDATA[diagnostic manager]]></category>
		<category><![CDATA[idera]]></category>
		<category><![CDATA[sql]]></category>

		<guid isPermaLink="false">/index.php/2012/05/diagnostic-manager-quick-tip/</guid>
		<description><![CDATA[A great use of Idera's Diagnostic Manager is to manage your SQL Job's and knowing which jobs have failed, which ones are running long and which ones have been running for the last 10 hours.  You even get to adjust the thresholds for each all of those me&#8230;]]></description>
				<content:encoded><![CDATA[<p>A great use of Idera&#8217;s Diagnostic Manager is to manage your SQL Job&#8217;s and knowing which jobs have failed, which ones are running long and which ones have been running for the last 10 hours.  You even get to adjust the thresholds for each all of those metrics.</p>
<p>If a job fails, you can don’t have check the history of the job in SSMS to see why it failed.  Instead you can do it right from Diagnostic Manager.  From SQL Agent Jobs in the Services section, find a click on the job you want to know the history of in the top section.</p>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/DMJobMessage1.jpg?mtime=1337826030"><img alt="" src="/wp-content/uploads/users/kconan/DMJobMessage1.jpg?mtime=1337826030" width="1128" height="385" /></a></div>
<p>The history will be displayed on the lower section and you can expand each run of the job.  Find the failed execute of the job that you want more information about and expand it.  If you hover over the message it will pop up displaying the whole message.  The problem is that it disappears really fast and can be annoying or hard to read if it is long.</p>
<p>So here is today’s tip!  Right click on the message and choose “View Message”.  Now the message opens in a pop up window that you can change the size of, highlight and copy and paste the details.  When you are finished reading it, you can close it.</p>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/DMJobMessage2.jpg?mtime=1337826030"><img alt="" src="/wp-content/uploads/users/kconan/DMJobMessage2.jpg?mtime=1337826030" width="905" height="441" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/DMJobMessage3.jpg?mtime=1337826031"><img alt="" src="/wp-content/uploads/users/kconan/DMJobMessage3.jpg?mtime=1337826031" width="758" height="363" /></a></div>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/diagnostic-manager-quick-tip/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Saturday 33 &#8211; Charlotte, NC</title>
		<link>/index.php/datamgmt/dbprogramming/sql-saturday-33-charlotte-nc/</link>
		<comments>/index.php/datamgmt/dbprogramming/sql-saturday-33-charlotte-nc/#comments</comments>
		<pubDate>Sun, 07 Mar 2010 20:01:53 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dba]]></category>
		<category><![CDATA[sqlsaturday]]></category>
		<category><![CDATA[sqlserver]]></category>

		<guid isPermaLink="false">/index.php/2010/03/sql-saturday-33-charlotte-nc/</guid>
		<description><![CDATA[This weekend was SQL Saturday #33 in Charlotte NC and also the first one I attended. It&#8217;s been a long weekend, but I wanted to get my thoughts down while they&#8217;re still fresh. Be warned, it&#8217;s been a long weekend, so my grammar and attempts to reign in my propensity for verbosity have both gone [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This weekend was SQL Saturday #33 in Charlotte NC and also the first one I attended. It&#8217;s been a long weekend, but I wanted to get my thoughts down while they&#8217;re still fresh. Be warned, it&#8217;s been a long weekend, so my grammar and attempts to reign in my propensity for verbosity have both gone out the window.</p>
<h2>Background</h2>
<p>Sorry SQL Saturday? Tarwn and SQL? We have questions and we know how painful it is for you to write short blog posts&#8230;</p>
<h3>SQL What?</h3>
<p><a href="http://sqlsaturday.com/about.aspx" title="More About SQL Saturday (Visit the Site)">SQL Saturday</a> is the name for a series of 40+ SQL events that occur throughout the US. Each event is managed locally by SQL user groups and PASS chapters and sticks to a few guidelines set down by Andy Warren (<a href="http://www.sqlservercentral.com/blogs/andy_warren/default.aspx" title="Andy Warren's blog>blog</a> | <a href="http://twitter.com/SQLAndy" title="Andy Warren on Twitter">twitter</a>), Steve Jones (<a href="http://www.sqlservercentral.com/blogs/steve_jones/default.aspx" title="Steve Jones's blog">blog</a> | <a href="www.twitter.com/way0utwest " title="Steve Jones on Twitter">Twitter</a>), and Brian Knight (<a href="http://www.bidn.com/blogs/BrianKnight" title="Brian Knight's Blog">blog</a> | <a href="http://twitter.com/brianknight" title="Brian Knight on Twitter">twitter</a>), the creators of SQL Saturday. This year the reins for SQL Saturday are being passed to <a href="http://www.sqlpass.org/" title="Visit the  Professional Association for SQL Server website">PASS</a> in order to help manage the logistics of the growth of the events. There is a lot more information available on the <a href="http://sqlsaturday.com/" title="Hit the website">SQLSaturday website</a>, including upcoming dates and locations for more events.</p>
<h3>My Involvement</h3>
<p>So obviously I am not a SQL guy and you may be wondering what I was doing at a SQL Saturday. As you know, LessThanDot has some really good SQL people that frequently write articles, offer support in multiple forums, and support their respective communities. This year we have decided to begin supporting the community in a more active role by supporting SQL Saturday #31 in Chicago. As we continue to grow we hope we will be able to extend our support in other ways, but that&#8217;s less relevant at the moment. I&#8217;ll be present at SQL Saturday #31 to help show support &#8220;(and hopefully sneak into a few sessions as well).</p>
<p>When the local call went out for attendees to SQL Saturday in Charlotte, I jumped on the opportunity to not only meet some of the local(-ish) community, but also to take advantage of the learning opportunities from the sessions and from the event itself. While I was able to dive deeper into a number of topics that interest me I was also able to ask some questions about the logistics of the event and planning. </p>
<h2>The Sessions</h2>
<p>I made it to the following sessions:</p>
<p><b><u><a href="http://thesqlagentman.com/presentationfiles/" title="Click here for Presentation Files">Insight Into Your Indexes with DMVs</a></u><br />
Timothy Ford </b>(<a href="http://thesqlagentman.com/" title="Timothy Ford's blog">blog</a> | <a href="http://twitter.com/SQLAgentman" title="Timothy Ford on Twitter">twitter</a>)<br />
An excellent session using DMVs to manage, maintain, and locate unused indexes or potential targets for tuning. This was a good session because I had already used everything he pointed out, but he gave me more depth (as well as a number of tricks) that I didn&#8217;t previously have.</p>
<p><b><u>Is Virtualization a Good Choice for SQL Server?</u><br />
Denny Cherry</b> (<a href="http://itknowledgeexchange.techtarget.com/sql-server/" title="Denny's blog">blog</a> | <a href="http://twitter.com/mrdenny" title="Denny Cherry on Twitter">twitter</a>)<br />
Having previous virtualized servers (as well as managed the random set of SQL servers), I was eager to start filling a gap in my education, namely putting the two together. Denny did an excellent introduction into virtualization of SQL Server, critical points that need to be determined when considering virtualization, and a live view into his own, very large environments. </p>
<p><b><u>Powershell Awesomesauce</u><br />
Aaron Nelson</b> (<a href="http://sqlvariant.com/wordpress/" title="Aaron Nelson's blog">blog</a> | <a href="http://twitter.com/SQLVariant" title="Aaron Nelson on Twitter">twitter</a>)<br />
I went into Aaron&#8217;s session with almost no knowledge of powershell and came out with some ideas and practical examples of where it could be used to manage environments and automate work. While some of the concepts clicked quickly for me (&#8216;piping&#8217; output is common in Unix-like systems), others were new to me and his examples hit a good balance between brevity in code length and breadth of functionality. He also pointed out a number of good follow-up resources and reading recommendations.</p>
<p><b><u>Maximizing Plan Re-Use</u><br />
Andrew Kelly</b> (<a href="http://sqlblog.com/blogs/andrew_kelly/" title="Andrew Kelly's blog">blog</a> | <a href="http://twitter.com/gunneyk" title="Andrew Kelly on twitter">twitter</a>)<br />
The concept of executions plans is still fairly new to me, something I had little knowledge on prior to Andrew&#8217;s session. Andrew presented a good mix of knowledge about plans, recompilation of plans, reasons, etc. and active examples to help us tie the concepts to the code. While I&#8217;m by no means an expert after one session, he filled in some critical gaps in my own learning and helped connect some dots from past tuning experiences.</p>
<p><b><u>Storage for the DBA</u><br />
Denny Cherry</b> (<a href="http://itknowledgeexchange.techtarget.com/sql-server/" title="Denny's blog">blog</a> | <a href="http://twitter.com/mrdenny" title="Denny Cherry on Twitter">twitter</a>)<br />
As Denny put it in the beginning, often there is a disconnect between DBA&#8217;s and Storage Admins that comes down to some fundamental differences in terminology. This session was a &#8216;How to Speak Storage Admin&#8217; class that walked us trough the basics of terminology, tools and methods to help size your environment, and some advanced tools he uses in his own environment. And excellent session, even if I am a developer and not a DBA <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><b><u><a href="http://kevinekline.com/slides/" title="Kevin's Slides">Top 10 Mistakes on SQL Server</a></u><br />
Kevin Kline</b> (<a href="http://kevinekline.com/" title="Kevin Kline's blog">blog</a> | <a href="http://twitter.com/kekline" title="Kevin Kline on Twitter">twitter</a>)<br />
An excellent session from Kevin on the top 10 <u>DBA</u> mistakes he has seen in his experiences. From lack of troubleshooting methodology to not testing backups, he covered a number of assumptions and bad practices that we have probably all been guilty of, at one time or another.<br />
<i>Note: The linked slides page above has the 2005 version of this Top 10&#8230; slides, but not the newer 2008 one he presented yesterday. I assume that will be posted soon, though</i></p>
<h2>The Community</h2>
<p>The community was probably the best part of the event. Beyond getting to learn from so many people (for free!) it was great to actually meet them face to face. Someone repeated the &#8220;Our rockstars are not the same as your rockstars&#8221; comment at one point during the day, and I couldn&#8217;t agree more. It was just downright cool to meet people that previously I had only talked with on twitter and forums, or seen as names on book covers and faces in webinars. The down-to-earth, we&#8217;re-all-part-of-the-same-community feeling was a great change from the larger conferences that (not that I don&#8217;t appreciate those as well). Instead of being a conference event, the day had a more fun, get-together feel to it.</p>
<p>And the fact that Greg (<a href="http://twitter.com/sqlsensei" title="Greg on Twitter">SQLSensei</a>) picked up my bar tab and I got a raffle drawing prize from Kevin (<a href="http://twitter.com/kekline" Title="kevin on Twitter (again)">kekline</a>) definitely didn&#8217;t hurt. Peter (<a href="http://twitter.com/peter_shire" title="Peter on twitter">Peter_Shire</a>), Greg (<a href="http://twitter.com/sqlsensei" title="Greg on Twitter">SQLSensei</a>), and the rest of the group at Charlotte put together an excellent event.</p>
<h2>Final Word</h2>
<p>The event was a resounding success. This was my first SQL Saturday and already I&#8217;m looking forward to my next one, and the one after that. The SQL community is amazing and I think that these events really drive it home. I urge everyone to support your local SQL Server user groups and events like SQL Saturday, as this will only help the community continue growing and continue to be a close-knit and fun community to be a part of. </p>
<p>I have also, after urging from a number of people, started giving thought to offering to speak at few events myself. While I&#8217;m not nearly the SQL guru that the other speakers are, I&#8217;ve been in the trenches for a while, broken my fair share of servers, and could probably find one or two things to pass on.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/sql-saturday-33-charlotte-nc/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Using schemas to maintain order as a DBA</title>
		<link>/index.php/datamgmt/datadesign/grouping-dba-junk/</link>
		<comments>/index.php/datamgmt/datadesign/grouping-dba-junk/#comments</comments>
		<pubDate>Fri, 26 Feb 2010 13:28:54 +0000</pubDate>
		<dc:creator><![CDATA[Ted Krueger (onpnt)]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[IBM DB2 Admin]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[MySQL Admin]]></category>
		<category><![CDATA[Oracle Admin]]></category>
		<category><![CDATA[dba]]></category>
		<category><![CDATA[schema]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2010/02/grouping-dba-junk/</guid>
		<description><![CDATA[Chaos or order? Managing objects in large and small installations of SQL Server can be a job in itself at times. In particular, for the DBA, objects we create on the instances we manage more often than not are found littered over the user and system databases. These objects more often are found in the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p></p>
<h2>Chaos or order?</h2>
<p>
Managing objects in large and small installations of SQL Server can be a job in itself at times. In particular, for the DBA, objects we create on the instances we manage more often than not are found littered over the user and system databases. These objects more often are found in the master database in SQL Server. Really, why not put them there? We are the “masters” over the database server right? SSMS has this quality to it that when we connect to it, we get the master database glaring us in the face by default just like a booby.  So of course that means we create our objects there. Right? </p>
<div class="image_block"><img src="/wp-content/uploads/blogs/DataMgmt/booby.gif" alt="" title="" width="460" height="504" /></p>
<h3>Who&#8217;s really the booby?</h3>
</div>
<p>
After years managing the databases, we may find ourselves feeling just like that booby when it takes minutes, hours and sometimes even failing to find the scripts we previously created to maintain our database servers.
</p>
<p>
Maintaining order as a DBA starts with our own messes. That’s a pretty direct statement we can really dive into. SQL Server has for many versions given us the ability to manage our messes by grouping them into meaningful areas called schemas. Many times people set schemas aside and only think of them as a security method but they are much more. They take the booby out of us!
</p>
<p>
In my own installations each instance contains a DBA database and everything I do as a DBA or Developer resides in there. To learn more about that first step in maintaining order check out, &#8220;<a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/instance-design-where-to-do-your-work-as">Instance design; Where to do your work as a DBA and DB Developer</a>&#8220;.</p>
<p>We can go much farther than that knowing schemas are available to us by grouping objects specific to other databases we maintain.
</p>
<p>
Let’s say we have two databases on an instance named, ERP and WMS. In our DBA database we can create schemas to match the databases such as WMS_OBJ and ERP_OBJ. Now when we create procedures, function, views and so on we can put them into the schema that represents the database they refer to.</p>
<pre>CREATE PROCEDURE WMS_OBJ.GRABAWIDGET
AS
SELECT WIDGETS FROM WMS.WIDGET_TABLE</pre>
<p>Without much thought we can quickly find all our objects </p>
<pre>SELECT * FROM INFORMATION_SCHEMA.ROUTINES 
WHERE SPECIFIC_SCHEMA = 'WMS_OBJ'</pre>
<p></p>
<p>Quickly we see the grouping and maintenance benefits of doing this but it doesn’t stop there. Once these objects are grouped in schemas, we can manage all of them as a single entity. They can be scripted to DR sites quickly, replicated, moved and a really cool point, we can authorize users to gain access to these schemas. If new team members come into your group you can quickly give them the schema rights they need to get started while maintaining the other schemas and security levels. We can transfer objects from schema to schema as well making migrations quicker and easier.
</p>
<h2>Take aways…</h2>
<p>
In all, schemas make us better DBAs by allowing us quicker responses to situations by having order on our database servers. Security is stronger and better managed as well. Upon connecting to SSMS, first check to see if you are in the master database.  Get in the habit of working outside the master database for greater control and to leave a smaller footprint on the system side of SQL Server. Take a few minutes to look at the objects used daily, monthly or even yearly and see if they can be grouped into schemas. After the initial work of creating the schemas and moving objects to them, I think order just may be achieved.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/grouping-dba-junk/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
