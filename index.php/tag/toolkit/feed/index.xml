<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>toolkit &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/toolkit/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Taming RSS Feeds with XML::RSS and Template::Toolkit</title>
		<link>/index.php/webdev/serverprogramming/taming-rss-feeds-with-xml/</link>
		<comments>/index.php/webdev/serverprogramming/taming-rss-feeds-with-xml/#comments</comments>
		<pubDate>Fri, 14 Sep 2012 11:01:00 +0000</pubDate>
		<dc:creator><![CDATA[Rob Earl]]></dc:creator>
				<category><![CDATA[Perl]]></category>
		<category><![CDATA[Server Programming]]></category>
		<category><![CDATA[feed]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[rss]]></category>
		<category><![CDATA[template]]></category>
		<category><![CDATA[toolkit]]></category>
		<category><![CDATA[xml]]></category>

		<guid isPermaLink="false">/index.php/2012/09/taming-rss-feeds-with-xml/</guid>
		<description><![CDATA[This is a remarkably simple trick which I've found very handy. With a few lines of Perl you can take any RSS feed and format it to your liking.

Get the Feed

You can do this using LWP::Simple:


use LWP::Simple;

my $feed_url = 'http://feeds.b&/#8230;]]></description>
				<content:encoded><![CDATA[<p>This is a remarkably simple trick which I&#8217;ve found very handy. With a few lines of Perl you can take any RSS feed and format it to your liking.</p>
<h1></h1>
<h1>Get the Feed</h1>
<p>You can do this using <a href="http://search.cpan.org/~gaas/libwww-perl-6.04/lib/LWP/Simple.pm">LWP::Simple</a>:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw2">use</span> LWP<span class="sy0">::</span><span class="me2">Simple</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">my</span> <span class="re0">$feed_url</span> <span class="sy0">=</span> <span class="st_h">'http://feeds.bbci.co.uk/news/rss.xml'</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$feed</span> <span class="sy0">=</span> get<span class="br0">&#40;</span><span class="re0">$feed_url</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st0">&quot;Failed to fetch feed.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">use LWP::Simple;

my $feed_url = 'http://feeds.bbci.co.uk/news/rss.xml';
my $feed = get($feed_url)
        or die ("Failed to fetch feed.");</pre></div></div>

<h1></h1>
<h1>Process the Raw Result</h1>
<p>Using <a href="http://search.cpan.org/~kellan/XML-RSS-1.05/lib/RSS.pm">XML::RSS</a>, convert the raw feed into a more manageable hash.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw2">use</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">my</span> <span class="re0">$rss</span> <span class="sy0">=</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="re0">$rss</span><span class="sy0">-&gt;</span><span class="me1">parse</span><span class="br0">&#40;</span><span class="re0">$feed</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">use XML::RSS;

my $rss = XML::RSS-&gt;new();
$rss-&gt;parse($feed);</pre></div></div>

<h1></h1>
<h1>Format to Your Liking</h1>
<p><a href="http://template-toolkit.org/">Template::Toolkit</a> can take in a <a href="http://template-toolkit.org/docs/manual/Syntax.html">template</a> and a hash reference of values to substitute into the template.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="co1"># Define a template</span>
<span class="kw1">my</span> <span class="re0">$template</span> <span class="sy0">=</span> <span class="co4">&lt;&lt;&quot;TEMPLATE&quot;;</span>
<span class="co4">[% channel.title %]</span>
&nbsp;
<span class="co4">Headlines:</span>
<span class="co4">[% FOREACH item = items %]</span>
<span class="co4">[% item.pubDate %]t[% item.title %]</span>
<span class="co4">[% END %]</span>
<span class="co4">TEMPLATE</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"># Define a template
my $template = &lt;&lt;"TEMPLATE";
[% channel.title %]

Headlines:
[% FOREACH item = items %]
[% item.pubDate %]t[% item.title %]
[% END %]
TEMPLATE</pre></div></div>

<p>This simple template will take the BBC news feed from above and print out a list of headlines with publication dates.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">my</span> <span class="re0">$tt</span> <span class="sy0">=</span> Template<span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st0">&quot;Failed to load template: $Template::ERRORn&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1"># Combine the template with the processed RSS feed.</span>
<span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">process</span> <span class="br0">&#40;</span> <span class="re0">$template</span><span class="sy0">,</span> <span class="re0">$rss</span> <span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">error</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">my $tt = Template-&gt;new()
        or die ("Failed to load template: $Template::ERRORn");

# Combine the template with the processed RSS feed.
$tt-&gt;process ( $template, $rss )
        or die $tt-&gt;error();</pre></div></div>

<h1></h1>
<h1>Putting it All Together</h1>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="perl"><thead><tr><td colspan="2"  class="head">Perl</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="de1"><pre class="de1"><span class="co1">#!/usr/bin/perl</span>
<span class="kw2">use</span> strict<span class="sy0">;</span>
<span class="kw2">use</span> warnings<span class="sy0">;</span>
&nbsp;
<span class="kw2">use</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">;</span>
<span class="kw2">use</span> LWP<span class="sy0">::</span><span class="me2">Simple</span><span class="sy0">;</span>
<span class="kw2">use</span> Template<span class="sy0">;</span>
&nbsp;
<span class="co1">##################</span>
<span class="co1"># Configuration:</span>
<span class="co1">#</span>
<span class="co1">##################</span>
<span class="kw1">my</span> <span class="re0">$feed_url</span> <span class="sy0">=</span> <span class="st_h">'http://feeds.bbci.co.uk/news/rss.xml'</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$template</span> <span class="sy0">=</span> <span class="co4">&lt;&lt;&quot;TEMPLATE&quot;;</span>
<span class="co4">[% channel.title %]</span>
&nbsp;
<span class="co4">Headlines:</span>
<span class="co4">[% FOREACH item = items %]</span>
<span class="co4">[% item.pubDate %]t[% item.title %]</span>
<span class="co4">[% END %]</span>
<span class="co4">TEMPLATE</span>
&nbsp;
<span class="co1">##################</span>
<span class="co1">##################</span>
&nbsp;
<span class="kw1">my</span> <span class="re0">$tt</span> <span class="sy0">=</span> Template<span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st0">&quot;Failed to load template: $Template::ERRORn&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$feed</span> <span class="sy0">=</span> get<span class="br0">&#40;</span><span class="re0">$feed_url</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="br0">&#40;</span><span class="st_h">'Failed to fetch feed.'</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$rss</span> <span class="sy0">=</span> XML<span class="sy0">::</span><span class="me2">RSS</span><span class="sy0">-&gt;</span><span class="kw2">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="re0">$rss</span><span class="sy0">-&gt;</span><span class="me1">parse</span><span class="br0">&#40;</span><span class="re0">$feed</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">process</span> <span class="br0">&#40;</span> <span class="re0">$template</span><span class="sy0">,</span> <span class="re0">$rss</span> <span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">or</span> <span class="kw3">die</span> <span class="re0">$tt</span><span class="sy0">-&gt;</span><span class="me1">error</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">#!/usr/bin/perl
use strict;
use warnings;

use XML::RSS;
use LWP::Simple;
use Template;

##################
# Configuration:
#
##################
my $feed_url = 'http://feeds.bbci.co.uk/news/rss.xml';
my $template = &lt;&lt;"TEMPLATE";
[% channel.title %]

Headlines:
[% FOREACH item = items %]
[% item.pubDate %]t[% item.title %]
[% END %]
TEMPLATE

##################
##################

my $tt = Template-&gt;new()
        or die ("Failed to load template: $Template::ERRORn");
my $feed = get($feed_url)
        or die ('Failed to fetch feed.');
my $rss = XML::RSS-&gt;new();
$rss-&gt;parse($feed);

$tt-&gt;process ( $template, $rss )
        or die $tt-&gt;error();</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="bash"><thead><tr><td colspan="2"  class="head">Bash</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1">rob<span class="sy0">@</span>arrakis:~<span class="sy0">/</span>public_html<span class="sy0">/</span>rss-reader$ <span class="kw2">perl</span> rss-reader.pl 
BBC News - Home
&nbsp;
Headlines:
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">12</span>:<span class="nu0">15</span>:<span class="nu0">22</span> GMT &nbsp; Kate privacy invasion <span class="st_h">'grotesque'</span>
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">11</span>:<span class="nu0">49</span>:<span class="nu0">10</span> GMT &nbsp; US missions on film protest alert
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">12</span>:<span class="nu0">25</span>:<span class="nu0">25</span> GMT &nbsp; Alps attack girl returning to UK
&nbsp;
Fri, <span class="nu0">14</span> Sep <span class="nu0">2012</span> <span class="nu0">10</span>:<span class="nu0">17</span>:03 GMT &nbsp; Woman is held after car body <span class="kw2">find</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">rob@arrakis:~/public_html/rss-reader$ perl rss-reader.pl 
BBC News - Home

Headlines:

Fri, 14 Sep 2012 12:15:22 GMT	Kate privacy invasion 'grotesque'

Fri, 14 Sep 2012 11:49:10 GMT	US missions on film protest alert

Fri, 14 Sep 2012 12:25:25 GMT	Alps attack girl returning to UK

Fri, 14 Sep 2012 10:17:03 GMT	Woman is held after car body find</pre></div></div>

<p>In this example the RSS feed and template are defined in code but they can just as easily be defined in files or a database allowing for changes/additions without deploying new code.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/webdev/serverprogramming/taming-rss-feeds-with-xml/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>VMware Powershell VI Toolkit 1.5 Released for Windows with 32 new cmdlets</title>
		<link>/index.php/sysadmins/os/vmware-powershell-vi-toolkit-1-5-release/</link>
		<comments>/index.php/sysadmins/os/vmware-powershell-vi-toolkit-1-5-release/#respond</comments>
		<pubDate>Wed, 28 Jan 2009 12:11:04 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Operating Systems]]></category>
		<category><![CDATA[cmdlets]]></category>
		<category><![CDATA[powershell]]></category>
		<category><![CDATA[toolkit]]></category>
		<category><![CDATA[virtualization]]></category>
		<category><![CDATA[vmware]]></category>

		<guid isPermaLink="false">/index.php/2009/01/vmware-powershell-vi-toolkit-1-5-release/</guid>
		<description><![CDATA[VMware has released VI Toolkit 1.5. They have added 32 new cmdlets, enhanced their existing cmdlets, and fixed tons of bugs. VI Toolkit (for Windows) is a command-line and scripting tool built on Windows PowerShell, and provides more than 150 cmdlets for managing and automating your VMware Infrastructure. VI Toolkit (for Windows) 1.5 Beta supports [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>VMware has released VI Toolkit 1.5. They have added 32 new cmdlets, enhanced their existing cmdlets, and fixed tons of bugs. VI Toolkit (for Windows) is a command-line and scripting tool built on Windows PowerShell, and provides more than 150 cmdlets for managing and automating your VMware Infrastructure.</p>
<p>VI Toolkit (for Windows) 1.5 Beta supports the following VMware environments:<br />
VMware ESX 3.5<br />
VMware ESX 3i<br />
VMware VirtualCenter 2.5<br />
VMware ESX 3.0/VirtualCenter 2.0</p>
<p>You can download the software here: http://www.vmware.com/sdk/vitk_win/index.html</p>
<p>The release notes are here: http://www.vmware.com/support/developer/windowstoolkit/wintk15/windowstoolkit15-200901-releasenotes.html</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/sysadmins/os/vmware-powershell-vi-toolkit-1-5-release/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
