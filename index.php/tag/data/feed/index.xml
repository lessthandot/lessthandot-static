<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>data &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/data/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Thinking with Data by Max Shron</title>
		<link>/index.php/datamgmt/thinking-with-data-by-max-shron/</link>
		<comments>/index.php/datamgmt/thinking-with-data-by-max-shron/#respond</comments>
		<pubDate>Thu, 27 Feb 2014 11:57:03 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Book Review]]></category>
		<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Data Management]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[data science]]></category>
		<category><![CDATA[o'reilly]]></category>
		<category><![CDATA[review]]></category>

		<guid isPermaLink="false">/?p=2445</guid>
		<description><![CDATA[DISCLAIMER I recently enrolled myself in the O’Reilly Blogger Review program, which basically allows me to get one O’Reilly eBook for free per month so I can review it on my blog. This works in both ways of course: I get free eBooks while they’re still hot from the press (figuratively speaking of course) and [&#8230;]]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify"><b>DISCLAIMER</b></p>
<p style="text-align: justify">I recently enrolled myself in the O’Reilly Blogger Review program, which basically allows me to get one O’Reilly eBook for free per month so I can review it on my blog. This works in both ways of course: I get free eBooks while they’re still hot from the press (figuratively speaking of course) and the books get some extra coverage on social media. A nice bonus is that Microsoft Press books are also published through O’Reilly, so it is possible I can get my hands early on new SQL Server books.</p>
<p style="text-align: justify">They do encourage you to do honest reviews, so don’t expect every review to go like “OMG this is the bestest most awesomesauce book I have ever read!”. It might though if it is an actual great book, but if it isn’t, I will surely mention it in the review.</p>
<p style="text-align: justify"><b>THINKING WITH DATA</b></p>
<p style="text-align: justify">The first book I got my hands on is <i>Thinking with Data – How to Turn Information into Insigths</i> by Max Shron. In this book, Max describes a framework and methodology on how to approach data science projects. Instead of diving straight into a project by applying your favorite tools and techniques on a giving data set, the author explains it is more useful and productive to stop and think a while about the <i>why </i>before the <i>how</i>.</p>
<p style="text-align: justify"><a href="http://shop.oreilly.com/product/0636920029182.do"><img class="alignnone size-full wp-image-2447" alt="thinkingwithdata" src="/wp-content/uploads/2014/02/thinkingwithdata.gif" width="180" height="270" /></a></p>
<p style="text-align: justify">The first chapters explain how to set the scope – context, need, vision and outcome – and show you how to refine the scope even further, using for example scaffolding. Then you get an introduction on how to construct arguments, using claims, evidence, justifications and rebuttals. Using other fields like philosophy and mathematics, patterns of reasoning are explained (the most interesting chapter in my opinion), followed by a deep-dive into causality. The final chapter puts it all together by two elaborate case studies.</p>
<p style="text-align: justify">Personally I liked this book. Although it is focused on data science projects, there are plenty nuggets of wisdom that can be ported to the realm of business intelligence. The book isn’t too long – a mere 93 pages – which makes it easily digestible. If the book would have been longer, it might get a bit boring to read. The author has a pleasant writing style and uses examples throughout the book. Without the examples, the concepts would have been much harder to grasp. I would recommend this book to anyone who works with data professionally. It will help you to structure your thoughts before diving into the next project.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/thinking-with-data-by-max-shron/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to copy data/append data into files from within T-SQL</title>
		<link>/index.php/datamgmt/datadesign/how-to-copy-data-append-data-into-files/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-copy-data-append-data-into-files/#respond</comments>
		<pubDate>Mon, 06 Jul 2009 14:17:16 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[bcp]]></category>
		<category><![CDATA[bulk copy]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[files]]></category>
		<category><![CDATA[openrowset]]></category>

		<guid isPermaLink="false">/index.php/2009/07/how-to-copy-data-append-data-into-files/</guid>
		<description><![CDATA[Sometimes you want to quickly copy some data into a text file or you want append some data to a text file but you don&#8217;t feel like opening BIDS or the DTS designer. Here is a way to accomplish what you want from within a query window To copy data into a new file use [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly copy some data into a text file or you want append some data to a text file but you don&#8217;t feel like opening BIDS or the DTS designer. Here is a way to accomplish what you want from within a query window<br />
To copy data into a new file use BCP (Bulk Copy Program). To append to a file use OPENROWSET</p>
<p>Here is some sample code. First create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="de1"><pre class="de1"><span class="kw1">use</span> tempdb
go
&nbsp;
<span class="kw1">create</span> <span class="kw1">table</span> TestData<span class="br0">&#40;</span>Id <span class="kw1">int</span>, SomeValue <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span>,SomeOtherValue <span class="kw1">Decimal</span><span class="br0">&#40;</span><span class="nu0">6</span>,<span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
go
&nbsp;
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span>,<span class="st0">'abcdefg1'</span>,<span class="nu0">3.31</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span>,<span class="st0">'abcdefg2'</span>,<span class="nu0">3.32</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span>,<span class="st0">'abcdefg3'</span>,<span class="nu0">3.33</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="st0">'abcdefg4'</span>,<span class="nu0">3.34</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span>,<span class="st0">'abcdefg5'</span>,<span class="nu0">3.35</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">6</span>,<span class="st0">'abcdefg6'</span>,<span class="nu0">3.36</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">7</span>,<span class="st0">'abcdefg7'</span>,<span class="nu0">3.37</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">8</span>,<span class="st0">'abcdefg8'</span>,<span class="nu0">3.38</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">9</span>,<span class="st0">'abcdefg9'</span>,<span class="nu0">3.39</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">10</span>,<span class="st0">'abcdefg10'</span>,<span class="nu0">3.40</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">11</span>,<span class="st0">'abcdefg11'</span>,<span class="nu0">3.41</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestData <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">12</span>,<span class="st0">'abcdefg12'</span>,<span class="nu0">3.42</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">use tempdb
go

create table TestData(Id int, SomeValue varchar(20),SomeOtherValue Decimal(6,2))
go

insert TestData values(1,'abcdefg1',3.31)
insert TestData values(2,'abcdefg2',3.32)
insert TestData values(3,'abcdefg3',3.33)
insert TestData values(4,'abcdefg4',3.34)
insert TestData values(5,'abcdefg5',3.35)
insert TestData values(6,'abcdefg6',3.36)
insert TestData values(7,'abcdefg7',3.37)
insert TestData values(8,'abcdefg8',3.38)
insert TestData values(9,'abcdefg9',3.39)
insert TestData values(10,'abcdefg10',3.40)
insert TestData values(11,'abcdefg11',3.41)
insert TestData values(12,'abcdefg12',3.42)</pre></div></div>

<p>Now lets&#8217; first use BCP to copy data into a file. Here is what the command will look like</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">master..<span class="me1">xp_cmdshell</span> <span class="st0">'bcp &quot;SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData&quot; queryout C:TestData.txt -t, -c -Slocalhost -T'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">master..xp_cmdshell 'bcp "SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData" queryout C:TestData.txt -t, -c -Slocalhost -T'</pre></div></div>

<p>So what does all this stuff do? </p>
<p><strong>master..xp_cmdshell</strong> Executes a given command string as an operating-system command shell. </p>
<p><strong>bcp  </strong>is the bulk copy program</p>
<p><strong>&#8220;SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData&#8221;</strong> This is our query, CHAR(34) is the ascii code for double qoutes, we are putting double quotes around the character values/</p>
<p><strong>queryout </strong>Specifies the direction of the bulk copy</p>
<p><strong>C:TestData.txt</strong> this is the name of the file that will be created</p>
<p><strong>-t,</strong> Specifies the field terminator. The default is t (tab character). We are using this parameter to override the default field terminator by using a comma instead.</p>
<p><strong>-c</strong> Performs the bulk copy operation using a character data type. This option does not prompt for each field</p>
<p><strong>-Slocalhost</strong> tells bcp where to connect to, in this case localhost.</p>
<p><strong>-T</strong> Specifies that bcp connects to SQL Server with a trusted connection. If you want to use login credentials and you username is SQL2008 and the password = pw2008 then instead of -T you would do this -U&#8221;SQL2008&#8243; -P&#8221;pw2008&#8243;</p>
<p>There are a lot more arguments available for the BCP utility, I recommend checking all the available arguments out here: http://msdn.microsoft.com/en-us/library/ms162802.aspx</p>
<p></p>
<h3>Attention/warning!!</h3>
<p>Here are a couple of warnings for you. </p>
<p><strong>xp_cmdshell</strong><br />
It is not a best practice to have xp_cmdshell enabled. As a matter of fact beginning with SQL Server 2005, the product ships with xp_cmdshell disabled. If you try to run xp_cmdshell you will get the following message if it is not enabled<br />
Server: Msg 15281, Level 16, State 1, Procedure xp_cmdshell, Line 1</p>
<p>SQL Server blocked access to procedure &#8216;sys.xp_cmdshell&#8217; of component &#8216;xp_cmdshell&#8217; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of &#8216;xp_cmdshell&#8217; by using sp_configure. For more information about enabling &#8216;xp_cmdshell&#8217;, see &#8220;Surface Area Configuration&#8221; in SQL Server Books Online.</p>
<p>To enable xp_cmdshell execute the following code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'xp_cmdshell'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE SP_CONFIGURE 'show advanced options', 1
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'xp_cmdshell', '1'
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'show advanced options', 0
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p><strong>OPENROWSET </strong><br />
In SQL Server 2005 and 2008 OPENROWSET is also disabled by default, if you try to run an OPENROWSET query then you will see the following message:</p>
<p>Server: Msg 15281, Level 16, State 1, Line 1<br />
SQL Server blocked access to STATEMENT &#8216;OpenRowset/OpenDatasource&#8217; of component &#8216;Ad Hoc Distributed Queries&#8217; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of &#8216;Ad Hoc Distributed Queries&#8217; by using sp_configure. For more information about enabling &#8216;Ad Hoc Distributed Queries&#8217;, see &#8220;Surface Area Configuration&#8221; in SQL Server Books Online.</p>
<p>To enable OPENROWSET and OPENQUERY you can use the previous script but instead of &#8216;xp_cmdshell&#8217; you will use &#8216;Ad Hoc Distributed Queries&#8217;. The script to enable Ad Hoc Distributed Queries is below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">1</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'Ad Hoc Distributed Queries'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO
&nbsp;
<span class="kw1">EXECUTE</span> <span class="kw3">SP_CONFIGURE</span> <span class="st0">'show advanced options'</span>, <span class="nu0">0</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE SP_CONFIGURE 'show advanced options', 1
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'Ad Hoc Distributed Queries', '1'
RECONFIGURE WITH OVERRIDE
GO
 
EXECUTE SP_CONFIGURE 'show advanced options', 0
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p>Now it is time to execute our query, make sure that everything in the code below is on one line in your query window.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">master..<span class="me1">xp_cmdshell</span> <span class="st0">'bcp &quot;SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData ORDER BY id&quot; queryout C:TestData.txt -t, -c -Slocalhost -T'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">master..xp_cmdshell 'bcp "SELECT id, CHAR(34) + SomeValue + CHAR(34),SomeOtherValue FROM tempdb..TestData ORDER BY id" queryout C:TestData.txt -t, -c -Slocalhost -T'</pre></div></div>

<p>You should see the following output</p>
<p><em>NULL<br />
Starting copy&#8230;<br />
NULL<br />
12 rows copied.<br />
Network packet size (bytes): 4096<br />
Clock Time (ms.): total        1<br />
NULL</em></p>
<p>Now we will use OPENROWSET to read the file we just created</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=No;'</span>, <span class="st0">'SELECT * FROM TestData.txt'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=No;', 'SELECT * FROM TestData.txt')</pre></div></div>

<p>If everything is correct and ad-hoc queries are enabled on your instance you should see all the rows we inserted. </p>
<p>Now let&#8217;s append a row to the file</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="nu0">13</span>,<span class="st0">'abcdefg13'</span>,<span class="nu0">3.43</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData.txt')
select 13,'abcdefg13',3.43</pre></div></div>

<p>Running this query below will now return 13 rows</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="nu0">13</span>,<span class="st0">'abcdefg13'</span>,<span class="nu0">3.43</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData.txt')
select 13,'abcdefg13',3.43</pre></div></div>

<p>What if you want to use OPENROWSET to insert into a file that does not exist yet? Let&#8217;s try it out by changing the name to TestData2.txt.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData2.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="nu0">13</span>,<span class="st0">'abcdefg13'</span>,<span class="nu0">3.43</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData2.txt')
select 13,'abcdefg13',3.43</pre></div></div>

<p>And here is our message<br />
<em>Server: Msg 7399, Level 16, State 1, Line 1<br />
OLE DB provider &#8216;Microsoft.Jet.OLEDB.4.0&#8217; reported an error.<br />
[OLE/DB provider returned message: The Microsoft Jet database engine could not find the object &#8216;TestData2.txt&#8217;.  Make sure the object exists and that you spell its name and the path name correctly.]<br />
OLE DB error trace [OLE/DB Provider &#8216;Microsoft.Jet.OLEDB.4.0&#8217; IColumnsInfo::GetColumnsInfo returned 0x80004005:   ].</em></p>
<p>Mmm, what if we create a file from within a shell command?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1">master..<span class="me1">xp_cmdshell</span> <span class="st0">'copy nul c:TestData2.txt'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">master..xp_cmdshell 'copy nul c:TestData2.txt'</pre></div></div>

<p><em>1 file(s) copied.<br />
NULL<br />
</em></p>
<p>Now that we created the file, let&#8217;s try again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">OPENROWSET</span><span class="br0">&#40;</span><span class="st0">'Microsoft.Jet.OLEDB.4.0'</span>, 
<span class="st0">'Text;Database=C:;HDR=Yes;'</span>, <span class="st0">'SELECT * FROM TestData2.txt'</span><span class="br0">&#41;</span>
<span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> TestData</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO OPENROWSET('Microsoft.Jet.OLEDB.4.0', 
'Text;Database=C:;HDR=Yes;', 'SELECT * FROM TestData2.txt')
select * from TestData</pre></div></div>

<p><em>Server: Msg 7357, Level 16, State 2, Line 1<br />
Could not process object &#8216;SELECT * FROM TestData2.txt&#8217;. The OLE DB provider &#8216;Microsoft.Jet.OLEDB.4.0&#8242; indicates that the object has no columns.<br />
OLE DB error trace [Non-interface error:  OLE DB provider unable to process object, since the object has no columnsProviderName=&#8217;Microsoft.Jet.OLEDB.4.0&#8242;, Query=SELECT * FROM TestData2.txt&#8217;].</em></p>
<p>As you can see since the file is an empty file JET doesn&#8217;t know how to insert the data</p>
<p>It might be entirely possible to use OPENROWSET to insert into a blank file and if you know how then feel free to leave a comment. But in general to copy data into a file that does not extist yet use bcp and openrowset to append to a file.<br />
If you need do this kind of thing more than once I would recommend to use SSIS (SQL Server Integration Services) or DTS (Data Transformation Services) since it is much more flexible and customizable.</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-copy-data-append-data-into-files/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
