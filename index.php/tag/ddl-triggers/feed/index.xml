<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>ddl triggers &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/ddl-triggers/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Advent 2012 Day 4: Triggers, what to do, what not to do</title>
		<link>/index.php/datamgmt/dbprogramming/triggers-what-to-do-what/</link>
		<comments>/index.php/datamgmt/dbprogramming/triggers-what-to-do-what/#comments</comments>
		<pubDate>Tue, 04 Dec 2012 10:04:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[ddl triggers]]></category>
		<category><![CDATA[dml triggers]]></category>
		<category><![CDATA[rdbms]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[t-sql]]></category>
		<category><![CDATA[triggers]]></category>

		<guid isPermaLink="false">/index.php/2012/12/triggers-what-to-do-what/</guid>
		<description><![CDATA[This is day four of the SQL Advent 2012 series of blog posts. Today we are going to look at triggers. Triggers are a great way to keep your database in a consistent state. There are two types of triggers, DML triggers and DLL triggers. DML triggers  res&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is day four of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. Today we are going to look at triggers. Triggers are a great way to keep your database in a consistent state. There are two types of triggers, DML triggers and DLL triggers. DML triggers  respond to Data Manipulation Statements (Insert, Delete, Update) DDL triggers respond to Data Definition Language events. </p>
<p>Some things that DML triggers are used for:</p>
<ul>
<li>Keeps your databases from having wrong data by doing checks that can&#8217;t be handled with constraints</li>
<li>Filling in values that are not supplied and can&#8217;t be handled through default constraints since these don&#8217;t fire on updates </li>
<li>Calculation summary values and updates the summary table with that value</li>
<li>Used as a mechanism to maintain an audit trail for DML statements</li>
</ul>
<p>Some things that DDL triggers are used for:</p>
<ul>
<li>Automatically add columns to a table if they were not added, for example LastUpdated and InsertedBy columns</li>
<li>Notify a DBA when a database has been created, dropped or altered</li>
<li>Used as a mechanism to maintain an audit trail for DDL statements, capture every time an object has been created, dropped or altered and by who</li>
</ul>
<p>Most common mistake people make when first starting writing triggers is that they write it in such a way that it will only work if you insert/update/delete one row at a time. A trigger fires per batch not per row, you have to take this into consideration otherwise your DML statements will blow up. How to do this is explained in this post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/best-practice-coding-sql-server-triggers">Best Practice: Coding SQL Server triggers for multi-row operations</a>, there is no point recreating that post here.</p>
<p>Another problem that I see is that some people think a trigger is SQL Server&#8217;s version of crontab, you will see code that sends email, kicks off jobs, runs stored procedures. This is the wrong approach, a trigger should be lean and mean, it should execute as fast as possible, if you need to do some additional things then dump some data from the trigger into a processing table and then use that table to do your additional tasks. Don&#8217;t use triggers as a messaging system either, SQL Server comes with Service Broker, use that instead. Triggers might look like hammers to some people but I guarantee you not everything is a nail&#8230;.</p>
<p>You could end up with a real difficult thing to debug, one trigger that kicks off other triggers, now have fun debugging the trigger hell you got yourself into&#8230;.or worse debug this mess if you inherited this&#8230;.this is like the GOTO spaghetti code of databases.</p>
<p>Since triggers work besides the scenes you might spend hours debugging something only to find out that a trigger modified the value</p>
<p>One thing I always find interesting is when someone sees two <em>n rows affected</em> statements when they only did one insert, you know a person like that has not been exposed to triggers yet</p>
<p>Some people will say that you don&#8217;t need triggers for anything and that they do more harm than good, I myself don&#8217;t agree with that, triggers have a place but they should not be abused and overused, the same can be said of views</p>
<p>What is your opinion, are triggers needed or are they not needed?</p>
<p>That is all for day four of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/triggers-what-to-do-what/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2011 Day 13: DDL Triggers</title>
		<link>/index.php/datamgmt/datadesign/sql-advent-2011-day-13/</link>
		<comments>/index.php/datamgmt/datadesign/sql-advent-2011-day-13/#respond</comments>
		<pubDate>Tue, 13 Dec 2011 13:41:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[auditing]]></category>
		<category><![CDATA[ddl triggers]]></category>
		<category><![CDATA[triggers]]></category>

		<guid isPermaLink="false">/index.php/2011/12/sql-advent-2011-day-13/</guid>
		<description><![CDATA[Today we are going to take a look at DDL triggers. DDL triggers have Server or Database Scope, DDL triggers can fire in response to a T-SQL event processed in the current database, or on the current server.]]></description>
				<content:encoded><![CDATA[<p>In my <a href="/index.php/DataMgmt/DataDesign/are-you-ready-for-sql">Are you ready for SQL Server 2012 or are you still partying like it is 1999?</a> post, I wrote about how you should start using SQL Server 2005 and SQL Server 2008 functionality now in order to prepare for SQL Server 2012. I still see tons of code that is written in the pre 2005 style and people still keep using those functions, procs and statements even though SQL Server 2005 and 2008 have much better functionality.</p>
<p>Today we are going to take a look at DDL triggers. DDL triggers have Server or Database Scope, DDL triggers can fire in response to a T-SQL event processed in the current database, or on the current server. For example a CREATE_TABLE event can fire on a database level as well as on a server level, a DROP_DATABASE can only fire on the server level. DDL triggers can be a very powerful tool for auditing purposes as well.</p>
<p>Let&#8217;s take a quick look at a DDL trigger for a CREATE_TABLE event, this trigger will fire every time someone issues a CREATE TABLE T-SQL DDL statement</p>
<p>This trigger is created to capture all CREATE_TABLE events in the tempdb database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> tempdb
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> DBLevelsafety 
<span class="kw1">ON</span> <span class="kw1">DATABASE</span> 
<span class="kw1">FOR</span> CREATE_TABLE
<span class="kw1">AS</span> 
&nbsp; &nbsp;<span class="kw1">PRINT</span> <span class="st0">'You must disable Trigger &quot;DBLevelsafety&quot; to drop or alter tables!'</span> 
&nbsp; &nbsp;<span class="kw1">ROLLBACK</span>
;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE tempdb
GO

CREATE TRIGGER DBLevelsafety 
ON DATABASE 
FOR CREATE_TABLE
AS 
   PRINT 'You must disable Trigger "DBLevelsafety" to drop or alter tables!' 
   ROLLBACK
;</pre></div></div>

<p>If you try to create a table now in the tempdb database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> tempdb
GO
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> bla<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE tempdb
GO
CREATE TABLE bla(id int)</pre></div></div>

<p>You will get the following message</p>
<p><em>You must disable Trigger &#8220;DBLevelsafety&#8221; to drop or alter tables!<br />
Msg 3609, Level 16, State 2, Line 1<br />
The transaction ended in the trigger. The batch has been aborted.</em></p>
<p>Let&#8217;s drop the trigger</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TRIGGER</span> DBLevelsafety</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TRIGGER DBLevelsafety</pre></div></div>

<p><em>Msg 3701, Level 11, State 5, Line 1<br />
Cannot drop the trigger &#8216;DBLevelsafety&#8217;, because it does not exist or you do not have permission.</em></p>
<p>In order to drop a DDL trigger, the syntax is a little different from a DML trigger, you need to add ON DATABASE  or ON ALL SERVER after the name, Try it again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TRIGGER</span> DBLevelsafety <span class="kw1">ON</span> <span class="kw1">DATABASE</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TRIGGER DBLevelsafety ON DATABASE </pre></div></div>

<p>Now create a DDL triggers that will fire in any database.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> ServerLevelsafety 
<span class="kw1">ON</span> <span class="sy0">ALL</span> SERVER 
<span class="kw1">FOR</span> CREATE_TABLE
<span class="kw1">AS</span> 
&nbsp; &nbsp;<span class="kw1">PRINT</span> <span class="st0">'You must disable Trigger &quot;ServerLevelsafety&quot; to drop or alter tables!'</span> 
&nbsp; &nbsp;<span class="kw1">ROLLBACK</span>
;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TRIGGER ServerLevelsafety 
ON ALL SERVER 
FOR CREATE_TABLE
AS 
   PRINT 'You must disable Trigger "ServerLevelsafety" to drop or alter tables!' 
   ROLLBACK
;</pre></div></div>

<p>Go into the model database and try to create a table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> model
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> temp<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE model
GO

CREATE TABLE temp(id int)</pre></div></div>

<p><em>You must disable Trigger &#8220;ServerLevelsafety&#8221; to drop or alter tables!<br />
Msg 3609, Level 16, State 2, Line 2<br />
The transaction ended in the trigger. The batch has been aborted.</em></p>
<p>Now switch to tempdb and see if you can create a table there</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> tempdb
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> temp<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE tempdb
GO

CREATE TABLE temp(id int)</pre></div></div>

<p><em>You must disable Trigger &#8220;ServerLevelsafety&#8221; to drop or alter tables!<br />
Msg 3609, Level 16, State 2, Line 2<br />
The transaction ended in the trigger. The batch has been aborted.</em></p>
<p>Nope, as you can see you can&#8217;t create a table in any database<br />
Drop the trigger</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TRIGGER</span> ServerLevelsafety <span class="kw1">ON</span> <span class="sy0">ALL</span> SERVER </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TRIGGER ServerLevelsafety ON ALL SERVER </pre></div></div>

<p>Verify that you can indeed create a table again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> tempdb
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> temp<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE tempdb
GO

CREATE TABLE temp(id int)</pre></div></div>

<p>Let&#8217;s take a look at another example. What if you want to log anytime someone issues a DROP TABLE command in any database? You can easily accomplish that, and by using the EVENTDATA function you can capture the exact command that was used.</p>
<p>First create a new database with one table, this table will be used to store the messages from the trigger</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> Logs
GO
&nbsp;
<span class="kw1">USE</span> Logs
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TriggerLog<span class="br0">&#40;</span>DDL <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">300</span><span class="br0">&#41;</span>,DatabaseName <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>,ExecutedBy <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, EventDate <span class="kw1">DATETIME</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE Logs
GO

USE Logs
GO

CREATE TABLE TriggerLog(DDL VARCHAR(300),DatabaseName VARCHAR(100),ExecutedBy VARCHAR(100), EventDate DATETIME)
GO</pre></div></div>

<p>Create the following trigger</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> trDropTable
<span class="kw1">ON</span> <span class="sy0">ALL</span> SERVER <span class="co1">-- A server level trigger</span>
<span class="kw1">FOR</span> DROP_TABLE <span class="co1">--Event we want to capture</span>
<span class="kw1">AS</span>
&nbsp; <span class="kw1">INSERT</span> tempdb..<span class="me1">TriggerLog</span>
&nbsp; <span class="kw1">SELECT</span> EVENTDATA<span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="kw1">value</span><span class="br0">&#40;</span><span class="st0">'(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]'</span>,<span class="st0">'nvarchar(max)'</span><span class="br0">&#41;</span>, <span class="co1">-- T-SQL command</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;EVENTDATA<span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="kw1">value</span><span class="br0">&#40;</span><span class="st0">'(/EVENT_INSTANCE/DatabaseName)[1]'</span>,<span class="st0">'nvarchar(max)'</span><span class="br0">&#41;</span>, &nbsp;<span class="co1">-- database name</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">COALESCE</span><span class="br0">&#40;</span><span class="kw2">SUSER_SNAME</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="kw2">USER_NAME</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TRIGGER trDropTable
ON ALL SERVER -- A server level trigger
FOR DROP_TABLE --Event we want to capture
AS
  INSERT tempdb..TriggerLog
  SELECT EVENTDATA().value('(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]','nvarchar(max)'), -- T-SQL command
		 EVENTDATA().value('(/EVENT_INSTANCE/DatabaseName)[1]','nvarchar(max)'),  -- database name
        COALESCE(SUSER_SNAME(),USER_NAME()),
        GETDATE();
GO</pre></div></div>

<p>The EVENT_INSTANCE/TSQLCommand/CommandText part of EVENTDATA will give us the actual command that was executed, the /EVENT_INSTANCE/DatabaseName part will give use the database name.</p>
<p>It is time to take it for a test, run the following block of code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> Tempdb
GO
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> bla<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> bla
&nbsp;
<span class="kw1">USE</span> model
GO
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> bla<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> bla</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE Tempdb
GO
CREATE TABLE bla(id int)
GO
DROP TABLE bla

USE model
GO
CREATE TABLE bla(id int)
GO
DROP TABLE bla</pre></div></div>

<p>Now if you look in your TriggerLog table, you will see 2 rows</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> Logs..<span class="me1">TriggerLog</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM Logs..TriggerLog</pre></div></div>

<p>As you can see we have the two rows, since we grab the database name as well we can see what database it was run in in case you have the same table name in multiple databases</p>
<pre>DDL	        DatabaseName	ExecutedBy	EventDate
--------------  -------------   --------------- ------------------------
DROP TABLE bla	tempdb          Denis-PCDenis	2011-12-12 20:47:23.607
DROP TABLE bla	model           Denis-PCDenis	2011-12-12 20:47:23.780</pre>
<p>Also take a look at my post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/use-ddl-triggers-to-track">Use DDL Triggers To Track Table Changes</a> to learn how you can capture all the DDL changes that were applied to a table over time&#8230;.powerful stuff!</p>
<p>I just scratched the surface with what you can do with DDL triggers, below is a list of all the events that you can create your trigger for.</p>
<h2>DDL Statements That Have Server or Database Scope</h2>
<p></p>
<div class="tables">
<table>
<tr>
<th>DDL Events</th>
<th>DDL Events</th>
<th>DDL Events</th>
</tr>
<tr>
<td>
<p>CREATE_APPLICATION_ROLE (Applies to the CREATE APPLICATION ROLE statement and <strong>sp_addapprole</strong>. If a new schema is created, this event also triggers a CREATE_SCHEMA event.)</p>
</td>
<td>
<p>ALTER_APPLICATION_ROLE (Applies to the ALTER APPLICATION ROLE statement and <strong>sp_approlepassword</strong>.)</p>
</td>
<td>
<p>DROP_APPLICATION_ROLE (Applies to the DROP APPLICATION ROLE statement and <strong>sp_dropapprole</strong>.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_ASSEMBLY</p>
</td>
<td>
<p>ALTER_ASSEMBLY</p>
</td>
<td>
<p>DROP_ASSEMBLY</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_ASYMMETRIC_KEY</p>
</td>
<td>
<p>ALTER_ASYMMETRIC_KEY</p>
</td>
<td>
<p>DROP_ASYMMETRIC_KEY</p>
</td>
</tr>
<tr>
<td>
<p>ALTER_AUTHORIZATION</p>
</td>
<td>
<p>ALTER_AUTHORIZATION_DATABASE (Applies to the ALTER AUTHORIZATION statement when ON DATABASE is specified, and <strong>sp_changedbowner</strong>.)</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_BROKER_PRIORITY</p>
</td>
<td>
<p>ALTER_BROKER_PRIORITY</p>
</td>
<td>
<p>DROP_BROKER_PRIORITY</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_CERTIFICATE</p>
</td>
<td>
<p>ALTER_CERTIFICATE</p>
</td>
<td>
<p>DROP_CERTIFICATE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_CONTRACT</p>
</td>
<td>
<p>DROP_CONTRACT</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>ADD_COUNTER_SIGNATURE</p>
</td>
<td>
<p>DROP_COUNTER_SIGNATURE</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_CREDENTIAL</p>
</td>
<td>
<p>ALTER_CREDENTIAL</p>
</td>
<td>
<p>DROP_CREDENTIAL</p>
</td>
</tr>
<tr>
<td>
<p>GRANT_DATABASE</p>
</td>
<td>
<p>DENY_DATABASE</p>
</td>
<td>
<p>REVOKE_DATABASE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_DATABASE_AUDIT_SPEFICIATION</p>
</td>
<td>
<p>ALTER_DATABASE_AUDIT_SPEFICIATION</p>
</td>
<td>
<p>DENY_DATABASE_AUDIT_SPEFICIATION</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_DATABASE_ENCRYPTION_KEY</p>
</td>
<td>
<p>ALTER_DATABASE_ENCRYPTION_KEY</p>
</td>
<td>
<p>DROP_DATABASE_ENCRYPTION_KEY</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_DEFAULT</p>
</td>
<td>
<p>DROP_DEFAULT</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>BIND_DEFAULT (Applies to <strong>sp_bindefault</strong>.)</p>
</td>
<td>
<p>UNBIND_DEFAULT (Applies to <strong>sp_unbindefault</strong>.)</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_EVENT_NOTIFICATION</p>
</td>
<td>
<p>DROP_EVENT_NOTIFICATION</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_EXTENDED_PROPERTY (Applies to <strong>sp_addextendedproperty</strong>.)</p>
</td>
<td>
<p>ALTER_EXTENDED_PROPERTY (Applies to <strong>sp_updateextendedproperty</strong>.)</p>
</td>
<td>
<p>DROP_EXTENDED_PROPERTY (Applies to <strong>sp_dropextendedproperty</strong>.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_FULLTEXT_CATALOG (Applies to the CREATE FULLTEXT CATALOG statement and <strong>sp_fulltextcatalog</strong> when <span class="parameter">create</span> is specified.) </p>
</td>
<td>
<p>ALTER_FULLTEXT_CATALOG (Applies to the ALTER FULLTEXT CATALOG statement, <strong>sp_fulltextcatalog</strong> when <span class="parameter">start_incremental</span>, <span class="parameter">start_full</span>, <span class="parameter">Stop</span>, or <span class="parameter">Rebuild</span> is specified, and <strong>sp_fulltext_database</strong> when <span class="parameter">enable</span> is specified.)</p>
</td>
<td>
<p>DROP_FULLTEXT_CATALOG (Applies to the DROP FULLTEXT CATALOG statement and <strong>sp_fulltextcatalog</strong> when <span class="parameter">drop</span> is specified.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_FULLTEXT_INDEX (Applies to the CREATE FULLTEXT INDEX statement and <strong>sp_fulltexttable</strong> when <span class="parameter">create</span> is specified.)</p>
</td>
<td>
<p>ALTER_FULLTEXT_INDEX (Applies to the ALTER FULLTEXT INDEX statement, <strong>sp_fulltextcatalog</strong> when <span class="parameter">start_full</span>, <span class="parameter">start_incremental</span>, or <span class="parameter">stop</span> is specified, <strong>sp_fulltext_column</strong>, and <strong>sp_fulltext_table</strong> when any action other than <span class="parameter">create</span> or <span class="parameter">drop</span> is specified.)</p>
</td>
<td>
<p>DROP_FULLTEXT_INDEX (Applies to the DROP FULLTEXT INDEX statement and <strong>sp_fulltexttable</strong> when <span class="parameter">drop</span> is specified.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_FULLTEXT_STOPLIST</p>
</td>
<td>
<p>ALTER_FULLTEXT_STOPLIST</p>
</td>
<td>
<p>DROP_FULLTEXT_STOPLIST</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_FUNCTION</p>
</td>
<td>
<p>ALTER_FUNCTION</p>
</td>
<td>
<p>DROP_FUNCTION</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_INDEX</p>
</td>
<td>
<p>ALTER_INDEX (Applies to the ALTER INDEX statement and <strong>sp_indexoption</strong>.)</p>
</td>
<td>
<p>DROP_INDEX</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_MASTER_KEY</p>
</td>
<td>
<p>ALTER_MASTER_KEY</p>
</td>
<td>
<p>DROP_MASTER_KEY</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_MESSAGE_TYPE</p>
</td>
<td>
<p>ALTER_MESSAGE_TYPE</p>
</td>
<td>
<p>DROP_MESSAGE_TYPE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_PARTITION_FUNCTION</p>
</td>
<td>
<p>ALTER_PARTITION_FUNCTION</p>
</td>
<td>
<p>DROP_PARTITION_FUNCTION</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_PARTITION_SCHEME</p>
</td>
<td>
<p>ALTER_PARTITION_SCHEME</p>
</td>
<td>
<p>DROP_PARTITION_SCHEME</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_PLAN_GUIDE (Applies to <strong>sp_create_plan_guide</strong>.)</p>
</td>
<td>
<p>ALTER_PLAN_GUIDE (Applies to <strong>sp_control_plan_guide</strong> when ENABLE, ENABLE ALL, DISABLE, or DISABLE ALL is specified.)</p>
</td>
<td>
<p>DROP_PLAN_GUIDE (Applies to <strong>sp_control_plan_guide</strong> when DROP or DROP ALL is specified.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_PROCEDURE</p>
</td>
<td>
<p>ALTER_PROCEDURE (Applies to the ALTER PROCEDURE statement and <strong>sp_procoption</strong>.)</p>
</td>
<td>
<p>DROP_PROCEDURE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_QUEUE</p>
</td>
<td>
<p>ALTER_QUEUE</p>
</td>
<td>
<p>DROP_QUEUE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_REMOTE_SERVICE_BINDING</p>
</td>
<td>
<p>ALTER_REMOTE_SERVICE_BINDING</p>
</td>
<td>
<p>DROP_REMOTE_SERVICE_BINDING</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_SPATIAL_INDEX</p>
</td>
<td>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>RENAME (Applies to <strong>sp_rename</strong>)</p>
</td>
<td>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_ROLE (Applies to the CREATE ROLE statement, <strong>sp_addrole</strong>, and <strong>sp_addgroup</strong>.)</p>
</td>
<td>
<p>ALTER_ROLE</p>
</td>
<td>
<p>DROP_ROLE (Applies to the DROP ROLE statement, <strong>sp_droprole</strong>, and <strong>sp_dropgroup</strong>.)</p>
</td>
</tr>
<tr>
<td>
<p>ADD_ROLE_MEMBER</p>
</td>
<td>
<p>DROP_ROLE_MEMBER</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_ROUTE</p>
</td>
<td>
<p>ALTER_ROUTE</p>
</td>
<td>
<p>DROP_ROUTE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_RULE</p>
</td>
<td>
<p>DROP_RULE</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>BIND_RULE (Applies to <strong>sp_bindrule</strong>.)</p>
</td>
<td>
<p>UNBIND_RULE (Applies to <strong>sp_unbindrule</strong>.)</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_SCHEMA (Applies to the CREATE SCHEMA statement, <strong>sp_addrole</strong>, <strong>sp_adduser</strong>, <strong>sp_addgroup</strong>, and <strong>sp_grantdbaccess</strong>.)</p>
</td>
<td>
<p>ALTER_SCHEMA (Applies to the ALTER SCHEMA statement and <strong>sp_changeobjectowner</strong>.)</p>
</td>
<td>
<p>DROP_SCHEMA</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_SERVICE</p>
</td>
<td>
<p>ALTER_SERVICE</p>
</td>
<td>
<p>DROP_SERVICE</p>
</td>
</tr>
<tr>
<td>
<p>ALTER_SERVICE_MASTER_KEY</p>
</td>
<td>
<p>BACKUP_SERVICE_MASTER_KEY</p>
</td>
<td>
<p>RESTORE_SERVICE_MASTER_KEY</p>
</td>
</tr>
<tr>
<td>
<p>ADD_SIGNATURE</p>
</td>
<td>
<p>DROP_SIGNATURE</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_SPATIAL_INDEX</p>
</td>
<td>
<p>ALTER_INDEX can be used for spatial indexes.</p>
</td>
<td>
<p>DROP_INDEX can be used for spatial indexes.</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_STATISTICS</p>
</td>
<td>
<p>DROP_STATISTICS</p>
</td>
<td>
<p>UPDATE_STATISTICS</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_SYMMETRIC_KEY</p>
</td>
<td>
<p>ALTER_SYMMETRIC_KEY</p>
</td>
<td>
<p>DROP_SYMMETRIC_KEY</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_SYNONYM</p>
</td>
<td>
<p>DROP_SYNONYM</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_TABLE</p>
</td>
<td>
<p>ALTER_TABLE (Applies to the ALTER TABLE statement and <strong>sp_tableoption</strong>.)</p>
</td>
<td>
<p>DROP_TABLE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_TRIGGER</p>
</td>
<td>
<p>ALTER_TRIGGER (Applies to the ALTER TRIGGER statement and <strong>sp_settriggerorder</strong>.)</p>
</td>
<td>
<p>DROP_TRIGGER</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_TYPE (Applies to the CREATE TYPE statement and <strong>sp_addtype</strong>.)</p>
</td>
<td>
<p>DROP_TYPE (Applies to the DROP TYPE statement and <strong>sp_droptype</strong>.)</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_USER (Applies to the CREATE USER statement, <strong>sp_adduser</strong>, and <strong>sp_grantdbaccess</strong>.)</p>
</td>
<td>
<p>ALTER_USER (Applies to ALTER USER statement and <strong>sp_change_users_login</strong>.)</p>
</td>
<td>
<p>DROP_USER (Applies to the DROP USER statement, <strong>sp_dropuser</strong>, and <strong>sp_revokedbaccess</strong>.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_VIEW</p>
</td>
<td>
<p>ALTER_VIEW</p>
</td>
<td>
<p>DROP_VIEW</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_XML_INDEX</p>
</td>
<td>
<p>ALTER_INDEX can be used for XML indexes.</p>
</td>
<td>
<p>DROP_INDEX can be used for XML indexes.</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_XML_SCHEMA_COLLECTION</p>
</td>
<td>
<p>ALTER_XML_SCHEMA_COLLECTION</p>
</td>
<td>
<p>DROP_XML_SCHEMA_COLLECTION</p>
</td>
</tr>
</table>
</div>
<h2>DDL Statements That Have Server Scope</h2>
<p></p>
<div class="tables">
<table>
<tr>
<th>DDL Events</th>
<th>DDL Events</th>
<th>DDL Events</th>
</tr>
<tr>
<td>
<p>ALTER_AUTHORIZATION_SERVER</p>
</td>
<td>
<p>ALTER_SERVER_CONFIGURATION</p>
</td>
<td>
<p>ALTER_INSTANCE (Applies to <strong>sp_configure</strong> and <strong>sp_addserver</strong> when a local server instance is specified.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_CREDENTIAL</p>
</td>
<td>
<p>ALTER_CREDENTIAL</p>
</td>
<td>
<p>DROP_CREDENTIAL</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_CRYPTOGRAPHIC_PROVIDER</p>
</td>
<td>
<p>ALTER_CRYPTOGRAPHIC_PROVIDER</p>
</td>
<td>
<p>DROP_CRYPTOGRAPHIC_PROVIDER</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_DATABASE</p>
</td>
<td>
<p>ALTER_DATABASE (Applies to the ALTER DATABASE statement and <strong>sp_fulltext_database</strong>.)</p>
</td>
<td>
<p>DROP_DATABASE</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_ENDPOINT</p>
</td>
<td>
<p>ALTER_ENDPOINT</p>
</td>
<td>
<p>DROP_ENDPOINT</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_EVENT_SESSION</p>
</td>
<td>
<p>ALTER_EVENT_SESSION</p>
</td>
<td>
<p>DROP_EVENT_SESSION</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_EXTENDED_PROCEDURE (Applies to <strong>sp_addextendedproc</strong>.)</p>
</td>
<td>
<p>DROP_EXTENDED_PROCEDURE (Applies to <strong>sp_dropextendedproc</strong>.)</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_LINKED_SERVER (Applies to <strong>sp_addlinkedserver</strong>.)</p>
</td>
<td>
<p>ALTER_LINKED_SERVER (Applies to <strong>sp_serveroption</strong>.)</p>
</td>
<td>
<p>DROP_LINKED_SERVER (Applies to <strong>sp_dropserver</strong> when a linked server is specified.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_LINKED_SERVER_LOGIN (Applies to <strong>sp_addlinkedsrvlogin</strong>.)</p>
</td>
<td>
<p>DROP_LINKED_SERVER_LOGIN (Applies to <strong>sp_droplinkedsrvlogin</strong>.)</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_LOGIN (Applies to the CREATE LOGIN statement, <strong>sp_addlogin</strong>, <strong>sp_grantlogin</strong>, <strong>xp_grantlogin</strong>, and <strong>sp_denylogin</strong> when used on a nonexistent login that must be implicitly created.)</p>
</td>
<td>
<p>ALTER_LOGIN (Applies to the ALTER LOGIN statement, <strong>sp_defaultdb</strong>, <strong>sp_defaultlanguage</strong>, <strong>sp_password</strong>, and <strong>sp_change_users_login</strong> when <span class="parameter">Auto_Fix</span> is specified.)</p>
</td>
<td>
<p>DROP_LOGIN (Applies to the DROP LOGIN statement, <strong>sp_droplogin</strong>, <strong>sp_revokelogin</strong>, and <strong>xp_revokelogin</strong>.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_MESSAGE (Applies to <strong>sp_addmessage</strong>.)</p>
</td>
<td>
<p>ALTER_MESSAGE (Applies to <strong>sp_altermessage</strong>.)</p>
</td>
<td>
<p>DROP_MESSAGE (Applies to <strong>sp_dropmessage</strong>.)</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_REMOTE_SERVER (Applies to <strong>sp_addserver</strong>.)</p>
</td>
<td>
<p>ALTER_REMOTE_SERVER (Applies to <strong>sp_setnetname</strong>.)</p>
</td>
<td>
<p>DROP_REMOTE_SERVER (Applies to <strong>sp_dropserver</strong> when a remote server is specified.)</p>
</td>
</tr>
<tr>
<td>
<p>GRANT_SERVER</p>
</td>
<td>
<p>DENY_SERVER</p>
</td>
<td>
<p>REVOKE_SERVER</p>
</td>
</tr>
<tr>
<td>
<p>ADD_SERVER_ROLE_MEMBER</p>
</td>
<td>
<p>DROP_SERVER_ROLE_MEMBER</p>
</td>
<td>
</td>
</tr>
<tr>
<td>
<p>CREATE_SERVER_AUDIT</p>
</td>
<td>
<p>ALTER_SERVER_AUDIT</p>
</td>
<td>
<p>DROP_SERVER_AUDIT</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_SERVER_AUDIT_SPECIFICATION</p>
</td>
<td>
<p>ALTER_SERVER_AUDIT_SPECIFICATION</p>
</td>
<td>
<p>DROP_SERVER_AUDIT_SPECIFICATION</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_RESOURCE_POOL</p>
</td>
<td>
<p>ALTER_RESOURCE_POOL</p>
</td>
<td>
<p>DROP_RESOURCE_POOL</p>
</td>
</tr>
<tr>
<td>
<p>CREATE_WORKLOAD_GROUP</p>
</td>
<td>
<p>CREATE_WORKLOAD_GROUP</p>
</td>
<td>
<p>CREATE_WORKLOAD_GROUP</p>
</td>
</tr>
</table>
</div>
<p>Come back tomorrow for the next post in this series</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/sql-advent-2011-day-13/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Use DDL Triggers To Track Table Changes</title>
		<link>/index.php/datamgmt/datadesign/use-ddl-triggers-to-track/</link>
		<comments>/index.php/datamgmt/datadesign/use-ddl-triggers-to-track/#comments</comments>
		<pubDate>Thu, 21 Apr 2011 07:28:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[alter table]]></category>
		<category><![CDATA[auditing]]></category>
		<category><![CDATA[ddl]]></category>
		<category><![CDATA[ddl triggers]]></category>
		<category><![CDATA[triggers]]></category>

		<guid isPermaLink="false">/index.php/2011/04/use-ddl-triggers-to-track/</guid>
		<description><![CDATA[Someone wanted to know when and by who a certain table was dropped, I told the person that you can do this with a DDL trigger.Wouldn't it be nice if you could track exactly all the DDL statements that were executed on a table in your database? Well, you can by using DDL Triggers]]></description>
				<content:encoded><![CDATA[<p>Someone wanted to know when and by who a certain table was dropped, I told the person that you can do this with a DDL trigger.Wouldn&#8217;t it be nice if you could track exactly all the DDL statements that were executed on a table in your database? Well, you can by using DDL Triggers, DDL Triggers were added in SQL Server 2005. </p>
<p>DDL triggers are a special kind of trigger that fire in response to Data Definition Language (DDL) statements. They can be used to perform administrative tasks in the database such as auditing and regulating database operations. A DDL trigger can be created on the database level or on the server level. In this post I will create a database level DDL trigger that will listen for the ALTER TABLE command.</p>
<p>First I will create a sample database</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">DATABASE</span> TestTrigger
GO
&nbsp;
<span class="kw1">USE</span> TestTrigger
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE DATABASE TestTrigger
GO

USE TestTrigger
GO</pre></div></div>

<p>Now I will create a table which will hold the DDL statement, the time and the login of the person who executed the statement</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TriggerLog<span class="br0">&#40;</span>DDL <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">300</span><span class="br0">&#41;</span>, ExecutedBy <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, EventDate <span class="kw1">datetime</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TriggerLog(DDL VARCHAR(300), ExecutedBy VARCHAR(100), EventDate datetime)
GO</pre></div></div>

<p>Here is what my DDL trigger will look like, more information about DDL triggers can be found here: http://msdn.microsoft.com/en-us/library/ms189799.aspx</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> trALterTable 
<span class="kw1">ON</span> <span class="kw1">DATABASE</span> <span class="co1">-- A DB level trigger</span>
<span class="kw1">FOR</span> ALTER_TABLE <span class="co1">--Event we want to capture</span>
<span class="kw1">AS</span> 
&nbsp; <span class="kw1">INSERT</span> TriggerLog
&nbsp; <span class="kw1">SELECT</span> EVENTDATA<span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="kw1">value</span><span class="br0">&#40;</span><span class="st0">'(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]'</span>,<span class="st0">'nvarchar(max)'</span><span class="br0">&#41;</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">COALESCE</span><span class="br0">&#40;</span><span class="kw2">SUSER_SNAME</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="kw2">USER_NAME</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TRIGGER trALterTable 
ON DATABASE -- A DB level trigger
FOR ALTER_TABLE --Event we want to capture
AS 
  INSERT TriggerLog
  SELECT EVENTDATA().value('(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]','nvarchar(max)'), 
		COALESCE(SUSER_SNAME(),USER_NAME()), 
		GETDATE();
GO</pre></div></div>

<p>The code in the trigger should be pretty simple to follow. The line <em>EVENTDATA().value(&#8216;(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]&#8217;,&#8217;nvarchar(max)&#8217;)</em> is grabbing the DDL statement, more about EVENTDATA() can be found here: http://msdn.microsoft.com/en-us/library/ms173781.aspx</p>
<p>Next up is the test table that we will use to play around with</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> test<span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE test(id INT)</pre></div></div>

<p>The following block of code will add a column, change the data type of the column and will finally drop the column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> test
<span class="kw1">ADD</span> SomeDate <span class="kw1">date</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> test
<span class="kw1">ALTER</span> <span class="kw1">COLUMN</span> SomeDate datetime2
GO
&nbsp;
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> test
<span class="kw1">DROP</span> <span class="kw1">COLUMN</span> SomeDate 
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE test
ADD SomeDate date
GO

ALTER TABLE test
ALTER COLUMN SomeDate datetime2
GO


ALTER TABLE test
DROP COLUMN SomeDate 
GO</pre></div></div>

<p>Now let&#8217;s see what we have in our log table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TriggerLog
<span class="kw1">order</span> <span class="kw1">by</span> EventDate</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TriggerLog
order by EventDate</pre></div></div>

<p>
Here is the output<br />
</p>
<div class="tables">
<table>
<tr>
<th>DDL</th>
<th>ExecutedBy</th>
<th>	EventDate</th>
</tr>
<tr>
<td>ALTER TABLE test ADD SomeDate date</td>
<td>Denis-PCDenis</td>
<td>2011-04-19 20:18:07.590</td>
</tr>
<tr>
<td>ALTER TABLE test ALTER COLUMN SomeDate datetime2</td>
<td>Denis-PCDenis</td>
<td>2011-04-19 20:18:09.900</td>
</tr>
<tr>
<td>ALTER TABLE test DROP COLUMN SomeDate </td>
<td>Denis-PCDenis</td>
<td>2011-04-19 20:18:11.610</td>
</tr>
<table>
</table>
</table>
</div>
<p>
As you can see we have all the DDL statements captured in the table, the time it happened and the person who did it.<br />
Let&#8217;s just drop and recreate the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">drop</span> <span class="kw1">table</span> Test
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">drop table Test
GO</pre></div></div>

<p>Now create the table again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> test<span class="br0">&#40;</span>id <span class="kw1">INT</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE test(id INT)
GO</pre></div></div>

<p>If you now execute this query, you will get back pretty much all the DDL statements that we executed before</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> DDL <span class="sy0">+</span> <span class="st0">'GO'</span>
<span class="kw1">FROM</span> TriggerLog
<span class="kw1">ORDER</span> <span class="kw1">BY</span> EventDate</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT DDL + 'GO'
FROM TriggerLog
ORDER BY EventDate</pre></div></div>

<p>Here is what it looks like if you copied the results and pasted them into a query window.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> test
<span class="kw1">ADD</span> SomeDate <span class="kw1">date</span>
GO
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> test
<span class="kw1">ALTER</span> <span class="kw1">COLUMN</span> SomeDate datetime2
GO
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> test
<span class="kw1">DROP</span> <span class="kw1">COLUMN</span> SomeDate 
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE test
ADD SomeDate date
GO
ALTER TABLE test
ALTER COLUMN SomeDate datetime2
GO
ALTER TABLE test
DROP COLUMN SomeDate 
GO</pre></div></div>

<p>This was just a small example of how a DDL trigger works, A DDL trigger enables you to also not allow ALTER TABLE statements during business hours or for certain user even though they are db owner.</p>
<p>To see all the events that DDL triggers can listen for you can use the  sys.trigger_event_types Object Catalog View</p>
<pre>select type_name from sys.trigger_event_types </pre>
<p>Here is a partial result set</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
CREATE_TABLE<br />
ALTER_TABLE<br />
DROP_TABLE<br />
CREATE_INDEX<br />
ALTER_INDEX<br />
DROP_INDEX<br />
CREATE_STATISTICS<br />
UPDATE_STATISTICS<br />
DROP_STATISTICS<br />
CREATE_SYNONYM<br />
DROP_SYNONYM<br />
CREATE_VIEW<br />
ALTER_VIEW<br />
DROP_VIEW<br />
CREATE_PROCEDURE</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/use-ddl-triggers-to-track/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
