<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>gaps &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/gaps/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>How to return all the skipped identity values from a table in SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-return-all-the-skipped-identity-v/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-return-all-the-skipped-identity-v/#comments</comments>
		<pubDate>Mon, 18 Jan 2010 12:41:34 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[gaps]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[identity]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/01/how-to-return-all-the-skipped-identity-v/</guid>
		<description><![CDATA[Every now and then someone will ask how to return a list of all the identity values in a table that have been skipped. You will probably have a table with an identity column, the &#8216;problem&#8217; with identity columns is that if an insert is rolled back or fails in any way then the identity [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Every now and then someone will ask how to return a list of all the identity values in a table that have been skipped.  You will probably have a table with an identity column, the &#8216;problem&#8217; with identity columns is that if an insert is rolled back or fails in any way then the identity value is not reused&#8230;you end up with gaps. Identifying gaps is pretty easy to do if you have a table of numbers in your database.</p>
<p>If you don&#8217;t have a table of numbers, here is some code that will create a table with numbers between 1` and 2048</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> Numbers <span class="br0">&#40;</span>number <span class="kw1">int</span> not null <span class="kw1">primary</span> <span class="kw1">key</span> <span class="br0">&#41;</span>
go
<span class="kw1">insert</span> Numbers 
<span class="kw1">select</span> number <span class="sy0">+</span> <span class="nu0">1</span> 
<span class="kw1">from</span> master..<span class="me1">spt_values</span> s
<span class="kw1">where</span> s.<span class="me1">type</span><span class="sy0">=</span><span class="st0">'P'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table Numbers (number int not null primary key )
go
insert Numbers 
select number + 1 
from master..spt_values s
where s.type='P'</pre></div></div>

<p>Now that we have our numbers table we can proceed with creating another table which we will populate with some numbers</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> #bla<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">12</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table #bla(id int)

insert #bla values(1)
insert #bla values(2)
insert #bla values(4)
insert #bla values(5)
insert #bla values(9)
insert #bla values(12)</pre></div></div>

<p>Here is the code that will return the gaps (the values 3,6,7,8,10,11)  from the temp table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> number 
<span class="kw1">from</span> Numbers n
<span class="kw1">left</span> join #bla b <span class="kw1">on</span> n.<span class="me1">number</span> <span class="sy0">=</span> b.<span class="me1">id</span>
<span class="kw1">where</span> n.<span class="me1">number</span> <span class="sy0">&lt;</span> <span class="br0">&#40;</span><span class="kw1">select</span> <span class="kw2">MAX</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">from</span> #bla<span class="br0">&#41;</span>
and &nbsp;b.<span class="me1">id</span> <span class="kw1">is</span> null</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select number 
from Numbers n
left join #bla b on n.number = b.id
where n.number &lt; (select MAX(id) from #bla)
and  b.id is null</pre></div></div>

<p>As you can see it is a simple left join, we also check for the max value otherwise you would get everything back that is greater than the max value in the #bla table.</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-return-all-the-skipped-identity-v/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
