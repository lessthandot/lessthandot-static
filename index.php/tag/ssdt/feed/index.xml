<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>ssdt &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/ssdt/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL 2014 CTP1, where is my BIDS?</title>
		<link>/index.php/datamgmt/dbprogramming/mssqlserver/sql-2014-ctp1-where-is/</link>
		<comments>/index.php/datamgmt/dbprogramming/mssqlserver/sql-2014-ctp1-where-is/#comments</comments>
		<pubDate>Fri, 28 Jun 2013 12:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Koen Verbeeck]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[SSAS]]></category>
		<category><![CDATA[SSIS]]></category>
		<category><![CDATA[SSRS]]></category>
		<category><![CDATA[bids]]></category>
		<category><![CDATA[ctp1]]></category>
		<category><![CDATA[sql server 2014]]></category>
		<category><![CDATA[sql server data tools]]></category>
		<category><![CDATA[ssdt]]></category>
		<category><![CDATA[ssdtbi]]></category>
		<category><![CDATA[syndicated]]></category>

		<guid isPermaLink="false">/index.php/2013/06/sql-2014-ctp1-where-is/</guid>
		<description><![CDATA[Oh wait sorry, I meant SSDT. Or was it SSDTBI? To avoid confusion about the developer tool to create BI solutions, Microsoft has changed its name a few times. You know, to make it less confusing. Here’s a nice overview:

BIDS or Business Intelligence&#8230;]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;">Oh wait sorry, I meant SSDT. Or was it SSDTBI? To avoid confusion about the developer tool to create BI solutions, Microsoft has changed its name a few times. You know, to make it less confusing. Here’s a nice overview:</p>
<ul style="margin-left:20pt;list-style-position:outside;text-align: justify;">
<li><em>BIDS or Business Intelligence Development Studio.</em> The most non-confusing name of the bunch. This piece of software was delivered to you when you installed SQL Server 2005, SQL Server 2008 or SQL Server 2008 R2.</li>
<li><em>SSDT or SQL Server Data Tools. </em>Introduced with SQL Server 2012. However, you have a tool with the same name for creating database projects, which you had to download and install separately (don’t get me started on which names this tool had before. Mildly schizophrenic to say the least.) This development environment uses the Visual Studio 2010 shell and you use it to build BI solutions solely for SQL Server 2012. So two tools with the same name. One for database projects, one for BI projects. One to download, one that came with the SQL Server install media. Enter confusion. Read more about it on the blog of Jamie Thomson (<a href="http://sqlblog.com/blogs/jamie_thomson/default.aspx">blog</a> | <a href="https://twitter.com/jamiet">twitter</a>): <a href="http://sqlblog.com/blogs/jamie_thomson/archive/2013/01/16/more-ssdt-naming-confusion.aspx">More SSDT naming confusion</a>. Also read his blog posts about the database project part of SSDT, they are mighty interesting.</li>
<li><em>SSDTBI or SQL Server Data Tools – Business Intelligence</em>. In an effort to swiftly put a stop to all this confusion, SSDTBI was <a href="http://blogs.msdn.com/b/analysisservices/archive/2013/03/06/sql-server-data-tools-business-intelligence-for-visual-studio-2012-released-online.aspx">released with Visual Studio 2012</a>. It’s basically still BIDS – or SSDT from the SQL Server installation media – but now with BI appended to make its purpose more clear. This environment uses the Visual Studio 2012 shell obviously, but is still used to create BI solutions for SQL Server 2012. Great deal of fun when you have two developers on the same project: one with SSDT (Visual Studio 2010) and one with SSDTBI (Visual Studio 2012).</li>
</ul>
<p style="text-align: justify;">Each tool exists in two flavors: either you already have Visual Studio and the BI templates are installed into your existing installation, or you don’t have Visual Studio and SQL Server install a shell for you, only capable of creating BI solutions. Less confusing now? OK, let’s move on to the real point of this blog post: which development environment do we use in SQL Server 2014 CTP1? (Which is <a href="http://www.microsoft.com/en-us/sqlserver/sql-server-2014.aspx">just released</a> in case you missed it)</p>
<p style="text-align: justify;">When we start up the installation of SQL Server 2014 (try downloading the VHD with Windows Server 2012 R2 to get you quickly up to speed. I absolutely recommend it), we do not see any BI development tool mentioned in the feature list.</p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/featureselection.png?mtime=1372362887"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/featureselection.png?mtime=1372362887" alt="" width="858" height="480" /></a></p>
<p><span style="text-align: justify;">But when we take a look at the prerequisites that are going to be installed, we see the Visual Studio 2010 Shell listed.</span></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/readytoinstall.png?mtime=1372363033"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/readytoinstall.png?mtime=1372363033" alt="" width="655" height="557" /></a></p>
<p><span style="text-align: justify;">However, this is most likely the shell for SQL Server Management Studio and not for any kind of BI tool. The start menu confirms our suspicion after the installation:</span></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/startmenu.png?mtime=1372362887"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/startmenu.png?mtime=1372362887" alt="" width="910" height="632" /></a></p>
<p><span style="text-align: justify;">No BIDS, SSDT or SSDTBI to be seen. But how do we develop our BI solutions in SQL Server 2014 CTP1? Don’t they want us to test SSIS, SSAS or SSRS? Is it only about Hekaton and the updateable columnstore index in this release? Luckily no. When we dig a bit in the MSDN documentation, we find the following quote in the </span><a style="text-align: justify;" href="http://msdn.microsoft.com/en-us/library/bb522628(v=sql.120).aspx">What&#8217;s New in Analysis Services and Business Intelligence</a><span style="text-align: justify;"> page:</span></p>
<p style="text-align: justify;"><em>SQL Server Data Tools for Business Intelligence (SSDT BI), previously known as Business Intelligence Development Studio (BIDS), is used to create Analysis Services models, Reporting Services reports, and Integration Services packages. In this pre-release version of SQL Server 2014, SQL Server Setup no longer installs SSDT BI. The Visual Studio 2012 version of SSDT BI is now available as a web download from the Microsoft Download center.</em></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/We-need-to-go-deeper_inception.jpg?mtime=1372362887"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/We-need-to-go-deeper_inception.jpg?mtime=1372362887" alt="" width="400" height="226" /></a></p>
<p><span style="text-align: justify;">The point here is, aside from the fact that they forgot to mention SSDTBI was previously known as SSDT before it was previously known as BIDS (inception!), is that you have to download the tool yourself, just as you did for SQL Server 2012 if you wanted to play with the Visual Studio 2012 version. And you can find it </span><a style="text-align: justify;" href="http://www.microsoft.com/en-us/download/details.aspx?id=36843">here</a><span style="text-align: justify;">. It’s only a mere 783MB.</span></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/downloadsize.png?mtime=1372362886"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/downloadsize.png?mtime=1372362886" alt="" width="959" height="45" /></a></p>
<p><span style="text-align: justify;">My guess is that a later version of SQL Server 2014 will install some version of the BI development environment. I don’t know how it will be called –most likely still SSDTBI – or if it will be Visual Studio 2012 or Visual Studio 2013. It does mean however that SQL Server 2014 CTP1 has no new BI features for the moment, as you are using the exact same development environment as in SQL Server 2012. Maybe new features are added in a later release of SQL Server 2014, who knows?</span></p>
<p style="text-align: justify;">One small piece of advice to finish of this blog post: when installing SSDTBI, choose <em>Perform a new installation of SQL Server 2012</em>, not the other one (and ignore the fact you are actually developing for SQL Server 2014).</p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/setup_ssdtBI_1.png?mtime=1372362887"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/setup_ssdtBI_1.png?mtime=1372362887" alt="" width="569" height="427" /></a></p>
<p><span style="text-align: justify;">All the features will be selected for you.</span></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/setup_ssdtBI_2.png?mtime=1372362887"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/setup_ssdtBI_2.png?mtime=1372362887" alt="" width="574" height="435" /></a></p>
<p><span style="text-align: justify;">And after the installation, you can finally make some BI solutions on SQL Server 2014!</span></p>
<p style="text-align: justify;"><a href="/media/users/koenverbeeck/SQL2014BIDS/ssdtbi_3.png?mtime=1372362887"><img src="/wp-content/uploads/users/koenverbeeck/SQL2014BIDS/ssdtbi_3.png?mtime=1372362887" alt="" width="750" height="459" /></a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/mssqlserver/sql-2014-ctp1-where-is/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Database Projects &#8211; Installing the Database Project Template</title>
		<link>/index.php/datamgmt/dbprogramming/database-projects-installing-the-database-project-template/</link>
		<comments>/index.php/datamgmt/dbprogramming/database-projects-installing-the-database-project-template/#comments</comments>
		<pubDate>Tue, 08 Jan 2013 12:10:00 +0000</pubDate>
		<dc:creator><![CDATA[Axel Achten (axel8s)]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[database lifecycle]]></category>
		<category><![CDATA[database projects]]></category>
		<category><![CDATA[sql server datatools]]></category>
		<category><![CDATA[ssdt]]></category>

		<guid isPermaLink="false">/index.php/2013/01/database-projects-installing-the-database-project-template/</guid>
		<description><![CDATA[This is the second post in the Database Projects series. The first post was Setting up Source Control.
So now we have Source Control in place we can start a database project. To do this launch SQL Server Data Tools 2012 (SSDT). In the Start Page, choos&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is the second post in the Database Projects series. The first post was <a href="/index.php/DataMgmt/DBAdmin/database-projects-setting-up-source">Setting up Source Control</a>.<br />
So now we have Source Control in place we need to install the Database Projects Template. To do this launch SQL Server Data Tools 2012 (SSDT). In the Start Page, choose for a New Project:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate1.png?mtime=1357652727"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate1.png?mtime=1357652727" width="150" height="150" /></a></div>
<p>When you want to create a Database Project for the first time, you&#8217;ll see a Web Install in the New Project Template screen when you select SQL Server:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate2.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate2.png?mtime=1357652946" width="450" height="300" /></a></div>
<p>When you click the Web Install, a new pop-up screen will appear telling you you have to install Microsoft SQL Server Data Tools. Off course this is what you want so hit install:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate3.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate3.png?mtime=1357652946" width="200" height="100" /></a></div>
<p>A web page will open where you can download SQL Server Data Tools for Visual Studio 2010 or for Visual Studio 2012. Since I&#8217;m using the SQL Server Data Tools delivered with SQL Server 2012 and this is a Visual Studio 2010 Shell I will download the Visual Studio 2010 version:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate4.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate4.png?mtime=1357652946" width="400" height="200" /></a></div>
<p>Another screen will show, giving you more details about what&#8217;s going to happen and give you more options if you need to install SQL Server Data Tools on a machine with no internet access or with other language needs. Since Dutch is not supported and my machine has internet access I just start the download:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate5.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate5.png?mtime=1357652946" width="200" height="300" /></a></div>
<p>Now you can choose to Save or Run the setup. I&#8217;m just going to run it:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate6.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate6.png?mtime=1357652946" width="200" height="100" /></a></div>
<p>Don&#8217;t know if you can trust Microsoft Corporation as a Publisher but hitting Don&#8217;t Run will not help you on getting the software installed. So hit Run:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate7.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate7.png?mtime=1357652946" width="200" height="100" /></a></div>
<p>Now we need to accept the License Terms to install:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate8.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate8.png?mtime=1357652946" width="300" height="200" /></a></div>
<p>Now this is why you have to admire sysadmins, allow the software to make changes to your computer:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate9.png?mtime=1357652946"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate9.png?mtime=1357652946" width="200" height="100" /></a></div>
<p>Finally you can take a nap while the download runs and the installer starts installing.<br />
After the Setup finish you can Close the installer:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate10.png?mtime=1357652947"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate10.png?mtime=1357652947" width="300" height="200" /></a></div>
<p>Close SQL Server Data Tools and start it again. Because of the new version you might get the question what Default Environment Settings you want. I chose SQL Server Development Settings before starting Visual Studio.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate11.png?mtime=1357652947"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPCreate11.png?mtime=1357652947" width="200" height="200" /></a></div>
<p>.<br />
I still don&#8217;t understand why the SQL Server Database Project Template isn&#8217;t delivered with the initial setup of the SQL Server Data Tools but we&#8217;re almost ready to create our first project.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/database-projects-installing-the-database-project-template/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Database Projects &#8211; Setting up Source Control</title>
		<link>/index.php/datamgmt/dbadmin/database-projects-setting-up-source/</link>
		<comments>/index.php/datamgmt/dbadmin/database-projects-setting-up-source/#comments</comments>
		<pubDate>Tue, 11 Dec 2012 12:38:00 +0000</pubDate>
		<dc:creator><![CDATA[Axel Achten (axel8s)]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[ankhsvn]]></category>
		<category><![CDATA[database lifycycle]]></category>
		<category><![CDATA[database project]]></category>
		<category><![CDATA[sql server]]></category>
		<category><![CDATA[sql server data tools]]></category>
		<category><![CDATA[ssdt]]></category>
		<category><![CDATA[subversion]]></category>

		<guid isPermaLink="false">/index.php/2012/12/database-projects-setting-up-source/</guid>
		<description><![CDATA[For some time I wanted to document the possibilities of the SQL Server Database Project and how developers and DBA's can benefit from it.
Problem Statement
Many companies I've worked for struggle with their database lifecycle management:
  
Producti&#8230;]]></description>
				<content:encoded><![CDATA[<p>For some time I wanted to document the possibilities of the SQL Server Database Project and how developers and DBA&#8217;s can benefit from it.<br />
<b>Problem Statement</b><br />
Many companies I&#8217;ve worked for struggle with their database lifecycle management:</p>
<ul>
<li>Production databases are copied to Test, Staging, UAT&#8230; environments by the DBA&#8217;s with production (sensitive) data</li>
<li>DBA&#8217;s spend too much time doing the copy operations</li>
<li>Backup chains are broken because of the lack of use of the WITH COPY_ONLY option</li>
<li>Changes are made by the DBA executing individual scripts, sometimes breaking because the development database and production database were out of sync.</li>
<li>Bugs are &#8220;Emergency&#8221; fixed in the production database so the schemas of the development and production database are out of sync</li>
<li>&#8230;</li>
</ul>
<p><b>Possible solution</b><br />
In general there is not much to learn from a developer (just kidding!) but normally they have some software lifecycle management and typically use a Source Control Provider to keep version information and the production version of their software. With SQL Server Data Tools and using a Database Project we should be able to setup a similar lifecycle management for our databases. In my next series of posts I will explore the possibilities of the Database Project and share them with you.<br />
<b>Getting started &#8211; Choosing a Source Control Provider</b><br />
Again as a DBA I did not know what Source Control Provider to choose, I worked with Visual Source Safe a decade ago and had to do a setup of Team Foundation Server once and didn&#8217;t want to go through this pain again. A quick poll on twitter on which Source Control Provider to use was depressing. Probably because our American friends were sleeping, the Belgian Developers were still hitting the snooze button and Christiaan was walking his dog. Lucky for me Dave Dustin (<a href="https://twitter.com/venzann">twitter</a>) from the other side of the world gave me some possibilities. In the next example I will use AnkhSVN, Subversion with Support for Visual Studio. You can download the setup from <a href="http://visualstudiogallery.msdn.microsoft.com/E721D830-7664-4E02-8D03-933C3F1477F2">here</a>.<br />
<b>The setup</b><br />
Launch the installer, accept the license agreement and hit Install:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup1.png?mtime=1355235876"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup1.png?mtime=1355235876" width="250" height="194" /></a></div>
<p>Off course you have to allow the program to install software:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup2.png?mtime=1355235894"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup2.png?mtime=1355235894" width="232" height="121" /></a></div>
<p>Et voila, the setup is finished:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup3.png?mtime=1355236334"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup3.png?mtime=1355236334" width="250" height="194" /></a></div>
<p>When you open SQL Server Data Tools and open the Options pane in the Tools menu you should see that AnkhSVN &#8211; Subversion Support for Visual Studio is selected as the Current Source Control plug in, if not you can select it from the list:</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup4.png?mtime=1355235963"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Axel8s/DBPSetup4.png?mtime=1355235963" width="373" height="215" /></a></div>
<p>Now that we have a Source Control provider we can get started with our database project but this will be the subject of my next post.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/database-projects-setting-up-source/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
	</channel>
</rss>
