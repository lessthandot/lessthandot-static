<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>cloud &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/cloud-2/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Bring SQL Server databases Online or Offline when running on Amazon RDS</title>
		<link>/index.php/datamgmt/dbadmin/bring-sql-server-databases-online/</link>
		<comments>/index.php/datamgmt/dbadmin/bring-sql-server-databases-online/#comments</comments>
		<pubDate>Fri, 22 Mar 2013 10:25:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[amazon web services]]></category>
		<category><![CDATA[aws]]></category>
		<category><![CDATA[cloud]]></category>
		<category><![CDATA[rds]]></category>

		<guid isPermaLink="false">/index.php/2013/03/bring-sql-server-databases-online/</guid>
		<description><![CDATA[To bring a SQL Server database online or offline you can use a command like the following if your database is named test.

ALTER DATABASE test SET OFFLINE;

ALTER DATABASE test SET ONLINE;

When running SQL Server on Amazon's Relational Database S&#8230;]]></description>
				<content:encoded><![CDATA[<p>To bring a SQL Server database online or offline you can use a command like the following if your database is named test.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> test <span class="kw1">SET</span> OFFL<span class="sy0">IN</span>E;
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> test <span class="kw1">SET</span> ONL<span class="sy0">IN</span>E;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE test SET OFFLINE;

ALTER DATABASE test SET ONLINE;</pre></div></div>

<p>When running SQL Server on Amazon&#8217;s Relational Database Service it is done a little different. While you can use the command above to take the database offline, you can&#8217;t use the command to bring the database online.</p>
<p>I you have a database name test and you execute the following it will work</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> test <span class="kw1">SET</span> OFFL<span class="sy0">IN</span>E</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE test SET OFFLINE</pre></div></div>

<p>You can verify this by running the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> test
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE test
GO</pre></div></div>

<p>You get the following error</p>
<p><em>Msg 942, Level 14, State 4, Line 1<br />
Database &#8216;test&#8217; cannot be opened because it is offline.</em></p>
<p>If you try running the following command to bring the database online</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">DATABASE</span> test <span class="kw1">SET</span> ONL<span class="sy0">IN</span>E;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER DATABASE test SET ONLINE;</pre></div></div>

<p>Now you get this error</p>
<p><em>Msg 5011, Level 14, State 9, Line 1<br />
User does not have permission to alter database &#8216;test&#8217;, the database does not exist, or the database is not in a state that allows access checks.<br />
Msg 5069, Level 16, State 1, Line 1<br />
ALTER DATABASE statement failed.</em></p>
<p>So what can you do? RDS has a special stored procedure that will bring the databse online, the name of this stored procedure is <code>rdsadmin.dbo.rds_set_database_online</code></p>
<p>Here is how you use it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> rdsadmin.<span class="me1">dbo</span>.<span class="me1">rds_set_database_online</span> &nbsp;<span class="st0">'test'</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC rdsadmin.dbo.rds_set_database_online  'test'
GO</pre></div></div>

<p>Now you can use the test database again</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> test
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE test
GO</pre></div></div>

<p>See, simple, you just have to be aware of these differences</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/bring-sql-server-databases-online/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Turning on Optimize for Ad hoc Workloads, Ad Hoc Distributed Queries and more on a AWS RDS SQL Server Instance</title>
		<link>/index.php/datamgmt/dbadmin/turning-on-optimize-for-ad/</link>
		<comments>/index.php/datamgmt/dbadmin/turning-on-optimize-for-ad/#comments</comments>
		<pubDate>Thu, 21 Mar 2013 15:39:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[amazon web services]]></category>
		<category><![CDATA[aws]]></category>
		<category><![CDATA[cloud]]></category>
		<category><![CDATA[rds]]></category>

		<guid isPermaLink="false">/index.php/2013/03/turning-on-optimize-for-ad/</guid>
		<description><![CDATA[There are several advanced options that you can modify in SQL Server.If you want to turn on optimize for ad hoc workloads in SQL Server, one way is to run the following scripts

EXEC sys.sp_configure N'optimize for ad hoc workloads', N'1'
RECONFIGURE&#8230;]]></description>
				<content:encoded><![CDATA[<p>There are several advanced options that you can modify in SQL Server. If you want to turn on optimize for ad hoc workloads in SQL Server, you can run the following script</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> sys.<span class="kw3">sp_configure</span> N<span class="st0">'optimize for ad hoc workloads'</span>, N<span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sys.sp_configure N'optimize for ad hoc workloads', N'1'
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p>If you want to use OPENROWSET, you can run the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXECUTE</span> sys.<span class="kw3">sp_configure</span><span class="st0">'Ad Hoc Distributed Queries'</span>, <span class="st0">'1'</span>
<span class="kw1">RECONFIGURE</span> <span class="kw1">WITH</span> OVERRIDE
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXECUTE sys.sp_configure'Ad Hoc Distributed Queries', '1'
RECONFIGURE WITH OVERRIDE
GO</pre></div></div>

<p>When running SQL Server on Amazon&#8217;s AWS RDS, you can&#8217;t do it like that. If you try running it, you will get the following error.</p>
<p>Msg 15247, Level 16, State 1, Procedure sp_configure, Line 105<br />
User does not have permission to perform this action.<br />
Msg 5812, Level 14, State 1, Line 1<br />
You do not have permission to run the RECONFIGURE statement.</p>
<p>Here is how you have to do it. From the dashboard click on <em>DB Parameter Groups</em>. Click on Create DB Parameter Group, pick the version of SQL Server and fill in the text boxes. Here is what it looks like</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup1.PNG?mtime=1363879041"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup1.PNG?mtime=1363879041" width="824" height="207" /></a></div>
<p>Check the DB Parameter Group you just created and click on Edit Parameters</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup2.PNG?mtime=1363879237"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup2.PNG?mtime=1363879237" width="740" height="180" /></a></div>
<p>You will see a screen like this pop up</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup3.PNG?mtime=1363879348"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup3.PNG?mtime=1363879348" width="617" height="529" /></a></div>
<p>Modify the ones that you are interested in and click Save Changes</p>
<p>Click on DB Instances, Click on the Instance Actions dropdown </p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup4.PNG?mtime=1363879526"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup4.PNG?mtime=1363879526" width="357" height="225" /></a></div>
<p>Select Modify from this dropdown</p>
<p>You will see a screen like this</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup5.PNG?mtime=1363879698"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup5.PNG?mtime=1363879698" width="654" height="387" /></a></div>
<p>In the Parameter Group dropdown, pick the Parameter Group you just created, hit Continue and then Modify DB Instance.<br />
In order for this to take effect, you need to reboot your instance<br />
Click on DB Instances, click on the Instance Actions dropdown </p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup4.PNG?mtime=1363879526"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup4.PNG?mtime=1363879526" width="357" height="225" /></a></div>
<p>Select reboot from this dropdown</p>
<p>Once the instance is available again, connect from SSMS, right click on the Server, select Properties and click on the Advanced page. It should now match what you have edited in the DB Parameters Group</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup6.PNG?mtime=1363880116"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBParameterGroup6.PNG?mtime=1363880116" width="474" height="335" /></a></div>
<p>That is it for this post, as you can see it is pretty simple to do<br />
Also check out my other AWS RDS SQL Server posts: <a href="/index.php/DataMgmt/DBProgramming/trying-out-amazon-relational-database">Trying out Amazon Relational Database Service</a> and <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/how-to-read-the-error">How to read the error log on an Amazon RDS SQL Server instance</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/turning-on-optimize-for-ad/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>How to read the error log on an Amazon RDS SQL Server instance</title>
		<link>/index.php/datamgmt/dbadmin/how-to-read-the-error/</link>
		<comments>/index.php/datamgmt/dbadmin/how-to-read-the-error/#respond</comments>
		<pubDate>Thu, 21 Mar 2013 11:21:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[amazon web services]]></category>
		<category><![CDATA[aws]]></category>
		<category><![CDATA[cloud]]></category>
		<category><![CDATA[rds]]></category>

		<guid isPermaLink="false">/index.php/2013/03/how-to-read-the-error/</guid>
		<description><![CDATA[Earlier today, i created an Amazon RDS SQL Server instance, you can check out that post here: Trying out Amazon Relational Database Service
I decided to take a closer look, the first thing I wanted to know is if I could see the error log. There are two&#8230;]]></description>
				<content:encoded><![CDATA[<p>Earlier today, I created an Amazon RDS SQL Server instance, you can check out that post here: <a href="/index.php/DataMgmt/DBProgramming/trying-out-amazon-relational-database">Trying out Amazon Relational Database Service</a><br />
I decided to take a closer look, the first thing I wanted to know is if I could see the error log. </p>
<p>The first thing I did was check if I could see the logs from SSMS, I expanded the error log folder and was greeted with this message</p>
<blockquote><p>Failed to retrieve data for this request. (Microsoft.SqlServer.Management.Sdk.Sfc)<br />
An exception occurred while executing a Transact-SQL statement or batch. (Microsoft.SqlServer.ConnectionInfo)<br />
Only members of the securityadmin role can execute this stored procedure. (Microsoft SQL Server, Error: 15003)</p></blockquote>
<p>I decided to investigate further, there are two ways to see the error log. One way is to use the AWS RDS Dashboard. Click on the DB Instance that you are interested in and you will see a tab named Logs.</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AwsErrorLog1.PNG?mtime=1363863573"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AwsErrorLog1.PNG?mtime=1363863573" width="752" height="446" /></a></div>
<p>Once you click on the view button, you will see something like this</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AwsErrorLog2.PNG?mtime=1363863585"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AwsErrorLog2.PNG?mtime=1363863585" width="628" height="408" /></a></div>
<p>That is all nice and dandy but can I do it from T-SQL? Let&#8217;s find out by running xp_readerrorlog.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> master.<span class="me1">dbo</span>.<span class="me1">xp_readerrorlog</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC master.dbo.xp_readerrorlog</pre></div></div>

<p>Here is the output<br />
Msg 229, Level 14, State 5, Procedure xp_readerrorlog, Line 1<br />
The EXECUTE permission was denied on the object &#8216;xp_readerrorlog&#8217;, database &#8216;mssqlsystemresource&#8217;, schema &#8216;sys&#8217;.</p>
<p>That is no good. Luckily for us there is a stored procedure that is provided, this proc is named rds_read_error_log </p>
<p>Here is how you execute it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> rdsadmin..<span class="me1">rds_read_error_log</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC rdsadmin..rds_read_error_log </pre></div></div>

<p>The output is something like you expect from xp_readerrorlog</p>
<blockquote><p>2013-03-21 13:04:08.100	Server	Microsoft SQL Server 2012 &#8211; 11.0.2100.60 (X64)<br />
	Feb 10 2012 19:39:15<br />
	Copyright (c) Microsoft Corporation<br />
	Express Edition (64-bit) on Windows NT 6.1 <x64> (Build 7601: Service Pack 1) (Hypervisor)<br />
<br />
2013-03-21 13:04:08.100	Server	(c) Microsoft Corporation.<br />
2013-03-21 13:04:08.100	Server	All rights reserved.<br />
2013-03-21 13:04:08.100	Server	Server process ID is 2252.<br />
2013-03-21 13:04:08.100	Server	System Manufacturer: &#8216;Xen&#8217;, System Model: &#8216;HVM domU&#8217;.<br />
2013-03-21 13:04:08.100	Server	Authentication mode is MIXED.<br />
2013-03-21 13:04:08.100	Server	Logging SQL Server messages in file &#8216;D:RDSDBDATALogERROR&#8217;.<br />
2013-03-21 13:04:08.100	Server	The service account is &#8216;RDSGroupRDSIMAGE$&#8217;. This is an informational message; no user action is required.<br />
2013-03-21 13:04:08.100	Server	Registry startup parameters:<br />
	 -d D:RDSDBDATADATAmaster.mdf<br />
	 -e D:RDSDBDATALogERROR<br />
	 -l D:RDSDBDATADATAmastlog.ldf<br />
	 -k 20.000000<br />
	 -T 3226<br />
	 -T 7806<br />
2013-03-21 13:04:08.100	Server	Command Line Startup Parameters:<br />
	 -s &#8220;MSSQLSERVER&#8221;<br />
2013-03-21 13:04:09.850	Server	SQL Server detected 1 sockets with 1 cores per socket and 1 logical processors per socket, 1 total logical processors; using 1 logical processors based on SQL Server licensing. This is an informational message; no user action is required.<br />
2013-03-21 13:04:09.850	Server	SQL Server is starting at normal priority base (=7). This is an informational message only. No user action is required.<br /></x64></p></blockquote>
<p>
Here is what the stored procedure signature looks like<br />
</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>rds_read_error_log<span class="br0">&#93;</span> @<span class="kw1">index</span> <span class="kw1">INT</span> <span class="sy0">=</span> <span class="nu0">0</span>, @type <span class="kw1">INT</span> <span class="sy0">=</span> <span class="nu0">1</span>,
@search_str1 <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="sy0">NULL</span>, @search_str2 <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="sy0">NULL</span>,
@start_time <span class="kw1">DATETIME</span> <span class="sy0">=</span> <span class="sy0">NULL</span>, @end_time <span class="kw1">DATETIME</span> <span class="sy0">=</span> <span class="sy0">NULL</span>,
@sort_order <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span> <span class="sy0">=</span> N<span class="st0">'asc'</span> &nbsp;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE [dbo].[rds_read_error_log] @index INT = 0, @type INT = 1,
@search_str1 VARCHAR(255) = NULL, @search_str2 VARCHAR(255) = NULL,
@start_time DATETIME = NULL, @end_time DATETIME = NULL,
@sort_order NVARCHAR(4) = N'asc'  </pre></div></div>

<p>From the docs</p>
<blockquote><p>The first two parameters are important when you call the rdsadmin.dbo.rds_read_error_log stored procedure:</p>
<p>The @index parameter indicates the log that Amazon RDS will read from. The default value of 0 indicates the current log is used. A value of 1 indicates that the previously rotated log is used.</p>
<p>The @type parameter indicates which type of log is read. The default value of 1 indicates that the SQL Server Error Log is used. A value of 2 indicates that the SQL Server Agent Log is used. All the other parameters are related to searching and sorting results and they can be kept at their default values. </p></blockquote>
<p>So there you have it, a nice and easy way to check the log by running the <code>rdsadmin..rds_read_error_log</code> stored procedure</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/how-to-read-the-error/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Trying out Amazon Relational Database Service</title>
		<link>/index.php/datamgmt/dbprogramming/trying-out-amazon-relational-database/</link>
		<comments>/index.php/datamgmt/dbprogramming/trying-out-amazon-relational-database/#respond</comments>
		<pubDate>Thu, 21 Mar 2013 09:06:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[amazon web services]]></category>
		<category><![CDATA[aws]]></category>
		<category><![CDATA[cloud]]></category>
		<category><![CDATA[rds]]></category>

		<guid isPermaLink="false">/index.php/2013/03/trying-out-amazon-relational-database/</guid>
		<description><![CDATA[Since it is a day off for me today, I decided to give Amazon Relational Database Service a try. Amazon RDS has SQL Server, Oracle and MySQL as databases available.

You can try it out for free if you are a new AWS  customer
Amazon RDS for SQL Server&#8230;]]></description>
				<content:encoded><![CDATA[<p>Since it is a day off for me today, I decided to give Amazon Relational Database Service a try. Amazon RDS has SQL Server, Oracle and MySQL as databases available.</p>
<p>You can try it out for free if you are a new AWS  customer</p>
<blockquote><p>Amazon RDS for SQL Server &#8211; Free Tier</p>
<p>New AWS customers can get started with Amazon RDS for SQL Server for free and receive the following Amazon RDS for SQL Server resources each month for free:<br />
750 hours of Amazon RDS for SQL Server Micro DB Instance usage (running SQL Server Express Edition in a single Availability Zone) – enough hours to run a DB Instance continuously each month<br />
20 GB of database storage<br />
10 million I/Os<br />
20 GB of backup storage for your automated database backups and any user-initiated DB Snapshots<br />
Click <a href="http://aws.amazon.com/rds/free/">here</a> to learn more about the offer.</p></blockquote>
<p>You can find all the details here: http://aws.amazon.com/rds/free/</p>
<p>Here is what is available for SQL Server</p>
<p><em><strong>Micro DB Instance</strong><br />
630 MB memory, Up to 2 ECU (for short periodic bursts), 64-bit platform, Low I/O Capacity, Provisioned IOPS Optimized: No</p>
<p><strong>Small DB Instance</strong><br />
1.7 GB memory, 1 ECU (1 virtual core with 1 ECU), 64-bit platform, Moderate I/O Capacity, Provisioned IOPS Optimized: No</p>
<p><strong>Medium DB Instance</strong><br />
3.75 GB memory, 2 ECU (1 virtual core with 2 ECU), 64-bit platform, Moderate I/O Capacity, Provisioned IOPS Optimized: No</p>
<p><strong>Large DB Instance</strong><br />
7.5 GB memory, 4 ECUs (2 virtual cores with 2 ECUs each), 64-bit platform, High I/O Capacity, Provisioned IOPS Optimized: 500Mbps</p>
<p><strong>Extra Large DB Instance</strong><br />
15 GB of memory, 8 ECUs (4 virtual cores with 2 ECUs each), 64-bit platform, High I/O Capacity, Provisioned IOPS Optimized: 1000Mbps</p>
<p><strong>High-Memory Extra Large DB Instance</strong><br />
17.1 GB memory, 6.5 ECU (2 virtual cores with 3.25 ECUs each), 64-bit platform, High I/O Capacity, Provisioned IOPS Optimized: No</p>
<p><strong>High-Memory Double Extra Large DB Instance</strong><br />
34 GB of memory, 13 ECUs (4 virtual cores with 3,25 ECUs each), 64-bit platform, High I/O Capacity, Provisioned IOPS Optimized: No</p>
<p><strong>High-Memory Quadruple Extra Large DB Instance</strong><br />
68 GB of memory, 26 ECUs (8 virtual cores with 3.25 ECUs each), 64-bit platform, High I/O Capacity, Provisioned IOPS Optimized: 1000Mbps<br />
</em></p>
<p>Once you have signed up and have been verified over the phone, you can create an instance. Create a database is very very easy. You start up a wizard, fill in some info and you are ready to go.</p>
<p>
<h2>Setting up an AWS RDS instance</h2>
<p>Here is what the multi-step process looks like</p>
<p>First you need to select the database engine, you can choose from MySQL, Oracle and SQL Server. Pick the edition that you want</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard1.PNG?mtime=1363853447"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard1.PNG?mtime=1363853447" width="692" height="436" /></a></div>
<p>Give your database a name, specify storage, add a user and a password</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard2.PNG?mtime=1363853461"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard2.PNG?mtime=1363853461" width="680" height="542" /></a></div>
<p>Pick the port, the availiblity zone</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard3.PNG?mtime=1363853470"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard3.PNG?mtime=1363853470" width="702" height="404" /></a></div>
<p>Specify the backup and maintenance windows as well as the retention period</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard4.PNG?mtime=1363853480"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard4.PNG?mtime=1363853480" width="699" height="419" /></a></div>
<p>Now it is all ready</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard5.PNG?mtime=1363853438"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSDbWizard5.PNG?mtime=1363853438" width="694" height="489" /></a></div>
<p>After this is all done, you will get a summary page where everything is displayed about your instance.</p>
<p>Next go to your db instance, it takes about 15 minutes before it is available. Click on the checkmark next to your instance and you will see something like this</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/RDSMSFTSQLConnect00.png?mtime=1363853892"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/RDSMSFTSQLConnect00.png?mtime=1363853892" width="952" height="740" /></a></div>
<p>Notice the endpoint and the port? Remember those, you will need those to connect to your SQL server instance.</p>
<h2>Setting up DB Security Groups</h2>
<p>
Before trying to connect you have to give access</p>
<blockquote><p>DB Security Groups</p>
<p>Each DB security group rule enables a specific source to access a DB instance that is a member of that DB security group. The source can be a range of addresses (e.g., 203.0.113.0/24), or an EC2 security group. When you specify an EC2 security group as the source, you allow incoming traffic from all EC2 instances that use that EC2 security group. Note that DB security group rules apply to inbound traffic only; outbound traffic is not currently permitted for DB instances.</p>
<p>You do not need to specify a destination port number when you create DB security group rules; the port number defined for the DB instance is used as the destination port number for all rules defined for the DB security group. DB security groups can be created using the Amazon RDS APIs or the Amazon RDS page of the AWS Management Console.</p></blockquote>
<p>Here is more info about Amazon RDS Security Groups http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.RDSSecurityGroups.html</p>
<p>Click on DB Security Groups<br />
<a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBSecurityGroups.PNG?mtime=1363855346"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/DBSecurityGroups.PNG?mtime=1363855346" width="191" height="540" /></a><br />
Click on details and add the CIDR/IP of your machine, you will see it displayed there ,you can just paste that in the box.</p>
<p>Now you are ready to connect to your AWS RDS instance<br />
Paste the endpoint in the Servername box, add the user name and password. You should be all ready now. If you check for @@servername and @@version, you should see something like this</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSQuery.PNG?mtime=1363855711"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSQuery.PNG?mtime=1363855711" width="457" height="317" /></a></div>
<p>Take a look at your dashboard, check out everything that is available. Here is what monitoring looks like</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AwsMonitoring.PNG?mtime=1363855852"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AwsMonitoring.PNG?mtime=1363855852" width="849" height="589" /></a></div>
<p>You can setup alarms as well, here is what that looks like</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSAlarms.PNG?mtime=1363856013"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/AWS/AWSAlarms.PNG?mtime=1363856013" width="648" height="362" /></a></div>
<p>Run some queries, see what works what doesn&#8217;t. I decided to run sp_helpdb</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw3">sp_helpdb</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">sp_helpdb</pre></div></div>

<p>Here is what I see</p>
<p>No permission to access database &#8216;model&#8217;.</p>
<pre>name	     db_size	owner	dbid	created
master	      4.75 MB	rdsa	1	Apr  8 2003
msdb	     14.75 MB	rdsa	4	Feb 10 2012
rdsadmin     11.19 MB	rdsa	5	Mar 21 2013
tempdb	      6.81 MB	rdsa	2	Mar 21 2013</pre>
<p>That is all for this posts, I will post more once I start messing around with this more</p>
<p>I created two more posts <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/how-to-read-the-error">How to read the error log on an Amazon RDS SQL Server instance</a> and <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/turning-on-optimize-for-ad">Turning on Optimize for Ad hoc Workloads, Ad Hoc Distributed Queries and more on a AWS RDS SQL Server Instance</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/trying-out-amazon-relational-database/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Backup to the cloud by using duplicati</title>
		<link>/index.php/itprofessionals/softwareandconfigmgmt/backup-to-the-cloud-by/</link>
		<comments>/index.php/itprofessionals/softwareandconfigmgmt/backup-to-the-cloud-by/#respond</comments>
		<pubDate>Thu, 24 May 2012 23:53:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Book Review]]></category>
		<category><![CDATA[Software and Configuration Management]]></category>
		<category><![CDATA[amazon]]></category>
		<category><![CDATA[backup]]></category>
		<category><![CDATA[cloud]]></category>
		<category><![CDATA[open source]]></category>
		<category><![CDATA[restore]]></category>
		<category><![CDATA[skydrive]]></category>

		<guid isPermaLink="false">/index.php/2012/05/backup-to-the-cloud-by/</guid>
		<description><![CDATA[I decided to give Duplicati a try to backup some of my stuff to the cloud. Duplicati is free/libre/open-source software (FLOSS). Duplicati works with Amazon S3, Windows Live SkyDrive, Google Drive (Google Docs), Rackspace Cloud Files or WebDAV, SSH, FTP&#8230;]]></description>
				<content:encoded><![CDATA[<p>I decided to give <a href="http://www.duplicati.com/">Duplicati</a> a try to backup some of my stuff to the cloud. Duplicati is free/libre/open-source software (FLOSS). Duplicati works with Amazon S3, Windows Live SkyDrive, Google Drive (Google Docs), Rackspace Cloud Files or WebDAV, SSH, FTP. </p>
<p>Duplicati uses Pre-Internet Encryption, you know that nobody can decrypt your files. When working with the cloud you have to be in TNO (Trust No One) mode. You never know what malicious person could be on the other side. Duplicati has built-in AES-256 encryption and backups can be signed using GNU Privacy Guard</p>
<p>Duplicati is available for the following platforms</p>
<p>Duplicati 1.3.2 for Windows &#8211; (32bit, msi)<br />
Duplicati 1.3.2 for Windows &#8211; (64bit, msi)<br />
Duplicati 1.3.2 for Mac OS X &#8211; (dmg)<br />
Duplicati 1.3.2 for Debian, Ubuntu, LinuxMint &#8211; (deb)<br />
Duplicati 1.3.2 for Fedora, RedHat, OpenSuSE &#8211; (rpm)<br />
Duplicati 1.3.2 &#8211; (Binaries, zip)<br />
Duplicati 1.3.2 &#8211; (Linux binary, tgz)</p>
<p>Let&#8217;s take a look at how easy it is to use. After you install Duplicati, run it. When you run it the first time a wizard will pop up. Pick select a new backup</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati01.PNG?mtime=1337909180"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati01.PNG?mtime=1337909180" width="506" height="379" /></a></div>
<p>A bunch of typical folders that hold your pictures, music, documents etc are shown by default. I decided to create a new folder and dump some pics in that folder</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati02.PNG?mtime=1337909180"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati02.PNG?mtime=1337909180" width="501" height="372" /></a></div>
<p>Next you give a password for your backups</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati03.PNG?mtime=1337909181"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati03.PNG?mtime=1337909181" width="506" height="370" /></a></div>
<p>Then you pick where you want to back this up to</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati04.PNG?mtime=1337909182"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati04.PNG?mtime=1337909182" width="511" height="340" /></a></div>
<p>I picked SkyDrive</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati05.PNG?mtime=1337909183"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati05.PNG?mtime=1337909183" width="506" height="372" /></a></div>
<p>On the advanced page, you can add custom filters, set up the frequency and add limits</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati06.PNG?mtime=1337909235"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati06.PNG?mtime=1337909235" width="510" height="376" /></a></div>
<p>On the next page you can now fill the details in for the stuff you picked in the previous page</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati07.PNG?mtime=1337909236"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati07.PNG?mtime=1337909236" width="505" height="377" /></a></div>
<p>Backup is running&#8230;.and it is done</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati08.PNG?mtime=1337909236"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati08.PNG?mtime=1337909236" width="472" height="412" /></a></div>
<p>I checked that there was something in the SkyDrive folder</p>
<p>Next I wiped out the folder on my PC and decided to do a restore. I ran the app, clicked on the wizard and picked the restore option</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati09.PNG?mtime=1337909237"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati09.PNG?mtime=1337909237" width="505" height="376" /></a></div>
<p>I picked restore from an existing backup</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati10.PNG?mtime=1337909238"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati10.PNG?mtime=1337909238" width="504" height="376" /></a></div>
<p>I picked the backup I wanted to restore</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati11.PNG?mtime=1337909271"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati11.PNG?mtime=1337909271" width="505" height="378" /></a></div>
<p>It is downloading the backup</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati12.PNG?mtime=1337909271"><img alt="" src="/wp-content/uploads/blogs/ITProfessionals/Duplicati/Duplicati12.PNG?mtime=1337909271" width="507" height="377" /></a></div>
<p>I checked the folder and all the pictures that I wiped out were restored</p>
<p>It is pretty easy to use, I will test this out over the coming weeks to get more familiar with this product</p>
<p>Duplicati is an open source project, licensed under LGPL, the source can be downloaded here http://code.google.com/p/duplicati/source/checkout</p>
<p>Try it out and let me know what you think, the main product page is here: http://www.duplicati.com/</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/softwareandconfigmgmt/backup-to-the-cloud-by/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>The Cloud as a Make-It-Finish-Sooner Dial</title>
		<link>/index.php/desktopdev/mstech/the-cloud-as-a-make/</link>
		<comments>/index.php/desktopdev/mstech/the-cloud-as-a-make/#respond</comments>
		<pubDate>Wed, 23 May 2012 10:10:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[Microsoft Technologies]]></category>
		<category><![CDATA[azure]]></category>
		<category><![CDATA[cloud]]></category>
		<category><![CDATA[cloud computing]]></category>
		<category><![CDATA[paas]]></category>

		<guid isPermaLink="false">/index.php/2012/05/the-cloud-as-a-make/</guid>
		<description><![CDATA[There's been a lot of buzz about the cloud over the past years, with a lot of that attention going to IaaS and SaaS platforms, but there's a revolution (or re-revolution) that is of even more importance, and that's PaaS. What PaaS brings us is the ability to scale horizontally and treat CPU, memory, and storage as pools of resources that are as deep as our checkbooks allow.]]></description>
				<content:encoded><![CDATA[<p>There&#8217;s been a lot of buzz about the cloud over the past years, with a lot of that attention going to IaaS and SaaS platforms, but there&#8217;s a revolution (or re-revolution) that is of even more importance, and that&#8217;s PaaS. What PaaS brings us is the ability to scale horizontally and treat CPU, memory, and storage as pools of resources that are as deep as our checkbooks allow. </p>
<p>Forget about virtual servers. Remember that 60 hour job with a 24 hour deadline? Built on a PaaS platform and equipped with a couple hundred dollars, you won&#8217;t even be staying late today.</p>
<p>Today&#8217;s post is going to share highlights from a basic file processing application. Something you would find (hopefully better written) in any random enterprise IT shop or SaaS company. It offers a web page that lets you upload files, a button to process files, a basic and poorly written list of the processed and unprocessed files, and an unattended worker. The trick is that this application was written on top of Windows Azure, so I can play tricks with time just by twisting the dial from one file processor to twenty.</p>
<h2>The Basic File Processor</h2>
<p>The file processing in the sample application is intended to be a sample workload. It consists of reading files completely into memory and passing them around, spinning through them one character at a time, replacing each character in the line with it&#8217;s upper case variant. Very critical stuff, very performant.</p>
<p>In addition to running the process via the website, I also need an unattended application that will can run the same processing function. If I owned the server, this would be a scheduled task or service. As an Azure Worker the code will be remarkably similar.</p>
<div style="text-align: center; color: #666666; font-size: 90%">
   <img src="http://tiernok.com/LTDBlog/CloudFileProcessor.png" alt="Cloud Processor Architecture" style="margin-bottom: 5px" /><br />
   Architecture of the Processor
</div>
<p>The two front-ends access common logic in the Core library, which is responsible for both the processing logic and interacting with storage resources. This being sample code, it is certified as working on my machine and is definitely not production ready. That being said, I did write this in a few evenings, so writing a production-ready service doesn&#8217;t have to take that long in normal workdays.</p>
<h3>The Web Site</h3>
<p>The website has a single MVC controller with 3 actions:</p>
<ul>
<li>~/Home/Index: Displays the list of processed and unprocessed items and buttons for upload and processing</li>
<li>~/Home/AddFile: The post address for file uploads</li>
<li>~/Home/ProcessNextItem: An action to process the next queued file</li>
</ul>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> <span class="kw4">class</span> HomeController <span class="sy0">:</span> Controller <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; IStorageLocator _storageLocator<span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> HomeController<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _storageLocator <span class="sy0">=</span> <span class="kw3">new</span> StorageManager<span class="br0">&#40;</span><span class="st0">&quot;Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> ActionResult Index<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> store <span class="sy0">=</span> <span class="kw3">new</span> ItemStore<span class="br0">&#40;</span>_storageLocator<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> model <span class="sy0">=</span> <span class="kw3">new</span> StatusViewModel<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ProcessedItems <span class="sy0">=</span> store<span class="sy0">.</span><span class="me1">GetProcessedList</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UnprocessedItems <span class="sy0">=</span> store<span class="sy0">.</span><span class="me1">GetUnprocessedList</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; ViewData<span class="br0">&#91;</span><span class="st0">&quot;file&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> TempData<span class="br0">&#91;</span><span class="st0">&quot;file&quot;</span><span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> View<span class="br0">&#40;</span>model<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="br0">&#91;</span>HttpPost<span class="br0">&#93;</span>
&nbsp; &nbsp; <span class="kw1">public</span> ActionResult AddFile<span class="br0">&#40;</span>HttpPostedFileBase file<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>file <span class="sy0">!=</span> <span class="kw1">null</span> <span class="sy0">&amp;&amp;</span> file<span class="sy0">.</span><span class="me1">ContentLength</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> item <span class="sy0">=</span> <span class="kw3">new</span> FullItem<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ResourceId <span class="sy0">=</span> Guid<span class="sy0">.</span><span class="me1">NewGuid</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Received <span class="sy0">=</span> DateTime<span class="sy0">.</span><span class="me1">Now</span><span class="sy0">.</span><span class="me1">ToUniversalTime</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IsProcessed <span class="sy0">=</span> <span class="kw1">false</span>,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileName <span class="sy0">=</span> file<span class="sy0">.</span><span class="me1">FileName</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; item<span class="sy0">.</span><span class="me1">ReadFileFromStream</span><span class="br0">&#40;</span>file<span class="sy0">.</span><span class="me1">InputStream</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">new</span> ItemStore<span class="br0">&#40;</span>_storageLocator<span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">AddNewItem</span><span class="br0">&#40;</span>item<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TempData<span class="br0">&#91;</span><span class="st0">&quot;file&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> file<span class="sy0">.</span><span class="me1">FileName</span> <span class="sy0">+</span> <span class="st0">&quot; uploaded and queued for processing.&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TempData<span class="br0">&#91;</span><span class="st0">&quot;file&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="st0">&quot;Processor ignores empty files, sorry.&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> RedirectToAction<span class="br0">&#40;</span><span class="st0">&quot;Index&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="br0">&#91;</span>HttpGet<span class="br0">&#93;</span>
&nbsp; &nbsp; <span class="kw1">public</span> ActionResult ProcessNextItem<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> store <span class="sy0">=</span> <span class="kw3">new</span> ItemStore<span class="br0">&#40;</span>_storageLocator<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">new</span> ItemProcessor<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ProcessNextItem</span><span class="br0">&#40;</span>store<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> RedirectToAction<span class="br0">&#40;</span><span class="st0">&quot;Index&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public class HomeController : Controller {

	IStorageLocator _storageLocator;

	public HomeController() {
		_storageLocator = new StorageManager("Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString");
	}

	public ActionResult Index() {
		var store = new ItemStore(_storageLocator);
		var model = new StatusViewModel() {
			ProcessedItems = store.GetProcessedList(),
			UnprocessedItems = store.GetUnprocessedList()
		};

		ViewData["file"] = TempData["file"];

		return View(model);
	}

	[HttpPost]
	public ActionResult AddFile(HttpPostedFileBase file) {
		if (file != null &amp;&amp; file.ContentLength &gt; 0) {
			var item = new FullItem() {
				ResourceId = Guid.NewGuid(),
				Received = DateTime.Now.ToUniversalTime(),
				IsProcessed = false,
				FileName = file.FileName
			};
			item.ReadFileFromStream(file.InputStream);

			new ItemStore(_storageLocator).AddNewItem(item);
			TempData["file"] = file.FileName + " uploaded and queued for processing.";
		}
		else {
			TempData["file"] = "Processor ignores empty files, sorry.";
		}

		return RedirectToAction("Index");
	}

	[HttpGet]
	public ActionResult ProcessNextItem() {
		var store = new ItemStore(_storageLocator);
		new ItemProcessor().ProcessNextItem(store);

		return RedirectToAction("Index");
	}
}</pre></div></div>

<p>The key to all of these methods is the ItemStore and ItemProcessor class, all of the rest of the logic is basic presentation layer logic.</p>
<h3>The Worker Role</h3>
<p>The worker role consists of a roughly 6 line while(true) statement that asks the ItemStore to process the next item in the queue, then sleeps for 1 second.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> <span class="kw1">override</span> <span class="kw4">void</span> Run<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span><span class="kw1">true</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> storageLocator <span class="sy0">=</span> <span class="kw3">new</span> StorageManager<span class="br0">&#40;</span><span class="st0">&quot;Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> store <span class="sy0">=</span> <span class="kw3">new</span> ItemStore<span class="br0">&#40;</span>storageLocator<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">new</span> ItemProcessor<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ProcessNextItem</span><span class="br0">&#40;</span>store<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; Thread<span class="sy0">.</span><span class="me1">Sleep</span><span class="br0">&#40;</span><span class="nu0">1000</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; Trace<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st0">&quot;Working&quot;</span>, <span class="st0">&quot;Information&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public override void Run() {
	while (true) {
		var storageLocator = new StorageManager("Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString");
		var store = new ItemStore(storageLocator);
		new ItemProcessor().ProcessNextItem(store);
		Thread.Sleep(1000);
		Trace.WriteLine("Working", "Information");
	}
}</pre></div></div>

<p>Once again, the magic happens in the ItemStore and ItemProcessor instances.</p>
<h3>The ItemStore</h3>
<p>The ItemStore class exposes the basic methods we need execute our process:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> <span class="kw4">void</span> AddNewItem<span class="br0">&#40;</span>FullItem item<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="coMULTI">/* More Code */</span> <span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> FullItem RetrieveForProcessing<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="coMULTI">/* More Code */</span> <span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw4">void</span> StoreFinishedItem<span class="br0">&#40;</span>FullItem item<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="coMULTI">/* More Code */</span> <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public void AddNewItem(FullItem item) { /* More Code */ }

public FullItem RetrieveForProcessing() { /* More Code */ }

public void StoreFinishedItem(FullItem item) { /* More Code */ }</pre></div></div>

<p>And a pair of methods for visibility:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> IEnumerable<span class="sy0">&lt;</span>ItemBase<span class="sy0">&gt;</span> GetUnprocessedList<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="coMULTI">/* More Code */</span> <span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> IEnumerable<span class="sy0">&lt;</span>ItemBase<span class="sy0">&gt;</span> GetProcessedList<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="coMULTI">/* More Code */</span> <span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public IEnumerable&lt;ItemBase&gt; GetUnprocessedList() { /* More Code */ }

public IEnumerable&lt;ItemBase&gt; GetProcessedList() { /* More Code */ }</pre></div></div>

<p>Windows Azure offers a number of storage options, each with their own benefits and constraints. For this process I decided to use <a href="http://www.windowsazure.com/en-us/develop/net/how-to-guides/table-services/" title="Table storage on WindowsAzure.com">table storage</a> to track the summary level information about each file processing job, <a href="http://www.windowsazure.com/en-us/develop/net/how-to-guides/blob-storage/" title="Blob storage on WindowsAzure.com">blob storage</a> to store the actual file, and the <a href="http://www.windowsazure.com/en-us/develop/net/how-to-guides/queue-service/" title="Queue service on WindowsAzure.com">queue service</a> for managing task execution. </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="de1"><pre class="de1"><span class="kw1">public</span> <span class="kw4">class</span> ItemStore <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">string</span> RAW_BLOB_NAME <span class="sy0">=</span> <span class="st0">&quot;RawItems&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">string</span> FINISHED_BLOB_NAME <span class="sy0">=</span> <span class="st0">&quot;FinishedItems&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">string</span> QUEUE_NAME <span class="sy0">=</span> <span class="st0">&quot;ToBeProcessed&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">string</span> TABLE_NAME <span class="sy0">=</span> <span class="st0">&quot;Items&quot;</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; ITableStore _table<span class="sy0">;</span>
&nbsp; &nbsp; IBlobStore _rawBlob, _finishedBlob<span class="sy0">;</span>
&nbsp; &nbsp; IQueueStore _queue<span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> ItemStore<span class="br0">&#40;</span>IStorageLocator storageLocator<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _table <span class="sy0">=</span> storageLocator<span class="sy0">.</span><span class="me1">GetTable</span><span class="br0">&#40;</span>TABLE_NAME<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _rawBlob <span class="sy0">=</span> storageLocator<span class="sy0">.</span><span class="me1">GetBlob</span><span class="br0">&#40;</span>RAW_BLOB_NAME<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _finishedBlob <span class="sy0">=</span> storageLocator<span class="sy0">.</span><span class="me1">GetBlob</span><span class="br0">&#40;</span>FINISHED_BLOB_NAME<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _queue <span class="sy0">=</span> storageLocator<span class="sy0">.</span><span class="me1">GetQueue</span><span class="br0">&#40;</span>QUEUE_NAME<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> AddNewItem<span class="br0">&#40;</span>FullItem item<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _rawBlob<span class="sy0">.</span><span class="me1">Create</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">ResourceId</span>, item<span class="sy0">.</span><span class="me1">File</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _queue<span class="sy0">.</span><span class="me1">Enqueue</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">AsSummary</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _table<span class="sy0">.</span><span class="me1">Create</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">AsSummary</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> IEnumerable<span class="sy0">&lt;</span>ItemBase<span class="sy0">&gt;</span> GetUnprocessedList<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> _table<span class="sy0">.</span><span class="me1">GetUnprocessedItems</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToList</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> IEnumerable<span class="sy0">&lt;</span>ItemBase<span class="sy0">&gt;</span> GetProcessedList<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// ?</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> _table<span class="sy0">.</span><span class="me1">GetProcessedItems</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">.</span><span class="me1">ToList</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> FullItem RetrieveForProcessing<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; FullItem rawItem <span class="sy0">=</span> <span class="kw1">null</span><span class="sy0">;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">var</span> item <span class="sy0">=</span> _queue<span class="sy0">.</span><span class="me1">Dequeue</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>item <span class="sy0">!=</span> <span class="kw1">null</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawItem <span class="sy0">=</span> <span class="kw3">new</span> FullItem<span class="br0">&#40;</span>item<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawItem<span class="sy0">.</span><span class="me1">File</span> <span class="sy0">=</span> _rawBlob<span class="sy0">.</span><span class="me1">Retrieve</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">ResourceId</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> rawItem<span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> StoreFinishedItem<span class="br0">&#40;</span>FullItem item<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _finishedBlob<span class="sy0">.</span><span class="me1">Create</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">ResourceId</span>, item<span class="sy0">.</span><span class="me1">File</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _rawBlob<span class="sy0">.</span><span class="me1">Delete</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">ResourceId</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; _table<span class="sy0">.</span><span class="me1">Update</span><span class="br0">&#40;</span>item<span class="sy0">.</span><span class="me1">AsSummary</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">public class ItemStore {

	public static string RAW_BLOB_NAME = "RawItems";
	public static string FINISHED_BLOB_NAME = "FinishedItems";
	public static string QUEUE_NAME = "ToBeProcessed";
	public static string TABLE_NAME = "Items";

	ITableStore _table;
	IBlobStore _rawBlob, _finishedBlob;
	IQueueStore _queue;

	public ItemStore(IStorageLocator storageLocator) {
		_table = storageLocator.GetTable(TABLE_NAME);
		_rawBlob = storageLocator.GetBlob(RAW_BLOB_NAME);
		_finishedBlob = storageLocator.GetBlob(FINISHED_BLOB_NAME);
		_queue = storageLocator.GetQueue(QUEUE_NAME);
	}

	public void AddNewItem(FullItem item) {
		_rawBlob.Create(item.ResourceId, item.File);
		_queue.Enqueue(item.AsSummary());
		_table.Create(item.AsSummary());
	}

	public IEnumerable&lt;ItemBase&gt; GetUnprocessedList() {
		return _table.GetUnprocessedItems().ToList();
	}

	public IEnumerable&lt;ItemBase&gt; GetProcessedList() {
		// ?
		return _table.GetProcessedItems().ToList();
	}

	public FullItem RetrieveForProcessing() {
		FullItem rawItem = null;

		var item = _queue.Dequeue();
		if (item != null) {
			rawItem = new FullItem(item);
			rawItem.File = _rawBlob.Retrieve(item.ResourceId);
		}
		return rawItem;
	}

	public void StoreFinishedItem(FullItem item) {
		_finishedBlob.Create(item.ResourceId, item.File);
		_rawBlob.Delete(item.ResourceId);
		_table.Update(item.AsSummary());
	}
}</pre></div></div>

<p>The ItemStore class is built to interact with interfaces for each of these resources, using a single IStorageLocator interface to get instances of those resource interfaces. The class (and application) was driven by the small set of unit tests that helped me define how i wanted the process to work and interact with the resources above.</p>
<h3>Configurations</h3>
<p>With all of the pieces defined, we use a pair of configurations to tell Azure how we want to deploy everything. </p>
<p>The first configuration defines the services we intend to package and deploy as well as the instance size and any endpoints:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;ServiceDefinition</span> <span class="re0">name</span>=<span class="st0">&quot;CloudFileProcessorService&quot;</span> <span class="re0">xmlns</span>=<span class="st0">&quot;http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition&quot;</span><span class="re2">&gt;</span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;WebRole</span> <span class="re0">name</span>=<span class="st0">&quot;Processor_WebRole&quot;</span> <span class="re0">vmsize</span>=<span class="st0">&quot;Small&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Sites<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Site</span> <span class="re0">name</span>=<span class="st0">&quot;Web&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Bindings<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Binding</span> <span class="re0">name</span>=<span class="st0">&quot;Endpoint1&quot;</span> <span class="re0">endpointName</span>=<span class="st0">&quot;Endpoint1&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Bindings<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Site<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Sites<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Endpoints<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;InputEndpoint</span> <span class="re0">name</span>=<span class="st0">&quot;Endpoint1&quot;</span> <span class="re0">protocol</span>=<span class="st0">&quot;http&quot;</span> <span class="re0">port</span>=<span class="st0">&quot;80&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Endpoints<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Imports<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Import</span> <span class="re0">moduleName</span>=<span class="st0">&quot;Diagnostics&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Imports<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/WebRole<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;WorkerRole</span> <span class="re0">name</span>=<span class="st0">&quot;Processor_WorkerRole&quot;</span> <span class="re0">vmsize</span>=<span class="st0">&quot;Small&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Imports<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Import</span> <span class="re0">moduleName</span>=<span class="st0">&quot;Diagnostics&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/Imports<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/WorkerRole<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/ServiceDefinition<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;ServiceDefinition name="CloudFileProcessorService" xmlns="http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceDefinition"&gt;
  &lt;WebRole name="Processor_WebRole" vmsize="Small"&gt;
    &lt;Sites&gt;
      &lt;Site name="Web"&gt;
        &lt;Bindings&gt;
          &lt;Binding name="Endpoint1" endpointName="Endpoint1" /&gt;
        &lt;/Bindings&gt;
      &lt;/Site&gt;
    &lt;/Sites&gt;
    &lt;Endpoints&gt;
      &lt;InputEndpoint name="Endpoint1" protocol="http" port="80" /&gt;
    &lt;/Endpoints&gt;
    &lt;Imports&gt;
      &lt;Import moduleName="Diagnostics" /&gt;
    &lt;/Imports&gt;
  &lt;/WebRole&gt;
  &lt;WorkerRole name="Processor_WorkerRole" vmsize="Small"&gt;
    &lt;Imports&gt;
      &lt;Import moduleName="Diagnostics" /&gt;
    &lt;/Imports&gt;
  &lt;/WorkerRole&gt;
&lt;/ServiceDefinition&gt;</pre></div></div>

<p>The second configuration is applied when we deploy the instances above and tells Azure that I want to deploy 1 Processor_WebRole instance and 2 Processor_WorkerRole instances:</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="xml"><thead><tr><td colspan="2"  class="head">XML</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="sc3"><span class="re1">&lt;ServiceConfiguration</span> <span class="re0">serviceName</span>=<span class="st0">&quot;CloudFileProcessorService&quot;</span> <span class="re0">xmlns</span>=<span class="st0">&quot;http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceConfiguration&quot;</span> <span class="re0">osFamily</span>=<span class="st0">&quot;1&quot;</span> <span class="re0">osVersion</span>=<span class="st0">&quot;*&quot;</span><span class="re2">&gt;</span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;Role</span> <span class="re0">name</span>=<span class="st0">&quot;Processor_WebRole&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Instances</span> <span class="re0">count</span>=<span class="st0">&quot;1&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;ConfigurationSettings<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Setting</span> <span class="re0">name</span>=<span class="st0">&quot;Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString&quot;</span> <span class="re0">value</span>=<span class="st0">&quot;UseDevelopmentStorage=true&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/ConfigurationSettings<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Role<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;Role</span> <span class="re0">name</span>=<span class="st0">&quot;Processor_WorkerRole&quot;</span><span class="re2">&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Instances</span> <span class="re0">count</span>=<span class="st0">&quot;2&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;ConfigurationSettings<span class="re2">&gt;</span></span></span>
&nbsp; &nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;Setting</span> <span class="re0">name</span>=<span class="st0">&quot;Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString&quot;</span> <span class="re0">value</span>=<span class="st0">&quot;UseDevelopmentStorage=true&quot;</span> <span class="re2">/&gt;</span></span>
&nbsp; &nbsp; <span class="sc3"><span class="re1">&lt;/ConfigurationSettings<span class="re2">&gt;</span></span></span>
&nbsp; <span class="sc3"><span class="re1">&lt;/Role<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/ServiceConfiguration<span class="re2">&gt;</span></span></span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">&lt;ServiceConfiguration serviceName="CloudFileProcessorService" xmlns="http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceConfiguration" osFamily="1" osVersion="*"&gt;
  &lt;Role name="Processor_WebRole"&gt;
    &lt;Instances count="1" /&gt;
    &lt;ConfigurationSettings&gt;
      &lt;Setting name="Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString" value="UseDevelopmentStorage=true" /&gt;
    &lt;/ConfigurationSettings&gt;
  &lt;/Role&gt;
  &lt;Role name="Processor_WorkerRole"&gt;
    &lt;Instances count="2" /&gt;
    &lt;ConfigurationSettings&gt;
      &lt;Setting name="Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString" value="UseDevelopmentStorage=true" /&gt;
    &lt;/ConfigurationSettings&gt;
  &lt;/Role&gt;
&lt;/ServiceConfiguration&gt;</pre></div></div>

<p>Note that I&#8217;m telling it to use the local development storage, which is supported by a local storage emulator. In a production configuration I would enter the service location and a generated token.</p>
<h2>So Where&#8217;s the Magic?</h2>
<p>So where&#8217;s the magic that makes this a distribute application instead of 3 days of overtime? It&#8217;s sprinkled throughout the system.</p>
<p>The architecture of this system would work just as well outside of Azure, provided I offered it stand-ins for the 3 storage resources and deployed the instances and any necessary settings accordingly. Instead of worrying about how to manage deployments and what to use for centralized queueing and storage, I can focus on building an application that simply assumes those resources are available. Is there headroom for performance improvements? Sure, but I can also choose to throw another $15/month server at it, push data to CDNs and blob storage, add caching, or even a SQL Azure instance. </p>
<p>This application may be fairly basic, but nothing stops us from following this same pattern for much larger applications. PaaS has removed some of the constraints we take for granted. Even applications that have to run in-house in order to standardize against a database can now consider uploading a subset of that lookup data to a table store, performing most of the heavy lifting in the cloud, then produce a few files to import back into the on-premise system. The total execution time would be longer, but being able to scale part of the job across numerous parallel instances means the actual elapsed time can actually be much shorter.</p>
<p>And it means when we have a 60 hour task that&#8217;s due in 24, it&#8217;s no longer an impossible situation.</p>
<p><i>The source code is available <a href="https://github.com/tarwn/AzureFileProcessorSample" title="AzureFileProcessorSample on github">on github</a> along with requirements and links for setting up the emulators locally.</i></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/desktopdev/mstech/the-cloud-as-a-make/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
