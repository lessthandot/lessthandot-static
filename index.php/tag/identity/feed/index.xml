<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>identity &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/identity/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Triggers affect on SQL System Variables</title>
		<link>/index.php/datamgmt/dbadmin/mssqlserveradmin/triggers-affect-on-sql-system/</link>
		<comments>/index.php/datamgmt/dbadmin/mssqlserveradmin/triggers-affect-on-sql-system/#comments</comments>
		<pubDate>Tue, 12 Mar 2013 19:35:00 +0000</pubDate>
		<dc:creator><![CDATA[Kevin Conan]]></dc:creator>
				<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[@@rowcount]]></category>
		<category><![CDATA[identity]]></category>
		<category><![CDATA[sql]]></category>
		<category><![CDATA[trigger]]></category>

		<guid isPermaLink="false">/index.php/2013/03/triggers-affect-on-sql-system/</guid>
		<description><![CDATA[A while back I ran into an issue where a user was complaining about @@IDENTITY not always returning the value they expected.]]></description>
				<content:encoded><![CDATA[<p>A while back I ran into an issue where a user was complaining about @@IDENTITY not always returning the value they expected.  </p>
<p>This was happening on a table that was setup using 3rd party cross database platform replication software.  The software used triggers to capture the changes to the table to send them over to an Oracle table and a DB2 table.  The issue was caused by the trigger inserting records into another table that also had an identity column and that was being returned instead of the one from the original insert.</p>
<p>I used to also have a debate with a fellow DBA about @@ROWCOUNT.  I use it all the time and havenâ€™t had any issues.  But I also wanted to know if triggers could affect it.<br />
Here is some sample code that illustrates how triggers affect @@IDENTITY, @@ROWCOUNT and also demonstrates SCOPE_IDENTITY().</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> tblTest <span class="br0">&#40;</span>col1 <span class="kw1">INT</span> <span class="kw1">IDENTITY</span> <span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, col2 <span class="kw1">INT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>;
&nbsp;
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> tr_ins_tblTest
&nbsp; &nbsp; <span class="kw1">ON</span> tblTest
&nbsp;<span class="kw1">AFTER</span> <span class="kw1">INSERT</span>
<span class="kw1">AS</span> 
<span class="kw1">BEGIN</span>
&nbsp; &nbsp; <span class="kw1">DECLARE</span> @<span class="kw1">int</span> <span class="kw1">AS</span> <span class="kw1">INT</span>;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @<span class="kw1">int</span> <span class="sy0">=</span> col1
&nbsp; &nbsp; &nbsp; <span class="kw1">FROM</span> inserted;
&nbsp;
&nbsp; &nbsp; <span class="kw1">INSERT</span> <span class="kw1">INTO</span> tblTest <span class="br0">&#40;</span>col2<span class="br0">&#41;</span> 
&nbsp; &nbsp; <span class="kw1">SELECT</span> @<span class="kw1">int</span>;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span>&nbsp; &nbsp;<span class="st0">'Inside Trigger 1'</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Where</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">@@ROWCOUNT</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span>RowCount<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ,@@<span class="kw1">IDENTITY</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Identity</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Scope</span> <span class="kw1">Identity</span><span class="br0">&#93;</span>;
&nbsp;
&nbsp; &nbsp; <span class="co1">--really try to mess with @@ROWCOUNT</span>
&nbsp; &nbsp; <span class="kw1">INSERT</span> <span class="kw1">INTO</span> tblTest <span class="br0">&#40;</span>col2<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> <span class="nu0">10</span>
&nbsp; &nbsp; <span class="kw1">WHERE</span> <span class="nu0">1</span> <span class="sy0">=</span> <span class="nu0">2</span>;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span>&nbsp; &nbsp;<span class="st0">'Inside Trigger 2'</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Where</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">@@ROWCOUNT</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span>RowCount<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ,@@<span class="kw1">IDENTITY</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Identity</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Scope</span> <span class="kw1">Identity</span><span class="br0">&#93;</span>;
&nbsp; &nbsp; 
<span class="kw1">END</span>;
&nbsp;
GO
&nbsp;
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> tblTest <span class="br0">&#40;</span>col2<span class="br0">&#41;</span> <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'10'</span><span class="br0">&#41;</span>;
&nbsp;
<span class="kw1">SELECT</span>&nbsp; &nbsp;<span class="st0">'Outside Trigger'</span>&nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Where</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">@@ROWCOUNT</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span>RowCount<span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,@@<span class="kw1">IDENTITY</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Identity</span><span class="br0">&#93;</span>
&nbsp; &nbsp; &nbsp; &nbsp; ,<span class="kw2">SCOPE_IDENTITY</span><span class="br0">&#40;</span><span class="br0">&#41;</span> &nbsp; <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="kw1">Scope</span> <span class="kw1">Identity</span><span class="br0">&#93;</span>;
&nbsp;
GO
&nbsp;
<span class="kw1">DROP</span> <span class="kw1">TABLE</span> tblTest;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE tblTest (col1 INT IDENTITY (1,1) NOT NULL, col2 INT NULL);

GO

CREATE TRIGGER tr_ins_tblTest
    ON tblTest
 AFTER INSERT
AS 
BEGIN
	DECLARE @int AS INT;

	SELECT @int	= col1
	  FROM inserted;

	INSERT INTO tblTest (col2) 
	SELECT @int;

	SELECT	 'Inside Trigger 1'	AS [Where]
			,@@ROWCOUNT			AS [RowCount]
			,@@IDENTITY			AS [Identity]
			,SCOPE_IDENTITY()	AS [Scope Identity];

	--really try to mess with @@ROWCOUNT
	INSERT INTO tblTest (col2)
	SELECT 10
	WHERE 1 = 2;

	SELECT	 'Inside Trigger 2'	AS [Where]
			,@@ROWCOUNT			AS [RowCount]
			,@@IDENTITY			AS [Identity]
			,SCOPE_IDENTITY()	AS [Scope Identity];
	
END;

GO

INSERT INTO tblTest (col2) VALUES ('10');

SELECT	 'Outside Trigger'	AS [Where]
		,@@ROWCOUNT			AS [RowCount]
		,@@IDENTITY			AS [Identity]
		,SCOPE_IDENTITY()	AS [Scope Identity];

GO

DROP TABLE tblTest;</pre></div></div>

<p>Here is the output from the above code:</p>
<div class="image_block"><a href="/wp-content/uploads/users/kconan/reccount.JPG?mtime=1363124071"><img alt="" src="/wp-content/uploads/users/kconan/reccount.JPG?mtime=1363124071" width="327" height="144" /></a></div>
<p>So we can see that @@ROWCOUNT is not affected by the trigger.  However we also see that @@IDENTITY can be affected by triggers and the way to get around it is to use SCOPE_IDENTITY() instead.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbadmin/mssqlserveradmin/triggers-affect-on-sql-system/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>How to insert values into a table with only an identity column</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-insert-values-into-a-table-with-o/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-insert-values-into-a-table-with-o/#comments</comments>
		<pubDate>Fri, 30 Apr 2010 14:55:19 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[identity]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2010/04/how-to-insert-values-into-a-table-with-o/</guid>
		<description><![CDATA[How to insert values into a table with only an identity column Some databases have something called a sequence, you can use this to generate values like an identity but it can be used accross many tables. In SQL Server you could simulate that by creating a table that has an identity column, inserting into [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>How to insert values into a table with only an identity column</p>
<p>Some databases have something called a sequence, you can use this to generate values like an identity but it can be used accross many tables. In SQL Server you could simulate that by creating a table that has an identity column, inserting into that table and then use the identity generated in your other tables<br />
The reason I am writing this is because I saw the following table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="kw1">Sequence</span> <span class="br0">&#40;</span>ID <span class="kw1">int</span> <span class="kw1">identity</span> not null <span class="kw1">primary</span> <span class="kw1">key</span>,<span class="kw1">Dummy</span> <span class="kw1">tinyint</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE Sequence (ID int identity not null primary key,Dummy tinyint)
GO</pre></div></div>

<p>I was thinking to myself why they have that dummy value, so I spoke to one of these people who were using the system. The reason they have this dummy value is so that they can insert into this table like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO Sequence VALUES(1)
INSERT INTO Sequence VALUES(1)
INSERT INTO Sequence VALUES(1)</pre></div></div>

<p>And now when you query the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> ID 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">Sequence</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT ID 
FROM  Sequence </pre></div></div>

<p>You get these 3 rows as output</p>
<pre>ID
1
2
3</pre>
<p>So the dummy value is there so that they can insert  into the table. Even though the dummy column is not big it still takes up space and it was also nullable which also takes up some space.<br />
Let&#8217;s do this a different way. First drop the table we created before.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TABLE</span> <span class="kw1">Sequence</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TABLE Sequence</pre></div></div>

<p>Now create the table like this; without the dummy value</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> <span class="kw1">Sequence</span> <span class="br0">&#40;</span>ID <span class="kw1">int</span> <span class="kw1">identity</span> not null <span class="kw1">primary</span> <span class="kw1">key</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE Sequence (ID int identity not null primary key)
GO</pre></div></div>

<p>Here is how the insert looks like if you only have the identity column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> <span class="kw1">Sequence</span> <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO Sequence DEFAULT VALUES
INSERT INTO Sequence DEFAULT VALUES
INSERT INTO Sequence DEFAULT VALUES
INSERT INTO Sequence DEFAULT VALUES</pre></div></div>

<p>All you need to use is default values in the insert statements, it will then generate the identity</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> ID 
<span class="kw1">FROM</span> &nbsp;<span class="kw1">Sequence</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT ID 
FROM  Sequence </pre></div></div>

<pre>ID
1
2
3
4</pre>
<p>Let&#8217;s take a look at another example, what if we had two other columns and they had defaults on them? First create this table.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Sequence2 <span class="br0">&#40;</span>ID <span class="kw1">int</span> <span class="kw1">identity</span> not null <span class="kw1">primary</span> <span class="kw1">key</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Somedate <span class="kw1">datetime</span> <span class="kw1">default</span> <span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span> not null,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SomeID <span class="kw1">int</span> <span class="kw1">default</span> <span class="nu0">0</span> not null<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE Sequence2 (ID int identity not null primary key, 
			Somedate datetime default getdate() not null,
			SomeID int default 0 not null)
GO</pre></div></div>

<p>Now run these statements</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> <span class="kw1">INTO</span> Sequence2 <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> Sequence2 <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> Sequence2 <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span>
<span class="kw1">INSERT</span> <span class="kw1">INTO</span> Sequence2 <span class="kw1">DEFAULT</span> <span class="kw1">VALUES</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT INTO Sequence2 DEFAULT VALUES
INSERT INTO Sequence2 DEFAULT VALUES
INSERT INTO Sequence2 DEFAULT VALUES
INSERT INTO Sequence2 DEFAULT VALUES</pre></div></div>

<p>Now let&#8217;s look what is in the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> &nbsp;Sequence2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM  Sequence2</pre></div></div>

<pre>ID	Somedate	SomeID
1	2010-04-30 12:50:14.693	0
2	2010-04-30 12:50:14.693	0
3	2010-04-30 12:50:14.693	0
4	2010-04-30 12:50:14.693	0</pre>
<p>As you can see it used the default values for the columns with defaults and also created the identity values.</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-insert-values-into-a-table-with-o/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>How to return all the skipped identity values from a table in SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-return-all-the-skipped-identity-v/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-return-all-the-skipped-identity-v/#comments</comments>
		<pubDate>Mon, 18 Jan 2010 12:41:34 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[gaps]]></category>
		<category><![CDATA[how to]]></category>
		<category><![CDATA[identity]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/01/how-to-return-all-the-skipped-identity-v/</guid>
		<description><![CDATA[Every now and then someone will ask how to return a list of all the identity values in a table that have been skipped. You will probably have a table with an identity column, the &#8216;problem&#8217; with identity columns is that if an insert is rolled back or fails in any way then the identity [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Every now and then someone will ask how to return a list of all the identity values in a table that have been skipped.  You will probably have a table with an identity column, the &#8216;problem&#8217; with identity columns is that if an insert is rolled back or fails in any way then the identity value is not reused&#8230;you end up with gaps. Identifying gaps is pretty easy to do if you have a table of numbers in your database.</p>
<p>If you don&#8217;t have a table of numbers, here is some code that will create a table with numbers between 1` and 2048</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> Numbers <span class="br0">&#40;</span>number <span class="kw1">int</span> not null <span class="kw1">primary</span> <span class="kw1">key</span> <span class="br0">&#41;</span>
go
<span class="kw1">insert</span> Numbers 
<span class="kw1">select</span> number <span class="sy0">+</span> <span class="nu0">1</span> 
<span class="kw1">from</span> master..<span class="me1">spt_values</span> s
<span class="kw1">where</span> s.<span class="me1">type</span><span class="sy0">=</span><span class="st0">'P'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table Numbers (number int not null primary key )
go
insert Numbers 
select number + 1 
from master..spt_values s
where s.type='P'</pre></div></div>

<p>Now that we have our numbers table we can proceed with creating another table which we will populate with some numbers</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> #bla<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> #bla <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">12</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table #bla(id int)

insert #bla values(1)
insert #bla values(2)
insert #bla values(4)
insert #bla values(5)
insert #bla values(9)
insert #bla values(12)</pre></div></div>

<p>Here is the code that will return the gaps (the values 3,6,7,8,10,11)  from the temp table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> number 
<span class="kw1">from</span> Numbers n
<span class="kw1">left</span> join #bla b <span class="kw1">on</span> n.<span class="me1">number</span> <span class="sy0">=</span> b.<span class="me1">id</span>
<span class="kw1">where</span> n.<span class="me1">number</span> <span class="sy0">&lt;</span> <span class="br0">&#40;</span><span class="kw1">select</span> <span class="kw2">MAX</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">from</span> #bla<span class="br0">&#41;</span>
and &nbsp;b.<span class="me1">id</span> <span class="kw1">is</span> null</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select number 
from Numbers n
left join #bla b on n.number = b.id
where n.number &lt; (select MAX(id) from #bla)
and  b.id is null</pre></div></div>

<p>As you can see it is a simple left join, we also check for the max value otherwise you would get everything back that is greater than the max value in the #bla table.</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-return-all-the-skipped-identity-v/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
