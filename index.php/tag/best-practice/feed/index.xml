<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>best practice &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/best-practice/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Process Kills Developer Passion&#8230;and Kittens, Lots of Kittens</title>
		<link>/index.php/itprofessionals/itprocesses/process-kills-developer-passion-and-kittens/</link>
		<comments>/index.php/itprofessionals/itprocesses/process-kills-developer-passion-and-kittens/#comments</comments>
		<pubDate>Tue, 17 May 2011 15:34:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[best practice]]></category>
		<category><![CDATA[kittens]]></category>
		<category><![CDATA[lots of kittens]]></category>
		<category><![CDATA[pdca]]></category>
		<category><![CDATA[rup]]></category>
		<category><![CDATA[scrum]]></category>
		<category><![CDATA[waterfall]]></category>

		<guid isPermaLink="false">/index.php/2011/05/process-kills-developer-passion-and-kittens/</guid>
		<description><![CDATA[So recently I found out that process kills developer passion. Actually I found out over and over, as numerous people sent me the link. In fact, I even heard certain past co-workers silently wishing they could send me the link (well, they would if they h&#8230;]]></description>
				<content:encoded><![CDATA[<p>So recently I found out that <a href="http://radar.oreilly.com/2011/05/process-kills-developer-passion.html">process kills developer passion</a>. Actually I found out over and over, as numerous people sent me the link. In fact, I even heard certain past co-workers silently wishing they could send me the link (well, they would if they had read it, anyway).</p>
<p>Except I didn&#8217;t really learn about processes killing developer passion, what I learned was that best practices take a lot of time away from programming and, what&#8217;s more, are generally followed poorly. And process kills developer passion.</p>
<div style="border: 1px solid #AAAAAA; float: right; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;"><img src="http://tiernok.com/trent/2003_12_13_14.gif" alt="Kitten" style="padding-bottom: 5px; max-width: 250px;" /></div>
<p>Or, you know, not.</p>
<p>(Welcome to me, unplugged and only somewhat toned down. I usually reserve these commentaries for private conversations and the LTD summit, but I figured I would give them a break this time around.)</p>
<h2>If you were following best practices&#8230;</h2>
<p>If you were following today&#8217;s &#8216;best practices&#8217;&#8230;</p>
<p>Wait, what are today&#8217;s best practices? Because last I heard, TDD was out, BDD was in, we&#8217;re using Kanban boards to manage our processes, we&#8217;re practicing servant leadership, wait self-organization, wait no leadership, wait &#8230; are we back to Taylorism yet?</p>
<p>And let&#8217;s not even try to dig into which software frameworks we should be using, because that&#8217;s a whole different level of vi vs Emacs&#8230;.</p>
<p>Whether we&#8217;re operating now, 10 years ago, or ten years in the future, which practices we follow are not the issue. The waterfall process does, in fact, work in some situations, despite initial creation as an intentionally flawed <a href="http://en.wikipedia.org/wiki/Waterfall_model" title="Waterfall Model at Wikipedia">strawman argument</a>. Slamming code into an editor furiously, with no regard for change management, requirements elicitation, or even five minutes of up front planning also works in some situations.</p>
<div style="border: 1px solid #AAAAAA; float: right; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;"><img src="http://tiernok.com/trent/2004_01_19_20.gif" alt="More kitten" style="padding-bottom: 5px; max-width: 250px;" /></div>
<p>And hell, some of us even like exploring processes, practices, and all those other things. Think of it like coding against a quantum compiler that never returns the same result twice, and occasionally turns into a spherical chicken for no apparent reason. Because, you know, as if projects aren&#8217;t tricky enough, they keep staffing them with us developers, and we can complexify anything.</p>
<h2>Ok, but what about the Scrum Kool-aid&#8230;</h2>
<p>Ok, yes, any process can be implemented poorly. A few years ago people were saying the same thing about RUP, and before that&#8230;well, lets pretend there was no before that, we like reinventing things. </p>
<p>MVC is <a href="http://c2.com/cgi/wiki?ModelViewControllerHistory" title="More info on MVC">over 30 years old</a>. Scrum? <a href="http://scrum.jeffsutherland.com/2010/08/mike-beedle-on-early-history-of-scrum.html" title="Early history of scrum">Longer than you think</a>. Any guesses on when we started adding behavior to objects?</p>
<p>Scrum is a starting point, as are most of the defined flavors of Agile. If you previously did more complex processes, then Scrum is going to feel extremely lightweight. If you are used to &#8220;Adhoc&#8221; *cough cowboy* style processes, then Scrum will feel like more work. In either case you will probably feel some pain because Scrum (and even more so, Kanban) expose underlying issues that you didn&#8217;t have to see before.</p>
<h2>Ok, so what then?</h2>
<p>I won&#8217;t pretend to have all the answers, but what I can say is that mindlessly following any set of practices is going to upset people. Look, you hire a bunch of smart people, they&#8217;re going to question why they are doing certain things. If they think their time is being wasted, they&#8217;re going to get annoyed, then dissatisfied, and then new jobs (or a lengthy stay in the hospital, stress ain&#8217;t good for you people).</p>
<p>I personally don&#8217;t care for Scrum much, but it does provide a good starting point without too many rules. It is different enough that you will be less tempted to fall into your old ways (remember, we want to expose the bad stuff we don&#8217;t notice), it promotes following good practices (without telling us which ones they are), and it moves the team more towards a collaborative model that forces the developers to realize that everyone else is working hard too.</p>
<p>I&#8217;m a developer, I&#8217;m allowed to say things like that.</p>
<p>There are going to be things we dislike about any practice, and that&#8217;s going to be exacerbated if we are pressured to continue following those practices without buying-in. </p>
<blockquote><p>Disaffected programmers write poor code, and poor code makes management add more process in an attempt to &#8220;make&#8221; their programmers write good code. That just makes morale worse, and so on.</p></blockquote>
<p>Yep, totally agree, and I think a lot of people would be willing to volunteer my experience with similar issues over the years. I do tend to go on&#8230;.</p>
<h2>Right, you were solving this, weren&#8217;t you?</h2>
<p>So before I sidetracked, I was offering a solution. Probably one of the best practices I have learned in my career is the practice of continuous improvement, particularly <a href="http://en.wikipedia.org/wiki/PDCA" title="PDCA at Wikipedia">Deming&#8217;s Plan-Do-Check-Act</a> process.</p>
<div style="border: 1px solid #AAAAAA; float: right; font-size: 80%; color: #666666; text-align: center; padding: 8px; margin: 8px;"><img src="http://tiernok.com/trent/2004_02_17_25.jpg" alt="Yet More kitten" style="padding-bottom: 5px; max-width: 250px;" /></div>
<p>Evaluate something you think isn&#8217;t working, try an experiment, check how it went, deploy what worked to the wider company/group/etc. Rinse, Repeat.</p>
<p>And this is where transparency, communications, and a consistent, repeatable process come in. Scrum offers a good starting point, but so does RUP, CMMI, or even <i>whatever-is-next</i> process. Get it working consistently, then start customizing towards your company&#8217;s needs and skills.</p>
<p>Keep in mind, if you knew exactly what your end process was going to look like, you could just go ahead and implement that. You don&#8217;t. I often suggest if you&#8217;re using a defined practice, start without customizing too heavily. That way there&#8217;s already umpteen-billion books on the subject, training classes, a vocabulary, etc. Figure out the vanilla version, experiment and shape it from there.</p>
<p>Developers are people. Treat us like a cog and we will feel like a cog, engage us, we will be passionate.</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itprocesses/process-kills-developer-passion-and-kittens/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Be careful when passing around parameters, make sure they are the same size and type</title>
		<link>/index.php/datamgmt/datadesign/be-careful-when-passing-around/</link>
		<comments>/index.php/datamgmt/datadesign/be-careful-when-passing-around/#comments</comments>
		<pubDate>Fri, 08 Apr 2011 15:33:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[best practice]]></category>
		<category><![CDATA[data types]]></category>
		<category><![CDATA[gotcha]]></category>
		<category><![CDATA[pitfalls]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2011/04/be-careful-when-passing-around/</guid>
		<description><![CDATA[Someone tried to figure out why his data was showing the next day when he passed in today's date. If you are not careful to use the same data type and this includes scale and precision as well, you can get some strange results. In this post I will take&#8230;]]></description>
				<content:encoded><![CDATA[<p>Someone tried to figure out why his data was showing the next day when he passed in today&#8217;s date. If you are not careful to use the same data type and this includes scale and precision as well, you can get some strange results. In this post I will take a look at date, integer, varchar and decimal data types </p>
<p></p>
<h2>Dates</h2>
<p>When using dates make sure that you are using the same data type, don&#8217;t mix datetime and smalldatetime. If you do, you can get some unexpected results, let&#8217;s take a look</p>
<p>First create this table with a datetime column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestDatetime<span class="br0">&#40;</span>SomeDate <span class="kw1">DATETIME</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestDatetime(SomeDate DATETIME)
GO</pre></div></div>

<p>Now create this proc which accepts a smalldatetime</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestDatetime
@SomeDate <span class="kw1">SMALLDATETIME</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">INSERT</span> TestDatetime <span class="kw1">VALUES</span><span class="br0">&#40;</span>@SomeDate<span class="br0">&#41;</span>
&nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestDatetime
@SomeDate SMALLDATETIME
AS 

INSERT TestDatetime VALUES(@SomeDate)

GO</pre></div></div>

<p>Now call the procedure with the following value</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @d <span class="kw1">DATETIME</span>
<span class="kw1">SELECT</span> @d <span class="sy0">=</span> <span class="st0">'2011-04-04 23:59:59.000'</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestDatetime @d
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @d DATETIME
SELECT @d = '2011-04-04 23:59:59.000'


EXEC prTestDatetime @d
GO</pre></div></div>

<p>When you check the table now you will see that it has become the next day</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestDatetime</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestDatetime</pre></div></div>

<p>2011-04-05 00:00:00.000</p>
<p>The query below will illustrate the same problem</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @d <span class="kw1">DATETIME</span>
<span class="kw1">SELECT</span> @d <span class="sy0">=</span> <span class="st0">'2011-04-04 23:59:59.000'</span>
<span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATETIME</span>,@d<span class="br0">&#41;</span>, <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">SMALLDATETIME</span>,@d<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @d DATETIME
SELECT @d = '2011-04-04 23:59:59.000'
SELECT CONVERT(DATETIME,@d), CONVERT(SMALLDATETIME,@d)</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
2011-04-04 23:59:59.000	2011-04-05 00:00:00</p>
<p>What happens is because smalldatetime is accurate to 1 minute, it rounds up to the next hour and thus it becomes the next day<br />
Usually stuff like this happens where the table gets changed but someone forgot to also change the procedure, it could take a while until you catch a bug like this because unless you are passing in the last minute of the hour you won&#8217;t see it&#8230;however the fact that the seconds are all 00 should give it away<br />
</p>
<h2>Integer data type</h2>
<p>When dealing with integers, you are in luck because it will just blow up in your face</p>
<p>Create this stored procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestInt
@Someint <span class="kw1">smallint</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">SELECT</span> @Someint
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestInt
@Someint smallint
AS 

SELECT @Someint
GO</pre></div></div>

<p>Run it by passing in something that is greater than the small integer data type can hold</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @i <span class="kw1">int</span>
<span class="kw1">SELECT</span> @i <span class="sy0">=</span> <span class="nu0">99999</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestInt @i
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @i int
SELECT @i = 99999


EXEC prTestInt @i
GO</pre></div></div>

<p>And here is the error.</p>
<p><em>Msg 8114, Level 16, State 5, Procedure prTestInt, Line 0<br />
Error converting data type int to smallint.</em></p>
<p>This is a good thing, you will be able to catch this immediately. At least it doesn&#8217;t do a negative overflow like in some languages</p>
<p></p>
<h2>varchar, nvarchar, char and nchar</h2>
<p>varchar, nvarchar, char and nchar have a bunch of interesting inconsistencies, this can really bite you if you are not careful</p>
<p>Here is one example, create the following procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestVarchar
@Somevarchar <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">SELECT</span> @Somevarchar
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestVarchar
@Somevarchar varchar(3)
AS 

SELECT @Somevarchar
GO</pre></div></div>

<p>Now run it like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @v <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @v <span class="sy0">=</span> <span class="st0">'9999999999'</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestVarchar @v
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @v VARCHAR(10)
SELECT @v = '9999999999'


EXEC prTestVarchar @v
GO</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;<br />
999</p>
<p>Since you specified varchar(3), SQL Server trims everything over 3 bytes</p>
<p>What if you just use varchar?<br />
People coming from languages where you define something as a string usually make this mistake. Take a look at this: <a href="http://stackoverflow.com/questions/5559582/issue-inserting-text-into-table-from-c-proc-parameter/5559609#5559609">Issue inserting text into table from c# proc parameter</a></p>
<p>Create the following stored procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestVarchar2
@Somevarchar <span class="kw1">varchar</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">SELECT</span> @Somevarchar
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestVarchar2
@Somevarchar varchar
AS 

SELECT @Somevarchar
GO</pre></div></div>

<p>Run the proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @v <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @v <span class="sy0">=</span> <span class="st0">'9999999999'</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestVarchar2 @v
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @v VARCHAR(10)
SELECT @v = '9999999999'


EXEC prTestVarchar2 @v
GO</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8211;<br />
9</p>
<p>In this case SQL Server used a size of 1 since nothing was specified. However when you use varchar in a cast or convert function and you don&#8217;t specify a size, it will default to 30 characters</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span>,<span class="st0">'1111111111222222222233333333334'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CONVERT(VARCHAR,'1111111111222222222233333333334')</pre></div></div>

<p>111111111122222222223333333333</p>
<p>As you can see, the last character is not displayed<br />
Take also a look at this post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/always-include-size-when-using-varchar-n">Always include size when using varchar, nvarchar, char and nchar</a> by George Mastros and this post <a href="http://sqlblog.com/blogs/aaron_bertrand/archive/2009/10/09/bad-habits-to-kick-declaring-varchar-without-length.aspx">Bad habits to kick : declaring VARCHAR without (length)</a> by Aaron Bertrand for some more info</p>
<p></p>
<h2>Decimal/Numeric</h2>
<p>Decimal (or numeric) will round down or up if it can&#8217;t hold the whole value<br />
Take a look by running this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @d <span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="nu0">3</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @d2 <span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @d <span class="sy0">=</span> <span class="nu0">1.999</span>
&nbsp;
<span class="kw1">SELECT</span> @d2 <span class="sy0">=</span> @d
&nbsp;
<span class="kw1">SELECT</span> @d,@d2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @d DECIMAL(4,3)
DECLARE @d2 DECIMAL(4,2)
SELECT @d = 1.999

SELECT @d2 = @d

SELECT @d,@d2</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;&#8212;-<br />
1.999	2.00</p>
<p>As you can see 1.999 will round up to 2.00 if your scale is less than the number of digits passed in</p>
<p>If you have to do multiplication you have to be extra careful and have enough space to avoid rounding issues, I deal with this all the time because we have to show 10 digits for scale.</p>
<p>Decimal and numeric will default to (18,0) if you don&#8217;t specify anything when declaring them, see this post <a href="/index.php/DataMgmt/DataDesign/decimal-and-numeric-problems-when-you-do">Decimal and Numeric problems when you don&#8217;t specify precision and scale</a> by George Mastros for more info, no need for me to repeat the same.</p>
<h1>Conclusion</h1>
<p>Make sure that your data types or data type sizes are the same for variables/parameters and tables, if they are not, you might not notice the problem right away and it can be a real pain in the neck to make the change down the road</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/be-careful-when-passing-around/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>How To Name Default Constraints And How To Drop Default Constraint Without A Name In SQL Server</title>
		<link>/index.php/datamgmt/dbprogramming/how-to-name-default-constraints-and-how/</link>
		<comments>/index.php/datamgmt/dbprogramming/how-to-name-default-constraints-and-how/#comments</comments>
		<pubDate>Wed, 18 Feb 2009 15:14:30 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[best practice]]></category>
		<category><![CDATA[pitfall]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[tip]]></category>
		<category><![CDATA[trick]]></category>

		<guid isPermaLink="false">/index.php/2009/02/how-to-name-default-constraints-and-how/</guid>
		<description><![CDATA[Take a look at this code

create table Foo2(id int,
id2 int constraint DefaultID2 default 1)

As you can see it is a simple table with 2 columns, the second column has a constraint on it named DefaultID2.
We can verify that the table has a default&#8230;]]></description>
				<content:encoded><![CDATA[<p>Take a look at this code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> Foo2<span class="br0">&#40;</span>id <span class="kw1">int</span>,
id2 <span class="kw1">int</span> <span class="kw1">constraint</span> DefaultID2 <span class="kw1">default</span> <span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table Foo2(id int,
id2 int constraint DefaultID2 default 1)</pre></div></div>

<p>As you can see it is a simple table with 2 columns, the second column has a constraint on it named DefaultID2.<br />
We can verify that the table has a default on that column by writing something like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> column_default 
<span class="kw1">from</span> information_schema.<span class="me1">columns</span> 
<span class="kw1">where</span> table_name <span class="sy0">=</span> <span class="st0">'Foo2'</span> 
and column_name <span class="sy0">=</span> <span class="st0">'id2'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select column_default 
from information_schema.columns 
where table_name = 'Foo2' 
and column_name = 'id2'</pre></div></div>

<p>this is the output<br />
((1))</p>
<p>How can you get the default name?<br />
On version 7 and up run this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> s.<span class="me1">name</span> <span class="co1">--default name</span>
<span class="kw1">from</span> sysobjects s 
join syscolumns c <span class="kw1">on</span> s.<span class="me1">parent_obj</span> <span class="sy0">=</span> c.<span class="me1">id</span>
<span class="kw1">where</span> s.<span class="me1">xtype</span> <span class="sy0">=</span> <span class="st0">'d'</span>
and c.<span class="me1">cdefault</span> <span class="sy0">=</span> s.<span class="me1">id</span>
and parent_obj<span class="sy0">=</span> <span class="kw2">object_id</span><span class="br0">&#40;</span><span class="st0">'Foo2'</span><span class="br0">&#41;</span>
and c.<span class="me1">name</span> <span class="sy0">=</span><span class="st0">'id2'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select s.name --default name
from sysobjects s 
join syscolumns c on s.parent_obj = c.id
where s.xtype = 'd'
and c.cdefault = s.id
and parent_obj= object_id('Foo2')
and c.name ='id2'</pre></div></div>

<p>On 2005 and up run this(the previous code also runs on SQL Server 2005 and SQL Server 2008)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> s.<span class="me1">name</span> <span class="co1">--default name</span>
<span class="kw1">from</span> sys.<span class="me1">sysobjects</span> s 
join sys.<span class="me1">syscolumns</span> c <span class="kw1">on</span> s.<span class="me1">parent_obj</span> <span class="sy0">=</span> c.<span class="me1">id</span>
<span class="kw1">where</span> s.<span class="me1">xtype</span> <span class="sy0">=</span> <span class="st0">'d'</span>
and c.<span class="me1">cdefault</span> <span class="sy0">=</span> s.<span class="me1">id</span>
and parent_obj<span class="sy0">=</span> <span class="kw2">object_id</span><span class="br0">&#40;</span><span class="st0">'Foo2'</span><span class="br0">&#41;</span>
and c.<span class="me1">name</span> <span class="sy0">=</span><span class="st0">'id2'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select s.name --default name
from sys.sysobjects s 
join sys.syscolumns c on s.parent_obj = c.id
where s.xtype = 'd'
and c.cdefault = s.id
and parent_obj= object_id('Foo2')
and c.name ='id2'</pre></div></div>

<p>How do you drop such a constraint? Very easy you do this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">table</span> foo2 <span class="kw1">drop</span> DefaultID2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER table foo2 drop DefaultID2</pre></div></div>

<p>Now we will create a table with two default constraints and both of them will be created without a name when running the create table DDL</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> Foo<span class="br0">&#40;</span>id <span class="kw1">int</span> <span class="kw1">default</span> <span class="nu0">0</span>,
id2 <span class="kw1">int</span> <span class="kw1">default</span> <span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table Foo(id int default 0,
id2 int default 1)</pre></div></div>

<p>Now let&#8217;s see if the default is created</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> column_default 
<span class="kw1">from</span> information_schema.<span class="me1">columns</span> 
<span class="kw1">where</span> table_name <span class="sy0">=</span> <span class="st0">'Foo'</span> 
and column_name <span class="sy0">=</span> <span class="st0">'id2'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select column_default 
from information_schema.columns 
where table_name = 'Foo' 
and column_name = 'id2'</pre></div></div>

<p>This still returns this output<br />
((1))</p>
<p>All fine, now how can we drop the default for the id2 column on the Foo table?</p>
<p>Running this code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> s.<span class="me1">name</span> <span class="co1">--default name</span>
<span class="kw1">from</span> sys.<span class="me1">sysobjects</span> s 
join sys.<span class="me1">syscolumns</span> c <span class="kw1">on</span> s.<span class="me1">parent_obj</span> <span class="sy0">=</span> c.<span class="me1">id</span>
<span class="kw1">where</span> s.<span class="me1">xtype</span> <span class="sy0">=</span> <span class="st0">'d'</span>
and c.<span class="me1">cdefault</span> <span class="sy0">=</span> s.<span class="me1">id</span>
and parent_obj<span class="sy0">=</span> <span class="kw2">object_id</span><span class="br0">&#40;</span><span class="st0">'Foo'</span><span class="br0">&#41;</span>
and c.<span class="me1">name</span> <span class="sy0">=</span><span class="st0">'id2'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select s.name --default name
from sys.sysobjects s 
join sys.syscolumns c on s.parent_obj = c.id
where s.xtype = 'd'
and c.cdefault = s.id
and parent_obj= object_id('Foo')
and c.name ='id2'</pre></div></div>

<p>Will give use the default name, in this case it is DF__Foo__id2__7D439ABD<br />
So now we can drop the default by doing this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">table</span> foo2 <span class="kw1">drop</span> DF__Foo__id2__7D439ABD</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER table foo2 drop DF__Foo__id2__7D439ABD</pre></div></div>

<p>So what is the big deal you say?<br />
Let&#8217;s  say you do this on a staging box and want to create a script to hand over to someone else who will run it on the production box<br />
If you create you script on the staging box and the person runs it on production he will see something like this</p>
<p>erver: Msg 3733, Level 16, State 2, Line 1<br />
Constraint &#8216;DF__Foo__id2__7D439ABD&#8217; does not belong to table &#8216;foo2&#8217;.<br />
Server: Msg 3727, Level 16, State 1, Line 1<br />
Could not drop constraint. See previous errors.</p>
<p>Then you will get a call that your script is broken, you will tell him that it works on staging. In the end you will have to do something like this so that it can run on any server as long as the table and column name are the same</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="de1"><pre class="de1"><span class="kw1">declare</span> @<span class="kw1">default</span> sysname
<span class="kw1">declare</span> @tableName sysname
<span class="kw1">declare</span> @columnname sysname
&nbsp;
<span class="kw1">select</span> @tableName &nbsp;<span class="sy0">=</span> <span class="st0">'Foo'</span> <span class="co1">--table name</span>
<span class="kw1">select</span> @columnname <span class="sy0">=</span> <span class="st0">'id2'</span> <span class="co1">--column name</span>
&nbsp;
<span class="co1">--check for SQL Server Version</span>
<span class="kw1">if</span> <span class="kw1">coalesce</span><span class="br0">&#40;</span><span class="kw2">parsename</span><span class="br0">&#40;</span><span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>,<span class="kw2">SERVERPROPERTY</span> <span class="br0">&#40;</span> <span class="st0">'ProductVersion'</span> <span class="br0">&#41;</span><span class="br0">&#41;</span>,<span class="nu0">4</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; <span class="kw2">parsename</span><span class="br0">&#40;</span><span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>,<span class="kw2">SERVERPROPERTY</span> <span class="br0">&#40;</span> <span class="st0">'ProductVersion'</span> <span class="br0">&#41;</span><span class="br0">&#41;</span>,<span class="nu0">3</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">8</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">select</span> @<span class="kw1">default</span><span class="sy0">=</span> s.<span class="me1">name</span> <span class="co1">--default name</span>
&nbsp; &nbsp; <span class="kw1">from</span> sysobjects s 
&nbsp; &nbsp; join syscolumns c <span class="kw1">on</span> s.<span class="me1">parent_obj</span> <span class="sy0">=</span> c.<span class="me1">id</span>
&nbsp; &nbsp; <span class="kw1">where</span> s.<span class="me1">xtype</span> <span class="sy0">=</span> <span class="st0">'d'</span>
&nbsp; &nbsp; and c.<span class="me1">cdefault</span> <span class="sy0">=</span> s.<span class="me1">id</span>
&nbsp; &nbsp; and parent_obj<span class="sy0">=</span> <span class="kw2">object_id</span><span class="br0">&#40;</span>@tableName<span class="br0">&#41;</span>
&nbsp; &nbsp; and c.<span class="me1">name</span> <span class="sy0">=</span>@columnname
&nbsp;
<span class="kw1">else</span>
&nbsp;
&nbsp; &nbsp; <span class="kw1">select</span> @<span class="kw1">default</span><span class="sy0">=</span> s.<span class="me1">name</span> <span class="co1">--default name</span>
&nbsp; &nbsp; <span class="kw1">from</span> sys.<span class="me1">sysobjects</span> s 
&nbsp; &nbsp; join sys.<span class="me1">syscolumns</span> c <span class="kw1">on</span> s.<span class="me1">parent_obj</span> <span class="sy0">=</span> c.<span class="me1">id</span>
&nbsp; &nbsp; <span class="kw1">where</span> s.<span class="me1">xtype</span> <span class="sy0">=</span> <span class="st0">'d'</span>
&nbsp; &nbsp; and c.<span class="me1">cdefault</span> <span class="sy0">=</span> s.<span class="me1">id</span>
&nbsp; &nbsp; and parent_obj<span class="sy0">=</span> <span class="kw2">object_id</span><span class="br0">&#40;</span>@tableName<span class="br0">&#41;</span>
&nbsp; &nbsp; and c.<span class="me1">name</span> <span class="sy0">=</span>@columnname
&nbsp;
&nbsp;
&nbsp;
<span class="co1">--test first</span>
<span class="kw1">print</span><span class="br0">&#40;</span> <span class="st0">'alter table '</span> <span class="sy0">+</span> @tableName <span class="sy0">+</span><span class="st0">' drop &nbsp;'</span> <span class="sy0">+</span> @<span class="kw1">default</span> <span class="br0">&#41;</span>
<span class="co1">--exec ( 'alter table ' + @tableName +' drop &nbsp;' + @default )</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">declare @default sysname
declare @tableName sysname
declare @columnname sysname

select @tableName  = 'Foo' --table name
select @columnname = 'id2' --column name

--check for SQL Server Version
if coalesce(parsename(convert(varchar(50),SERVERPROPERTY ( 'ProductVersion' )),4),
	parsename(convert(varchar(50),SERVERPROPERTY ( 'ProductVersion' )),3)) &gt; 8

	select @default= s.name --default name
	from sysobjects s 
	join syscolumns c on s.parent_obj = c.id
	where s.xtype = 'd'
	and c.cdefault = s.id
	and parent_obj= object_id(@tableName)
	and c.name =@columnname

else

	select @default= s.name --default name
	from sys.sysobjects s 
	join sys.syscolumns c on s.parent_obj = c.id
	where s.xtype = 'd'
	and c.cdefault = s.id
	and parent_obj= object_id(@tableName)
	and c.name =@columnname



--test first
print( 'alter table ' + @tableName +' drop  ' + @default )
--exec ( 'alter table ' + @tableName +' drop  ' + @default )</pre></div></div>

<p>I commented out the exec and put print instead so that you can see what would get executed</p>
<p>A best practice is always to name your constraint because it will save you a lot of headaches down the road</p>
<p></p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/how-to-name-default-constraints-and-how/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Site is no more after they discover they did not have SQL Server backups</title>
		<link>/index.php/datamgmt/datadesign/site-is-no-more-after-they-discover-they/</link>
		<comments>/index.php/datamgmt/datadesign/site-is-no-more-after-they-discover-they/#comments</comments>
		<pubDate>Sun, 04 Jan 2009 11:31:37 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[availability]]></category>
		<category><![CDATA[backups]]></category>
		<category><![CDATA[best practice]]></category>
		<category><![CDATA[recovery]]></category>

		<guid isPermaLink="false">/index.php/2009/01/site-is-no-more-after-they-discover-they/</guid>
		<description><![CDATA[Oops, that sucks Journalspace is no more. Here is what they have said about this on their blog It was the guy handling the IT (and, yes, the same guy who I caught stealing from the company, and who did a slash-and-burn on some servers on his way out) who made the choice to rely [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Oops, that sucks <a href="http://journalspace.com/this_is_the_way_the_world_ends/not_with_a_bang_but_a_whimper.html">Journalspace</a> is no more.<br />
Here is what they have said about this on their <a href="http://journalspace.com/blog/">blog</a></p>
<blockquote><p>It was the guy handling the IT (and, yes, the same guy who I caught stealing from the company, and who did a slash-and-burn on some servers on his way out) who made the choice to rely on RAID as the only backup mechanism for the SQL server. He had set up automated backups for the HTTP server which contains the PHP code, but, inscrutibly, had no backup system in place for the SQL data. The ironic thing here is that one of his hobbies was telling everybody how smart he was.</p>
<p>This doesn&#8217;t excuse what happened, though: I should have taken a better look at what he&#8217;d left behind, and fixed all of the things that needed fixing.</p></blockquote>
<p>That is just bizarre, to set up backups is one of the easiest things to do in SQL Server and should also be one of the first things you do. You also have to make sure that you test these backups because if you can&#8217;t recover from them then you do NOT have backups<br />
Another thing that you should be aware of is that the backup should never ever be in the same location as your server. It should be stored in another location preferably at least 50 miles from the original location. We had our servers in WTC building one and the backups in WTC building 2, you already know how that ended&#8230;&#8230;..</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/site-is-no-more-after-they-discover-they/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
	</channel>
</rss>
