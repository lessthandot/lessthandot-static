<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>pitfalls &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/pitfalls/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Raise your hand if you have seen code that sends email from within a trigger in SQL Server</title>
		<link>/index.php/datamgmt/datadesign/raise-your-hand-if-you/</link>
		<comments>/index.php/datamgmt/datadesign/raise-your-hand-if-you/#comments</comments>
		<pubDate>Wed, 11 May 2011 11:19:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[mail]]></category>
		<category><![CDATA[pitfalls]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[triggers]]></category>

		<guid isPermaLink="false">/index.php/2011/05/raise-your-hand-if-you/</guid>
		<description><![CDATA[Please leave me a comment if you have written or have seen a trigger that is written in such a way that it will send an email when a value changes in a table.

I am looking at the following question: Email trigger when data is changed

ALTER TRIGGER&#8230;]]></description>
				<content:encoded><![CDATA[<p>Please leave me a comment if you have written or have seen a trigger that is written in such a way that it will send an email when a value changes in a table.</p>
<p>I am looking at the following question: <a href="http://stackoverflow.com/questions/5964495/email-trigger-when-data-is-changed">Email trigger when data is changed</a></p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TRIGGER</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>RVABestellingenAantalWijzigenTrigger<span class="br0">&#93;</span>
<span class="kw1">ON</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>RVA_Bestellingen<span class="br0">&#93;</span> &nbsp;
<span class="kw1">AFTER</span> <span class="kw1">UPDATE</span>
<span class="kw1">AS</span>
<span class="co1">--Vars</span>
<span class="kw1">DECLARE</span> @body <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @BestellingID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @CategorieID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @SubCategorieID <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @AantalOrigineel <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @AantalNieuw <span class="kw1">int</span>
<span class="kw1">DECLARE</span> @LocatieNaam <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @ComponentNaam <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @CategorieNaam <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @SubCategorieNaam <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @Datum <span class="kw1">datetime</span>
&nbsp;
<span class="kw1">if</span> <span class="kw1">update</span><span class="br0">&#40;</span>Aantal<span class="br0">&#41;</span> <span class="coMULTI">/*and (SELECT Datum FROM inserted) = cast(floor(cast(dateadd(day,1,getdate()) as float)) as datetime) &nbsp;*/</span> and &nbsp; <span class="br0">&#40;</span><span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">varchar</span>,<span class="kw2">getdate</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,<span class="nu0">108</span><span class="br0">&#41;</span><span class="sy0">&gt;</span><span class="st0">'11:00'</span><span class="br0">&#41;</span>
<span class="kw1">begin</span>
&nbsp;
&nbsp; &nbsp; <span class="co1">--Zetten aantallen</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @AantalOrigineel &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> Aantal <span class="kw1">FROM</span> deleted<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @AantalNieuw &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> Aantal <span class="kw1">FROM</span> inserted<span class="br0">&#41;</span> 
&nbsp; &nbsp; <span class="kw1">SET</span> @BestellingID &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> BestellingID <span class="kw1">FROM</span> inserted<span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @CategorieID &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> CategorieID <span class="kw1">FROM</span> inserted<span class="br0">&#41;</span> &nbsp; &nbsp;
&nbsp; &nbsp; <span class="kw1">SET</span> @SubCategorieID &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> SubCategorieID <span class="kw1">FROM</span> inserted<span class="br0">&#41;</span> 
&nbsp;
&nbsp; &nbsp; <span class="co1">--Zetten locatienaam en componentnaam</span>
&nbsp; &nbsp; <span class="kw1">SELECT</span> @LocatieNaam <span class="sy0">=</span> <span class="br0">&#40;</span><span class="st0">'RVA Aanpassingen Locatie: '</span><span class="sy0">+</span>LocatieNaam<span class="br0">&#41;</span>, @ComponentNaam<span class="sy0">=</span>OfficieleNaam, @Datum<span class="sy0">=</span>Datum
&nbsp; &nbsp; <span class="kw1">FROM</span> RVA_Bestellingen r
&nbsp; &nbsp; <span class="kw1">LEFT</span> <span class="sy0">OUTER</span> <span class="sy0">JOIN</span> Locaties l <span class="kw1">on</span> l.<span class="me1">LocatieID</span> <span class="sy0">=</span> r.<span class="me1">LocatieID</span>
&nbsp; &nbsp; <span class="kw1">LEFT</span> <span class="sy0">OUTER</span> <span class="sy0">JOIN</span> Componenten c <span class="kw1">on</span> c.<span class="me1">ComponentID</span> <span class="sy0">=</span> r.<span class="me1">ComponentID</span>
&nbsp; &nbsp; <span class="kw1">WHERE</span> r.<span class="me1">BestellingID</span> <span class="sy0">=</span> @BestellingID &nbsp; &nbsp;
&nbsp;
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @CategorieNaam <span class="sy0">=</span> Categorie
&nbsp; &nbsp; <span class="kw1">FROM</span> RVA_HoofdCategorie
&nbsp; &nbsp; <span class="kw1">WHERE</span> HoofdCategorieID <span class="sy0">=</span> @CategorieID &nbsp; 
&nbsp;
&nbsp; &nbsp; <span class="kw1">SELECT</span> @SubCategorieNaam <span class="sy0">=</span> Categorie
&nbsp; &nbsp; <span class="kw1">FROM</span> dbo.<span class="me1">RVA_SubCategorie</span>
&nbsp; &nbsp; <span class="kw1">WHERE</span> SubCategorieID <span class="sy0">=</span> @SubCategorieID &nbsp; &nbsp; &nbsp;
&nbsp;
&nbsp; &nbsp; <span class="co1">--Zet boyd</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @body <span class="sy0">=</span> <span class="br0">&#40;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">SELECT</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'HoofdCategorie: '</span> <span class="sy0">+</span> @CategorieNaam<span class="sy0">+</span> <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span><span class="st0">'SubCategorie: '</span> <span class="sy0">+</span> @SubCategorieNaam<span class="sy0">+</span> <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="st0">'Componentnaam: '</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> @ComponentNaam <span class="sy0">+</span> <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="st0">'Origineel aantal: '</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="kw1">CAST</span><span class="br0">&#40;</span>@AantalOrigineel <span class="kw1">as</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="sy0">+</span> <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="st0">'Nieuw aantal: '</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="kw1">CAST</span><span class="br0">&#40;</span>@AantalNieuw <span class="kw1">as</span> <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="sy0">+</span> <span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="kw1">char</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="st0">'Leverdatum: '</span> <span class="sy0">+</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> <span class="kw1">convert</span><span class="br0">&#40;</span><span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">50</span><span class="br0">&#41;</span>,@Datum,<span class="nu0">105</span><span class="br0">&#41;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span>
&nbsp;
&nbsp; &nbsp; <span class="co1">--Mailen naar Adeline</span>
&nbsp; &nbsp; &nbsp;<span class="kw1">EXEC</span> master..<span class="kw3">xp_sendmail</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @recipients <span class="sy0">=</span> <span class="st0">'fake@fake.fake'</span>, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @message &nbsp; &nbsp;<span class="sy0">=</span> @body, 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @subject &nbsp; &nbsp;<span class="sy0">=</span> @LocatieNaam
<span class="kw1">end</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TRIGGER [dbo].[RVABestellingenAantalWijzigenTrigger]
ON [dbo].[RVA_Bestellingen]  
AFTER UPDATE
AS
--Vars
DECLARE @body varchar(500)
DECLARE @BestellingID int
DECLARE @CategorieID int
DECLARE @SubCategorieID int
DECLARE @AantalOrigineel int
DECLARE @AantalNieuw int
DECLARE @LocatieNaam varchar(255)
DECLARE @ComponentNaam varchar(255)
DECLARE @CategorieNaam varchar(255)
DECLARE @SubCategorieNaam varchar(255)
DECLARE @Datum datetime

if update(Aantal) /*and (SELECT Datum FROM inserted) = cast(floor(cast(dateadd(day,1,getdate()) as float)) as datetime)  */ and   (convert(varchar,getdate(),108)&gt;'11:00')
begin

    --Zetten aantallen
    SET @AantalOrigineel            = (SELECT Aantal FROM deleted)
    SET @AantalNieuw                = (SELECT Aantal FROM inserted) 
    SET @BestellingID               = (SELECT BestellingID FROM inserted)
    SET @CategorieID                = (SELECT CategorieID FROM inserted)    
    SET @SubCategorieID             = (SELECT SubCategorieID FROM inserted) 

    --Zetten locatienaam en componentnaam
    SELECT @LocatieNaam = ('RVA Aanpassingen Locatie: '+LocatieNaam), @ComponentNaam=OfficieleNaam, @Datum=Datum
    FROM RVA_Bestellingen r
    LEFT OUTER JOIN Locaties l on l.LocatieID = r.LocatieID
    LEFT OUTER JOIN Componenten c on c.ComponentID = r.ComponentID
    WHERE r.BestellingID = @BestellingID    


    SELECT @CategorieNaam = Categorie
    FROM RVA_HoofdCategorie
    WHERE HoofdCategorieID = @CategorieID   

    SELECT @SubCategorieNaam = Categorie
    FROM dbo.RVA_SubCategorie
    WHERE SubCategorieID = @SubCategorieID      

    --Zet boyd
    SET @body = (
                    SELECT 
                        'HoofdCategorie: ' + @CategorieNaam+ char(10)+char(13)
                        +'SubCategorie: ' + @SubCategorieNaam+ char(10)+char(13)
                        + 'Componentnaam: '
                        + @ComponentNaam + char(10)+char(13)
                        + 'Origineel aantal: '
                        + CAST(@AantalOrigineel as varchar(50) ) + char(10)+char(13)
                        + 'Nieuw aantal: '
                        + CAST(@AantalNieuw as varchar(50) ) + char(10)+char(13)
                        + 'Leverdatum: ' +
                        + convert(varchar(50),@Datum,105)                       
                )

    --Mailen naar Adeline
     EXEC master..xp_sendmail 
            @recipients = 'fake@fake.fake', 
            @message    = @body, 
            @subject    = @LocatieNaam
end</pre></div></div>

<p>And I am just shaking my head, for one it doesn&#8217;t take into account muliple rows being updated, see <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/best-practice-coding-sql-server-triggers">Best Practice: Coding SQL Server triggers for multi-row operations</a> for more on that topic</p>
<p>The second bad thing is of course that you want your trigger to complete as fast as possible, you don&#8217;t want it to email a bunch of people. What if the email blows up?<br />
Ideally you would write a query inside the trigger that dumps the desired results into another table, then you would have a job that checks that table every minute or so and does the emailing.</p>
<p>Now I admit, I have written a trigger in the past that emailed when something got inserted, this was a table that would interact with Great <del>Pains</del> Plains. Once we decided to insert nine thousand rows as a stress test from a batch, and yes we brought down the whole exchange server, the email went out to I believe 20 people, this was the time of 3 MB inboxes  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Lastly this person is on SQL Server 2008 and is still using xp_sendmail and not sp_send_dbmail</p>
<p>Enough ranting, leave me a comment if you do send emails from withing triggers. If you do so, did you ever have any problems with it?</p>
<p>*** <strong>If you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/raise-your-hand-if-you/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
		</item>
		<item>
		<title>Match your defaults with your trigger values to prevent horrible fragmentation on your indexes and tables</title>
		<link>/index.php/datamgmt/datadesign/match-your-defaults-with-your/</link>
		<comments>/index.php/datamgmt/datadesign/match-your-defaults-with-your/#comments</comments>
		<pubDate>Fri, 06 May 2011 13:47:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[pitfalls]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[triggers]]></category>

		<guid isPermaLink="false">/index.php/2011/05/match-your-defaults-with-your/</guid>
		<description><![CDATA[Here is a quick demonstration that shows you what can happen when you use defaults that are much shorter than the value that is updated from an insert trigger. The ModifiedBy  column has a default of '' but in the trigger it gets updated to 'Someapplica&#8230;]]></description>
				<content:encoded><![CDATA[<p>Here is a quick demonstration that shows you what can happen when you use defaults that are much shorter than the value that is updated from an insert trigger. The ModifiedBy  column has a default of &#8221; but in the trigger it gets updated to &#8216;SomeapplicationName used by &#8216; +SUSER_NAME(). Ideally you want the default to also be &#8216;SomeapplicationName used by &#8216; +SUSER_NAME()</p>
<p>Let&#8217;s take a look, first create the following table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestFrag <span class="br0">&#40;</span>
&nbsp; &nbsp; id <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> <span class="kw1">IDENTITY</span> <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span>, 
&nbsp; &nbsp; SomeData <span class="kw1">UNIQUEIDENTIFIER</span> <span class="kw1">DEFAULT</span> newsequentialid<span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; Somedate <span class="kw1">datetime</span> <span class="kw1">DEFAULT</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; SomeOtherData <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">200</span><span class="br0">&#41;</span> <span class="kw1">DEFAULT</span> <span class="st0">'bla'</span>,
&nbsp; &nbsp; ModifiedBy <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="kw1">DEFAULT</span> <span class="st0">''</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestFrag (
	id INT NOT NULL IDENTITY PRIMARY KEY, 
	SomeData UNIQUEIDENTIFIER DEFAULT newsequentialid(),
	Somedate datetime DEFAULT GETDATE(),
	SomeOtherData CHAR(200) DEFAULT 'bla',
	ModifiedBy varchar(100) DEFAULT '')</pre></div></div>

<p>Add a trigger on that table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Tr_TestFrag<span class="br0">&#93;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>TestFrag<span class="br0">&#93;</span> <span class="kw1">FOR</span> <span class="kw1">Insert</span> 
<span class="kw1">AS</span>
<span class="kw1">UPDATE</span> t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">SET</span> &nbsp; &nbsp;ModifiedBy <span class="sy0">=</span> <span class="st0">'SomeapplicationName used by '</span> <span class="sy0">+</span>SUSER_NAME<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">FROM</span> &nbsp; TestFrag t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> inserted i <span class="kw1">ON</span> t.<span class="me1">id</span> <span class="sy0">=</span> i.<span class="me1">id</span>
&nbsp; &nbsp; &nbsp; &nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TRIGGER [dbo].[Tr_TestFrag] ON [dbo].[TestFrag] FOR Insert 
AS
UPDATE t
        SET    ModifiedBy = 'SomeapplicationName used by ' +SUSER_NAME()
        FROM   TestFrag t
        JOIN inserted i ON t.id = i.id
       
GO</pre></div></div>

<p>Now add another identical table, the only difference is that the default matches what gets updated from within the trigger</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestFrag2 <span class="br0">&#40;</span>
&nbsp; &nbsp; id <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> <span class="kw1">IDENTITY</span> <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span>, 
&nbsp; &nbsp; SomeData <span class="kw1">UNIQUEIDENTIFIER</span> <span class="kw1">DEFAULT</span> newsequentialid<span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; Somedate <span class="kw1">datetime</span> <span class="kw1">DEFAULT</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,
&nbsp; &nbsp; SomeOtherData <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">200</span><span class="br0">&#41;</span> <span class="kw1">DEFAULT</span> <span class="st0">'bla'</span>,
&nbsp; &nbsp; ModifiedBy <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span> <span class="kw1">DEFAULT</span> <span class="st0">'SomeapplicationName used by '</span> <span class="sy0">+</span>SUSER_NAME<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestFrag2 (
	id INT NOT NULL IDENTITY PRIMARY KEY, 
	SomeData UNIQUEIDENTIFIER DEFAULT newsequentialid(),
	Somedate datetime DEFAULT GETDATE(),
	SomeOtherData CHAR(200) DEFAULT 'bla',
	ModifiedBy varchar(100) DEFAULT 'SomeapplicationName used by ' +SUSER_NAME())</pre></div></div>

<p>Here is the other trigger</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TRIGGER</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Tr_TestFrag2<span class="br0">&#93;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>TestFrag2<span class="br0">&#93;</span> <span class="kw1">FOR</span> <span class="kw1">Insert</span> 
<span class="kw1">AS</span>
<span class="kw1">UPDATE</span> t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">SET</span> &nbsp; &nbsp;ModifiedBy <span class="sy0">=</span> <span class="st0">'SomeapplicationName used by '</span> <span class="sy0">+</span>SUSER_NAME<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">FROM</span> &nbsp; TestFrag2 t
&nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">JOIN</span> inserted i <span class="kw1">ON</span> t.<span class="me1">id</span> <span class="sy0">=</span> i.<span class="me1">id</span>
&nbsp; &nbsp; &nbsp; &nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TRIGGER [dbo].[Tr_TestFrag2] ON [dbo].[TestFrag2] FOR Insert 
AS
UPDATE t
        SET    ModifiedBy = 'SomeapplicationName used by ' +SUSER_NAME()
        FROM   TestFrag2 t
        JOIN inserted i ON t.id = i.id
       
GO</pre></div></div>

<p>Now let&#8217;s pump 100000 rows into both tables</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestFrag<span class="br0">&#40;</span>Somedate<span class="br0">&#41;</span>
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">100000</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
<span class="kw1">FROM</span> sysobjects s1
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sysobjects s2
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sysobjects s3</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestFrag(Somedate)
SELECT TOP 100000 GETDATE() 
FROM sysobjects s1
CROSS JOIN sysobjects s2
CROSS JOIN sysobjects s3</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestFrag2<span class="br0">&#40;</span>Somedate<span class="br0">&#41;</span>
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">100000</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
<span class="kw1">FROM</span> sysobjects s1
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sysobjects s2
<span class="sy0">CROSS</span> <span class="sy0">JOIN</span> sysobjects s3</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestFrag2(Somedate)
SELECT TOP 100000 GETDATE() 
FROM sysobjects s1
CROSS JOIN sysobjects s2
CROSS JOIN sysobjects s3</pre></div></div>

<p>Run this to just verify that we have the same data</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestFrag
<span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">10</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestFrag2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 10 * FROM TestFrag
SELECT TOP 10 * FROM TestFrag2</pre></div></div>

<p>Now let&#8217;s look how much space each table is using</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">EXEC</span> <span class="kw3">sp_spaceused</span> <span class="st0">'TestFrag'</span>
<span class="kw1">EXEC</span> <span class="kw3">sp_spaceused</span> <span class="st0">'TestFrag2'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">EXEC sp_spaceused 'TestFrag'
EXEC sp_spaceused 'TestFrag2'</pre></div></div>

<p></p>
<pre>name		rows		reserved	data		index_size	unused
TestFrag	100000     	47240 KB	47064 KB	104 KB		72 KB
TestFrag2	100000     	28744 KB	28576 KB	112 KB		56 KB</pre>
<p>
See that, the table with the same default as in the trigger is using a lot less data?</p>
<p>Now let&#8217;s see how bad the fragmentation is. Here is the 2005 and up version</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;
&nbsp; &nbsp; <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>i.<span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span> <span class="kw1">AS</span> TableName
&nbsp; &nbsp; ,indexstats.<span class="me1">index_id</span>
&nbsp; &nbsp; ,index_type_desc
&nbsp; &nbsp; ,avg_fragmentation_in_percent
&nbsp; &nbsp; ,page_count
&nbsp; &nbsp; ,record_count
&nbsp; &nbsp; ,fill_factor
<span class="kw1">FROM</span> &nbsp; &nbsp;
sys.<span class="me1">dm_db_index_physical_stats</span><span class="br0">&#40;</span><span class="kw2">DB_ID</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="sy0">NULL</span>, <span class="st0">'DETAILED'</span><span class="br0">&#41;</span> indexstats
<span class="kw1">INNER</span> <span class="sy0">JOIN</span> sys.<span class="me1">indexes</span> i <span class="kw1">ON</span> i.<span class="kw2">OBJECT_ID</span> <span class="sy0">=</span> indexstats.<span class="kw2">OBJECT_ID</span>
<span class="sy0">AND</span> i.<span class="me1">index_id</span> <span class="sy0">=</span> indexstats.<span class="me1">index_id</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>i.<span class="kw2">OBJECT_ID</span><span class="br0">&#41;</span> in <span class="br0">&#40;</span><span class="st0">'TestFrag'</span>,<span class="st0">'TestFrag2'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  
    OBJECT_NAME(i.OBJECT_ID) AS TableName
    ,indexstats.index_id
    ,index_type_desc
    ,avg_fragmentation_in_percent
    ,page_count
    ,record_count
    ,fill_factor
FROM    
sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, 'DETAILED') indexstats
INNER JOIN sys.indexes i ON i.OBJECT_ID = indexstats.OBJECT_ID
AND i.index_id = indexstats.index_id
WHERE OBJECT_NAME(i.OBJECT_ID) in ('TestFrag','TestFrag2')</pre></div></div>

<p></p>
<div class="tables">
<table>
<tr>
<th>TableName</th>
<th>	index_id</th>
<th>	index_type_desc	</th>
<th>avg_fragmentation_in_percent</th>
<th>	page_count</th>
<th>	record_count</th>
<th>	fill_factor</th>
</tr>
<tr>
<td>TestFrag</td>
<td>1</td>
<td>CLUSTERED INDEX</td>
<td>99.422063573007</td>
<td>	5883</td>
<td>	100000</td>
<td>	0</td>
</tr>
<tr>
<td>TestFrag</td>
<td>1</td>
<td>CLUSTERED INDEX</td>
<td>0</td>
<td>	11</td>
<td>	5883</td>
<td>	0</td>
</tr>
<tr>
<td>TestFrag</td>
<td>1</td>
<td>CLUSTERED INDEX</td>
<td>0</td>
<td>	1</td>
<td>	11</td>
<td>	0</td>
</tr>
<tr>
<td>TestFrag2</td>
<td>1</td>
<td>CLUSTERED INDEX</td>
<td>0.335946248600224</td>
<td>	3572</td>
<td>	100000</td>
<td>	0</td>
</tr>
<tr>
<td>TestFrag2</td>
<td>1</td>
<td>CLUSTERED INDEX</td>
<td>0</td>
<td>	12</td>
<td>	3572</td>
<td>	0</td>
</tr>
<tr>
<td>TestFrag2</td>
<td>1</td>
<td>CLUSTERED INDEX</td>
<td>0</td>
<td>	1</td>
<td>	12</td>
<td>	0</td>
</tr>
</table>
</div>
<p>Yikes, do you see that, one table is completely fragmented.</p>
<p>Here is the 2000 version by using showcontig</p>
<pre>DBCC SHOWCONTIG scanning 'TestFrag' table...
Table: 'TestFrag' (933578364); index ID: 1, database ID: 14
TABLE level scan performed.
- Pages Scanned................................: &lt;strong&gt;5883&lt;/strong&gt;
- Extents Scanned..............................: 738
- Extent Switches..............................: 5879
- Avg. Pages per Extent........................: 8.0
- Scan Density [Best Count:Actual Count].......: 12.52% [736:5880]
- Logical Scan Fragmentation ..................: &lt;strong&gt;99.42%&lt;/strong&gt;
- Extent Scan Fragmentation ...................: 0.27%
- Avg. Bytes Free per Page.....................: &lt;strong&gt;3234.5&lt;/strong&gt;
- Avg. Page Density (full).....................: 60.04%
DBCC execution completed. If DBCC printed error messages, contact your system administrator.


DBCC SHOWCONTIG scanning 'TestFrag2' table...
Table: 'TestFrag2' (1205579333); index ID: 1, database ID: 14
TABLE level scan performed.
- Pages Scanned................................: &lt;strong&gt;3572&lt;/strong&gt;
- Extents Scanned..............................: 450
- Extent Switches..............................: 449
- Avg. Pages per Extent........................: 7.9
- Scan Density [Best Count:Actual Count].......: 99.33% [447:450]
- Logical Scan Fragmentation ..................: &lt;strong&gt;0.34%&lt;/strong&gt;
- Extent Scan Fragmentation ...................: 0.44%
- Avg. Bytes Free per Page.....................: &lt;strong&gt;89.3&lt;/strong&gt;
- Avg. Page Density (full).....................: 98.90%
DBCC execution completed. If DBCC printed error messages, contact your system administrator.</pre>
<p>As you can see you will get horrible page splits if your trigger expands the row every time an insert happens.</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/match-your-defaults-with-your/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Be careful when passing around parameters, make sure they are the same size and type</title>
		<link>/index.php/datamgmt/datadesign/be-careful-when-passing-around/</link>
		<comments>/index.php/datamgmt/datadesign/be-careful-when-passing-around/#comments</comments>
		<pubDate>Fri, 08 Apr 2011 15:33:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[best practice]]></category>
		<category><![CDATA[data types]]></category>
		<category><![CDATA[gotcha]]></category>
		<category><![CDATA[pitfalls]]></category>
		<category><![CDATA[sql server]]></category>

		<guid isPermaLink="false">/index.php/2011/04/be-careful-when-passing-around/</guid>
		<description><![CDATA[Someone tried to figure out why his data was showing the next day when he passed in today's date. If you are not careful to use the same data type and this includes scale and precision as well, you can get some strange results. In this post I will take&#8230;]]></description>
				<content:encoded><![CDATA[<p>Someone tried to figure out why his data was showing the next day when he passed in today&#8217;s date. If you are not careful to use the same data type and this includes scale and precision as well, you can get some strange results. In this post I will take a look at date, integer, varchar and decimal data types </p>
<p></p>
<h2>Dates</h2>
<p>When using dates make sure that you are using the same data type, don&#8217;t mix datetime and smalldatetime. If you do, you can get some unexpected results, let&#8217;s take a look</p>
<p>First create this table with a datetime column</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestDatetime<span class="br0">&#40;</span>SomeDate <span class="kw1">DATETIME</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestDatetime(SomeDate DATETIME)
GO</pre></div></div>

<p>Now create this proc which accepts a smalldatetime</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestDatetime
@SomeDate <span class="kw1">SMALLDATETIME</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">INSERT</span> TestDatetime <span class="kw1">VALUES</span><span class="br0">&#40;</span>@SomeDate<span class="br0">&#41;</span>
&nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestDatetime
@SomeDate SMALLDATETIME
AS 

INSERT TestDatetime VALUES(@SomeDate)

GO</pre></div></div>

<p>Now call the procedure with the following value</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @d <span class="kw1">DATETIME</span>
<span class="kw1">SELECT</span> @d <span class="sy0">=</span> <span class="st0">'2011-04-04 23:59:59.000'</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestDatetime @d
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @d DATETIME
SELECT @d = '2011-04-04 23:59:59.000'


EXEC prTestDatetime @d
GO</pre></div></div>

<p>When you check the table now you will see that it has become the next day</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestDatetime</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestDatetime</pre></div></div>

<p>2011-04-05 00:00:00.000</p>
<p>The query below will illustrate the same problem</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @d <span class="kw1">DATETIME</span>
<span class="kw1">SELECT</span> @d <span class="sy0">=</span> <span class="st0">'2011-04-04 23:59:59.000'</span>
<span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">DATETIME</span>,@d<span class="br0">&#41;</span>, <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">SMALLDATETIME</span>,@d<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @d DATETIME
SELECT @d = '2011-04-04 23:59:59.000'
SELECT CONVERT(DATETIME,@d), CONVERT(SMALLDATETIME,@d)</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
2011-04-04 23:59:59.000	2011-04-05 00:00:00</p>
<p>What happens is because smalldatetime is accurate to 1 minute, it rounds up to the next hour and thus it becomes the next day<br />
Usually stuff like this happens where the table gets changed but someone forgot to also change the procedure, it could take a while until you catch a bug like this because unless you are passing in the last minute of the hour you won&#8217;t see it&#8230;however the fact that the seconds are all 00 should give it away<br />
</p>
<h2>Integer data type</h2>
<p>When dealing with integers, you are in luck because it will just blow up in your face</p>
<p>Create this stored procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestInt
@Someint <span class="kw1">smallint</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">SELECT</span> @Someint
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestInt
@Someint smallint
AS 

SELECT @Someint
GO</pre></div></div>

<p>Run it by passing in something that is greater than the small integer data type can hold</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @i <span class="kw1">int</span>
<span class="kw1">SELECT</span> @i <span class="sy0">=</span> <span class="nu0">99999</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestInt @i
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @i int
SELECT @i = 99999


EXEC prTestInt @i
GO</pre></div></div>

<p>And here is the error.</p>
<p><em>Msg 8114, Level 16, State 5, Procedure prTestInt, Line 0<br />
Error converting data type int to smallint.</em></p>
<p>This is a good thing, you will be able to catch this immediately. At least it doesn&#8217;t do a negative overflow like in some languages</p>
<p></p>
<h2>varchar, nvarchar, char and nchar</h2>
<p>varchar, nvarchar, char and nchar have a bunch of interesting inconsistencies, this can really bite you if you are not careful</p>
<p>Here is one example, create the following procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestVarchar
@Somevarchar <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">SELECT</span> @Somevarchar
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestVarchar
@Somevarchar varchar(3)
AS 

SELECT @Somevarchar
GO</pre></div></div>

<p>Now run it like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @v <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @v <span class="sy0">=</span> <span class="st0">'9999999999'</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestVarchar @v
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @v VARCHAR(10)
SELECT @v = '9999999999'


EXEC prTestVarchar @v
GO</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;<br />
999</p>
<p>Since you specified varchar(3), SQL Server trims everything over 3 bytes</p>
<p>What if you just use varchar?<br />
People coming from languages where you define something as a string usually make this mistake. Take a look at this: <a href="http://stackoverflow.com/questions/5559582/issue-inserting-text-into-table-from-c-proc-parameter/5559609#5559609">Issue inserting text into table from c# proc parameter</a></p>
<p>Create the following stored procedure</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROC</span> prTestVarchar2
@Somevarchar <span class="kw1">varchar</span>
<span class="kw1">AS</span> 
&nbsp;
<span class="kw1">SELECT</span> @Somevarchar
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROC prTestVarchar2
@Somevarchar varchar
AS 

SELECT @Somevarchar
GO</pre></div></div>

<p>Run the proc</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @v <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @v <span class="sy0">=</span> <span class="st0">'9999999999'</span>
&nbsp;
&nbsp;
<span class="kw1">EXEC</span> prTestVarchar2 @v
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @v VARCHAR(10)
SELECT @v = '9999999999'


EXEC prTestVarchar2 @v
GO</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8211;<br />
9</p>
<p>In this case SQL Server used a size of 1 since nothing was specified. However when you use varchar in a cast or convert function and you don&#8217;t specify a size, it will default to 30 characters</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">VARCHAR</span>,<span class="st0">'1111111111222222222233333333334'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT CONVERT(VARCHAR,'1111111111222222222233333333334')</pre></div></div>

<p>111111111122222222223333333333</p>
<p>As you can see, the last character is not displayed<br />
Take also a look at this post <a href="/index.php/DataMgmt/DBProgramming/MSSQLServer/always-include-size-when-using-varchar-n">Always include size when using varchar, nvarchar, char and nchar</a> by George Mastros and this post <a href="http://sqlblog.com/blogs/aaron_bertrand/archive/2009/10/09/bad-habits-to-kick-declaring-varchar-without-length.aspx">Bad habits to kick : declaring VARCHAR without (length)</a> by Aaron Bertrand for some more info</p>
<p></p>
<h2>Decimal/Numeric</h2>
<p>Decimal (or numeric) will round down or up if it can&#8217;t hold the whole value<br />
Take a look by running this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @d <span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="nu0">3</span><span class="br0">&#41;</span>
<span class="kw1">DECLARE</span> @d2 <span class="kw1">DECIMAL</span><span class="br0">&#40;</span><span class="nu0">4</span>,<span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">SELECT</span> @d <span class="sy0">=</span> <span class="nu0">1.999</span>
&nbsp;
<span class="kw1">SELECT</span> @d2 <span class="sy0">=</span> @d
&nbsp;
<span class="kw1">SELECT</span> @d,@d2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @d DECIMAL(4,3)
DECLARE @d2 DECIMAL(4,2)
SELECT @d = 1.999

SELECT @d2 = @d

SELECT @d,@d2</pre></div></div>

<p>Output<br />
&#8212;&#8212;&#8212;&#8212;-<br />
1.999	2.00</p>
<p>As you can see 1.999 will round up to 2.00 if your scale is less than the number of digits passed in</p>
<p>If you have to do multiplication you have to be extra careful and have enough space to avoid rounding issues, I deal with this all the time because we have to show 10 digits for scale.</p>
<p>Decimal and numeric will default to (18,0) if you don&#8217;t specify anything when declaring them, see this post <a href="/index.php/DataMgmt/DataDesign/decimal-and-numeric-problems-when-you-do">Decimal and Numeric problems when you don&#8217;t specify precision and scale</a> by George Mastros for more info, no need for me to repeat the same.</p>
<h1>Conclusion</h1>
<p>Make sure that your data types or data type sizes are the same for variables/parameters and tables, if they are not, you might not notice the problem right away and it can be a real pain in the neck to make the change down the road</p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/be-careful-when-passing-around/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Do you use  Column=@Param OR @Param IS NULL in your WHERE clause? Don&#8217;t, it doesn&#8217;t perform</title>
		<link>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/</link>
		<comments>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/#comments</comments>
		<pubDate>Thu, 15 Apr 2010 09:55:44 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[pitfalls]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[tip]]></category>

		<guid isPermaLink="false">/index.php/2010/04/do-you-use-column-param-or-param-is-null/</guid>
		<description><![CDATA[You see this kind of question all the time in newsgroups/forums, someone wants to return all the rows if nothing is passed in or just the rows that match the variable when something is passed in. Usually someone will reply with a suggestion to do someth&#8230;]]></description>
				<content:encoded><![CDATA[<p>You see this kind of question all the time in newsgroups/forums, someone wants to return all the rows if nothing is passed in or just the rows that match the variable when something is passed in. Usually someone will reply with a suggestion to do something like this</p>
<p>WHERE (SomeColumn=@col OR @col IS NULL)</p>
<p>The problem with that approach is that it doesn&#8217;t perform well, let&#8217;s take a look, first create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">USE</span> tempdb
GO
&nbsp;
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Test<span class="br0">&#40;</span>SomeCol1 <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>, Somecol2 <span class="kw1">INT</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">INSERT</span> Test
<span class="kw1">SELECT</span> number,low <span class="kw1">FROM</span> master..<span class="me1">spt_values</span>
<span class="kw1">WHERE</span> TYPE <span class="sy0">=</span> <span class="st0">'p'</span>
&nbsp;
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">INDEX</span> ix_test <span class="kw1">ON</span> Test<span class="br0">&#40;</span>Somecol2<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">USE tempdb
GO



CREATE TABLE Test(SomeCol1 INT NOT NULL, Somecol2 INT NOT NULL)

INSERT Test
SELECT number,low FROM master..spt_values
WHERE TYPE = 'p'


CREATE INDEX ix_test ON Test(Somecol2)
GO</pre></div></div>

<p>Here is the query that uses the method described before, I am using AND 1=1 so that this query will match the one I will show later</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="kw1">SELECT</span> SomeCol2 
<span class="kw1">FROM</span> Test
<span class="kw1">WHERE</span> <span class="nu0">1</span> <span class="sy0">=</span><span class="nu0">1</span>
<span class="sy0">AND</span> &nbsp;<span class="br0">&#40;</span>SomeCol2<span class="sy0">=</span>@col <span class="sy0">OR</span> @col <span class="kw1">IS</span> <span class="sy0">NULL</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @col INT
SELECT @col = 1

SELECT SomeCol2 
FROM Test
WHERE 1 =1
AND  (SomeCol2=@col OR @col IS NULL)</pre></div></div>

<p>Here is the query using dynamic SQL</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="de1"><pre class="de1">GO
&nbsp;
<span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">SQL</span> <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> <span class="st0">'SELECT SomeCol2 </span>
<span class="st0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FROM Test</span>
<span class="st0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WHERE 1 =1'</span>
&nbsp;
<span class="kw1">IF</span> @col <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> 
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> @<span class="kw1">SQL</span> <span class="sy0">+</span> <span class="st0">' AND SomeCol2=@InnerParamcol '</span>
&nbsp; &nbsp; 
&nbsp; &nbsp; 
&nbsp; &nbsp; 
<span class="kw1">EXEC</span> <span class="kw3">sp_executesql</span> @<span class="kw1">SQL</span>,N<span class="st0">'@InnerParamcol INT'</span>,@col</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">GO

DECLARE @col INT
SELECT @col = 1

DECLARE @SQL NVARCHAR(4000)
    SET @SQL = 'SELECT SomeCol2 
				FROM Test
				WHERE 1 =1'

IF @col IS NOT NULL 
    SET @SQL = @SQL + ' AND SomeCol2=@InnerParamcol '
    
    
    
EXEC sp_executesql @SQL,N'@InnerParamcol INT',@col</pre></div></div>

<p>Now let&#8217;s run these queries and take a look at the reads</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SET</span> <span class="kw1">STATISTICS</span> IO <span class="kw1">ON</span>
GO
&nbsp;
<span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="kw1">SELECT</span> SomeCol2 
<span class="kw1">FROM</span> Test
<span class="kw1">WHERE</span> <span class="nu0">1</span> <span class="sy0">=</span><span class="nu0">1</span>
<span class="sy0">AND</span> &nbsp;<span class="br0">&#40;</span>SomeCol2<span class="sy0">=</span>@col <span class="sy0">OR</span> @col <span class="kw1">IS</span> <span class="sy0">NULL</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp;
&nbsp;
GO
&nbsp;
<span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">SQL</span> <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> <span class="st0">'SELECT SomeCol2 </span>
<span class="st0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FROM Test</span>
<span class="st0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WHERE 1 =1'</span>
&nbsp;
<span class="kw1">IF</span> @col <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span> 
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> @<span class="kw1">SQL</span> <span class="sy0">+</span> <span class="st0">' AND SomeCol2=@InnerParamcol '</span>
&nbsp; &nbsp; 
&nbsp; &nbsp; 
&nbsp; &nbsp; 
<span class="kw1">EXEC</span> <span class="kw3">sp_executesql</span> @<span class="kw1">SQL</span>,N<span class="st0">'@InnerParamcol INT'</span>,@col
&nbsp;
<span class="kw1">SET</span> <span class="kw1">STATISTICS</span> IO <span class="kw1">OFF</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SET STATISTICS IO ON
GO

DECLARE @col INT
SELECT @col = 1

SELECT SomeCol2 
FROM Test
WHERE 1 =1
AND  (SomeCol2=@col OR @col IS NULL)




GO

DECLARE @col INT
SELECT @col = 1

DECLARE @SQL NVARCHAR(4000)
    SET @SQL = 'SELECT SomeCol2 
				FROM Test
				WHERE 1 =1'

IF @col IS NOT NULL 
    SET @SQL = @SQL + ' AND SomeCol2=@InnerParamcol '
    
    
    
EXEC sp_executesql @SQL,N'@InnerParamcol INT',@col

SET STATISTICS IO OFF
GO</pre></div></div>

<p><em>(8 row(s) affected)<br />
Table &#8216;Test&#8217;. Scan count 1, logical reads 6, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.</p>
<p>(8 row(s) affected)<br />
Table &#8216;Test&#8217;. Scan count 1, logical reads 2, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.</em></p>
<p>As you can see the dynamic SQL query only uses 2 reads where the other solution uses 6 reads.</p>
<p>Here is an image of the execution plan for both queries.</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//Plan.PNG" alt="" title="" width="607" height="312" /></p>
<p>The execution plan show that the dynamic SQL is using a seek where the other query is using a scan</p>
<p>As you can see, there is a place for dynamic SQL and if you use it correctly you will also get plan reuse, take a look at the post <a href="/index.php/DataMgmt/DataDesign/changing-exec-to-sp_executesql-doesn-t-p">Changing exec to sp_executesql doesn&#8217;t provide any benefit if you are not using parameters correctly</a> to find out how to use dynamic SQL correctly</p>
<p><strong>[EDIT]</strong></p>
<p>Someone on twitter suggested to try this query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="kw1">SELECT</span> SomeCol2
<span class="kw1">FROM</span> Test
<span class="kw1">WHERE</span> <span class="nu0">1</span> <span class="sy0">=</span><span class="nu0">1</span>
<span class="sy0">AND</span> &nbsp;SomeCol2 <span class="sy0">=</span> isnull<span class="br0">&#40;</span>@col,SomeCol2<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DECLARE @col INT
SELECT @col = 1
 
SELECT SomeCol2
FROM Test
WHERE 1 =1
AND  SomeCol2 = isnull(@col,SomeCol2)</pre></div></div>

<p>That query also does an index scan.</p>
<p>Here is the execution plan in text for both of the queries that cause the scan</p>
<p>  |&#8211;Index Scan(OBJECT:([tempdb].[dbo].[Test].[ix_test]),<br />
 WHERE:([tempdb].[dbo].[Test].[Somecol2]=isnull([@col],[tempdb].[dbo].[Test].[Somecol2])))</p>
<p>  |&#8211;Index Scan(OBJECT:([tempdb].[dbo].[Test].[ix_test]),<br />
  WHERE:([tempdb].[dbo].[Test].[Somecol2]=[@col] OR [@col] IS NULL))</p>
<p>There was also a comment about recompiles, when you use sp_executesql you should not get recompiles when changing the value that you are passing in. I ran this query</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="de1"><pre class="de1">&nbsp;
<span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">SQL</span> <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> <span class="st0">'SELECT SomeCol2</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FROM Test</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WHERE 1 =1'</span>
&nbsp;
<span class="kw1">IF</span> @col <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> @<span class="kw1">SQL</span> <span class="sy0">+</span> <span class="st0">' AND SomeCol2=@InnerParamcol '</span>
&nbsp; &nbsp;<span class="kw1">EXEC</span> <span class="kw3">SP_EXECUTESQL</span> @<span class="kw1">SQL</span>,N<span class="st0">'@InnerParamcol INT'</span>,@col 
&nbsp; &nbsp;Go
&nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; <span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">2</span>
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">SQL</span> <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> <span class="st0">'SELECT SomeCol2</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FROM Test</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WHERE 1 =1'</span>
&nbsp;
<span class="kw1">IF</span> @col <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> @<span class="kw1">SQL</span> <span class="sy0">+</span> <span class="st0">' AND SomeCol2=@InnerParamcol '</span>
&nbsp; &nbsp;
&nbsp; &nbsp;<span class="kw1">EXEC</span> <span class="kw3">SP_EXECUTESQL</span> @<span class="kw1">SQL</span>,N<span class="st0">'@InnerParamcol INT'</span>,@col 
&nbsp; &nbsp;Go
&nbsp; &nbsp;
&nbsp; &nbsp;
&nbsp; &nbsp;<span class="kw1">DECLARE</span> @col <span class="kw1">INT</span>
<span class="kw1">SELECT</span> @col <span class="sy0">=</span> <span class="nu0">3</span>
&nbsp;
<span class="kw1">DECLARE</span> @<span class="kw1">SQL</span> <span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="nu0">4000</span><span class="br0">&#41;</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> <span class="st0">'SELECT SomeCol2</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FROM Test</span>
<span class="st0"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WHERE 1 =1'</span>
&nbsp;
<span class="kw1">IF</span> @col <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span>
&nbsp; &nbsp; <span class="kw1">SET</span> @<span class="kw1">SQL</span> <span class="sy0">=</span> @<span class="kw1">SQL</span> <span class="sy0">+</span> <span class="st0">' AND SomeCol2=@InnerParamcol '</span>
&nbsp; &nbsp;
&nbsp; &nbsp;<span class="kw1">EXEC</span> <span class="kw3">SP_EXECUTESQL</span> @<span class="kw1">SQL</span>,N<span class="st0">'@InnerParamcol INT'</span>,@col 
&nbsp; &nbsp;Go
&nbsp; &nbsp;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse"> 
DECLARE @col INT
SELECT @col = 1
 
DECLARE @SQL NVARCHAR(4000)
    SET @SQL = 'SELECT SomeCol2
                FROM Test
                WHERE 1 =1'
 
IF @col IS NOT NULL
    SET @SQL = @SQL + ' AND SomeCol2=@InnerParamcol '
   EXEC SP_EXECUTESQL @SQL,N'@InnerParamcol INT',@col 
   Go
   
      
      
      DECLARE @col INT
SELECT @col = 2
 
DECLARE @SQL NVARCHAR(4000)
    SET @SQL = 'SELECT SomeCol2
                FROM Test
                WHERE 1 =1'
 
IF @col IS NOT NULL
    SET @SQL = @SQL + ' AND SomeCol2=@InnerParamcol '
   
   EXEC SP_EXECUTESQL @SQL,N'@InnerParamcol INT',@col 
   Go
   
   
   DECLARE @col INT
SELECT @col = 3
 
DECLARE @SQL NVARCHAR(4000)
    SET @SQL = 'SELECT SomeCol2
                FROM Test
                WHERE 1 =1'
 
IF @col IS NOT NULL
    SET @SQL = @SQL + ' AND SomeCol2=@InnerParamcol '
   
   EXEC SP_EXECUTESQL @SQL,N'@InnerParamcol INT',@col 
   Go
   </pre></div></div>

<p>And then I ran a trace checking for SQL:StmtRecompile</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//Profiler.PNG" alt="" title="" width="388" height="193" /></p>
<p>Here is the output from that trace</p>
<p><img src="/wp-content/uploads/blogs/DataMgmt//trace.PNG" alt="" title="" width="501" height="578" /></p>
<p><strong>[/EDIT]</strong></p>
<p>*** <strong>Remember, if you have a SQL related question, try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/do-you-use-column-param-or-param-is-null/feed/</wfw:commentRss>
		<slash:comments>27</slash:comments>
		</item>
		<item>
		<title>Create a sorted view in SQL Server 2005 and SQL Server 2008</title>
		<link>/index.php/datamgmt/datadesign/create-a-sorted-view-in-sql-server-2005-2008/</link>
		<comments>/index.php/datamgmt/datadesign/create-a-sorted-view-in-sql-server-2005-2008/#comments</comments>
		<pubDate>Wed, 05 Nov 2008 17:20:08 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[pitfalls]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[views]]></category>

		<guid isPermaLink="false">/index.php/2008/11/create-a-sorted-view-in-sql-server-2005-2008/</guid>
		<description><![CDATA[I saw that some people are hitting our site with a search for how to create a sorted view in SQL Server 2008.


You all know that in SQL Server 2000 you can create a view and use TOP 100 PERCENT with ORDER By and it will be sorted. Since SQL server 2&#8230;]]></description>
				<content:encoded><![CDATA[<p>I saw that some people are hitting our site with a search for how to create a sorted view in SQL Server 2008.</p>
<p>You all know that in SQL Server 2000 you can create a view and use TOP 100 PERCENT with ORDER By and it will be sorted. Since SQL server 2005 that doesn&#8217;t work anymore. I actually never understood the need for sorted views to begin with, how hard is it to do something like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> 
<span class="kw1">FROM</span> <span class="kw1">View</span>
<span class="kw1">ORDER</span> <span class="kw1">By</span> <span class="kw1">Column</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * 
FROM View
ORDER By Column</pre></div></div>

<p>Not hard, I guess pople want the convenience of opening the view in SSMS and it is sorted &#8216;correctly&#8217;<br />
There is a way to get this to work in SQL server 2005, there is a hotfix that will &#8216;fix&#8217; this but you have to run in 2000 compatability mode.<br />
The link to the fix is here: <a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;926292&amp;sd=rss&amp;spid=2855">FIX: When you query through a view that uses the ORDER BY clause in SQL Server 2008, the result is still returned in random order</a></p>
<p>Now let&#8217;s get started with the code<br />
Create this table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">table</span> TestSort <span class="br0">&#40;</span>id <span class="kw1">int</span> not null<span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">7</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">9</span><span class="br0">&#41;</span>
<span class="kw1">insert</span> TestSort <span class="kw1">values</span><span class="br0">&#40;</span><span class="nu0">6</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create table TestSort (id int not null)
insert TestSort values(1)
insert TestSort values(3)
insert TestSort values(4)
insert TestSort values(5)
insert TestSort values(2)
insert TestSort values(7)
insert TestSort values(9)
insert TestSort values(6)</pre></div></div>

<p>And create the view</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">view</span> vTestSort
<span class="kw1">as</span>
<span class="kw1">select</span> <span class="kw1">top</span> <span class="nu0">100</span> <span class="kw1">percent</span> id <span class="kw1">from</span> TestSort
<span class="kw1">order</span> <span class="kw1">by</span> id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create view vTestSort
as
select top 100 percent id from TestSort
order by id</pre></div></div>

<p> Now do a select from the view</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> vTestSort</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from vTestSort</pre></div></div>

<p>(result set)<br />
1<br />
3<br />
4<br />
5<br />
2<br />
7<br />
9<br />
6</p>
<p>Oops it is not sorted<br />
Let&#8217;s try something else, we will use 99.99 percent</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">view</span> vTestSort2
<span class="kw1">as</span>
<span class="kw1">select</span> <span class="kw1">top</span> <span class="nu0">99.99</span> <span class="kw1">percent</span> &nbsp;id <span class="kw1">from</span> TestSort
<span class="kw1">order</span> <span class="kw1">by</span> id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create view vTestSort2
as
select top 99.99 percent  id from TestSort
order by id</pre></div></div>

<p>Run the select against the view</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> vTestSort2</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from vTestSort2</pre></div></div>

<p>(result set)<br />
1<br />
2<br />
3<br />
4<br />
5<br />
6<br />
7<br />
9</p>
<p>look at that, magic! It works</p>
<p>Let&#8217;s try another way by using the max value of an integer</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">create</span> <span class="kw1">view</span> vTestSort3
<span class="kw1">as</span>
<span class="kw1">select</span> <span class="kw1">top</span> <span class="nu0">2147483648</span> id <span class="kw1">from</span> TestSort
<span class="kw1">order</span> <span class="kw1">by</span> id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">create view vTestSort3
as
select top 2147483648 id from TestSort
order by id</pre></div></div>

<p>Run the select against the view</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> vTestSort3</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from vTestSort3</pre></div></div>

<p>(result set)<br />
1<br />
2<br />
3<br />
4<br />
5<br />
6<br />
7<br />
9</p>
<p>And bingo, it also works.</p>
<p>Now, just because this works right now it doesn&#8217;t mean that it will work after you apply the next hotfix or service pack. Why not doing this instead</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> <span class="sy0">*</span> <span class="kw1">from</span> vTestSort3
<span class="kw1">order</span> <span class="kw1">by</span> id</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select * from vTestSort3
order by id</pre></div></div>

<p>That will always work and you don&#8217;t have to deal with unexpected results down the road</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/create-a-sorted-view-in-sql-server-2005-2008/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
	</channel>
</rss>
