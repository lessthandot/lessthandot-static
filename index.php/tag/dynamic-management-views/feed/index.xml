<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>dynamic management views &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/dynamic-management-views/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Advent 2011 Day 22: Dynamic Management Views</title>
		<link>/index.php/datamgmt/datadesign/dynamic-management-views/</link>
		<comments>/index.php/datamgmt/datadesign/dynamic-management-views/#comments</comments>
		<pubDate>Thu, 22 Dec 2011 08:52:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[dmv]]></category>
		<category><![CDATA[dynamic management views]]></category>
		<category><![CDATA[profiling]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2011/12/dynamic-management-views/</guid>
		<description><![CDATA[Today we are going to take a look at Dynamic Management Views. Dynamic Management Views is one of my favorite things that they have added to the SQL Server product. Instead of running all kinds of stored procedures, dbcc commands and selects from table, you can get all that information now from the Dynamic Management Views, all you need to know is what view will get you the information you need.
      
      
        
          I/O Related Dynamic Management Views and Functions
        
      
    
    
      
        
          Change Tracking Related Dynamic Management&#8230;]]></description>
				<content:encoded><![CDATA[<p>In my <a href="/index.php/DataMgmt/DataDesign/are-you-ready-for-sql">Are you ready for SQL Server 2012 or are you still partying like it is 1999?</a> post, I wrote about how you should start using SQL Server 2005 and SQL Server 2008 functionality now in order to prepare for SQL Server 2012. I still see tons of code that is written in the pre 2005 style and people still keep using those functions, procs and statements even though SQL Server 2005 and 2008 have much better functionality.</p>
<p>Today we are going to take a look at Dynamic Management Views. Dynamic Management Views is one of my favorite things that they have added to the SQL Server product. Instead of running all kinds of stored procedures, dbcc commands and selects from table, you can get all that information now from the Dynamic Management Views, all you need to know is what view will get you the information you need.</p>
<p>Let&#8217;s take a look at some examples. This query below will give me the top 50 most executed statements in stored procedures</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">50</span> <span class="sy0">*</span> <span class="kw1">FROM</span><span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw1">COALESCE</span><span class="br0">&#40;</span><span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span>,<span class="st0">'Ad-Hoc'</span><span class="br0">&#41;</span> <span class="kw1">AS</span> ProcName,execution_count,s2.<span class="me1">objectid</span>,
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">1</span> <span class="kw2">SUBSTRING</span><span class="br0">&#40;</span>s2.<span class="kw1">TEXT</span>,statement_start_offset <span class="sy0">/</span> <span class="nu0">2</span><span class="sy0">+</span><span class="nu0">1</span> ,
&nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span> <span class="br0">&#40;</span><span class="kw1">CASE</span> <span class="kw1">WHEN</span> statement_end_offset <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">THEN</span> <span class="br0">&#40;</span><span class="kw2">LEN</span><span class="br0">&#40;</span><span class="kw1">CONVERT</span><span class="br0">&#40;</span><span class="kw1">NVARCHAR</span><span class="br0">&#40;</span><span class="kw2">MAX</span><span class="br0">&#41;</span>,s2.<span class="kw1">TEXT</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">*</span> <span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">ELSE</span> statement_end_offset <span class="kw1">END</span><span class="br0">&#41;</span> &nbsp;<span class="sy0">-</span> statement_start_offset<span class="br0">&#41;</span> <span class="sy0">/</span> <span class="nu0">2</span><span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">AS</span> sql_statement,
&nbsp; &nbsp; &nbsp; &nbsp;last_execution_time
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_query_stats</span> <span class="kw1">AS</span> s1
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>sql_handle<span class="br0">&#41;</span> <span class="kw1">AS</span> s2 <span class="br0">&#41;</span> x
<span class="kw1">WHERE</span> sql_statement <span class="sy0">NOT</span> like <span class="st0">'SELECT * FROM(SELECT coalesce(object_name(s2.objectid)%'</span>
and OBJECTPROPERTYEX<span class="br0">&#40;</span>x.<span class="me1">objectid</span>,<span class="st0">'IsProcedure'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">1</span>
and exists <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">FROM</span> sys.<span class="me1">procedures</span> s
<span class="kw1">WHERE</span> s.<span class="me1">is_ms_shipped</span> <span class="sy0">=</span> <span class="nu0">0</span>
and s.<span class="me1">name</span> <span class="sy0">=</span> x.<span class="me1">ProcName</span> <span class="br0">&#41;</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> execution_count <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 50 * FROM(SELECT COALESCE(OBJECT_NAME(s2.objectid),'Ad-Hoc') AS ProcName,execution_count,s2.objectid,
    (SELECT TOP 1 SUBSTRING(s2.TEXT,statement_start_offset / 2+1 ,
      ( (CASE WHEN statement_end_offset = -1
         THEN (LEN(CONVERT(NVARCHAR(MAX),s2.TEXT)) * 2)
         ELSE statement_end_offset END)  - statement_start_offset) / 2+1)) AS sql_statement,
       last_execution_time
FROM sys.dm_exec_query_stats AS s1
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2 ) x
WHERE sql_statement NOT like 'SELECT * FROM(SELECT coalesce(object_name(s2.objectid)%'
and OBJECTPROPERTYEX(x.objectid,'IsProcedure') = 1
and exists (SELECT 1 FROM sys.procedures s
WHERE s.is_ms_shipped = 0
and s.name = x.ProcName )
ORDER BY execution_count DESC</pre></div></div>

<p>Here is some sample output</p>
<pre>proc            count           objectid        statement               last_execution_time
----------------------------------------------------------------------------------------------
usp_AddLast	42757230	517576882	UPDATE dbo.LastSome	2010-04-14 14:15:33.433
usp_AddLast	42757230	517576882	IF EXISTS(   SELECT 	2010-04-14 14:15:33.433
usp_Update	20290	        725577623	update t  set pclose	2010-04-14 14:15:33.433
usp_Update	20288	        725577623	update t  set pclose	2010-04-14 14:15:33.453
usp_GetLast3	3188	        501576825	SELECT distinct l.Sy	2010-04-14 14:14:33.350
usp_Historical	168	        1029578706	select * from Histor	2010-04-14 14:02:08.190
usp_AddLast	3	        517576882	INSERT dbo.Sometable	2010-04-07 08:42:57.040
usp_GetLast2	3	        965578478	SELECT l.Symbol,   q	2010-04-06 16:14:49.523
usp_Historical2	2	        1045578763	select SomeNumber,G	2010-04-14 12:10:48.860
usp_GetLast	1	        901578250	SELECT distinct l.Sy	2010-02-12 09:11:59.840</pre>
<p>As you can see the first two rows are for the same stored procedure, what if you only want to know the procedure names? You can use the following query for that, I grouped them by name and then used the max count of the statement itself as the execution count, you could also use SUM instead of MAX. If you have a lot of if else conditions then max might not give you the whole picture.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">50</span> <span class="sy0">*</span> <span class="kw1">FROM</span>
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span> <span class="kw1">AS</span> ProcName,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">MAX</span><span class="br0">&#40;</span>execution_count<span class="br0">&#41;</span> <span class="kw1">AS</span> execution_count,s2.<span class="me1">objectid</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">MAX</span><span class="br0">&#40;</span>last_execution_time<span class="br0">&#41;</span> <span class="kw1">AS</span> last_execution_time
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_query_stats</span> <span class="kw1">AS</span> s1
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>sql_handle<span class="br0">&#41;</span> <span class="kw1">AS</span> s2
<span class="kw1">GROUP</span> <span class="kw1">BY</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span>,s2.<span class="me1">objectid</span><span class="br0">&#41;</span> x
<span class="kw1">WHERE</span> OBJECTPROPERTYEX<span class="br0">&#40;</span>x.<span class="me1">objectid</span>,<span class="st0">'IsProcedure'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">1</span>
<span class="sy0">AND</span> <span class="sy0">EXISTS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">FROM</span> sys.<span class="me1">procedures</span> s
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">WHERE</span> s.<span class="me1">is_ms_shipped</span> <span class="sy0">=</span> <span class="nu0">0</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> s.<span class="me1">name</span> <span class="sy0">=</span> x.<span class="me1">ProcName</span> <span class="br0">&#41;</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> execution_count <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 50 * FROM
    (SELECT OBJECT_NAME(s2.objectid) AS ProcName,
        MAX(execution_count) AS execution_count,s2.objectid,
        MAX(last_execution_time) AS last_execution_time
FROM sys.dm_exec_query_stats AS s1
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2
GROUP BY OBJECT_NAME(s2.objectid),s2.objectid) x
WHERE OBJECTPROPERTYEX(x.objectid,'IsProcedure') = 1
AND EXISTS (SELECT 1 FROM sys.procedures s
            WHERE s.is_ms_shipped = 0
            AND s.name = x.ProcName )
ORDER BY execution_count DESC</pre></div></div>

<p>Here is the output</p>
<pre>proc            count           objectid        last_execution_time
----------------------------------------------------------------------
usp_AddLast	42667941	517576882	2010-04-14 14:08:48.287
usp_Update	20263		725577623	2010-04-14 14:08:48.307
usp_GetLast3	3180		501576825	2010-04-14 14:07:10.513
usp_Historical	168		1029578706	2010-04-14 14:02:08.190
usp_GetLast2	3		965578478	2010-04-06 16:14:49.523
usp_Historical2	2		1045578763	2010-04-14 12:10:48.860
usp_GetLast	1		901578250	2010-02-12 09:11:59.840</pre>
<p></p>
<p>Imagine doing stuff like this in the SQL Server 2000 days&#8230;..better get profiler and some traces running.</p>
<p>What if you want to know the stored procedures with the highest average CPU time in SQL Server? That is pretty easy as well, here is the query for that</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw1">TOP</span> <span class="nu0">50</span> <span class="sy0">*</span> <span class="kw1">FROM</span>
&nbsp; &nbsp; <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span> <span class="kw1">AS</span> ProcName,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">SUM</span><span class="br0">&#40;</span>s1.<span class="me1">total_worker_time</span><span class="sy0">/</span>s1.<span class="me1">execution_count</span><span class="br0">&#41;</span> <span class="kw1">AS</span> AverageCPUTime,s2.<span class="me1">objectid</span>,
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">SUM</span><span class="br0">&#40;</span>execution_count<span class="br0">&#41;</span> <span class="kw1">AS</span> execution_count
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_query_stats</span> <span class="kw1">AS</span> s1
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>sql_handle<span class="br0">&#41;</span> <span class="kw1">AS</span> s2
<span class="kw1">GROUP</span> <span class="kw1">BY</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span>s2.<span class="me1">objectid</span><span class="br0">&#41;</span>,objectid<span class="br0">&#41;</span> x
<span class="kw1">WHERE</span> OBJECTPROPERTYEX<span class="br0">&#40;</span>x.<span class="me1">objectid</span>,<span class="st0">'IsProcedure'</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">1</span>
<span class="sy0">AND</span> <span class="sy0">EXISTS</span> <span class="br0">&#40;</span><span class="kw1">SELECT</span> <span class="nu0">1</span> <span class="kw1">FROM</span> sys.<span class="me1">procedures</span> s
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">WHERE</span> s.<span class="me1">is_ms_shipped</span> <span class="sy0">=</span> <span class="nu0">0</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">AND</span> s.<span class="me1">name</span> <span class="sy0">=</span> x.<span class="me1">ProcName</span> <span class="br0">&#41;</span>
<span class="kw1">ORDER</span> <span class="kw1">BY</span> AverageCPUTime <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT TOP 50 * FROM
    (SELECT OBJECT_NAME(s2.objectid) AS ProcName,
        SUM(s1.total_worker_time/s1.execution_count) AS AverageCPUTime,s2.objectid,
        SUM(execution_count) AS execution_count
FROM sys.dm_exec_query_stats AS s1
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2
GROUP BY OBJECT_NAME(s2.objectid),objectid) x
WHERE OBJECTPROPERTYEX(x.objectid,'IsProcedure') = 1
AND EXISTS (SELECT 1 FROM sys.procedures s
            WHERE s.is_ms_shipped = 0
            AND s.name = x.ProcName )
ORDER BY AverageCPUTime DESC</pre></div></div>

<p>
Output</p>
<pre>proc            AverageCPUTime objectid    execution_count
----------------------------------------------------------------------
usp_Update	17152	       725577623	41074
usp_GetLast3	333		965578478	3
usp_GetLast2	145		501576825	3237
usp_Historical	70		1029578706	170
usp_AddLast	36		517576882	87154735
usp_GetLast	0		901578250	1
usp_Historical2	0		1045578763	2</pre>
<p>Wow, that usp_Update proc really sucks  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Here is another one of my favorite queries. How long will the database restore take?<br />
Run the query below and you will know</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>
&nbsp; &nbsp; d.<span class="me1">PERCENT_COMPLETE</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="sy0">%</span>Complete<span class="br0">&#93;</span>,
&nbsp; &nbsp; d.<span class="me1">TOTAL_ELAPSED_TIME</span><span class="sy0">/</span><span class="nu0">60000</span> <span class="kw1">AS</span> ElapsedTimeMin,
&nbsp; &nbsp; d.<span class="me1">ESTIMATED_COMPLETION_TIME</span><span class="sy0">/</span><span class="nu0">60000</span> &nbsp; <span class="kw1">AS</span> TimeRemainingMin,
&nbsp; &nbsp; d.<span class="me1">TOTAL_ELAPSED_TIME</span><span class="sy0">*</span><span class="nu0">0.00000024</span> <span class="kw1">AS</span> ElapsedTimeHours,
&nbsp; &nbsp; d.<span class="me1">ESTIMATED_COMPLETION_TIME</span><span class="sy0">*</span><span class="nu0">0.00000024</span> &nbsp;<span class="kw1">AS</span> TimeRemainingHours,
&nbsp; &nbsp; s.<span class="kw1">TEXT</span> <span class="kw1">AS</span> Command
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">dm_exec_requests</span> d
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>d.<span class="me1">sql_handle</span><span class="br0">&#41;</span><span class="kw1">AS</span> s
<span class="kw1">WHERE</span> &nbsp;d.<span class="me1">COMMAND</span> <span class="sy0">LIKE</span> <span class="st0">'RESTORE DATABASE%'</span>
<span class="kw1">ORDER</span> &nbsp; <span class="kw1">BY</span> <span class="nu0">2</span> <span class="kw1">DESC</span>, <span class="nu0">3</span> <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT
    d.PERCENT_COMPLETE AS [%Complete],
    d.TOTAL_ELAPSED_TIME/60000 AS ElapsedTimeMin,
    d.ESTIMATED_COMPLETION_TIME/60000   AS TimeRemainingMin,
    d.TOTAL_ELAPSED_TIME*0.00000024 AS ElapsedTimeHours,
    d.ESTIMATED_COMPLETION_TIME*0.00000024  AS TimeRemainingHours,
    s.TEXT AS Command
FROM    sys.dm_exec_requests d
CROSS APPLY sys.dm_exec_sql_text(d.sql_handle)AS s
WHERE  d.COMMAND LIKE 'RESTORE DATABASE%'
ORDER   BY 2 DESC, 3 DESC</pre></div></div>

<p>For all the sessions that are connected, what state are they in? The query below will give you a quick count</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span> <span class="kw1">AS</span> StatusCount,<span class="kw1">CASE</span> status
<span class="kw1">WHEN</span> <span class="st0">'Running'</span> <span class="kw1">THEN</span> <span class="st0">'Running - Currently running one or more requests'</span>
<span class="kw1">WHEN</span> <span class="st0">'Sleeping '</span> <span class="kw1">THEN</span> <span class="st0">'Sleeping - Currently running no requests'</span>
<span class="kw1">WHEN</span> <span class="st0">'Preconnect '</span> <span class="kw1">THEN</span> <span class="st0">'Session is in the Resource Governor classifier'</span>
<span class="kw1">ELSE</span> <span class="st0">'Dormant – Session is in prelogin state'</span> <span class="kw1">END</span> status
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_sessions</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> status</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT COUNT(*) AS StatusCount,CASE status
WHEN 'Running' THEN 'Running - Currently running one or more requests'
WHEN 'Sleeping ' THEN 'Sleeping - Currently running no requests'
WHEN 'Preconnect ' THEN 'Session is in the Resource Governor classifier'
ELSE 'Dormant – Session is in prelogin state' END status
FROM sys.dm_exec_sessions
GROUP BY status</pre></div></div>

<p>Just a quick count of all the transaction isolation levels</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">COUNT</span><span class="br0">&#40;</span><span class="sy0">*</span><span class="br0">&#41;</span>,<span class="kw1">CASE</span> transaction_isolation_level
<span class="kw1">WHEN</span> <span class="nu0">0</span> <span class="kw1">THEN</span> <span class="st0">'Unspecified'</span>
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'ReadUncomitted'</span>
<span class="kw1">WHEN</span> <span class="nu0">2</span> <span class="kw1">THEN</span> <span class="st0">'Readcomitted'</span>
<span class="kw1">WHEN</span> <span class="nu0">3</span> <span class="kw1">THEN</span> <span class="st0">'Repeatable'</span>
<span class="kw1">WHEN</span> <span class="nu0">4</span> <span class="kw1">THEN</span> <span class="st0">'Serializable'</span>
<span class="kw1">WHEN</span> <span class="nu0">5</span> <span class="kw1">THEN</span> <span class="st0">'Snapshot'</span> <span class="kw1">END</span> <span class="kw1">AS</span> TRANSACTION_ISOLATION_LEVEL
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_sessions</span>
<span class="kw1">GROUP</span> <span class="kw1">BY</span> transaction_isolation_level</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT COUNT(*),CASE transaction_isolation_level
WHEN 0 THEN 'Unspecified'
WHEN 1 THEN 'ReadUncomitted'
WHEN 2 THEN 'Readcomitted'
WHEN 3 THEN 'Repeatable'
WHEN 4 THEN 'Serializable'
WHEN 5 THEN 'Snapshot' END AS TRANSACTION_ISOLATION_LEVEL
FROM sys.dm_exec_sessions
GROUP BY transaction_isolation_level</pre></div></div>

<p>To see what the SET options are that you are using in your connection, use the following query, leave out the WHERE clause if you want to know it for all connections. The query returns pretty much what DBCC USERINFO returns but you can run this for all connected sessions in one shot</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">@@SPID</span> <span class="kw1">AS</span> SPID,
&nbsp;text_size,
&nbsp;<span class="kw1">language</span>,
&nbsp;lock_timeout,
&nbsp;date_first,
&nbsp;date_format,
<span class="kw1">CASE</span> quoted_identifier
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> QUOTED_IDENTIFIER,
<span class="kw1">CASE</span> arithabort
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> ARITHAB<span class="sy0">OR</span>T,
<span class="kw1">CASE</span> ansi_null_dflt_on
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> ANSI_<span class="sy0">NULL</span>_DFLT_ON,
<span class="kw1">CASE</span> ansi_defaults
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> ANSI_DEFAULTS ,
<span class="kw1">CASE</span> ansi_warnings
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> ANSI_WARN<span class="sy0">IN</span>GS,
<span class="kw1">CASE</span> ansi_padding
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> ANSI_PADD<span class="sy0">IN</span>G,
<span class="kw1">CASE</span> ansi_nulls
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> ANSI_<span class="sy0">NULL</span>S,
<span class="kw1">CASE</span> concat_null_yields_null
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'SET'</span> <span class="kw1">ELSE</span> <span class="st0">'OFF'</span> <span class="kw1">END</span> CONCAT_<span class="sy0">NULL</span>_YIELDS_<span class="sy0">NULL</span>,
<span class="kw1">CASE</span> transaction_isolation_level
<span class="kw1">WHEN</span> <span class="nu0">0</span> <span class="kw1">THEN</span> <span class="st0">'Unspecified'</span>
<span class="kw1">WHEN</span> <span class="nu0">1</span> <span class="kw1">THEN</span> <span class="st0">'ReadUncomitted'</span>
<span class="kw1">WHEN</span> <span class="nu0">2</span> <span class="kw1">THEN</span> <span class="st0">'Readcomitted'</span>
<span class="kw1">WHEN</span> <span class="nu0">3</span> <span class="kw1">THEN</span> <span class="st0">'Repeatable'</span>
<span class="kw1">WHEN</span> <span class="nu0">4</span> <span class="kw1">THEN</span> <span class="st0">'Serializable'</span>
<span class="kw1">WHEN</span> <span class="nu0">5</span> <span class="kw1">THEN</span> <span class="st0">'Snapshot'</span> <span class="kw1">END</span> <span class="kw1">AS</span> TRANSACTION_ISOLATION_LEVEL
<span class="kw1">FROM</span> sys.<span class="me1">dm_exec_sessions</span>
<span class="kw1">WHERE</span> session_id <span class="sy0">=</span> <span class="kw2">@@SPID</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT @@SPID AS SPID,
 text_size,
 language,
 lock_timeout,
 date_first,
 date_format,
CASE quoted_identifier
WHEN 1 THEN 'SET' ELSE 'OFF' END QUOTED_IDENTIFIER,
CASE arithabort
WHEN 1 THEN 'SET' ELSE 'OFF' END ARITHABORT,
CASE ansi_null_dflt_on
WHEN 1 THEN 'SET' ELSE 'OFF' END ANSI_NULL_DFLT_ON,
CASE ansi_defaults
WHEN 1 THEN 'SET' ELSE 'OFF' END ANSI_DEFAULTS ,
CASE ansi_warnings
WHEN 1 THEN 'SET' ELSE 'OFF' END ANSI_WARNINGS,
CASE ansi_padding
WHEN 1 THEN 'SET' ELSE 'OFF' END ANSI_PADDING,
CASE ansi_nulls
WHEN 1 THEN 'SET' ELSE 'OFF' END ANSI_NULLS,
CASE concat_null_yields_null
WHEN 1 THEN 'SET' ELSE 'OFF' END CONCAT_NULL_YIELDS_NULL,
CASE transaction_isolation_level
WHEN 0 THEN 'Unspecified'
WHEN 1 THEN 'ReadUncomitted'
WHEN 2 THEN 'Readcomitted'
WHEN 3 THEN 'Repeatable'
WHEN 4 THEN 'Serializable'
WHEN 5 THEN 'Snapshot' END AS TRANSACTION_ISOLATION_LEVEL
FROM sys.dm_exec_sessions
WHERE session_id = @@SPID</pre></div></div>

<p>Here is another one where you had to run performance counter back in the 2000 days. This query will get you the page life expectancy for your server</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span>
<span class="kw1">FROM</span> sys.<span class="me1">dm_os_performance_counters</span> &nbsp;
<span class="kw1">WHERE</span> counter_name <span class="sy0">=</span> <span class="st0">'Page life expectancy'</span>
<span class="sy0">AND</span> <span class="kw2">OBJECT_NAME</span> <span class="sy0">=</span> <span class="st0">'SQLServer:Buffer Manager'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT *
FROM sys.dm_os_performance_counters  
WHERE counter_name = 'Page life expectancy'
AND OBJECT_NAME = 'SQLServer:Buffer Manager'</pre></div></div>

<p>Here is another short one, what account are my services running under?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> &nbsp;<span class="kw1">distinct</span> servicename,
&nbsp;service_account,status_desc
<span class="kw1">FROM</span> &nbsp; &nbsp;sys.<span class="me1">dm_server_services</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT  distinct servicename,
 service_account,status_desc
FROM    sys.dm_server_services</pre></div></div>

<p>Output</p>
<pre>servicename			service_account			status_desc
SQL Server (MSSQLSERVER)	NT ServiceMSSQLSERVER		Running
SQL Server Agent (MSSQLSERVER)	NT ServiceSQLSERVERAGENT	Stopped</pre>
<p>I only listed a handful of Dynamic Management Views, SQL Server 2008 R2 has 135 Dynamic Management Views, SQL Server 2012 as of CTP 3 has 174 Dynamic Management Views</p>
<p>Here is how you can get a list of all of them</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> master.<span class="me1">sys</span>.<span class="me1">sysobjects</span>
<span class="kw1">WHERE</span> name like <span class="st0">'dm[_]%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM master.sys.sysobjects
WHERE name like 'dm[_]%'</pre></div></div>

<p>The list below links to Books On Line for related Dynamic Management Views, if you want to know about mirroring Dynamic Management Views then click on the <a href="http://msdn.microsoft.com/en-us/library/ms173571.aspx">Database Mirroring Related Dynamic Management Views</a> link. I would say, go to each section and maybe spend a week on it&#8230;by the middle of spring you should be the Dynamic Management Views master  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><a href="http://msdn.microsoft.com/en-us/library/bb522478.aspx">Change Data Capture Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms190314.aspx">I/O Related Dynamic Management Views and Functions</a><br />
<a href="http://msdn.microsoft.com/en-us/library/cc627419.aspx">Change Tracking Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/bb630390.aspx">Object Related Dynamic Management Views and Functions</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms179982.aspx">Common Language Runtime Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms187407.aspx">Query Notifications Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms173571.aspx">Database Mirroring Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms176053.aspx">Replication Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms181626.aspx">Database Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/bb934218.aspx">Resource Governor Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms188068.aspx">Execution Related Dynamic Management Views and Functions</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms176110.aspx">Service Broker Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/bb677293.aspx">Extended Events Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms176083.aspx">SQL Server Operating System Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms174971.aspx">Full-Text Search Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms178621.aspx">Transaction Related Dynamic Management Views and Functions</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ms187974.aspx">Index Related Dynamic Management Views and Functions</a><br />
<a href="http://msdn.microsoft.com/en-us/library/bb677257.aspx">Security Related Dynamic Management Views</a><br />
<a href="http://msdn.microsoft.com/en-us/library/ff773106.aspx">Filestream-Related Dynamic Management Views (Transact-SQL)</a></p>
<p>That is all for today, come back tomorrow for the next part in this series</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/dynamic-management-views/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>How much longer will the SQL Server database restore take</title>
		<link>/index.php/datamgmt/datadesign/how-much-longer-will-the/</link>
		<comments>/index.php/datamgmt/datadesign/how-much-longer-will-the/#comments</comments>
		<pubDate>Fri, 02 Sep 2011 11:12:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dmv]]></category>
		<category><![CDATA[dynamic management views]]></category>
		<category><![CDATA[restore]]></category>

		<guid isPermaLink="false">/index.php/2011/09/how-much-longer-will-the/</guid>
		<description><![CDATA[Frequently you will be asked how much longer a restore will take because someone needs to do something with that specific database that is restoring right now

Of course we all know that the RESTORE DATABASE command has the STATS n option, this will g&#8230;]]></description>
				<content:encoded><![CDATA[<p>Frequently you will be asked how much longer a restore will take because someone needs to do something with that specific database that is restoring right now</p>
<p>Of course we all know that the RESTORE DATABASE command has the STATS n option, this will give you the percentage completed. This is nice but it doesn&#8217;t tell you when it will complete and if someone else started the restore how will you know how long it will take in that case?</p>
<p>Fear not, here is a query that will tell you exactly how long</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span>&nbsp; 
&nbsp; &nbsp; d.<span class="me1">PERCENT_COMPLETE</span> <span class="kw1">AS</span> <span class="br0">&#91;</span><span class="sy0">%</span>Complete<span class="br0">&#93;</span>,
&nbsp; &nbsp; d.<span class="me1">TOTAL_ELAPSED_TIME</span><span class="sy0">/</span><span class="nu0">60000</span> <span class="kw1">AS</span> ElapsedTimeMin,
&nbsp; &nbsp; d.<span class="me1">ESTIMATED_COMPLETION_TIME</span><span class="sy0">/</span><span class="nu0">60000</span> &nbsp; <span class="kw1">AS</span> TimeRemainingMin,
&nbsp; &nbsp; d.<span class="me1">TOTAL_ELAPSED_TIME</span><span class="sy0">*</span><span class="nu0">0.00000024</span> <span class="kw1">AS</span> ElapsedTimeHours,
&nbsp; &nbsp; d.<span class="me1">ESTIMATED_COMPLETION_TIME</span><span class="sy0">*</span><span class="nu0">0.00000024</span>&nbsp; <span class="kw1">AS</span> TimeRemainingHours,
&nbsp; &nbsp; s.<span class="kw1">text</span> <span class="kw1">AS</span> Command
<span class="kw1">FROM</span>&nbsp; &nbsp; sys.<span class="me1">dm_exec_requests</span> d 
<span class="sy0">CROSS</span> APPLY sys.<span class="me1">dm_exec_sql_text</span><span class="br0">&#40;</span>d.<span class="me1">sql_handle</span><span class="br0">&#41;</span><span class="kw1">as</span> s
<span class="kw1">WHERE</span> &nbsp;d.<span class="me1">COMMAND</span> <span class="sy0">LIKE</span> <span class="st0">'RESTORE DATABASE%'</span>
<span class="kw1">ORDER</span> &nbsp; <span class="kw1">BY</span> <span class="nu0">2</span> <span class="kw1">desc</span>, <span class="nu0">3</span> <span class="kw1">DESC</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT	
    d.PERCENT_COMPLETE AS [%Complete],
    d.TOTAL_ELAPSED_TIME/60000 AS ElapsedTimeMin,
    d.ESTIMATED_COMPLETION_TIME/60000	AS TimeRemainingMin,
    d.TOTAL_ELAPSED_TIME*0.00000024 AS ElapsedTimeHours,
    d.ESTIMATED_COMPLETION_TIME*0.00000024	AS TimeRemainingHours,
    s.text AS Command
FROM	sys.dm_exec_requests d 
CROSS APPLY sys.dm_exec_sql_text(d.sql_handle)as s
WHERE  d.COMMAND LIKE 'RESTORE DATABASE%'
ORDER	BY 2 desc, 3 DESC</pre></div></div>

<p>Here is the output for a fairly large database restore that I started last night</p>
<div class="tables">
<table>
<tr>
<th>%Complete</th>
<th>	ElapsedTimeMin</th>
<th>	TimeRemainingMin</th>
<th>	ElapsedTimeHours</th>
<th>	TimeRemainingHours</th>
<th>	Command</th>
</tr>
<tr>
<td>78.6186</td>
<td>	766</td>
<td>	208</td>
<td>	11.03301576</td>
<td>	2.99693760</td>
<td>	RESTORE database SomeDB</td>
</tr>
<table>
<p> As you can see the query returns elapsed time both in hours and minutes, time remaining  both in hours and minutes and also the percentage complete</p>
<p>Hopefully this will help you with those nagging types&#8230;&#8230;.<br />
</table>
</table>
</div>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-much-longer-will-the/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>
		</item>
		<item>
		<title>Find Out If You Are Using Deprecated Features In SQL Server 2008</title>
		<link>/index.php/datamgmt/datadesign/find-out-if-you-are-using-deprecated-fea-2008/</link>
		<comments>/index.php/datamgmt/datadesign/find-out-if-you-are-using-deprecated-fea-2008/#comments</comments>
		<pubDate>Thu, 14 Jan 2010 16:58:41 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dmv]]></category>
		<category><![CDATA[dynamic management views]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/01/find-out-if-you-are-using-deprecated-fea-2008/</guid>
		<description><![CDATA[Yesterday we used the sys.dm_os_performance_counters dynamic management view in the post Find Out What Percent Of The Log Is Being Used For Each Database In SQL Server 2005 and 2008 to find out the log space used, today we will use this dynamic management view to find out if we are using any deprecated features. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Yesterday we used the sys.dm_os_performance_counters dynamic management view in the post <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/find-out-what-percent-of-the-log-is-bein-2008">Find Out What Percent Of The Log Is Being Used For Each Database In SQL Server 2005 and 2008</a> to find out the log space used,  today we will use this dynamic management view to find out if we are using any deprecated features.</p>
<p>So you have upgraded your old server to SQL Server 2008 and you wonder if you have any deprecated features in your code. Well, there is a query for that, if I run this query below on one of my test servers where I have some databases that I just restored from a 2000 instance I get some results back</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> instance_name,cntr_value 
<span class="kw1">from</span> sys.<span class="me1">dm_os_performance_counters</span>
<span class="kw1">where</span> <span class="kw2">Object_name</span> <span class="sy0">=</span> <span class="st0">'SQLServer:Deprecated Features'</span>
and cntr_value <span class="sy0">&gt;</span> <span class="nu0">0</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select instance_name,cntr_value 
from sys.dm_os_performance_counters
where Object_name = 'SQLServer:Deprecated Features'
and cntr_value &gt; 0</pre></div></div>

<p>Here is the output from that query</p>
<pre>instance_name   					cntr_value
Macedonian                                                    	2
Lithuanian_Classic                                            	2
Korean_Wansung_Unicode                                        	2
Hindi                                                         	2
Azeri_Latin_90                                                	2
Azeri_Cyrillic_90                                             	2
'@' and names that start with '@@' as Transact-SQL identifiers	20
String literals as column aliases                             	646
ROWGUIDCOL                                                    	104
PERMISSIONS                                                   	2
'::' function calling syntax                                  	5
Oldstyle RAISERROR                                            	34
CREATE_DROP_DEFAULT                                           	15
Numbered stored procedures                                    	2
fulltext_catalogs.data_space_id                               	9
fulltext_catalogs.path                                        	9
sql_dependencies                                              	5
sysprocesses                                                  	4
numbered_procedures                                           	17
syscurconfigs                                                 	1
sysdatabases                                                  	73
sysaltfiles                                                   	9
syslogins                                                     	21
sysservers                                                    	2
sysindexkeys                                                  	24
syscolumns                                                    	29
sysindexes                                                    	14
sysreferences                                                 	17
sysfilegroups                                                 	1
sysfiles                                                      	392
sysobjects                                                    	59
sysusers                                                      	7
sysdepends                                                    	3
SET ANSI_PADDING OFF                                          	68
SET CONCAT_NULL_YIELDS_NULL OFF                               	68
SET ANSI_NULLS OFF                                            	68
SET ROWCOUNT                                                  	1485
Database compatibility level 80                               	21
ALTER DATABASE WITH TORN_PAGE_DETECTION                       	2
sp_dboption                                                   	1
sp_addlogin                                                   	1
DATABASEPROPERTYEX('IsFullTextEnabled')                       	369
DATABASEPROPERTY                                              	22576
INDEX_OPTION                                                  	25
XP_API                                                        	28
USER_ID                                                       	48
DBCC SHOWCONTIG                                               	4
Table hint without WITH                                       	603
Data types: text ntext or image                               	546
More than two-part column name                                	2
NOLOCK or READUNCOMMITTED in UPDATE or DELETE                 	1566                                                                                   </pre>
<p>Keep  in mind that I have some throw-away databases that I use to answer questions on newsgroups so some of these things that show up might be because of that.</p>
<p>So how does this query help you? Well, you are at least aware that you are using these deprecated features inside your code somewhere. It is time to call the object_definition function to find exactly where this happens <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>It could also be that internal code uses these deprecated features&#8230;.wouldn&#8217;t that be ironic?</p>
<p>You can also take a look at these blog posts by <a href="/index.php/All/?disp=authdir&amp;author=10">George Mastros</a> that show you how you can find out where some of this stuff is called from</p>
<p><a href="/index.php/DataMgmt/DataDesign/identify-procedures-that-call-sql-server">Identify procedures that call SQL Server undocumented procedures</a><br />
<a href="/index.php/DataMgmt/DBProgramming/don-t-use-text-datatype-for-sql-2005-and">Don&#8217;t use text datatype for SQL 2005 and up</a></p>
<p>In case you don&#8217;t have access to this dynamic management view, here is the whole list of deprcated features that this query returns</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> instance_name 
<span class="kw1">from</span> sys.<span class="me1">dm_os_performance_counters</span>
<span class="kw1">where</span> <span class="kw2">Object_name</span> <span class="sy0">=</span> <span class="st0">'SQLServer:Deprecated Features'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select instance_name 
from sys.dm_os_performance_counters
where Object_name = 'SQLServer:Deprecated Features'</pre></div></div>

<p>ALTER LOGIN WITH SET CREDENTIAL<br />
SQL_AltDiction_CP1253_CS_AS<br />
Macedonian<br />
Lithuanian_Classic<br />
Korean_Wansung_Unicode<br />
Hindi<br />
Azeri_Latin_90<br />
Azeri_Cyrillic_90<br />
sp_detach_db @keepfulltextindexfile<br />
DESX algorithm<br />
Vardecimal storage format<br />
SET DISABLE_DEF_CNST_CHK<br />
DEFAULT keyword as a default value<br />
&#8216;@&#8217; and names that start with &#8216;@@&#8217; as Transact-SQL identifiers<br />
&#8216;#&#8217; and &#8216;##&#8217; as the name of temporary tables and stored procedures<br />
String literals as column aliases<br />
IDENTITYCOL<br />
ROWGUIDCOL<br />
XMLDATA<br />
COMPUTE [BY]<br />
INSERT NULL into TIMESTAMP columns<br />
Non-ANSI *= or =* outer join operators<br />
FASTFIRSTROW<br />
sp_configure &#8216;ft notify bandwidth (min)&#8217;<br />
sp_configure &#8216;ft notify bandwidth (max)&#8217;<br />
sp_configure &#8216;ft crawl bandwidth (min)&#8217;<br />
sp_configure &#8216;ft crawl bandwidth (max)&#8217;<br />
sp_configure &#8216;priority boost&#8217;<br />
sp_configure &#8216;set working set size&#8217;<br />
sp_configure &#8216;open objects&#8217;<br />
sp_configure &#8216;locks&#8217;<br />
sp_configure &#8216;allow updates&#8217;<br />
sp_configure &#8216;disallow results from triggers&#8217;<br />
CREATE TRIGGER WITH APPEND<br />
PERMISSIONS<br />
GROUP BY ALL<br />
Multiple table hints without comma<br />
HOLDLOCK table hint without parenthesis<br />
&#8216;::&#8217; function calling syntax<br />
SETUSER<br />
Oldstyle RAISERROR<br />
DROP INDEX with two-part name<br />
Create/alter SOAP endpoint<br />
CREATE_DROP_DEFAULT<br />
CREATE_DROP_RULE<br />
Numbered stored procedures<br />
TIMESTAMP<br />
dm_fts_memory_buffers.row_count<br />
dm_fts_active_catalogs.row_count_in_thousands<br />
dm_fts_active_catalogs.worker_count<br />
dm_fts_active_catalogs.previous_status_description<br />
dm_fts_active_catalogs.previous_status<br />
dm_fts_active_catalogs.status_description<br />
dm_fts_active_catalogs.status<br />
dm_fts_active_catalogs.is_paused<br />
fulltext_catalogs.file_id<br />
fulltext_catalogs.data_space_id<br />
fulltext_catalogs.path<br />
dm_fts_memory_buffers<br />
dm_fts_active_catalogs<br />
fulltext_catalogs<br />
endpoint_webmethods<br />
soap_endpoints<br />
sql_dependencies<br />
sysperfinfo<br />
fn_servershareddrives<br />
fn_virtualservernodes<br />
sysprocesses<br />
syscacheobjects<br />
fn_get_sql<br />
database_principal_aliases<br />
numbered_procedure_parameters<br />
numbered_procedures<br />
syscurconfigs<br />
sysconfigures<br />
sysopentapes<br />
sysdevices<br />
syslockinfo<br />
sysdatabases<br />
sysaltfiles<br />
syslogins<br />
sysoledbusers<br />
sysremotelogins<br />
sysmessages<br />
sysservers<br />
systypes<br />
sysindexkeys<br />
syscolumns<br />
sysindexes<br />
sysconstraints<br />
sysforeignkeys<br />
sysreferences<br />
sysfilegroups<br />
sysfiles<br />
syscomments<br />
sysobjects<br />
sysusers<br />
sysdepends<br />
sysfulltextcatalogs<br />
syspermissions<br />
sysprotects<br />
sysmembers<br />
sp_fulltext_service @action=resource_usage<br />
sp_fulltext_service @action=data_timeout<br />
sp_fulltext_service @action=connect_timeout<br />
sp_fulltext_service @action=clean_up<br />
MODIFY FILEGROUP READWRITE<br />
MODIFY FILEGROUP READONLY<br />
UPDATETEXT or WRITETEXT<br />
READTEXT<br />
SET ANSI_PADDING OFF<br />
SET CONCAT_NULL_YIELDS_NULL OFF<br />
SET ANSI_NULLS OFF<br />
SET REMOTE_PROC_TRANSACTIONS<br />
SET ROWCOUNT<br />
Database compatibility level 90<br />
Database compatibility level 80<br />
RESTORE DATABASE or LOG WITH PASSWORD<br />
RESTORE DATABASE or LOG WITH MEDIAPASSWORD<br />
ADDING TAPE DEVICE<br />
BACKUP DATABASE or LOG TO TAPE<br />
BACKUP DATABASE or LOG WITH PASSWORD<br />
BACKUP DATABASE or LOG WITH MEDIAPASSWORD<br />
ALTER DATABASE WITH TORN_PAGE_DETECTION<br />
RESTORE DATABASE or LOG WITH DBO_ONLY<br />
sp_estimated_rowsize_reduction_for_vardecimal<br />
sp_helpdevice<br />
sp_lock<br />
sp_getbindtoken<br />
sp_bindsession<br />
sp_helpextendedproc<br />
sp_dropextendedproc<br />
sp_addextendedproc<br />
sp_help_fulltext_catalog_components<br />
sp_help_fulltext_tables_cursor<br />
sp_help_fulltext_tables<br />
sp_help_fulltext_columns_cursor<br />
sp_help_fulltext_columns<br />
sp_help_fulltext_catalogs_cursor<br />
sp_help_fulltext_catalogs<br />
sp_fulltext_column<br />
sp_fulltext_table<br />
sp_fulltext_database<br />
sp_fulltext_catalog<br />
sp_db_vardecimal_storage_format<br />
sp_resetstatus<br />
sp_attach_single_file_db<br />
sp_attach_db<br />
sp_dbcmptlevel<br />
sp_renamedb<br />
sp_indexoption<br />
sp_dboption<br />
sp_dbremove<br />
sp_create_removable<br />
sp_certify_removable<br />
sp_remoteoption<br />
sp_helpremotelogin<br />
sp_dropremotelogin<br />
sp_addremotelogin<br />
sp_addserver<br />
sp_depends<br />
sp_dropalias<br />
sp_unbindrule<br />
sp_bindrule<br />
sp_unbindefault<br />
sp_bindefault<br />
sp_droptype<br />
sp_addtype<br />
sp_change_users_login<br />
sp_srvrolepermission<br />
sp_dbfixedrolepermission<br />
xp_loginconfig<br />
sp_changeobjectowner<br />
sp_droprole<br />
sp_addrole<br />
sp_approlepassword<br />
sp_dropapprole<br />
sp_addapprole<br />
sp_revokedbaccess<br />
sp_grantdbaccess<br />
sp_dropuser<br />
sp_adduser<br />
sp_defaultlanguage<br />
sp_defaultdb<br />
sp_password<br />
xp_revokelogin<br />
xp_grantlogin<br />
sp_revokelogin<br />
sp_denylogin<br />
sp_grantlogin<br />
sp_droplogin<br />
sp_addlogin<br />
IN PATH<br />
FULLTEXTSERVICEPROPERTY(&#8216;ConnectTimeout&#8217;)<br />
FULLTEXTSERVICEPROPERTY(&#8216;DataTimeout&#8217;)<br />
FULLTEXTSERVICEPROPERTY(&#8216;ResourceUsage&#8217;)<br />
DATABASEPROPERTYEX(&#8216;IsFullTextEnabled&#8217;)<br />
FULLTEXTCATALOGPROPERTY(&#8216;LogSize&#8217;)<br />
FULLTEXTCATALOGPROPERTY(&#8216;PopulateStatus&#8217;)<br />
DATABASEPROPERTY<br />
sp_configure &#8216;remote proc trans&#8217;<br />
SET OFFSETS<br />
ALL Permission<br />
INSERT_HINTS<br />
INDEX_OPTION<br />
OLEDB for ad hoc connections<br />
XP_API<br />
Using OLEDB for linked servers<br />
DBCC INDEXDEFRAG<br />
REMSERVER<br />
INDEXKEY_PROPERTY<br />
USER_ID<br />
FILE_ID<br />
EXTPROP_LEVEL0USER<br />
EXTPROP_LEVEL0TYPE<br />
Returning results from trigger<br />
DBCC [UN]PINTABLE<br />
DBCC DBREINDEX<br />
DBCC SHOWCONTIG<br />
Text in row table option<br />
Table hint without WITH<br />
Indirect TVF hints<br />
TEXTVALID<br />
TEXTPTR<br />
Data types: text ntext or image<br />
More than two-part column name<br />
Index view select list without COUNT_BIG(*)<br />
NOLOCK or READUNCOMMITTED in UPDATE or DELETE          </p>
<p>*** <strong>Remember, if you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/find-out-if-you-are-using-deprecated-fea-2008/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Find Out What Percent Of The Log Is Being Used For Each Database In SQL Server 2005 and 2008</title>
		<link>/index.php/datamgmt/dbprogramming/find-out-what-percent-of-the-log-is-bein-2008/</link>
		<comments>/index.php/datamgmt/dbprogramming/find-out-what-percent-of-the-log-is-bein-2008/#comments</comments>
		<pubDate>Wed, 13 Jan 2010 15:38:54 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[dmv]]></category>
		<category><![CDATA[dynamic management views]]></category>
		<category><![CDATA[sql server 2005]]></category>
		<category><![CDATA[sql server 2008]]></category>

		<guid isPermaLink="false">/index.php/2010/01/find-out-what-percent-of-the-log-is-bein-2008/</guid>
		<description><![CDATA[Sometimes you want to quickly see the percentage of log spaced that each database is using on your server. In SQL Server 2005 and 2008 you can use the sys.dm_os_performance_counters dynamic management view to find out this information. The query below will list all database and the percentage of log spaced used. The cntr_value column [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sometimes you want to quickly see the percentage of log spaced that each database is using on your server. In SQL Server 2005 and 2008 you can use the sys.dm_os_performance_counters dynamic management view to find out this information. The query below will list all database and the percentage of log spaced used. The cntr_value column will have the percent of the log file that is being used and instance_name will be the database name.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> instance_name,cntr_value <span class="kw1">from</span> sys.<span class="me1">dm_os_performance_counters</span>
<span class="kw1">where</span> <span class="kw2">Object_name</span> <span class="sy0">=</span> <span class="st0">'SQLServer:Databases'</span> &nbsp; 
and counter_name <span class="sy0">=</span> <span class="st0">'Percent Log Used'</span> 
and instance_name <span class="sy0">&lt;&gt;</span> <span class="st0">'_Total'</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<span class="kw1">order</span> <span class="kw1">by</span> &nbsp; cntr_value <span class="kw1">desc</span> &nbsp;</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select instance_name,cntr_value from sys.dm_os_performance_counters
where Object_name = 'SQLServer:Databases'   
and counter_name = 'Percent Log Used' 
and instance_name &lt;&gt; '_Total'                                                                                                                          
order by   cntr_value desc  </pre></div></div>

<p>Here is the output from that query.</p>
<pre>&lt;strong&gt;instance_name       cntr_value&lt;/strong&gt;
model		    90
ReportServerTempDB  66
master              65
mssqlsystemresource 55
ReportServer        55
tempdb              50
msdb                5</pre>
<p>Notice that I filtered out the total with this clause <em>and instance_name <> &#8216;_Total&#8217;</em> The total number doesn&#8217;t really make sense for that query. </p>
<p>Now let&#8217;s take a look at another query. What if I want to know the size in KB for each log size and also for all of them combined? Here is the query for that.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> instance_name,cntr_value <span class="kw1">from</span> sys.<span class="me1">dm_os_performance_counters</span>
<span class="kw1">where</span> <span class="kw2">Object_name</span> <span class="sy0">=</span> <span class="st0">'SQLServer:Databases'</span> &nbsp; 
and counter_name <span class="sy0">=</span> <span class="st0">'Log File(s) Size (KB)'</span> &nbsp; 
<span class="kw1">order</span> <span class="kw1">by</span> &nbsp; cntr_value <span class="kw1">desc</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select instance_name,cntr_value from sys.dm_os_performance_counters
where Object_name = 'SQLServer:Databases'   
and counter_name = 'Log File(s) Size (KB)'   
order by   cntr_value desc </pre></div></div>

<p>Here is the output from that query.</p>
<pre>&lt;strong&gt;instance_name		cntr_value&lt;/strong&gt;
_Total			37524936
iSource_Report		14539576
iSource_Distribution	13217784
DJHFI_Research_db	8207096
msdb			625784
tempdb			102136
master			2808
ReportServer		1016
model			1016
ReportServerTempDB	760
mssqlsystemresource	504</pre>
<p>As you can see _Total is the first thing listed and it is actually a sum of all the log files in the query. The numbers don&#8217;t add up in my output because I removed some database names after running the query.</p>
<p>Since I showed you how to do the log files, here is a way how to show the size of all the data files. here is the query for the data files</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">select</span> instance_name,cntr_value <span class="kw1">from</span> sys.<span class="me1">dm_os_performance_counters</span>
<span class="kw1">where</span> <span class="kw2">Object_name</span> <span class="sy0">=</span> <span class="st0">'SQLServer:Databases'</span> &nbsp; 
and counter_name <span class="sy0">=</span> <span class="st0">'Data File(s) Size (KB)'</span> &nbsp; 
<span class="kw1">order</span> <span class="kw1">by</span> &nbsp; cntr_value <span class="kw1">desc</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">select instance_name,cntr_value from sys.dm_os_performance_counters
where Object_name = 'SQLServer:Databases'   
and counter_name = 'Data File(s) Size (KB)'   
order by   cntr_value desc </pre></div></div>

<p>And here is the output</p>
<pre>&lt;strong&gt;instance_name		cntr_value&lt;/strong&gt;
_Total			58232704
msdb                    13512512
tempdb                  1542720
mssqlsystemresource     39232
master                  6720
ReportServer            4288
ReportServerTempDB      3264
model                   2240</pre>
<p>And just as with the log size query, you can see _Total is the first thing listed and it is actually a sum of all the data files in the query. The numbers don&#8217;t add up in my output because I removed some database names after running the query.</p>
<p>I will be back with another post tomorrow showing you how you can use the sys.dm_os_performance_counters dynamic management view to see if you are still using any deprecated features in your database.</p>
<p>*** <strong>Remember, if you have a SQL related question try our <a href="http://forum.lessthandot.com/viewforum.php?f=17">Microsoft SQL Server Programming</a> forum or our <a href="http://forum.lessthandot.com/viewforum.php?f=22">Microsoft SQL Server Admin</a> forum</strong><ins></ins></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/find-out-what-percent-of-the-log-is-bein-2008/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
	</channel>
</rss>
