<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>kanban &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/kanban/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Applying Kanban to IT Processes (Part 5)</title>
		<link>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-5/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-5/#comments</comments>
		<pubDate>Wed, 30 Dec 2009 12:58:17 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Project Management]]></category>
		<category><![CDATA[kanban]]></category>
		<category><![CDATA[process improvement]]></category>

		<guid isPermaLink="false">/index.php/2009/12/applying-kanban-to-it-processes-part-5/</guid>
		<description><![CDATA[This is the fifth and final article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. Part one provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment. The first [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><em>This is the fifth and final article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1">Part one</a> provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment.</em></p>
<p>The first four articles discuss the basics of Kanban and follow it&#8217;s application in three fictional environments. In each of these stories the implementation is successful and there are positive improvements in a fairly short period of time. This final article briefly discusses some common challenges and the concept of continuous improvement.  Unlike previous articles in the series, this one does not have illustrations, so I apologize in advance to those of our members that prefer a higher picture-to-text ratio in their reading material (*cough* George).</p>
<h2>Implementing Kanban</h2>
<p>The fictional stories in previous articles all followed a common theme, successful improvement of the process with few or no challenges. However for those of us working in the real world, we are all too aware that no plan or process can be launched without challenges. While addressing all of the potential challenges in each reader&#8217;s environment may be well beyond the scope of both my skill and this article, there are two common challenges to Kanban that most of us will face in IT environments.</p>
<h3>Changing Habits</h3>
<p>In addition to the challenges of defining our processes and attempting to standardize tasks that are often the exceptions to standards, following a Kanban process will also force us to challenge some ingrained habits. The idea of limiting the amount of Work in Process (WIP) in a step may sound good in an article, but actually submitting to limits is challenging the first few times . Many management styles have a tendency to focus on how much time is spent working or how many tasks an individual is completing and, with these styles, stopping work in a single step is akin to putting your feet up on your desk and taking a nap.<br />
Kanban forces us to face these measurement systems and correct some of the flaws they drive into our processes. Rather than measure how hard an individual is working in a single step, we measure how well we deliver through the entire process. Rather than measure how many hours an individual is working, we can measure how many hours of work we have removed from the process. Where the old measurement system is asking why we aren&#8217;t piling up more work in between development and QA, Kanban is forcing us to question how we can improve the throughput or decrease the rework rate.<br />
Ingrained habits are difficult to change. Instead of challenging these beliefs directly, start by modeling the process and tasks that are flowing through them. There are separate challenges in this modeling process, but once the visualization is in place and you start getting others involved in refining that visualization and tracking tasks through it, many of these challenges will go away. The ability to see the tasks flow through the process fulfills a need that many people have, providing visibility and insight into the process that previously was ruled by estimation and occasional guesswork.</p>
<h3>&#8220;IT is not Manufacturing&#8221;</h3>
<p>Another common challenge to Kanban is the fact that, having originated in Manufacturing environments, it is not suitable for an IT environment. This is a widely stated argument against Kanban (and Lean principles in general) and it has been soundly disproved in a wide number of industries. The idea that practices or knowledge from one industry cannot be used to further our understanding in others seems a bit egotistical, especially when coupled with arguments that any one area is too specialized to learn anything from others. If this were truly the case then the medical advances we gain from the space program would never have occurred, and neither would hundreds of other concepts and ideas that have crossed industry boundaries to breed new ideas or products in other, dissimilar industries.<br />
Occasionally the argument is couched in less direct terms, citing the difference between manufacturing plants producing discrete, repetitive parts and the constantly changing tasks in an IT environment. Given a few minutes with your favorite search engine, you will find examples in a number of industries, including software development, where Kanban has not only been implemented successfully, but has led the way for continuous improvement and other practices with roots in Manufacturing. While that may not be the most philosophical answer to the challenge, I don&#8217;t see where out time is well spent formulating a logical proof for something so easily observed.</p>
<p>Applying Kanban is not rocket science, but it does require thought and it does require time. Luckily there are whole communities of people out there who are willing to answer questions, refer experts, and suggest good books. </p>
<h2>Why Kanban</h2>
<p>The previous articles showed Kanban working in fictional environments, but did not spend much time explaining how or why it was working the way it did. The articles do not share details on the methods the teams use to isolate targets for improvement or how those improvements are determined. Making changes in real processes can be both as easy as the stories, and quite a bit more challenging. What we get from Kanban is a tool that help locate trouble spots or areas to focus our efforts for greatest effect.<br />
As we implement Kanban, we begin to complete tasks in a consistent manner. This consistency improves our execution speed because we can make assumptions about the tasks we receive; they meet a certain level of conformity and have a certain common set of requirements and characteristics. This reduces the number of times we have to return to earlier steps, reroute tasks through new steps, or invent processes on the fly. The act of creating the Kanban board helps drive us to find or build that consistency, and further reduces some of the overhead of determining where tasks are to be routed or their current statuses. The board provides a high-level view of cards or groups of cards moving through the process, bringing to light bottlenecks and eddies in the process flow that are not visible from inside the process. Root cause analysis of the bottlenecks shows us  areas where a step improvement will directly correlate to a process wide improvement.</p>
<h3>Continuous Improvement</h3>
<p>The term &#8216;Continuous Improvement&#8217; shows up in several of the articles and the concept is present in all of them. The principle of continuous improvement is to make small, incremental improvements to a process that, over a long term, build towards great savings and quality improvements. Individual improvements are made by finding and analyzing a waste in the process (such as wasted material, movement, safety hazards) or many wastes in a single step of the process (such as the defect testing in the software development article). By determining the root cause of the waste or wastes, and making small process improvements to reduce or remove that waste, targets or methods for improvement become available. By slowly paring away at the wastes in our processes, we improve the quality, cost, and timing characteristics of our process. </p>
<p>Kanban helps Continuous Improvement efforts by providing a consistent flow and visualization of our process. The visualization and standardization of the process cause exceptions and bottlenecks to become more visible, giving us focal points for our improvement efforts. Once improvements have been made, the Kanban board can then show us how those changes affect the greater process and if the improvements have improved the overall process, uncovered new issues, or failed to solve the root problem.</p>
<h3>Quality and Cost</h3>
<p>While Kanban provides us with the ability to locate and improve process issues that reduce our delivery time, it does not necessarily provide tools for reducing cost or improving quality. While we saw quality and cost improved in the example articles, this was often as a byproduct of improving a cycle time bottleneck. Kanban does provide us some guidelines that can be re-used, however. As with cycle time, if we want to improve quality or costs we need to use our process and track where our costs and quality problems are realized and focus on these areas.</p>
<h4>Quality Improvement Example</h4>
<p>For example, if we want to concentrate on quality we can create standards defining the level of quality in our end product and begin testing against them. As we test, we can track the cards (or lots) that fail the quality testing and return for rework (article 3) or are scrapped (thrown out) and later replaced by additional work. Using the frequency of the problems and the cost used to produce the task before each quality problem was found, we can create a fairly simple cost distribution to determine our greatest opportunities for improvement. In some cases we can design quality issues out of the process, in others we can drive the testing earlier in our process to reduce the amount we are investing before problems are found.</p>
<h4>Quality/Time/Cost &#8211; All Please</h4>
<p>In IT, we often quote the cost/quality/time triangle to people who expect all three with no additional work or investment. Using the example above, we could easily replace quality with cost and build a simple method for finding the greatest opportunities for cost improvements. Because wastes often effect more than one of these legs of the triangle, we could choose to improve our cycle times, quality, or costs and generally improve the others as a byproduct.<br />
It is not uncommon in the manufacturing world to decrease quality problems, timing, and cost far enough to improve capacity 25-50% without hiring new additional employees or purchasing new equipment. In IT we often count on technology to drive the improvements, but technology is something that any of our competitors can buy and availability is dictated by the market, not our needs. To get ahead of our deadlines and competitors, to get our vacations back, or to get annual raises that are above the annual inflation rate, we need to go beyond what the vendors are offering and create a higher quality of service and business engagement. Reducing costs, improving quality, and reducing delivery time all affect the bottom line, improve the effectiveness of the rest of the business, and look good on the end of year review. And in the event that a company is less interested in effectiveness and more interested in the number of hours on the clock, cumulative improvements also make excellent bullet items on resumes.</p>
<h2>More Opportunity</h2>
<p>There are many other opportunities for Kanban than the ones outlined in the other articles, and many other articles providing information and background on Kanban. The three examples in prior articles were chosen to display a wide variety of problem spaces:</p>
<ul>
<li>A support environment is handling an unknown number of tasks on demand, each consisting of a completely different set of tasks and work</li>
<li>A PC deployment process that is similar to manufacturing but requires two people to run multiple steps with a process that is only used every year or two</li>
<li>A software development process that defines their own tasks as subsets of greater features or modules</li>
</ul>
<p>It is hoped that these three examples are close enough to other tasks in our respective departments that we can see ideas on how to apply Kanban to our own areas and tasks. Other ideas include:</p>
<ul>
<li>A report designer can define a common process of designing, developing, revising, and deploying reports and start tracking down inefficiencies that bog down the process.</li>
<li>A database administrator can start looking at their transaction queue mechanisms and create a Kanban-like visualization of the process to help clear the bottlenecks by focusing improvements where they would count the most.</li>
<li>A Systems Administrator can design a system review and upgrade schedule for each of their functional areas and start looping the entire list of areas through that process, each time reducing the work or time involved in evaluating new technology options or implementing patches and maintenance.</li>
</ul>
<p>This series is not going to be the last time I talk about Kanban, but I will also discuss a number of other practices, philosophies, or technologies. If there are further questions, topics of interest, or even if you want to argue about the efficacy of Kanban, feel free to post in the <a href=""http://forum.lessthandot.com/" title="To the Forums!">Forums</a>.  </p>
<h3>Thanks</h3>
<p>I would like to thank everyone that has helped me review and edit these articles. Over the course of their publication I have gone from a week ahead to writing a few days prior to publication and the help of several members has been invaluable:</p>
<ul>
<li> Tim (Riverguy) and David (Thirster), who caught some critical errors in the first couple articles</li>
<li> Erik (Emtucifer), who provided a very thorough review of the first article</li>
<li> Fionnuala (Remou) who has provided reviews for later articles, and saved me from editing one article to death</li>
<li> Ted (onpnt) for reading (or pretending to read) each article and providing frequent positive feedback</li>
</ul>
<p>If you have missed prior articles in the series you can find them here:<br />
Applying Kanban &#8230; Part 1: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1" title="Read the first article">Kanban Overview</a><br />
Applying Kanban &#8230; Part 2: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-2" title="Read the second article">Kanban applied to Tech Support</a><br />
Applying Kanban &#8230; Part 3: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-3" title="Read the third article">Kanban applied to PC Deployment</a><br />
Applying Kanban &#8230; Part 4: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-4" title="Read te fourth article">Kanban applied to a Development Group</a><br />
<em>Applying Kanban &#8230; Part 5: Challenges, Additional Concepts, and Wrapup</em></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-5/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Applying Kanban to IT Processes (Part 4)</title>
		<link>/index.php/itprofessionals/projectmanagement/applying-kanban-to-it-processes-part-4/</link>
		<comments>/index.php/itprofessionals/projectmanagement/applying-kanban-to-it-processes-part-4/#comments</comments>
		<pubDate>Tue, 22 Dec 2009 11:01:39 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[Project Management]]></category>
		<category><![CDATA[kanban]]></category>
		<category><![CDATA[measurement]]></category>
		<category><![CDATA[process improvement]]></category>

		<guid isPermaLink="false">/index.php/2009/12/applying-kanban-to-it-processes-part-4/</guid>
		<description><![CDATA[This is the fourth article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. Part one provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment. Several times in the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><em>This is the fourth article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1">Part one</a> provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment.</em></p>
<div style="background-color: #eeeeee; padding: 1em; font-style: italic">
Several times in the past week I considered rescheduling this article, but despite overtime, a dead car, potential snow and ice, a virus infection on my wife&#8217;s computer, numerous small devices failing at home and work, and finally a power outage, we have still managed to get it published. Unfortunately the drawings are missing some minor touches, as the power outage happened to coincide with the &#8216;adding of the magnets&#8217; in photoshop.
</div>
<p>In part four of the &#8216;Applying Kanban&#8217; series, we are following a software development team. They currently follow a process that has been referred to as a <a href="http://en.wikipedia.org/wiki/Waterfall_model#Sashimi_model" title="Sashimi model at Wikipedia">sashimi model</a>, a modified waterfall model that incorporates overlapping phases of design, requirements, development, and testing. This example focuses on using Kanban to enhance and refine a current process rather than execute a complete process conversion.</p>
<h2>Welcome to GHI Inc</h2>
<p>GHI Inc is a small development company that focuses on retail inventory and logistics systems. Their business focus is building and integrating systems that manage communications and transaction processing for <a href="http://en.wikipedia.org/wiki/Business-to-business" title="Business-to-Business at Wikipedia">B2B</a> and <a href="http://en.wikipedia.org/wiki/Business-to-consumer" title="Business-to-Consumer at Wikipedia">B2C</a> integration. One of their current challenges they have chosen to focus on is tracking and reporting progress. Because their products require a great deal of business logic and back-end processing and very little front-end interface, the customer cannot see the growth and development of the product. Improving the tracking and reporting mechanisms will provide the customer with more information on how the project is progressing, increasing their confidence level in both the solution and the company. The company believes that improved confidence will not only affect the relationship with this customer, but improve their image in the marketplace with other potential customers as well.</p>
<h3>Current State</h3>
<p>The team&#8217;s current process begins with gathering high-level requirements and building a general architecture, without any of the detailed business rules or logic. Once the skeleton is developed, the team focuses on iteratively gathering requirements and building the more detailed modules necessary to add flesh to the skeleton. The overall systems design follows an N-tier approach, with defined layers for data access, business logic, separate transaction and translation processes for each external system, and a limited user interface. The iterative focus on detailed modules allows discovery of the deeper business logic and requirements to occur relatively close to the development against those requirements. This modular approach also allows portions of the system to be test-driven against real third party systems without requiring the entire solution to be complete. These test-drives also allow the customer&#8217;s technical staff and business analysts to get involved and find conflicts earlier.</p>
<p>The team has been challenged with providing better visibility and clear measurements that can be shared with the customer. While many of the team members are interested in trying Agile methods, such as Scrum or XP, the team decides that applying Kanban to their initial process will be a smaller change from the customer viewpoint. Once they have better visibility and measurement they intend to re-evaluate the potential of using Scrum or another Agile methodology, as they feel a progression would be acceptable to the customers where a complete process changeover may not.</p>
<p>As part of the ongoing efforts, the team is also looking for a way to improve their delivery speed. Most of the team agrees that an additional developer would speed up their delivery process by at least 15%, but they won&#8217;t be able to make the case for additional headcount without some convincing metrics or measurements that support their claims.</p>
<h2>Defining the Process</h2>
<p>Over the course of several long meetings, the team builds a definition of their process as a series of clearly delineated steps that they follow in cycles, iteratively focusing on smaller pieces. </p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/Pt_4_Sashimi.png" title="Sample Sashimi Process Drawing" /><br />
Iterative waterfall process (Sashimi)
</div>
<p>Though the process they follow is almost fractal in it execution, each finer-detailed pass follows a common series of steps:</p>
<dl>
<dt>Remaining Work</dt>
<dd>Undefined work that needs to be designed and developed</dd>
<dt>Requirements</dt>
<dd>Gathering business or third party requirements on a task or module</dd>
<dt>Design </dt>
<dd>Applying the design standards and model and external requirements to build a design for the task or module</dd>
<dt>Development</dt>
<dd>Developing to the design and requirements</dd>
<dt>Testing</dt>
<dd>Testing completed development for defects* and alignment with the requirements</dd>
<dt>Customer Review and Acceptance</dt>
<dd>Reviewing groups of tasks with technical staff, business analysts, or third party services</dd>
</dl>
<p>The team currently has a project manager, five developers, and a dedicated QA person. After laying out their process, they have decided that one of the developers will be in charge of architecture (requirements and design), the project manager will be responsible for the customer steps and the prioritization of remaining work (with assistance from the architect), and that the remaining developers and QA person will take the development and testing steps. The architect will also be responsible for part-time development if they get ahead on the requirements and design process.</p>
<div style="background-color: #eeeeee; padding: 1em; font-style: italic">
Defects are imperfections in a product that occur during normal production or operation. Examples of defects in software engineering are mis-typed code, referencing variables incorrectly, and other technical errors. Requirements-level issues are problems like missing options in search filters, incorrect layout of a form, and other items that are directly driven by the customer.<br />
Example: The customer will never specifically ask that a validation function not crash the server, therefore an error in a validation function that crashes a server falls into the defect category
</div>
<h3>Visual Board 1</h3>
<p>For visualization and tracking purposes, the team expands several steps into sub-steps. The Requirements and Design step has been defined as a series of three sub-steps, with the last step being a &#8216;ready&#8217; step that indicates tasks that developers can pick up and begin developing on. Development has been split into two distinct sub-steps, a &#8216;working&#8217; step and a &#8216;completed&#8217; step. Items in the &#8216;completed&#8217; sub-step are available for QA to pick up and test.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt4_VisBoard_4a.png" title="Initial Process Steps" /><br />
The first Visual Board
</div>
<p>The team uses a large magnetic whiteboard as the canvas for their Kanban board. Rather than use swim-lanes to visualize work in progress, they create &#8216;buckets&#8217; on the board that have a places for tasks and for a magnetic holder with the team member&#8217;s picture. For example, when the team architect is gathering requirements for a task they place their picture in the requirements area with the task they are currently working on. The project manager has donated a set of colorful animal stamps which the team members will use to stamp tasks as they complete them, enabling the rest of the team to easily track who has worked on a task. This allows the QA or a follow-up developer to easily communicate back to the original developer without any complex tracking mechanisms.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt4_VisBoard_4b.png" title="Upadted with Kanban Limits" /><br />
Kanban Limits
</div>
<p>The Kanban limits are created based on the number of people assigned to each step and some rough guesses as to how much work can be at each step without later steps running out of work. The Requirements and Design area is limited to three tasks to balance between keeping requirements information fresh and providing enough work for the development step. The development area has a limit of five tasks to allow the architect to move forward and develop on small tasks when the limit is reached for Requirements and Design. The QA step is limited to a single task, pulled from the completed development tasks. This allows the QA person to complete a round of tests without the complications of new development being deployed in mid-test. The queue of items pending customer review is not limited because the project manager already has regular weekly meetings with the customer to discuss completed tasks. The queue allows the project manager to pick sets of completed tasks to discuss based on the attendees, or to send out early reminders to ensure the correct attendees will be present.</p>
<h3>Executing the New Process</h3>
<p>Initially the process is a little rough, as the team tries to finish tasks that are over the limits and flush this work through the system. The architect begins acclimating to a role that requires more time with whiteboards and less with a code editor. The project manager begins making the transition from managing the flow of tasks through the process, to managing the prioritization and improving communications with the customer.</p>
<p>After a few weeks the process is flowing more smoothly. The project manager prioritizes the tasks in the outstanding queue, occasionally involving the architect to ensure the design requirements are taken into account. The architect picks up tasks from the top of the priority stack, gathers more detailed requirements from the customer, and builds an overall design that incorporates the requirements and aligns with the high level design. When the requirements and design step reaches the Kanban limit, the architect move forward to the development step and either helps one of the developers or picks up a small task to complete on their own. The developers pick up tasks from the architecture steps and develop against them. After completing a task they move it to the &#8216;done&#8217; sub-step and either assist one of the other developers or pick up a new task. When the development step reaches its Kanban limit, developers without tasks move forward to assist the QA person in testing in order to clear the roadblock. The QA person tests each task, looking for defects as well as alignment with customer requirements and internal design. </p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt4_VisBoard_4b_QA.png" title="QA Tasks return or move forward" /><br />
Tasks from QA return to Development or move forward
</div>
<p>After testing a task, the QA person either puts it back in the development area to be corrected or moves it forward to the pending queue. Returning a task to the developers will commonly cause the Kanban limit to be reached or exceeded for development. the next developer that reaches a stopping point then either helps continue testing or picks up the returned task and corrects the outstanding issues.</p>
<h2>First Revision</h2>
<p>As part of the initial process definition, the team agreed to review and revise their process on a regular basis. During the first few weeks, the project manager has been collects high level statistics to baseline their throughput and provide information for re-evaluation of the process. The detail information includes statistics on how often tasks return from testing, how often the architect or developers move forward in the process to help clear roadblocks, and a general estimation of how the customer reacts in each weekly review meeting.</p>
<h3>Evaluation</h3>
<p>There were a number of partially completed tasks when the team started and they expected the QA step to stabilize after they worked through those tasks. Unfortunately this has not occurred and in order to keep up with a regular flow of tasks, developers are often moving forward to help QA clear a backlog. The couple of times the developers had exceptional days, QA roadblocked almost immediately, requiring several developers to help clear the backlog. </p>
<p>The architect role requires less time than originally estimated, leading the architect to do development work about 50% of the time. This causes nearly every task completed by the architect to require debugging or correction by one of the developers, further reducing the effectiveness of the process by forcing someone unfamiliar with a task&#8217;s requirements and code to quickly troubleshoot and correct it.</p>
<h3>Process Changes</h3>
<p>Initially the team believed that the biggest limitation on completing tasks was manpower and that increasing the number of developers would drive a direct increase in the number of tasks they were completing each week. However, after working with their refined and more measurable process, they have found that adding more developers would provide little to no benefit because the current constraint on their process is getting tasks through the bottleneck at QA. If they increase the throughput of this step then the entire process will be able to move more smoothly and produce at a higher throughput, as QA will be able to pull tasks from the development area more quickly.</p>
<p>The team considers several ideas for increasing the manpower at the testing step, including hiring an additional QA person and having the architect work part-time on QA, instead of development. After discussing several options, one team member suggests using the architect and any ongoing developer downtime to build automated tests. The theory is that automating some of the tests will not only reduce the amount of work the QA person is required to do against each task, but will also reduce the number of tasks that are returned from QA to development for debugging and correction. The team decides to try this process change because it requires no additional spending and it makes little negative impact to have the architect working on unit tests instead of helping to complete work against the development Kanban limit. </p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt4_VisBoard_4c.png" title="Revised version of Kanban board" /><br />
Revised Kanban Board w/ Additional Steps
</div>
<p>The Kanban board is modified to include a test-creation sub-step as part of the requirements and design process. The architect is responsible for building a number of test cases for each task as part of the task definition. When the limits for the requirements area are reached, the architect works on building tests against previously completed modules. This ensures that ongoing tasks have automated tests and, as time progresses, coverage grows for testing module integration and any potential side-effects or gaps when integrating the designed modules together. </p>
<p>The limit for the development step on the board is increased and a small area is created for tasks returning from QA. These tasks are treated as higher priority than tasks from the requirements area to ensure that mostly completed tasks are corrected and completed before new work is started. To help increase the efficiency of developers correcting or debugging code written by others, a new code review standard is put in place. Each time a task is completed the developer reviews the code with one or more of the other developers to ensue it is straightforward, commented where necessary, and follows existing code standards. This process is relatively quick and reduces the costs and extra time involved in troubleshooting tasks someone else originally worked on.</p>
<h2>Final Analysis</h2>
<p>While the team will continue to re-evaluate and revise their process every few weeks, they have already achieved a number of improvements over both their original process and the first defined version with Kanban limits.</p>
<h3>Process Flow</h3>
<p>The team has not revised their prioritization, requirements, or design process, so these steps continue to work similar to the fashion they did prior to applying Kanban limits. The new process of creating unit tests for the tasks was slow for the first week, but as the architect gained experience with the testing framework and the idea of building tests, the process of building tests has become smoother and has started allowing for time to build tests against previously completed modules. As developers complete tasks they first look in their &#8216;corrections&#8217; queue from QA to see if any tasks are waiting to be debugged or revised. This places priority on previously started tasks and ensures that new tasks are only started when the to-be-corrected area is clear. The new unit testing framework has given the developers a faster way to test their work before pronouncing it completed, as well as providing another dimension of information on the business and design requirements. Unit testing has also reduced the number of corrective tasks the developers have to work on because they are catching most of the defects that QA used to be responsible for. </p>
<p>The QA step has become much faster and it appears likely that the QA person will need a secondary job soon, as they are not only keeping up with all 4 developers but they have actually had two dry spells in the past week due to being ahead of the developers. The average number of returned tasks has been greatly reduced, with only about 5% of tasks being returned from troubleshooting where over 50% were once being returned. The QA step also evaluates and uses the automated tests to ensure no defects have been overlooked and the time saved from not having to build or manually drive tests against each task is enormous.</p>
<p>With the QA step completing task evaluation more quickly, the queue of items to be reviewed by the customer is growing at a much faster rate. The project manager is beginning to have difficulty covering everything in a single weekly meeting because the number of completed items has grown to be a little unwieldy with the existing meeting format. Modifications to the communications method are likely to be coming in the near future to help manage the increased flow of completed tasks. The overall metrics for task throughput and estimated completion dates have been more consistent and don&#8217;t vary as wildly as they did in the previous process. While the metrics have been reflecting the process improvements, the variation or range of the values has been much tighter.</p>
<h3>Achievements</h3>
<p>The team has only been working with their process for a couple months, but they have already started to see positive improvements and they are already considering ideas for their next improvement cycle. Here are a few of the achievements they have already accomplished:</p>
<ul style="list-style-position: outside; margin-left: 2em">
<li>Increased productivity – The overall rate of development has grown when compared to rates prior to the Kanban implementation</li>
<li>Increased confidence – The improvement in development speed, usage of automated tools, and new metrics have all contributed to improving the customer&#8217;s confidence</li>
<li>Clarity of vision – process definition and the Kanban board have given the team a better view of their process and a way to compare with other methodologies</li>
<li>Reduced Estimation Variability – the ability to gauge throughput and better estimates has allowed the company to better gauge the timing on approaching new potential customers</li>
<li>Measurability – Good metrics provide an important tool for continuing to improve the process and gauging whether potential improvements have improved the process or not</li>
<li>Foundation for Training – improvements in the process have helped decrease costs and provide an argument for using that time for additional training, to help drive later round of improvements or prevent the company from jumping on board with a technology that won&#8217;t deliver what they need</li>
</ul>
<p></p>
<h2>Next Week</h2>
<p>Next week we will be wrapping up this 5-part series on Applying Kanban to IT Processes with ideas and surface explorations of other areas of IT. We will also discuss some non-human processes that Kanban can be applied to, as well as some brief information on some of the other concepts that have been mentioned in the series (such as continuous improvement). </p>
<p>If you have missed prior articles in the series you can find them here:<br />
Applying Kanban &#8230; Part 1: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1" title="Read the first article">Kanban Overview</a><br />
Applying Kanban &#8230; Part 2: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-2" title="Read the second article">Kanban applied to Tech Support</a><br />
Applying Kanban &#8230; Part 3: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-3" title="Read the third article">Kanban applied to PC Deployment</a><br />
<em>Applying Kanban &#8230; Part 4: Kanban applied to a Development Group</em><br />
Applying Kanban &#8230; Part 5: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-5" title="Read the fifth article">Challenges, Additional Concepts, and Wrapup</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/projectmanagement/applying-kanban-to-it-processes-part-4/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Applying Kanban to IT Processes (Part 3)</title>
		<link>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-3/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-3/#comments</comments>
		<pubDate>Tue, 15 Dec 2009 15:14:00 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Project Management]]></category>
		<category><![CDATA[kanban]]></category>
		<category><![CDATA[measurement]]></category>
		<category><![CDATA[process improvement]]></category>

		<guid isPermaLink="false">/index.php/2009/12/applying-kanban-to-it-processes-part-3/</guid>
		<description><![CDATA[This is the third article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. Part one provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment. In this, part 3 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><em>This is the third article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1">Part one</a> provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment.</em></p>
<p>In this, part 3 of the &#8220;Applying Kanban to IT Processes&#8221; series, we are exploring the use of Kanban to manage a short-term functional project. This example focuses on using Kanban to create a transparent process to track the flow of equipment through a number of complex steps, without incurring additional costs for tracking software, complex processes and training, or duplication of effort. Improved uniformity or quality of the deployment process will also help improve efficiencies in troubleshooting and repair times as well as ensure a document-ably high level of conformance to software and licensing standards.</p>
<h2>Welcome to DEF&#8217;s Annual PC Deployment</h2>
<p>DEF Inc is a small to medium company with roughly 1000 PCs and laptops actively deployed. Their IT group works like most groups this size, with a high level of individual management, strong team ties, and a relatively small number of IT personnel covering a wide variety of roles. Of the 15 active IT people, only 2 will be working on the PC deployment, and they have been given a high level of latitude in creating a process to get the work done. Clear, simple reporting of progress and successes is determined to be a requirement by the team, to prevent their hard work from being an <a href="/index.php/ITProfessionals/ProjectManagement/an-invisible-project-is-a-failed-project">invisible project</a>. Finally, there is limited space for undeployed systems, so the team will need to carefully manage the number of undeployed systems and purchase orders for new systems.</p>
<h3>The Equipment and Tasks</h3>
<p>The annual PC deployment is expected to account for the following equipment:</p>
<ul>
<li>160 new PCs to be deployed</li>
<li>40 new laptops to be deployed</li>
<li>120 PCs and 10 laptops to be refreshed and redeployed</li>
</ul>
<p>Software imaging is available to install a base operating system and set of drivers on each PC, reducing the variability in initial install process. Tasks like domain registration, utility software, office software, and IT software installations will be standard for every system, but there will also be some customized software installation based on the final user or area the equipment will be assigned to. Refreshing an existing PC requires the same steps with the addition of an extra task in the audit system to link the old and new use of the system. Based on stories from prior years it is clear that one of the most disruptive issues was when a system required *rework due to a missing software installation or configuration, so the team decides to add some verifications to the process to limit opportunities to miss software installs or configurations.</p>
<div style="background-color: #eeeeee; padding: 1em; font-style: italic">
Rework is a name for the process of taking a completed part and sending it back through a portion of the process to correct an incomplete or missed production step. In the case of deploying a PC this could be a missing piece of software during the setup process, improper permissions, or any of a dozen other items that would require a technician to return to a previously &#8216;completed&#8217; PC in order to finish working on it. Costs from rework include the cost of executing a step a second time, executing later steps a second time, changeover between the current work and the item to be reworked, and delays in completing the current work against the original estimate or deadline.
</div>
<h3>First Visual Board</h3>
<p>After discussing the requirements and steps in the process, the technicians have created a common process for all equipment:</p>
<ul>
<li>Receiving &#8211; New equipment and equipment for re-deployment that has not yet been &#8216;tagged&#8217;</li>
<li>Inventory &#8211; New equipment and equipment for re-deployment that has a &#8216;tag&#8217; applied</li>
<li>Imaging &#8211; Applying basic OS, driver, and software images to the systems</li>
<li>Customization Analysis &#8211; Building a list of customer software and/or settings for the intended end-user</li>
<li>Office Software &#8211; Installation and initial configuration of office software and company templates</li?
	
<li>IT Software and Utilities &#8211; Installation of a standard set of utilities and IT software for troubleshooting and auditing</li>
<li>Custom Installation &#8211; Installing and applying custom configurations</li>
<li>Audit &#8211; Running the first Audit of a PC and linking assignments for re-deployed PCs</li>
<li>Deployment &#8211; deploying the hardware to the end user</li>
</li>
</ul>
<p>To manage PCs through this process, the team has invented a system of &#8216;tagging&#8217; the equipment. The technicians have designed a combination check-list and worksheet that is copied and filled out for each PC. The top corner of the document becomes the Kanban card, while the rest serves as a checklist that will be used to verify the previous step of each deployment stage as the equipment progresses through the process. In prior years the team determined there was an average of 5% rework required to correct missing configurations or software.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBLog/Pt_3_Tag.png" alt="example worksheet" title="Example Worksheet" /><br />
Example worksheet with cut-out for Kanban card
</div>
<p>Rather than putting a QA step at the end of their deployment process, they have chosen to start each step by verifying the task from the previous step. By verifying sooner they hope to prevent the need for a long QA process, reduce the amount of rework, and catch and correct issues earlier to prevent repetition of later tasks (such as running the audit software). Check boxes for &#8216;execute&#8217; and &#8216;verify&#8217; are available for each line on the tag.</p>
<p>Now that the tasks have been defined, the first visual board is put together using tape and labels on a corkboard. Thumbtacks will be used to attach the Kanban cards for each piece of equipment to the appropriate step on the board. </p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBLog/KanbanPt3_VisBoard_1.png" alt="Kanban board" title="Kanban Board" /><br />
Kanban board with some example cards on it
</div>
<p>The Kanban limits at each stage are based on the available workspace and the desire to keep equipment flowing regularly through the processes. The team has decided that to balance between consistent flow (small limits) and the additional effectiveness of running installers in parallel (larger limits), they will define limits based on the length of the software installs in order to ensure the longest steps also have the highest throughput and don&#8217;t become delays for later steps. Imaging, office software, and auditing require little human involvement but large amounts of time, while Customization Analysis, Deployment, and the remaining two software installation steps require higher levels of interaction and attention from the installer. </p>
<h3>Creating a Report</h3>
<p>There are a number of requirements and factors available to report on with this process. Based on the requirements and expressed wishes of the IT Manager, the team produces the following list of items to report on:</p>
<ul>
<li>Progress &#8211; based on the concept of a <a href="http://www.controlchaos.com/about/burndown.php">burndown</a> chart, the Progress chart displays actual progress and a projected completion date</li>
<li>Inventory to Deployment &#8211; a simple graph to show the actual deployment times against the averages and range from prior years</li>
<li>User Satisfaction &#8211; A pair of horizontal bars that display successful delivery to promise date and number of incomplete deployments (rework)</li>
</ul>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBLog/KanbanPt3_Spreadsheet.png" alt="Charts for Report" title="Charts for Report" /><br />
Spreadsheet and Charts for Weekly Report
</div>
<p>Generating the report will require updating the spreadsheet at the end of each week with the number of actual PCs completed, incrementing the total amount in a second cell (if any occurred), and indicating the number of PCs that did not meet their target delivery date in a third cell. The projections automatically update based on an equation in the spreadsheet and the information is reflected in the charts. A few simple copy and paste operations places the graphs in last weeks document and the new weekly report is done.</p>
<h2>Final Analysis</h2>
<p>During the execution of the deployment process the team tweaked the Kanban limits a little and made minor changes to the reporting mechanism, but did not have any large changes to make to their process. Given the transparency of the work, they were able to stay on track and deploy equipment at a regular pace. As they adjusted to the rhythm of the process they were able to start timing new PC orders to coincide better with inventory depletion, allowing them to increase their order size and take advantage of improved quotes on the equipment without running out of work in between orders. A final report was created with the final charts from the weekly reports and additional information on spending and labor reductions.</p>
<h3>Process Flow</h3>
<p>New and re-purposed equipment was assigned a user and tagged prior to any work taking place. This prevented issues that had occurred in prior years, such as mis-assignments, double assignments, and re-assignments with the wrong software. The process also provided an accurate inventory of available equipment at all times, so that questions could be answered immediately rather than requiring someone to go to the work area and perform an inventory. Early communications with the end user on when the equipment would be available reduced the difficulty of deploying the PCs when they were completed, as end users had earlier warning and could help better define their availability, with the secondary result of fewer rescheduled installations compared to prior years. Immediate verification of prior steps and Kanban limits ensured that equipment flowed smoothly through the process, providing the bases for more consistent and repeatable cycle times. Better estimation of the deployment process time (inventory space availability) allowed for direct budget savings by allowing the team to increase the size of their orders and take advantage of better savings for the same amount of equipment. And finally, the reporting mechanism the team created was simple enough that the IT manager was able to use it in departmental meetings as part of the overall IT status report, without staying any later the night before the meeting.</p>
<h3>Achievements</h3>
<p>Here are some of the achievements:</p>
<ul>
<li>100% Visibility &#8211; Visibility into the process and inventory at all times with no additional effort spent on tracking down technicians or counting hardware on the fly</li>
<li>Improved Morale &#8211; Reduced confusion and negativity from the end-users around the assignment process based on clearer communications and assignment process</li>
<li>Time Savings &#8211; no rework meant time savings in the deployment process as well as removing the interruptions that rework caused</li>
<li>Financial Savings &#8211; better inventory estimation and management allowed for larger order sizes and better savings without impacting completion times</li>
<li>Good Marketing, Cheap &#8211; the simple process of creating reports not only saved time but also produced simple enough metrics that they could be re-used at management meetings for additional positive press without requiring additional time and effort from the IT manager</li>
<li>Higher Productivity &#8211; Based on process consistency, estimation improvements, and reduction of the interruption level of prior years, the overall process took fewer labor hours to complete</li>
<li>Measurable Improvement &#8211; Due to careful tracking, the same statistics tracked during the process execution can be reported at the end of the year as department and personal improvements</li>
</ul>
<p>The achievements listed here range from hard (financial) to soft (morale) and likely do not cover all of the achievements that would have occurred in a non-fictional version of this story. In a nutshell, the process was able to run more smoothly, more effectively, and more predictably, and that gave the team a number of measurable improvements over prior years. This same process will be re-usable in future years, and can be used as a foundation for further improvement or allow the improvement efforts to focus on other processes while this one simply runs smoothly forward. While using a Kanban system for a temporary process is not a common application, it shows another angle on how it can be used to tame complex work processes and help drive overall improvement of the process.</p>
<h2>Next Week</h2>
<p>In the next article we will explore the usage of Kanban by a software development team as they seek to deliver and maintain a set of products. While there are already many non-fictional accounts of people applying Kanban to the software development process, development is a notable piece of the IT Department and I would be remiss if I did not provide my own spin on how Kanban can be utilized by a development team.</p>
<p>If you have missed prior articles in the series you can find them here:<br />
Applying Kanban &#8230; Part 1: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1" title="Read the first article">Kanban Overview</a><br />
Applying Kanban &#8230; Part 2: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-2" title="Read the second article">Kanban applied to Tech Support</a><br />
<em>Applying Kanban &#8230; Part 3: Kanban applied to PC Deployment</em><br />
Applying Kanban &#8230; Part 4: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-4" title="Read te fourth article">Kanban applied to a Development Group</a><br />
Applying Kanban &#8230; Part 5: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-5" title="Read the fifth article">Challenges, Additional Concepts, and Wrapup</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-3/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Applying Kanban to IT Processes (Part 2)</title>
		<link>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-2/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-2/#comments</comments>
		<pubDate>Tue, 08 Dec 2009 15:51:27 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Project Management]]></category>
		<category><![CDATA[kanban]]></category>
		<category><![CDATA[measurement]]></category>
		<category><![CDATA[process improvement]]></category>

		<guid isPermaLink="false">/index.php/2009/12/applying-kanban-to-it-processes-part-2/</guid>
		<description><![CDATA[This is the second article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. Part one provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scen&#8230;]]></description>
				<content:encoded><![CDATA[<p><em>This is the second article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1">Part one</a> provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment.</em></p>
<p>In this, part 2 of the &#8220;Applying Kanban to IT Processes&#8221; series, we are exploring a generic help desk environment and how Kanban helps them improve their image, measurability, morale, and task reaction and completion times. The example boards and processes in the article are not intended to be drop-in process changes for your business, but instead are designed to walk through a process of creating a Kanban-based system and applying it in a fictional setting. As Kanban is a philosophy and not a fixed set of processes, please remember that this is just one example of how it could be applied in the selected fictional setting.</p>
<h2>Welcome to ABC Corp&#8217;s Help Desk</h2>
<p>This story follows the fictional help desk group for ABC Corp as they implement a Kanban system to define and improve their processes.  The details of their process, decisions that are made throughout the story, and methods used to communicate and measure their goals, should be treated as examples and not rules. While some groups can make a one-step leap from their current process to using Kanban, this type of instant transformation is risky, especially if the group doesn&#8217;t have a realistic and well-defined process.</p>
<h3>Late Last Year</h3>
<p>Last year the IT Department at ABC Corp became understaffed and started to fall behind on their tasks. Financial pressure convinced the company to delay replacement hiring for several months. Despite the best efforts of the support group, the group started to fall behind on help tickets. Through hard work and overtime the team managed to get the extra work under control and stopped falling behind, but the average amount of time between a request coming in and the task being completed continued to be measured in weeks. Increased numbers of status requests and tasks meant that people were often &#8216;working&#8217; on ten to fifteen task simultaneously, even basic tasks like connecting new phones or ordering new equipment were being juggled with so many other tasks that the end users felt that the IT Department just didn&#8217;t care about their problems. </p>
<h3>Current State</h3>
<p>It&#8217;s now several months later. ABC Corp found some valuable replacements and the overtime has started to come back down. Members of the IT Department are returning to regular schedules and there is a sense of pride in how well they were able to hang on. Unfortunately that sense of pride doesn&#8217;t reach outside the walls of IT, where the users have seen a very different picture. The end users still believe the IT Department takes too long to deliver because &#8216;not falling behind&#8217; is different from &#8216;same day delivery&#8217; and the executive team is questioning whether hiring the replacements was effective or even necessary, as they don&#8217;t see improvements in delivery times or performance. Because ABC Corp has a good team, they will probably regain their reputation, the task completion times will come down a bit, the users will start to forget that bad period, and the executives might even see that bringing replacements on board helped the performance of the team. Being students of improvement, though, we can&#8217;t allow the team to settle for &#8216;not as late as it could have been&#8217; or &#8216;not as bad as it was&#8217;.</p>
<h2>Defining Current State</h2>
<p>Before attempting to improve the process, we need to know what the process is and determine how it operates. Our initial focus will be to define how the departments process currently works, including the steps they follow while completing work and what the unit of &#8216;work&#8217; actually is. At this stage we are not trying to figure out how to solve their problems or where the bottlenecks are, we&#8217;re simply trying to describe and define the process and tasks. From the beginning, we are going to include members of the team and people in supervisory roles, so that we can be sure we get an accurate picture of the process.</p>
<p>After analyzing processes with the group, we have found that:<br />
ABC Corp accepts customer requests from several different avenues, including email, telephone, walk-ups, and the web-based task system. Once these are received, one of three things happens, either the request is entered into the task system, the person taking the call/email/etc begins executing it right away, or it is recorded in a temporary fashion (sticky note, email client to do list). When a task is completed, there is no defined follow-up process to ensure it met the requestors needs, nor is time taken to enter the task into the system if it had not already been entered.</p>
<h3>Visual Board I</h3>
<p>After defining the processes with the team, we have enough information to put together our first visual board. Based on our findings above, we know there are already a number of processes people follow, so we want to make this one as simple as possible to begin with. Our initial goals are to get people to start using this new process and to get people comfortable with it. If we try to make a new process that solves all problems and provides numerous levels of reporting, we will end up with something like the computer system that is already in place and obviously not in consistent use. By starting off simply, we can evolve the board and new process to better fit the team&#8217;s needs, rather than trying to create a detail process and then bend the environment to that process.</p>
<p>In the spirit of keeping it simple, we have put together our first Kanban Board by using a whiteboard, some tape, and some sticky notes.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt2_VisBoard_1.png" alt="First Visual Board" title="First Visual Board" /><br />
ABC Corp&#8217;s first visual board &#8211; complete with current task sticky notes
</div>
<div style="background-color: #eeeeee; padding: 1em; font-style: italic">Note: Another common option is using magnetic boards or even the newer ceramic magnetic whiteboards, the aim is to have something you can experiment with and not lock yourself into a single idea as your solution.</div>
<h3>Creating a Request</h3>
<p>When a team member receives a new request, they are to fill out a sticky note and place it in the &#8216;Pending Work&#8217; queue. A sample note is posted by the board, along with several stacks of empty notes and writing implements. The sample note has fields for the name of the requestor, the date the task was received, the person that took the request, and a very short description of the request or task. We now have enough information to keep tasks separate on the board, determine how long it took to complete them, find the correct person, if we have questions about the original request, and communicate with the end user about their request. The whole process should take less than a minute and the entry method (sticky note) is simple enough that it can be done while talking to the requestor.</p>
<h3>Executing a Request</h3>
<p>When a team member starts working on a request they move the corresponding sticky note from the &#8216;Pending Work&#8217; column to the &#8216;Working&#8217; Column. Each member of the team has a swimlane on the board to keep the notes organized and so it is obvious who is currently working on a given task. Once the task is completed, it is moved to the &#8216;Pending Feedback&#8217; column to indicate that the team member is trying to contact the end user to ensure they are satisfied or to walk them through new changes or instructions. Once that has been done, the task is moved to the &#8216;Completed&#8217; column. When the end user is present for the tasks, such as installing software or setting up a projector, a task may go directly from the &#8216;Working&#8217; column to the &#8216;Completed&#8217; column. When a team member completes a task, they enter the completed date on the task note. </p>
<p>Now we spend some time getting our team used to this new process. Each day we check the board in the morning and in the afternoon so we can keep track of how the team is doing and see if anyone needs assistance in using the board (or perhaps less passively going around and reminding people to use the board). At the end of the week, collect the tasks from the &#8216;Completed&#8217; column and enter the start and end dates in a spreadsheet. By clearing the &#8216;Completed&#8217; tasks section at a regularly defined interval, we also give the team a visual measurement or goal for the week.</p>
<div style="background-color: #eeeeee; padding: 1em; font-style: italic">Later on, we may put forward other ideas on when to remove tasks from the last column. The goal is to get a clear vision at a high level of how well things are operating. Another option would be to remove tasks that are seven days old on a daily basis, so that the &#8216;Completed&#8217; area shows the results of the trailing week&#8217;s worth of work.</div>
<h2>Process Changes and Kanban Limits</h2>
<p>After several weeks of using the board, we have brought the team together to review people&#8217;s reactions and start working on the next steps. By now the team has gotten used to the process and should be using it consistently. The team has started making the board their first stop when looking for new tasks or answering an end-users question on the status of a request and the starting and completion dates are starting to build a picture of the current delivery times. </p>
<p>Up until now the purpose has been to get the team used to the board and we haven&#8217;t put any limits on how tasks are selected, how many someone should be working on at once, etc. This has helped the team engage and helped visualize our current situation, but that visualization is a mess. It&#8217;s a good time to start improving the board and introduce improvements to the process.</p>
<h3>Revising the Process Steps</h3>
<p>After talking to the team and reviewing the task notes on our current board, the team has decided to modify the board by adding an area for &#8216;Escalated Tasks&#8217;. This modification was an idea from one of the team members to help us better track tasks that have been escalated to the Systems Administrators and Development groups so they don&#8217;t take up space in the &#8216;Executing&#8217; column &#8211; we do not want to lose them by taking them off the board entirely. For the ABC Corp team, this request makes sense, so we add it to the board.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt2_VisBoard_2.png" alt="Revised Visual Board" title="Revised Visual Board" /><br />
ABC Corp&#8217;s visual board with new escalation step
</div>
<div style="background-color: #eeeeee; padding: 1em; font-style: italic">The ABC Corp Help Desk example is using a board that defines processes in terms of task status. While this is a common method, it is not the only way to look at service tasks. Other things to try that may correlate one-to-one with the task life cycle include functional skillsets (developer, technician, systems admin), departments, or steps a solution goes through (analysis, design, execution, QA, user acceptance, completion). There are many different types of IT Departments out there and what works for ABC Corp may not be the solution for your group.</div>
<h3>Kanban Limits</h3>
<p>One of the important attributes of a Kanban board is the idea of limiting the amount of work in process. In a manufacturing environment, we could use the equipment capacities to help us calculate some viable numbers for each process step, but in our IT Environment we don&#8217;t have anything that obvious. We could spend weeks trying to come up with equations or perfect numbers, but instead we are going to just pick some arbitrary numbers based on the number of people we have. If the numbers don&#8217;t work perfectly, then we can adjust them a little later and experiment to find a more comfortable set.</p>
<p>We will also assign each member of the group a &#8220;home&#8221; column. These &#8216;home&#8217; columns are where people will primarily work. Because the Kanban limits enforce a maximum number of tasks allowed in each process step, there are going to be times when entire sections of the board come to a halt. For instance, if the person responsible for our &#8220;Pending Feedback&#8221; column gets overloaded or is out sick, the entire department will deadlock because the &#8216;Pending Feedback&#8217; column is full. When this happens then people will start to move forward from their home column to help clear the bottlenecks.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt2_VisBoard_3.png" alt="Visual Board w/ Limits" title="Visual Board w/ Limits" /><br />
ABC Corp&#8217;s visual board with defined limits
</div>
<h3>Executing Tasks</h3>
<p>The last change to our process is going to be how we assign tasks and how they move across the board. Until now, we have not put any restrictions on how or when people select tasks to work on, or how to prioritize new tasks. One of the important concepts of Kanban is to pull tasks or solutions through the process instead of pushing them. At each step our team members will pick up a task from the previous step to work on and they will only do so within the limits placed on their work area or column. To help identify tasks that are ready to be picked up, we have added a shaded area to each column. For the &#8216;Pending Work&#8217; column, the shaded area holds the next several prioritized tasks, for the rest of the columns it serves as a &#8216;Completed&#8217; area.</p>
<p>Completed tasks still count against the limits assigned to each column, so if part of the process breaks down, then the task flow will slowly turn into a traffic jam. As team members earlier in the process fill their column, they should move forward to help clear the problem. This ensures that when a complex situation arises, it is dealt with immediately instead of being allowed to sit on the sidelines. This also ensures that even the worst situations are completed in a more timely manner and that delivery times are constantly improved.</p>
<h2>Final Analysis</h2>
<p>The team has a made a number of gains through this new process, which has also opened the door to continuing improvements and opportunities for good press inside the company. </p>
<h3>Process Flow</h3>
<p>Initially people worked on numerous tasks at once, splitting attention and losing time as they switched back and forth. With no prioritization there was no guarantee on when a task would be picked up by a team member and tasks could even be misplaced or forgotten altogether. Communications to the end user was inconsistent and escalated tasks were rarely communicated or tracked, while complex solutions were usually not explained and generated additional tasks to complete.</p>
<div style="text-align: center; font-size: .8em; margin-bottom: 1em;">
<img src="http://www.tiernok.com/LTDBlog/KanbanPt2_VisBoard_4.png" alt="Visual Board Final" title="Visual Board Final" /><br />
ABC Corp&#8217;s visual board as time progresses
</div>
<p>One member of the team has been assigned to manage end user communications. That team member is responsible for following back up with end users, checking on the status of escalated tasks, answering requests for status updates for pending tasks, and walking users through complex changes or solutions. New tasks are prioritized based on severity level and length of time in the queue and wait in a queue for the next available technician to pick them up. Team members focus on executing a single task at a time and when completed, immediately pass their task on for reporting and select the next highest prioritized task from the pending queue. A distribution is calculated each week of how many days elapsed between task reception and completion and this number serves as a team measurement and source for weekly goals.</p>
<p>The team is gaining on their pending tasks through fewer interruptions, fewer costly attention-switches, and being able to focus a team member on end user communications. End users are receiving more regular communications and time estimates are both firmer and more accurate. Reports to the executives show the number of outstanding tasks shrinking while the total time between reception of tasks and completion has been reduced in variability and duration. T</p>
<h3>Achievements</h3>
<p>Here are some of the achievements:</p>
<ul>
<li>Measurable Results &#8211; We have reduced the amount of time between receiving and completing tasks, and for the next several months that duration will continue to shorten until the backlog has been worked through and we find our new pace</li>
<li>Measurable Improvements &#8211; We not only have measured results but we took a baseline before changing the process, which means we now have hard numbers on how far we have improved</li>
<li>Status at a Glance &#8211; The visual board serves as a way to quickly gauge the status of the department, potential problems, and overall work flow or rhythm</li>
<li>Department Goals &#8211; Hard measurements on delivery times serve as a good key indicator of how well the department is performing and provide an excellent measurement for annual goals</li>
<li>Tighter Estimates &#8211; More data and a smoother process has reduced variation in completion times and allows task estimation to be much more accurate</li>
<li>Morale &#8211; Engaging the team members in defining their own process, trying ideas they bring to the table, and allowing them to experiment are all going to raise both morale and respect, which ultimately raises productivity, reduces turnover, and makes the workplace a much more enjoyable place</li>
<li>Higher Productivity &#8211; Work is now being executed more effectively due to reducing the amount of task switching, hunting for information, interruptions for status updates, and lack of prioritization</li>
</ul>
<p>The advantages above are direct advantages of applying Kanban in a general environment. In the case of ABC Corp, we could probably add several more gains that were more specific to their environment, had they not been a fictional company. Perhaps the biggest gain is that the department now runs from a whiteboard. Someone recently commented that whiteboards, by their nature, invite people to write on them or try and change their content, whereas printed paper has a read-only connotation. How is that relevant? No process is perfect and a process set in stone is a process that is not growing to meet the needs of their company better. By engaging the team members, experimenting, and defining the process on a changeable medium there is encouragement to continue to offer suggestions and to continue and try to improve the process and department.</p>
<h2>Next Week</h2>
<p>In the next article we will explore using a temporary Kanban process to manage a short-term, functional project. While Kanban is often applied to large processes like a manufacturing line or department process, there are advantages to using it for smaller, throw-away projects as well. In this upcoming story we will look at using a Kanban board to help manage an annual PC replenishment project.</p>
<p>If you have missed prior articles in the series you can find them here:<br />
Applying Kanban &#8230; Part 1: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-1" title="Read the first article">Kanban Overview</a><br />
<em>Applying Kanban &#8230; Part 2: Kanban applied to Tech Support</em><br />
Applying Kanban &#8230; Part 3: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-3" title="Read the third article">Kanban applied to PC Deployment</a><br />
Applying Kanban &#8230; Part 4: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-4" title="Read te fourth article">Kanban applied to a Development Group</a><br />
Applying Kanban &#8230; Part 5: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-5" title="Read the fifth article">Challenges, Additional Concepts, and Wrapup</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-2/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>Applying Kanban to IT Processes (Part 1)</title>
		<link>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-1/</link>
		<comments>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-1/#comments</comments>
		<pubDate>Tue, 01 Dec 2009 12:44:01 +0000</pubDate>
		<dc:creator><![CDATA[Eli Weinstock-Herman (tarwn)]]></dc:creator>
				<category><![CDATA[IT Processes]]></category>
		<category><![CDATA[IT Service Management]]></category>
		<category><![CDATA[Project Management]]></category>
		<category><![CDATA[kanban]]></category>
		<category><![CDATA[measurement]]></category>
		<category><![CDATA[process improvement]]></category>

		<guid isPermaLink="false">/index.php/2009/12/applying-kanban-to-it-processes-part-1/</guid>
		<description><![CDATA[This is the first article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. Part one provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scena&#8230;]]></description>
				<content:encoded><![CDATA[<p><em>This is the first article in a multi-article set that describes the basics of Kanban and explores applying Kanban to IT Processes. Part one provides a basic overview of Kanban and how it is used in manufacturing. The remaining parts explore sample scenarios to help generate ideas for your own environment.</em></p>
<p>Lately I have seen an increase in the number of articles in the Development and Agile Project Management communities that describe the merits of Kanban, showing the value that Kanban has helped provide in conjunction with Agile methods. Most of these articles focus heavily on the visualization aspect (<a href="http://www.infoq.com/articles/agile-kanban-boards">Visualizing Agile Projects using Kanban Boards</a> for example) though a few dig into other benefits of Kanban or simply claim Kanban is a silver hammer in search of a nail. In the IT community it seems that most of the material has been directed at software project management and IT Developers, but Kanban is applicable to many other areas of IT.</p>
<h2>What is Kanban?</h2>
<p>Kanban is a Japanese term for &#8216;visual board&#8217; or &#8216;signboard&#8217; and is a tool for reducing the cycle time<sup>1</sup> of a process, increasing visibility into the flow of processes, and reducing the amount of In Process<sup>2</sup> work. By leveraging the visibility into the process and flow between processes we can see where the work flow loses momentum and either bottlenecks or reduces the effectiveness of earlier steps. Kanban is used in Lean Manufacturing to gain visibility into the process and execution status, reduce wastes (and costs), and help achieve <a href="http://en.wikipedia.org/wiki/Just-in-time_%28business%29">Just In Time</a> production capability. </p>
<p><span class="MT_smaller">1. Cycle Time: The time it takes for an order to be produced from initial reception through completion</span><br />
<span class="MT_smaller">2. [Work] In Process: Incomplete products that are currently being worked on in the process or are waiting to re-enter the process and be completed. Unfinished work.</span></p>
<h3>The Kanban Signal</h3>
<p>At it&#8217;s most basic, Kanban is a signaling system that tells <i>earlier</i> steps in a production process that there is a requirement or customer demand to make X.<br />
<center><img src="http://tiernok.com/LTDBlog/KanbanSimplePic.png" alt="Simple Kanban Example" title="Simple Kanban Example" /></center></p>
<p>In a manufacturing process a customer order is converted into one or more cards that represent the production requirement to fulfill the order. Each card or symbol defines the product to be produced and quantity needed. The card is given to the associate responsible for managing the work center that will fulfill the production request. If the associate has a local sign or visual board to display the orders queue or available capacity, they will place the received card in the next empty slot, otherwise they update the board for the area. Depending on the complexity of the process, the receipt or execution of the Kanban signal may trigger additional signals back to prior steps in the process or to personnel responsible for bringing the correct materials to the production step. Each step has a limited number of slots on their board that defines the maximum number of cards that can be present at a given point in time. This Kanban limit keeps the amount of work and in process items constrained and prevents incomplete work or requests from piling up.</p>
<p><center><img src="http://tiernok.com/LTDBlog/KanbanCards.png" alt="Kanban Cards" title="Kanban Cards" /></center></p>
<p>Limiting the amount of in process work to a small, maintainable number allows us to continue to fully utilize our resources (in this case machinery and operators) while reducing the amount of work that is partially completed and waiting to be finished. The application of Kanban limits to a process helps us start reducing the variability in the duration of producing a product, as well as remove the necessity (and temptation) to reschedule the flow or priority of work at each individual step. Though this may seem like it would slow response times when a priority order comes in, this actually speeds up processing because we don&#8217;t have to rearrange our resources to drop 47 outstanding, partially started tasks. We simply slot the priority order into the queue at the last step (when a spot is available) and let the signal flow back through the previous steps in a standard fashion. Since we have a limited amount of work in progress already, we are able to handle new requests quickly without interrupting items we have already promised.</p>
<p>By removing backlogged queues and re-prioritization between each step we have reduced the amount of non-value added work the operators are doing and improved both the accuracy and (usually) the duration of the time estimates we are giving the customer. We also reduce the number of changeovers that occur because we complete each task before moving to the next one, instead of switching back and forth between several outstanding orders. The removal of unnecessary changeovers are an immediate cost savings because they are of no direct value to the customer while the decrease in lead times improves our responsiveness to the end customer and reduced changeovers and rework increases our capacity without additional expense. </p>
<h3>Visualization and Metrics</h3>
<p>Visualizing the requests at each &#8216;station&#8217; using a physical board is a good way to communicate across the group and manage your Kanban. If your board only has 3 physical areas or slots for &#8216;cards&#8217; then your not going to take more than 3 requests. People at later and earlier steps can see progress being made as well as excess capacity (ie, nothing to do) at your step. The board is not only a method to manage your tasks but also an instant communications tool, allowing the area to focus more on doing the work and less on creating reports or filling in metric scorecards.</p>
<p><center><img src="http://tiernok.com/LTDBlog/InitialExampleBoard.png" alt="Initial Example Board" title="Initial Example Board" /><br />
Finishing 2 Units/Day &#8211; ~14 days to produce new order<br />
</center></p>
<p>Another major benefit from Kanban methods will become apparent as the initial visual board is created. Besides driving the creation of a clear definition of the operations or production steps, the initial population of the board with current requests and WIP will start to make process bottlenecks evident. As time progresses and the kanban system forces you to reduce this backlog, the bottlenecks will continue to become more obvious, showing areas where direct improvement will affect the delivery time for the whole process. In many systems, when a previous step goes dry in a Kanban system the personnel from that step will start to move forward to help product clear the backlogged step. Simple rules or rearrangement of current staff can continue to give performance gains, as the board displays where slowdowns and hiccups occur as well as potential areas that are frequently left without work.</p>
<p><center><img src="http://tiernok.com/LTDBlog/KanbanExampleBoard.png" alt="Example Board" title="Example Board" /><br />
Finishing 2 Units/Day &#8211; ~5 days to produce new order<br />
</center></p>
<p>The manufacturing community has hundreds of examples of visual boards, but for the purpose of the article I&#8217;m going to point out a couple links from Agile software development articles.  Kanban boards do not have to be expensive and, in my opinion, should always start out as a physical board before diving into a software solution (if ever).</p>
<ul>
<li><a href="http://www.techfocus2.com/tags/kaizenconf/">&#8220;Lean -Software Development in Small Teams&#8221; Article</a> &#8211; Whiteboard and Magnets</li>
<li><a href="http://weblogs.asp.net/wallen/archive/2008/10/30/evolution-of-a-kanban-board.aspx">&#8220;Evolution of a Kanban Board&#8221; Article</a> &#8211; Whiteboard and Post-Its &tm;</li>
<li><a href="http://www.ddj.com/architect/201807863">&#8220;Visualizing Agile Projects with Kanban Boards&#8221; Article</a> &#8211; Several pictures and informative article</li>
<li><a href="http://blog.brodzinski.com/2009/11/kanban-story-kanban-board.html">&#8220;The Kanban Story &#8211; Kanban Board&#8221; Article</a> &#8211; Final (Simple!) Result for another software development board</li>
</ul>
<p>Searching the internet will give you many additional examples in a variety of environments.</p>
<h2>Applying Kanban to the IT Department</h2>
<p>Now that we have an idea how Kanban works, we can begin exploring how to apply it to processes in IT administrative, support, and development environments. Initially the idea of applying Kanban in a non-manufacturing environment may seem challenging, so the examples will cover a wide range of possible situations. By exploring several sample implementations we can gain insight or ideas on how to apply these concepts (and see the resulting benefits) in our own individual IT environments.</p>
<p><em>Later articles will be published at one week intervals and announced on Twitter, Linked In, and of course the LTD front page</em></p>
<p>If you have missed prior articles in the series you can find them here:<br />
<em>Applying Kanban &#8230; Part 1: Kanban Overview</em><br />
Applying Kanban &#8230; Part 2: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-2" title="Read the second article">Kanban applied to Tech Support</a><br />
Applying Kanban &#8230; Part 3: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-3" title="Read the third article">Kanban applied to PC Deployment</a><br />
Applying Kanban &#8230; Part 4: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-4" title="Read te fourth article">Kanban applied to a Development Group</a><br />
Applying Kanban &#8230; Part 5: <a href="/index.php/ITProfessionals/ITProcesses/applying-kanban-to-it-processes-part-5" title="Read the fifth article">Challenges, Additional Concepts, and Wrapup</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/itprofessionals/itservicemanagement/applying-kanban-to-it-processes-part-1/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
	</channel>
</rss>
