<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>groovy &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/groovy/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Review of The Well-Grounded Java Developer</title>
		<link>/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/</link>
		<comments>/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/#comments</comments>
		<pubDate>Wed, 09 Jan 2013 15:12:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Application Lifecycle Management]]></category>
		<category><![CDATA[Java EE]]></category>
		<category><![CDATA[book]]></category>
		<category><![CDATA[book review]]></category>
		<category><![CDATA[groovy]]></category>
		<category><![CDATA[java functional programming]]></category>
		<category><![CDATA[jvm]]></category>
		<category><![CDATA[maven]]></category>
		<category><![CDATA[polyglot]]></category>
		<category><![CDATA[scala]]></category>

		<guid isPermaLink="false">/index.php/2013/01/review-of-the-well-grounded/</guid>
		<description><![CDATA[This is a review of The Well-Grounded Java Developer, Vital techniques of Java 7 and polyglot programming. Written by Benjamin J. Evans and Martijn Verburg. The book was published in July, 2012 and it contains 496 pages

This is an excellent&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is a review of <a href="http://www.amazon.com/gp/product/1617290068/ref=as_li_ss_tl?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1617290068">The Well-Grounded Java Developer, Vital techniques of Java 7 and polyglot programming</a>. Written by Benjamin J. Evans and Martijn Verburg. The book was published in July, 2012 and it contains 496 pages</p>
<p><a href="/wp-content/uploads/blogs/EnterpriseDev/Denis/evans_cover150.jpg?mtime=1357748948"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/Denis/evans_cover150.jpg?mtime=1357748948" width="150" height="188" style="float:left;margin:0 5px 0 0;" /></a>Right from the start I want to say that this is an excellent book and I highly recommend it. One thing you do need to be aware about is that in order to use this book you need to know Java. If you don&#8217;t know Java then this is not the book for you. This book is all about bringing you to the next level as a Java developer by showing you how to do continuous integration, dependency injection, testing, performance tuning, and more.<br />
This book even shows you how to use different languages that run on the JVM. The book is written in a easy and concise style, everything is very clear. I also love the annotations which are sprinkled throughout the book, they give some nice background information. While the chapters on Groovy, Scala and Clojure are not a complete reference for the language, they do provide enough material to form a nice foundation, now you can further explore the language on your own.</p>
<p>The book is split up in four parts, I will list each part with the chapters within that part and will give a brief summary what the part is about</p>
<p><strong>Part 1 Developing with Java 7</strong><br />
Chapter 1 Introducing Java 7<br />
Chapter 2 New I/O</p>
<p>This section shows you what was added in Java 7, for example you can now use strings in switch statements, try-with-resources(similar to a using statement in c#, it frees up the resources after it is done). The Java IO stuff has been rewritten and much easier to use, where you had to write a whole bunch of code before, you can now do the same in much less code. Some things that did not exist in Java in terms of IO but now does exist are explained as well.</p>
<p><strong>Part 2 Vital techniques</strong><br />
Chapter 3 Dependency Injection<br />
Chapter 4 Modern concurrency<br />
Chapter 5 Class files and bytecode<br />
Chapter 6 Understanding performance tuning</p>
<p>This part has a lot of stuff and as a Java developer you should really know how this stuff works if you want to get to the next level. Dependency Injection(DI) and inversion of control (IoC) are covered, Guice 3, the reference implementation for DI in Java is also covered. Concurrency before Java 5 and concurrency now is covered. Concurrency will be a must now that we have multi-CPU and multi-core everywhere, you better get your wits around it. There is a whole chapter on the class files itself and how they are loaded as well as what they compile into. These are fun details and will show you exactly what happens when you compile and execute a class. Evereybody&#8217;s favorite subject performance tuning is covered in this part of the book as well.</p>
<p><strong>Part 3 Polyglot programming on the JVM</strong><br />
Chapter 7 Alternative JVM languages<br />
Chapter 8 Groovy: Java’s dynamic friend<br />
Chapter 9 Scala: powerful and concise<br />
Chapter 10 Clojure: safer programming</p>
<p>This is a very interesting part of the book and I would suggest not to skip it. There are 3 type of languages covered in this part:<br />
Groovy, a dynamic language<br />
Scala, a functional language<br />
Clojure, a Lisp for functional programming</p>
<p>Take a look at these languages and you will be amazed how much Java boilerplate code you can eliminate by using these languages instead. Some of the functional is a little bit of a paradigm shift and you might need some time adjusting. You will also see how you can interoperate between these languages and Java.</p>
<p><strong>Part 4 Crafting the polyglot project</strong><br />
Chapter 11 Test-driven development<br />
Chapter 12 Build and continuous integration<br />
Chapter 13 Rapid web development<br />
Chapter 14 Staying well-grounded</p>
<p>The last part is all about automation and making your life easier. If you are a developer who still deploys stuff by using FTP to move JAR, EAR and WAR files, pay attention. Maven is covered as the build automation tool, Jenkins is the  continuous integration tool. In the Rapid web development chapter Grails is explored.</p>
<hr />
Let me just repeat again that I think this is an awesome book and as a Java developer you have to check it out. The one thing that is missing from the book is ORM, it is covered a little in the testing chapter but if you want to know about ORM, you will need to pick out some other book just for that.</p>
<p>You can download the following chapters to get a feel for the book</p>
<p><a href="http://www.manning.com/evans/TWGJD_sample_ch01.pdf">Sample chapter 1</a><br />
<a href="http://www.manning.com/evans/TWGJD_sample_ch04.pdf">Sample chapter 4</a></p>
<p>Head on over to Amazon for other reviews of <a href="http://www.amazon.com/gp/product/1617290068/ref=as_li_ss_tl?ie=UTF8&amp;tag=sql08-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1617290068">The Well-Grounded Java Developer, Vital techniques of Java 7 and polyglot programming</a><br />
The site for the book can be found here: http://www.manning.com/evans/ </p>
<hr />
Below is the complete table of contents so that you have a little more details about each chapter.</p>
<p><strong>Part 1 Developing with Java 7<br />
Chapter 1 Introducing Java 7<br />
</strong>The language and the platform<br />
Small is beautiful—Project Coin<br />
The changes in Project Coin<br />
Summary</p>
<p><strong>Chapter 2 New I/O</strong><br />
Java I/O—a history<br />
Path—a foundation of file-based I/O<br />
Dealing with directories and directory trees<br />
Filesystem I/O with NIO.2<br />
Asynchronous I/O operations<br />
Tidying up Socket-Channel functionality<br />
Summary</p>
<p><strong>Part 2 Vital techniques<br />
Chapter 3 Dependency Injection</strong><br />
Inject some knowledge—understanding IoC and DI<br />
Standardized DI in Java<br />
Guice 3—the reference implementation for DI in Java<br />
Summary</p>
<p><strong>Chapter 4 Modern concurrency</strong><br />
Concurrency theory—a primer<br />
Block-structured concurrency (pre-Java 5)<br />
Building blocks for modern concurrent applications<br />
Controlling execution<br />
The fork/join framework<br />
The Java Memory Model (JMM)<br />
Summary</p>
<p><strong>Chapter 5 Class files and bytecode</strong><br />
Classloading and class objects<br />
Using method handles<br />
Examining class files<br />
Bytecode<br />
Invokedynamic<br />
Summary</p>
<p><strong>Chapter 6 Understanding performance tuning</strong><br />
Performance terminology—some basic definitions<br />
A pragmatic approach to performance analysis<br />
What went wrong? Why we have to care<br />
A question of time—from the hardware up<br />
Garbage collection<br />
JIT compilation with HotSpot<br />
Summary</p>
<p><strong>Part 3 Polyglot programming on the JVM<br />
Chapter 7 Alternative JVM languages<br />
</strong>Java too clumsy? Them’s fighting words!<br />
Language zoology<br />
Polyglot programming on the JVM<br />
How to choose a non-Java language for your project<br />
How the JVM supports alternative languages<br />
Summary</p>
<p><strong>Chapter 8 Groovy: Java’s dynamic friend</strong><br />
Getting started with Groovy<br />
Groovy 101—syntax and semantics<br />
Differences from Java—traps for new players<br />
Groovy features not (yet) in Java<br />
Interoperating between Groovy and Java<br />
Summary</p>
<p><strong>Chapter 9 Scala: powerful and concise</strong><br />
A quick tour of Scala<br />
Is Scala right for my project?<br />
Making code beautiful again with Scala<br />
Scala’s object model—similar but different<br />
Data structures and collections<br />
Introduction to actors<br />
Summary</p>
<p><strong>Chapter 10 Clojure: safer programming</strong><br />
Introducing Clojure<br />
Looking for Clojure—syntax and semantics<br />
Working with functions and loops in Clojure<br />
Introducing Clojure sequences<br />
Interoperating between Clojure and Java<br />
Concurrent Clojure<br />
Summary</p>
<p><strong>Part 4 Crafting the polyglot project<br />
Chapter 11 Test-driven development<br />
</strong>TDD in a nutshell<br />
Test doubles<br />
Introducing ScalaTest<br />
Summary</p>
<p><strong>Chapter 12 Build and continuous integration</strong><br />
Getting started with Maven 3<br />
Maven 3—a quick-start project<br />
Maven 3—the Java7developer build<br />
Jenkins—serving your CI needs<br />
Code metrics with Maven and Jenkins<br />
Leiningen<br />
Summary</p>
<p><strong>Chapter 13 Rapid web development</strong><br />
The problem with Java-based web frameworks<br />
Criteria in selecting a web framework<br />
Getting started with Grails<br />
Grails quick-start project<br />
Further Grails exploration<br />
Getting started with Compojure<br />
A sample Compojure project—“Am I an Otter or Not?”<br />
Summary</p>
<p><strong>Chapter 14 Staying well-grounded</strong><br />
What to expect in Java 8<br />
Polyglot programming<br />
Future concurrency trends<br />
New directions in the JVM</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/jee/review-of-the-well-grounded/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
	</channel>
</rss>
