<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>stored procedure &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/stored-procedure/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Getting the list of parameters from a stored procedure by using sqlCmd.Parameters or INFORMATION_SCHEMA.parameters</title>
		<link>/index.php/datamgmt/datadesign/getting-the-list-of-parameters/</link>
		<comments>/index.php/datamgmt/datadesign/getting-the-list-of-parameters/#comments</comments>
		<pubDate>Tue, 14 Feb 2012 13:11:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[parameters]]></category>
		<category><![CDATA[stored procedure]]></category>

		<guid isPermaLink="false">/index.php/2012/02/getting-the-list-of-parameters/</guid>
		<description><![CDATA[If you want to see what parameters a stored procedure is using then you can accomplish this in a couple of different ways. You can use sys.parameters or INFORMATION_SCHEMA.parameters from within SQL Server itself, you can also SqlCommandBuilder from within ADO.NET]]></description>
				<content:encoded><![CDATA[<p>If you want to see what parameters a stored procedure is using then you can accomplish this in a couple of different ways. You can use sys.parameters or INFORMATION_SCHEMA.parameters from within SQL Server itself, you can also SqlCommandBuilder from within ADO.NET</p>
<p>Let&#8217;s say you have a procedure name prTest in a database named Test2</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">PROCEDURE</span> prTest
@id <span class="kw1">int</span>,@SomeDate <span class="kw1">date</span>,@Somechar <span class="kw1">CHAR</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="kw1">OUTPUT</span>
<span class="kw1">AS</span>
<span class="kw1">SELECT</span> <span class="kw2">GETDATE</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,@id ,@SomeDate ,@Somechar</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE PROCEDURE prTest
@id int,@SomeDate date,@Somechar CHAR(1) OUTPUT
AS
SELECT GETDATE(),@id ,@SomeDate ,@Somechar</pre></div></div>

<p>Here is how you would do it with c# and ADO.NET</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="csharp"><thead><tr><td colspan="2"  class="head">C#</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="de1"><pre class="de1"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data</span><span class="sy0">;</span>
<span class="kw1">using</span> <span class="co3">System.Data.SqlClient</span><span class="sy0">;</span>
&nbsp;
&nbsp;
<span class="kw1">namespace</span> ConsoleApplication1
<span class="br0">&#123;</span>
&nbsp; &nbsp; <span class="kw4">class</span> Program
&nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">static</span> <span class="kw4">void</span> Main<span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">string</span> yourConnStr <span class="sy0">=</span> <span class="st0">&quot;Data Source=localhost;Initial Catalog=Test2;Integrated Security=SSPI;&quot;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">using</span> <span class="br0">&#40;</span>SqlConnection sqlConn <span class="sy0">=</span> <span class="kw3">new</span> SqlConnection<span class="br0">&#40;</span>yourConnStr<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">using</span> <span class="br0">&#40;</span>SqlCommand sqlCmd <span class="sy0">=</span> <span class="kw3">new</span> SqlCommand<span class="br0">&#40;</span><span class="st0">&quot;prTest&quot;</span>, sqlConn<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sqlConn<span class="sy0">.</span><span class="me1">Open</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sqlCmd<span class="sy0">.</span><span class="me1">CommandType</span> <span class="sy0">=</span> CommandType<span class="sy0">.</span><span class="me1">StoredProcedure</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SqlCommandBuilder<span class="sy0">.</span><span class="me1">DeriveParameters</span><span class="br0">&#40;</span>sqlCmd<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>sqlCmd<span class="sy0">.</span><span class="me1">Parameters</span><span class="sy0">.</span><span class="me1">Count</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span>SqlParameter p <span class="kw1">in</span> sqlCmd<span class="sy0">.</span><span class="me1">Parameters</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>p<span class="sy0">.</span><span class="me1">ParameterName</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">&quot;t&quot;</span> 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sy0">+</span> p<span class="sy0">.</span><span class="me1">Direction</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">&quot;t&quot;</span> <span class="sy0">+</span> p<span class="sy0">.</span><span class="me1">DbType</span><span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Console<span class="sy0">.</span><span class="me1">ReadLine</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">using System;
using System.Data;
using System.Data.SqlClient;


namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            string yourConnStr = "Data Source=localhost;Initial Catalog=Test2;Integrated Security=SSPI;";
            using (SqlConnection sqlConn = new SqlConnection(yourConnStr))
            using (SqlCommand sqlCmd = new SqlCommand("prTest", sqlConn))
            {
                sqlConn.Open();
                sqlCmd.CommandType = CommandType.StoredProcedure;
                SqlCommandBuilder.DeriveParameters(sqlCmd);
                Console.WriteLine(sqlCmd.Parameters.Count.ToString());
                    foreach (SqlParameter p in sqlCmd.Parameters) {

                        Console.WriteLine(p.ParameterName.ToString() + "t" 
                                + p.Direction.ToString() + "t" + p.DbType.ToString() );
                        }
                Console.ReadLine();
               
                
        }
    }
}</pre></div></div>

<p>Output</p>
<pre>4
@RETURN_VALUE   ReturnValue     Int32
@id             Input           Int32
@SomeDate       Input           Date
@Somechar       Input           AnsiStringFixedLength</pre>
<p>As you can see, we get 4 parameters back not 3, this is because the return value is also included. sqlCmd.Parameters.Count returns 4 and when we loop over the sqlCmd.Parameters collection we are displaying the name, direction and data type of the parameter</p>
<p>If you want to do something similar from within SQL Server, you can use the INFORMATION_SCHEMA.parameters view</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> parameter_name, ordinal_position,parameter_mode,data_type 
<span class="kw1">FROM</span> <span class="sy0">IN</span>F<span class="sy0">OR</span>MATION_SCHEMA.<span class="kw1">parameters</span>
<span class="kw1">WHERE</span> SPECIFIC_NAME <span class="sy0">=</span> <span class="st0">'prTest'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT parameter_name, ordinal_position,parameter_mode,data_type 
FROM INFORMATION_SCHEMA.parameters
WHERE SPECIFIC_NAME = 'prTest'</pre></div></div>

<p>Here is the output</p>
<div class="tables">
<table>
<tr>
<th>parameter_name</th>
<th>ordinal_position</th>
<th>parameter_mode</th>
<th>data_type </th>
</tr>
<tr>
<td>@id</td>
<td>1</td>
<td>IN</td>
<td>int</td>
</tr>
<tr>
<td>@SomeDate</td>
<td>2</td>
<td>IN</td>
<td>date</td>
</tr>
<tr>
<td>@Somechar</td>
<td>3</td>
<td>INOUT</td>
<td>char</td>
</tr>
</table>
</div>
<p>As you can see INFORMATION_SCHEMA.parameters does not return a row for the return value.</p>
<p>You can also use sys.parameters and join that with sys.types </p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> s.<span class="me1">name</span> <span class="kw1">AS</span> parameter_name,
&nbsp; &nbsp; &nbsp; &nbsp;parameter_id <span class="kw1">AS</span> ordinal_position,
&nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">CASE</span> is_output <span class="kw1">WHEN</span> <span class="nu0">0</span> <span class="kw1">THEN</span> <span class="st0">'IN'</span> <span class="kw1">ELSE</span> <span class="st0">'INOUT'</span> <span class="kw1">END</span> Parameter_Mode,
&nbsp; &nbsp; &nbsp; &nbsp;t.<span class="me1">name</span> <span class="kw1">AS</span> data_type 
<span class="kw1">FROM</span> sys.<span class="kw1">parameters</span> s
<span class="sy0">JOIN</span> sys.<span class="me1">types</span> t <span class="kw1">ON</span> s.<span class="me1">system_type_id</span> <span class="sy0">=</span> t.<span class="me1">user_type_id</span>
<span class="kw1">WHERE</span> <span class="kw2">object_id</span> <span class="sy0">=</span> <span class="kw2">object_id</span><span class="br0">&#40;</span><span class="st0">'prTest'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT s.name AS parameter_name,
	   parameter_id AS ordinal_position,
	   CASE is_output WHEN 0 THEN 'IN' ELSE 'INOUT' END Parameter_Mode,
	   t.name AS data_type 
FROM sys.parameters s
JOIN sys.types t ON s.system_type_id = t.user_type_id
WHERE object_id = object_id('prTest')</pre></div></div>

<p>Here is the same output as with INFORMATION_SCHEMA.parameters</p>
<div class="tables">
<table>
<tr>
<th>parameter_name</th>
<th>ordinal_position</th>
<th>parameter_mode</th>
<th>data_type </th>
</tr>
<tr>
<td>@id</td>
<td>1</td>
<td>IN</td>
<td>int</td>
</tr>
<tr>
<td>@SomeDate</td>
<td>2</td>
<td>IN</td>
<td>date</td>
</tr>
<tr>
<td>@Somechar</td>
<td>3</td>
<td>INOUT</td>
<td>char</td>
</tr>
</table>
</div>
<p>I think INFORMATION_SCHEMA.parameters is a little easier to use, another benefit is that INFORMATION_SCHEMA.parameters also exists on other platforms</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/getting-the-list-of-parameters/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
