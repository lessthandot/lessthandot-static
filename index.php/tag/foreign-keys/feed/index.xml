<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>foreign keys &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/foreign-keys/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>SQL Advent 2012 Day 16: Lack of database design and normalization</title>
		<link>/index.php/datamgmt/datadesign/lack-of-database-design-and/</link>
		<comments>/index.php/datamgmt/datadesign/lack-of-database-design-and/#respond</comments>
		<pubDate>Sun, 16 Dec 2012 12:55:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[foreign keys]]></category>
		<category><![CDATA[normal form]]></category>
		<category><![CDATA[normalization]]></category>
		<category><![CDATA[referential integrity]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2012/12/lack-of-database-design-and/</guid>
		<description><![CDATA[This is day sixteen of the SQL Advent 2012 series of blog posts. Today we are going to look at the lack of database design and normalization.

Normalize untill it hurts, denormalize until it works]]></description>
				<content:encoded><![CDATA[<p>This is day sixteen of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. Today we are going to look at the lack of database design and normalization. Normalization and database design is a big enough topic that there are 500 page plus books written about it. This post will barely scratch the surface, if you want to know more about this topic pick up a book about it. <a href="http://www.amazon.com/gp/product/143020866X/002-3562882-4309664?ie=UTF8&amp;tag=sql08-20&amp;linkCode=xm2&amp;camp=1789&amp;creativeASIN=143020866X">Pro SQL Server 2008 Relational Database Design and Implementation</a> is one that I recommend. I did an interview with the author here: <a href="/index.php/DataMgmt/DataDesign/interview-with-louis-davidson-author-of-">Interview With Louis Davidson Author of Pro SQL Server 2008 Relational Database Design and Implementation</a></p>
<h1>Normalize until it hurts, denormalize until it works</h1>
<p>So what is normalization? Normalization is the process of organizing the columns and tables of a relational database to minimize redundancy and dependency. Normalization usually involves dividing large tables into smaller (and less redundant) tables and defining relationships between them. The objective is to isolate data so that additions, deletions, and modifications of a field can be made in just one table and then propagated through the rest of the database via the defined relationships.</p>
<p>Let&#8217;s take a look at a simple example. Let&#8217;s say we have a book store and we want to capture the book title, the date the book was published as well as the author. We are keeping this very simple so no ISBN or publisher or any additional information.</p>
<p>You might come up with a table like this right?</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Books <span class="br0">&#40;</span>BookdId <span class="kw1">int</span>, Title <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, PublishDate <span class="kw1">datetime</span>, Author <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE Books (BookdId int, Title varchar(100), PublishDate datetime, Author varchar(100))
GO</pre></div></div>

<p>One of the problems is that if an author wrote more than one book, the author will be stored in that table more than once. What it the authot is a woman and she gets married and decided to change her name, how will you know this is the same person?</p>
<p>Let&#8217;s drop that table since we are going to recreate it</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TABLE</span> Books
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TABLE Books
GO</pre></div></div>

<p>Now, let&#8217;s create two tables, we are going to create an Author table and a Books table. The Author table will hold the AuthotID, the last name as well as the first name. Now we can use the AuthorID and store that in the Books table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">Create</span> <span class="kw1">Table</span> Authors <span class="br0">&#40;</span>AuthorID <span class="kw1">int</span>, FirstName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, LastName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Books <span class="br0">&#40;</span>BookdId <span class="kw1">int</span>, Title <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, PublishDate <span class="kw1">datetime</span>, AuthorID <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Create Table Authors (AuthorID int, FirstName varchar(100), LastName varchar(100))
GO

CREATE TABLE Books (BookdId int, Title varchar(100), PublishDate datetime, AuthorID int)
GO</pre></div></div>

<p>So what is the problem with this so called design? Ever heard of a book that had more than one author? Of course you have there are many of those, this is especially true with technical books.</p>
<p>Let&#8217;s drop those tables since we are going to recreate it.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">DROP</span> <span class="kw1">TABLE</span> Books, Authors
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">DROP TABLE Books, Authors
GO</pre></div></div>

<p>Now what we have to add is a third table, this table will have just two columns, the BookID and the AuthorID, now you can handle many authors per book without a problem. The AuthorID column will now be eliminated from the Books table as well.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
</pre></td><td class="de1"><pre class="de1"><span class="kw1">Create</span> <span class="kw1">Table</span> Authors <span class="br0">&#40;</span>AuthorID <span class="kw1">int</span>, FirstName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, LastName <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> Books <span class="br0">&#40;</span>BookdId <span class="kw1">int</span>, Title <span class="kw1">varchar</span><span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span>, PublishDate <span class="kw1">datetime</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">CREATE</span> <span class="kw1">TABLE</span> BookAuthors<span class="br0">&#40;</span>BookdId <span class="kw1">int</span>,AuthorID <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Create Table Authors (AuthorID int, FirstName varchar(100), LastName varchar(100))
GO

CREATE TABLE Books (BookdId int, Title varchar(100), PublishDate datetime)
GO

CREATE TABLE BookAuthors(BookdId int,AuthorID int)
GO</pre></div></div>

<p>What else are we missing? How about some primary keys and foreign keys. We are going to make BookID and AuthorID a primary key. Those two columns will also be a foreign key in the BookAuthors tables. Since an author can&#8217;t write the same book twice, we will also make the combination of BookID and AuthorID a primary key in the BookAuthors table</p>
<p>Here is what you will end up with</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SimpleDB.PNG?mtime=1355567856"><img alt="" src="/wp-content/uploads/blogs/DataMgmt/Denis/ADvent/SimpleDB.PNG?mtime=1355567856" width="499" height="304" /></a></div>
<p>Now, here is the code to add the primary keys and foreign keys to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">Books</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; PK_Books <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">CLUSTERED</span> 
&nbsp; &nbsp; <span class="br0">&#40;</span>BookdID<span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span>
&nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.Books ADD CONSTRAINT
	PK_Books PRIMARY KEY CLUSTERED 
	(BookdID) ON [PRIMARY]

GO</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">BookAuthors</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; PK_BookAuthors <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">CLUSTERED</span> 
&nbsp; &nbsp; <span class="br0">&#40;</span>BookdID,AuthorID<span class="br0">&#41;</span> &nbsp;<span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span>
&nbsp;
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.BookAuthors ADD CONSTRAINT
	PK_BookAuthors PRIMARY KEY CLUSTERED 
	(BookdID,AuthorID)  ON [PRIMARY]

GO</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">Authors</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; PK_Authors <span class="kw1">PRIMARY</span> <span class="kw1">KEY</span> <span class="kw1">CLUSTERED</span> 
&nbsp; &nbsp; <span class="br0">&#40;</span>AuthorID<span class="br0">&#41;</span> <span class="kw1">ON</span> <span class="br0">&#91;</span><span class="kw1">PRIMARY</span><span class="br0">&#93;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.Authors ADD CONSTRAINT
	PK_Authors PRIMARY KEY CLUSTERED 
	(AuthorID) ON [PRIMARY]</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>BookAuthors<span class="br0">&#93;</span> &nbsp;<span class="kw1">WITH</span> <span class="kw1">CHECK</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_BookAuthors_Authors<span class="br0">&#93;</span> <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span><span class="br0">&#40;</span><span class="br0">&#91;</span>AuthorID<span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="kw1">REFERENCES</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Authors<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>AuthorID<span class="br0">&#93;</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>BookAuthors<span class="br0">&#93;</span> <span class="kw1">CHECK</span> <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_BookAuthors_Authors<span class="br0">&#93;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE [dbo].[BookAuthors]  WITH CHECK ADD  CONSTRAINT [FK_BookAuthors_Authors] FOREIGN KEY([AuthorID])
REFERENCES [dbo].[Authors] ([AuthorID])
GO

ALTER TABLE [dbo].[BookAuthors] CHECK CONSTRAINT [FK_BookAuthors_Authors]
GO</pre></div></div>


<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>BookAuthors<span class="br0">&#93;</span> &nbsp;<span class="kw1">WITH</span> <span class="kw1">CHECK</span> <span class="kw1">ADD</span> &nbsp;<span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_BookAuthors_Books<span class="br0">&#93;</span> <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span><span class="br0">&#40;</span><span class="br0">&#91;</span>BookdID<span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="kw1">REFERENCES</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>Books<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span>BookdID<span class="br0">&#93;</span><span class="br0">&#41;</span>
GO
&nbsp;
<span class="kw1">ALTER</span> <span class="kw1">TABLE</span> <span class="br0">&#91;</span>dbo<span class="br0">&#93;</span>.<span class="br0">&#91;</span>BookAuthors<span class="br0">&#93;</span> <span class="kw1">CHECK</span> <span class="kw1">CONSTRAINT</span> <span class="br0">&#91;</span>FK_BookAuthors_Books<span class="br0">&#93;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE [dbo].[BookAuthors]  WITH CHECK ADD  CONSTRAINT [FK_BookAuthors_Books] FOREIGN KEY([BookdID])
REFERENCES [dbo].[Books] ([BookdID])
GO

ALTER TABLE [dbo].[BookAuthors] CHECK CONSTRAINT [FK_BookAuthors_Books]
GO</pre></div></div>

<p>That is a lot of code, this is where modeling tools come in handy. You can use the diagramming tool in SQL Server Management Studio but it is not full feature like the ones below.</p>
<p>CA <a href="http://erwin.com/products/data-modeler/standard-edition">ERwin Data Modeler</a><br />
SAP (Sybase) <a href="http://www.sybase.com/products/modelingdevelopment/powerdesigner">PowerDesigner</a><br />
Embarcadero <a href="http://www.embarcadero.com/products/er-studio">ER/Studio</a><br />
IBM <a href="http://www-01.ibm.com/software/awdtools/systemarchitect/">Rational Systems Architect</a><br />
Dell Quest <a href="http://www.quest.com/toad/http://www.quest.com/toad/">TOAD</a></p>
<p>I have used ERwin  and Visio in the past but use PowerDesigner these days.</p>
<p>Now how would you handle the name change for the author? You can introduce another table where you would have first and last name together with start and end dates, this now enables you to still have the author being one author for reporting purposes but you can now still represent the name correctly for a specific point in time. Another example of this would be the stock market, companies will change the ticker, Sun Microsystem change the ticker from SUNW to JAVA, sometimes they change the name as well, Apple dropped Computers from the name. You still want this to be the same company so you won&#8217;t just add another row otherwise how would you do historical charting?</p>
<p>This is also why I like keys that don&#8217;t have meaning, these are called surrogate keys, now when you change everything in the row it doesn&#8217;t matter. I once worked with a system where&#8230;are you ready for this&#8230;&#8230;the primary key was the social security number, this key was then also used as a foreign key in another ten tables. Of course  some people would be reluctant to give their real social security number, they made up a number. Now the person with the real number signed up and couldn&#8217;t he would call customer support, they would track down the person with the fake number and now the SSN had to be changed in over 10 tables, since we didn&#8217;t have cascade update turned on, this had to be handled manually (and of course make sure to highlight the WHERE clause otherwise you are toast)</p>
<p>Remember how we had that BookAuthors junction/lookup table? Sometimes you will actually see a comma delimited list of IDs in a varchar column. This is not the way to store more than one author for a book. This looks easier from an application point of view (however I disagree even here) but now you have to write some kind of row to column user defined function if you want to show all authors. Performance is also going to be a dud, an index can&#8217;t be used since your WHERE clause is not <a href="/index.php/DataMgmt/DBProgramming/sargable-queries">sargable</a>.</p>
<p><strong>Unnormalized database</strong><br />
This is a database which was never normalized to begin with </p>
<p><strong>Denormalized database</strong><br />
A denormalized database is a database that was normalized but some parts have been denormalized for performance or maintenance reasons</p>
<p><strong>For you to research/lookup</strong></p>
<p><strong>Keys</strong><br />
There are many types of keys, some of them are just synonyms, here are some of them:  Candidate Key, Surrogate Key, Superkey, Natural Key, Alternate Key, Compound Key</p>
<p><strong>Normal form</strong><br />
Like I said at the beginning of the post there many more things to this topic than covered here. I did not talk about normal form at all, make sure that you research what all of these mean</p>
<p>1NF	First normal form<br />
2NF	Second normal form<br />
3NF	Third normal form<br />
EKNF	Elementary Key Normal Form<br />
BCNF	Boyce–Codd normal form<br />
4NF	Fourth normal form<br />
5NF	Fifth normal form<br />
DKNF	Domain/key normal form<br />
6NF	Sixth normal form</p>
<p>That is all for day sixteen of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/lack-of-database-design-and/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>SQL Advent 2012 Day 8: Foreign Keys</title>
		<link>/index.php/datamgmt/dbprogramming/foreign-keys/</link>
		<comments>/index.php/datamgmt/dbprogramming/foreign-keys/#comments</comments>
		<pubDate>Sat, 08 Dec 2012 15:17:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Business Intelligence]]></category>
		<category><![CDATA[Database Administration]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[constraints]]></category>
		<category><![CDATA[data integrity]]></category>
		<category><![CDATA[foreign keys]]></category>
		<category><![CDATA[sql advent 2012]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2008 r2]]></category>
		<category><![CDATA[sql server 2012]]></category>
		<category><![CDATA[ssms]]></category>

		<guid isPermaLink="false">/index.php/2012/12/foreign-keys/</guid>
		<description><![CDATA[This is day eight of the SQL Advent 2012 series of blog posts. Today we are going to look at foreign keys

  
That is all for day eight of the SQL Advent 2012 series, come back tomorrow for the next one, you can also check out all the posts from last&#8230;]]></description>
				<content:encoded><![CDATA[<p>This is day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a> of blog posts. In yesterday&#8217;s post <a href="/index.php/DataMgmt/DBAdmin/MSSQLServerAdmin/lack-of-constraints">SQL Advent 2012 Day 7: Lack of constraints</a> we touched a little upon foreign key constraints but today we are going to take a closer look at foreign keys. The two things that we are going to cover are the fact that you don&#8217;t need a primary key in order to define a foreign key relationship, SQL Server by default will not index foreign keys</p>
<h2>You don&#8217;t need a primary key in order to have a foreign key</h2>
<p>Most people will define a foreign key relationship between the foreign key and a primary key. You don&#8217;t have to have a primary key in order to have a foreign key, if you have a unique index or a unique constraint then those can be used as well. Let&#8217;s take a look at what that looks like with some code examples</p>
<p><strong>A foreign key with a unique constraint instead of a primary key</strong><br />
First create a table to which we will add a unique constraint after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueConstraint(id int)
GO</pre></div></div>

<p>Add a unique constraint to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again, this should fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueConstraint <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueConstraint VALUES(1)
GO</pre></div></div>

<p><em>Msg 2627, Level 14, State 1, Line 2<br />
Violation of UNIQUE KEY constraint &#8216;ix_unique&#8217;. Cannot insert duplicate key in object &#8216;dbo.TestUniqueConstraint&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignConstraint<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignConstraint(id int)
GO</pre></div></div>

<p>Add the foreign key to the table</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignConstraint</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignConstraint_TestUniqueConstraint <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueConstraint</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignConstraint ADD CONSTRAINT
	FK_TestForeignConstraint_TestUniqueConstraint FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueConstraint(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(1)
INSERT TestForeignConstraint  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignConstraint &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignConstraint  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignConstraint_TestUniqueConstraint&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueConstraint&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueConstraint table</p>
<p><strong>A foreign key with a unique index instead of a primary key</strong><br />
This section will be similar to the previous section, the difference is that we will use a unique index instead of a unique constraint</p>
<p>First create a table to which we will add a unique index after creation</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestUniqueIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestUniqueIndex(id int)
GO</pre></div></div>

<p>Add the unique index</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">UNIQUE</span> <span class="kw1">NONCLUSTERED</span> <span class="kw1">INDEX</span> ix_unique <span class="kw1">ON</span> TestUniqueIndex<span class="br0">&#40;</span>id<span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE UNIQUE NONCLUSTERED INDEX ix_unique ON TestUniqueIndex(id)
GO</pre></div></div>

<p>Insert a value of 1, this should succeed</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p>Insert a value of 1 again , this should now fail</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> &nbsp;TestUniqueIndex <span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT  TestUniqueIndex VALUES(1)
GO</pre></div></div>

<p><em>Msg 2601, Level 14, State 1, Line 2<br />
Cannot insert duplicate key row in object &#8216;dbo.TestUniqueIndex&#8217; with unique index &#8216;ix_unique&#8217;. The duplicate key value is (1).<br />
The statement has been terminated.</em></p>
<p>Now that we verified that we can&#8217;t have duplicates, it is time to create the table that will have the foreign key</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestForeignIndex<span class="br0">&#40;</span>id <span class="kw1">int</span><span class="br0">&#41;</span>
GO</pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestForeignIndex(id int)
GO</pre></div></div>

<p>Add the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> dbo.<span class="me1">TestForeignIndex</span> <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span>
&nbsp; &nbsp; FK_TestForeignIndex_TestUniqueIndex <span class="kw1">FOREIGN</span> <span class="kw1">KEY</span>
&nbsp; &nbsp; <span class="br0">&#40;</span>id<span class="br0">&#41;</span> <span class="kw1">REFERENCES</span> dbo.<span class="me1">TestUniqueIndex</span><span class="br0">&#40;</span>id<span class="br0">&#41;</span> </pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE dbo.TestForeignIndex ADD CONSTRAINT
	FK_TestForeignIndex_TestUniqueIndex FOREIGN KEY
	(id) REFERENCES dbo.TestUniqueIndex(id) </pre></div></div>

<p>Insert a value that exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(1)
INSERT TestForeignIndex  VALUES(1)</pre></div></div>

<p>Insert a value that does not exist in the table that is referenced by the foreign key constraint</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestForeignIndex &nbsp;<span class="kw1">VALUES</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestForeignIndex  VALUES(2)</pre></div></div>

<p><em>Msg 547, Level 16, State 0, Line 1<br />
The INSERT statement conflicted with the FOREIGN KEY constraint &#8220;FK_TestForeignIndex_TestUniqueIndex&#8221;. The conflict occurred in database &#8220;tempdb&#8221;, table &#8220;dbo.TestUniqueIndex&#8221;, column &#8216;id&#8217;.<br />
The statement has been terminated.</em></p>
<p>As you can see, you can&#8217;t insert the value 2 since it doesn&#8217;t exist in the TestUniqueIndex table</p>
<p>As you have seen with the code example, you can have a foreign key constraint that will reference a unique index or a unique constraint in addition to be able to reference a primary key</p>
<h2>Foreign keys are not indexed by default</h2>
<p>When you create a primary key, SQL Server will by default make that a clustered index. When you create a foreign key, there is no index created</p>
<p>Scroll up to where we added the unique constraint to the TestUniqueConstraint table, you will see this code</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">ALTER</span> <span class="kw1">TABLE</span> TestUniqueConstraint <span class="kw1">ADD</span> <span class="kw1">CONSTRAINT</span> ix_unique <span class="kw1">UNIQUE</span> <span class="br0">&#40;</span>id<span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">ALTER TABLE TestUniqueConstraint ADD CONSTRAINT ix_unique UNIQUE (id)</pre></div></div>

<p>All we did was add the constraint, SQL Server added the index behind the scenes for us in order to help enforce uniqueness more efficiently</p>
<p>Now run this query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestUniqueIndex'</span>,<span class="st0">'TestUniqueConstraint'</span><span class="br0">&#41;</span>
<span class="sy0">AND</span> name <span class="kw1">IS</span> <span class="sy0">NOT</span> <span class="sy0">NULL</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestUniqueIndex','TestUniqueConstraint')
AND name IS NOT NULL</pre></div></div>

<p>You will get these results</p>
<pre>TableName	        IndexName	StorageType
---------------------   -----------     --------------
TestUniqueConstraint	ix_unique	NONCLUSTERED
TestUniqueIndex	        ix_unique	NONCLUSTERED</pre>
<p>As you can see both tables have an index</p>
<p>Now let&#8217;s look at what the case is for the foreign key tables. Run the query below</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="kw1">as</span> TableName,
name <span class="kw1">as</span> IndexName, 
type_desc <span class="kw1">as</span> StorageType
<span class="kw1">FROM</span> sys.<span class="me1">indexes</span>
<span class="kw1">WHERE</span> <span class="kw2">OBJECT_NAME</span><span class="br0">&#40;</span><span class="kw2">object_id</span><span class="br0">&#41;</span> <span class="sy0">IN</span><span class="br0">&#40;</span><span class="st0">'TestForeignIndex'</span>,<span class="st0">'TestForeignConstraint'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT OBJECT_NAME(object_id) as TableName,
name as IndexName, 
type_desc as StorageType
FROM sys.indexes
WHERE OBJECT_NAME(object_id) IN('TestForeignIndex','TestForeignConstraint')</pre></div></div>

<p>Here are the results for that query</p>
<pre>TableName	      IndexName	StorageType
--------------------- --------- -------------
TestForeignConstraint	NULL	HEAP
TestForeignIndex	NULL	HEAP</pre>
<p>As you can see no indexes have been added to the tables. Should you add indexes? In order to answer that let&#8217;s see what would happen if you did add indexes. Joins would perform faster since it can traverse the index instead of the whole table to find the matching join conditions. Updates and deletes will be faster as well since the index can be used to find the foreign keys rows to update or delete (remember this depends if you specified CASCADE or NO ACTION when you create the foreign key constraint)<br />
So to answer the question, yes, I think you should index the foreign key columns</p>
<p>That is all for day eight of the <a href="/index.php/DataMgmt/DBProgramming/sql-advent-2012-here-is">SQL Advent 2012 series</a>, come back tomorrow for the next one, you can also check out all the posts from last year here: <a href="/index.php/DataMgmt/DataDesign/sql-advent-2011-recap">SQL Advent 2011 Recap</a></p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/dbprogramming/foreign-keys/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
