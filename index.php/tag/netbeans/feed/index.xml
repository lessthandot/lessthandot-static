<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>netbeans &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/netbeans/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Java Training Day 1</title>
		<link>/index.php/enterprisedev/appserver/jee/java-training-day-1/</link>
		<comments>/index.php/enterprisedev/appserver/jee/java-training-day-1/#respond</comments>
		<pubDate>Mon, 26 Nov 2012 19:22:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Application Lifecycle Management]]></category>
		<category><![CDATA[Java EE]]></category>
		<category><![CDATA[JBoss]]></category>
		<category><![CDATA[Websphere]]></category>
		<category><![CDATA[eclipse]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[maven]]></category>
		<category><![CDATA[netbeans]]></category>
		<category><![CDATA[oop]]></category>

		<guid isPermaLink="false">/index.php/2012/11/java-training-day-1/</guid>
		<description><![CDATA[Today is day one of the Java class I am taking this week. I am just dumping some of the stuff that I am hearing about, some of the stuff I might already know.
Java is a general purpose language, it is interperted, output is by&#8230;]]></description>
				<content:encoded><![CDATA[<p>Java Training Day 1<br />
&#8212;<br />
Today is day one of the Java class I am taking this week. I am just dumping some of the stuff that I am hearing about, some of the stuff I might already know.<br />
Java is a general purpose language, it is interperted, output is bytecode, you need to have a Java Virtual Machine on the target machine in order to run a Java program.<br />
A Java file gets compiled to a system-neutral format which is a class file and gets a .class extension, this is compressed and not really human readable</p>
<p>Classes are organized in a group called a package, a package is very similar to a .net namespace. You use this so that you don&#8217;t get collisions if you have two classes with the same name.</p>
<p>You use javadoc to generate standard formatted documentation.</p>
<p><strong>Java community process(JCP)</strong><br />
Formal community-driven process to drive the Java standard, the iste is http://jcp.org/</p>
<p>Deprecate, use annotation and then when you compile your class, you will get a warning so that you will know that you will need to rewrite that piece of the code.</p>
<p>Java is case sensitive, all reserved java keywords are lowercase</p>
<p>In a class the main routine is the start of a program<br />
The main routine will look like this</p>
<p>public static void main(String[] args) {&#8230;&#8230;.}</p>
<p>A java source file has to end in  .java, for example  MyClass.java this will produce a file called MyClass.class. you can&#8217;t have more than one public class in a source file, you cannot have partial classes like in .net either.</p>
<p>Java runs on top of the JVM, the JVM is different per operating system. No need to recompile Java&#8230;Write once run everywhere&#8230;.some people like to say write once&#8230;debug everywhere  <img src="https://s.w.org/images/core/emoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong>Java versions and flavors</strong><br />
Java 1.0, 1.1<br />
Java 2 	1.2, 1.3, 1.4, 1.5<br />
Java 5  also sometimes called 1.5, 1.5 is when they shifted to integers again<br />
Java 6<br />
Java 7</p>
<p>The different flavors of Java and their old and new names<br />
J2SE  	Java SE<br />
J2EE	Java EE<br />
J2ME	Java ME</p>
<p><strong>Base libraries to provide common functionality</strong><br />
Here are just some of them</p>
<p>java.lang<br />
java.lang contains fundamental classes and interfaces closely tied to the language and runtime system.</p>
<p>java.io/java.nio/java.net<br />
I/O and networking access the platform file system, and more generally networks through the java.io, java.nio and java.net packages. </p>
<p>java.math<br />
Mathematics package: java.math provides mathematical expressions and evaluation, as well as arbitrary-precision decimal and integer number datatypes.</p>
<p>java.text<br />
Text: java.text deals with text, dates, numbers, and messages.</p>
<p>javax.crypto<br />
Security is provided by java.security and encryption services are provided by javax.crypto.</p>
<p>java.sql<br />
Databases: access to SQL databases via java.sql</p>
<p>java.beans<br />
Java Beans: java.beans provides ways to manipulate reusable components.</p>
<p><strong>Types of Java Software</strong><br />
Class Libraries<br />
Standalone Java<br />
Applets<br />
Servlets, JSP and tag libraries<br />
Enterprise Java Beans</p>
<p><strong>Enterprise Application Servers</strong><br />
Here are a couple of Java Enterprise Application Servers and their vendors<br />
GlassFish	Oracle/Sun<br />
Weblogic	Oracle/BEA<br />
Webshere	IBM<br />
JBoss		Red Hat</p>
<p><strong>Environment variables</strong><br />
Oh how I used to hate dealing with these variables, stuff wouldn&#8217;t work if this wasn&#8217;t setup correctly<br />
There are a couple of environment variables that you need</p>
<p><strong>JAVA_HOME</strong><br />
This will be use by the tools in the JDK</p>
<p><strong>PATH</strong><br />
This is used by the operating system to find the compiler and other programs, add the/bin directory</p>
<p><strong>CLASSPATH</strong><br />
This is used by the Java Virtual Machine to find application specific classes at compile as well as run time</p>
<p><strong>JDK Bin directory</strong><br />
THe JDK Bin directory holds all the programs used by the JDK to do what is needed for Java to function<br />
There are programs to compile java, to run java, to create JAR files, to create javadoc documentation files etc etc<br />
Mine is installed here C:Program FilesJavajdk1.7.0_07bin</p>
<p>Here is screenshot of my directory with some of those programs</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/JavaBinDirectory.PNG?mtime=1353948732"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/JavaBinDirectory.PNG?mtime=1353948732" width="795" height="635" /></a></div>
<p>There is something called jvisualvm.exe, this is know as Java VisualVM, from the Oracle documentation: http://docs.oracle.com/javase/6/docs/technotes/tools/share/jvisualvm.html<br />
Java VisualVM is an intuitive graphical user interface that provides detailed information about Java technology-based applications (Java applications) while they are running on a given Java Virtual Machine (JVM*). The name Java VisualVM comes from the fact that Java VisualVM provides information about the JVM software visually.</p>
<p>Java VisualVM combines several monitoring, troubleshooting, and profiling utilities into a single tool. For example, most of the functionality offered by the standalone tools jmap, jinfo, jstat and jstack have been integrated into Java VisualVM. Other functionalities, such as some of those offered by the JConsole tool, can be added as optional plug-ins.</p>
<p>Here are some screenshots of the tool in action while running against Eclipse</p>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMMonitor.PNG?mtime=1353948863"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMMonitor.PNG?mtime=1353948863" width="929" height="579" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreads.PNG?mtime=1353948850"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreads.PNG?mtime=1353948850" width="919" height="581" /></a></div>
<div class="image_block"><a href="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreadsTable.PNG?mtime=1353948837"><img alt="" src="/wp-content/uploads/blogs/EnterpriseDev/VisualVMThreadsTable.PNG?mtime=1353948837" width="930" height="594" /></a></div>
<p>Always include . as part of the classpath, this ensure that the current directory is searched in case of a default package</p>
<p><strong>JAR</strong><br />
Java Archive, this is an archived file holding all the classes and a manifest describing what is in the archive</p>
<p>There are related files that are used based on the type of application, here is what info wikipedia has listed</p>
<p>WAR (Web application archive) files, also Java archives, store XML files, Java classes, JavaServer Pages and other objects for Web Applications.<br />
RAR (resource adapter archive) files (not to be confused with the RAR file format), also Java archives, store XML files, Java classes and other objects for J2EE Connector Architecture (JCA) applications.<br />
EAR (enterprise archive) files provide composite Java archives which combine XML files, Java classes and other objects including JAR, WAR and RAR Java archive files for Enterprise Applications.<br />
SAR (service archive) is similar to EAR. It provides a service.xml file and accompanying JAR files.<br />
APK (Android Application Package), a variant of the Java archive format, is used for Android applications.[3]</p>
<p>We compiled and ran some programs from the command line, it is amazing how many people have problems with the path and classpath variables to get it to work&#8230;but we all did and now we are allowed to use Eclipese or Netbeans instead</p>
<p><strong>Javadoc comments</strong><br />
We looked at how to do javadoc comments, basically the first line has to start with /**</p>
<p>There are also tags that you can use, it is recommended to use this order</p>
<p>@author (classes and interfaces only, required)<br />
@version (classes and interfaces only, required. See footnote 1)<br />
@param (methods and constructors only)<br />
@return (methods only)<br />
@exception (@throws is a synonym added in Javadoc 1.2)<br />
@see<br />
@since<br />
@serial (or @serialField or @serialData)<br />
@deprecated (see How and When To Deprecate APIs)</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="java"><thead><tr><td colspan="2"  class="head">Java</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="de1"><pre class="de1">Here is an example
&nbsp;
&nbsp; &nbsp;<span class="co3">/**</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* Disposes of this graphics context once it is no longer </span>
<span class="co3">&nbsp; &nbsp; &nbsp;* referenced.</span>
<span class="co3">&nbsp; &nbsp; &nbsp;*</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* @see &nbsp; &nbsp; &nbsp; #dispose()</span>
<span class="co3">&nbsp; &nbsp; &nbsp;* @since &nbsp; &nbsp; 1.0</span>
<span class="co3">&nbsp; &nbsp; &nbsp;*/</span>
&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> finalize<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp; &nbsp; &nbsp; &nbsp; dispose<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp; &nbsp; <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">Here is an example

   /**
     * Disposes of this graphics context once it is no longer 
     * referenced.
     *
     * @see       #dispose()
     * @since     1.0
     */
    public void finalize() {
        dispose();
    }
}</pre></div></div>

<p><strong>Identifiers</strong><br />
Can have letters and numbers, cannot begin with a digit</p>
<p>The reason most programming language don&#8217;t allow identifiers to start with a digit is simple</p>
<p>int 6;<br />
6=5;</p>
<p>See that? Since an identifier can be 1 character, you could create something named 5 or 6 or even 256, this rule prevents you doing such stuff</p>
<p>Variables can me made constant by using the final keyword for example</p>
<p>final int MAX_VALUE = 40;</p>
<p>You can also do this<br />
final int BOILING_POINT;<br />
BOILING_POINT; = 100;</p>
<p>Once you assign the value, you can&#8217;t change BOILING_POINT anymore</p>
<p>We learned about scope and learned that depending on where the variable is declared, it might not be visible outside of the block, this is the same as in other languages (local variables)</p>
<p>When you want to have only one copy of a class variable, make it static, then if you instatiate 100 classes they all point to the same variable instead of having 100 variables in memory<br />
Static variables are available to use as soon as a class is loaded</p>
<p>Brain fried&#8230;&#8230;time to go&#8230;&#8230;..  back tomorrow</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/jee/java-training-day-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Back to Java after an eleven year hiatus, what are some good resources you recommend?</title>
		<link>/index.php/enterprisedev/appserver/jee/back-to-java-after-an/</link>
		<comments>/index.php/enterprisedev/appserver/jee/back-to-java-after-an/#respond</comments>
		<pubDate>Sun, 25 Nov 2012 22:34:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[BEA WebLogic and Aqualogic]]></category>
		<category><![CDATA[Java EE]]></category>
		<category><![CDATA[Websphere]]></category>
		<category><![CDATA[eclipse]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[maven]]></category>
		<category><![CDATA[netbeans]]></category>

		<guid isPermaLink="false">/index.php/2012/11/back-to-java-after-an/</guid>
		<description><![CDATA[This week eleven coworkers and myself will be in Java training for most of the time, I haven't touched Java since 2001. I did a bunch of research over the 4 day weekend to get a little head start.

I installed Netbeans and Eclipse to see how they are&#8230;]]></description>
				<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/mrjoro/22752982/" title="Java Logo by mrjoro, on Flickr"><img src="http://farm1.staticflickr.com/17/22752982_28bfc98f68_m.jpg" width="240" height="180" alt="Java Logo" /></a></p>
<p>This week eleven coworkers and myself will be in Java training for most of the time, I haven&#8217;t touched Java since 2001. I did a bunch of research over the 4 day weekend to get a little head start.</p>
<p>I installed Netbeans and Eclipse to see how they are different<br />
I played around with Tapestry and took a look at Struts<br />
I used JUnit to write a couple of tests<br />
I installed Maven and used that to bring down the sample Tapestry project<br />
I installed and configured HyperSQL (with sa and blank password&#8230;  ouch!!!)</p>
<p>It seems to me that there are a whole lot of things that I need to know, twelve years ago none of this stuff existed. I also seems to me that the language itself hasn&#8217;t changed so much compared to C#. I might also take a look at Scala down the road, some of that stuff seems interesting. </p>
<p>When I used Java in 2000 and 2001 it was primarily to do JSP development. The main project at that time was converting a ColdFusion site to JSP. The IDE that we used at that time was Kawa, we also gave Visual Cafe a spin. I must say that the IDE is much much better than what existed twelve years ago. Eclipse has a robust plugin system and computers have advanced in speed over the past twelve years so that Java apps don&#8217;t feels slow on the desktop anymore</p>
<p>Over the next five days, I will blog about what I did and learned, I will also probably put some stuff on our wiki so that I can have it as a reference/cheat sheet</p>
<p>Here is my question to you&#8230;..What are some of your favorite resources for Java and the Java ecosystem? I am looking for blogs to subscribe to, people to follow on twitter, if you have a favorite Java book then tell me about it. My favorite books from 2001 were Core Java, Volume I and II, I am happy to see that the 9th edition is coming out on December 10th: <a href="http://www.amazon.com/gp/product/0137081898/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0137081898&amp;linkCode=as2&amp;tag=sql08-20">Core Java Volume I&#8211;Fundamentals (9th Edition) (Core Series)</a>. If you know of any good podcasts then tell me about those as well</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/jee/back-to-java-after-an/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Oracle Details Its Plans For MySQL, Java, Virtualization, NetBeans, Glassfish, OpenOffice And Open Source</title>
		<link>/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/</link>
		<comments>/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/#comments</comments>
		<pubDate>Sat, 31 Oct 2009 09:50:45 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Java EE]]></category>
		<category><![CDATA[glassfish]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[mysql]]></category>
		<category><![CDATA[netbeans]]></category>
		<category><![CDATA[open source]]></category>
		<category><![CDATA[openoffice]]></category>
		<category><![CDATA[oracle]]></category>
		<category><![CDATA[sun]]></category>
		<category><![CDATA[virtualization]]></category>

		<guid isPermaLink="false">/index.php/2009/10/oracle-details-its-plans-for-mysql-java/</guid>
		<description><![CDATA[Oracle has updated the Sun Acquisition FAQ. The FAQ now has Oracle's plans for MySQL, Java, Virtualization, NetBeans, Glassfish, OpenOffice, Open Source and other things.

Below are the relevant pieces from that document.

What are Oracle’s plans fo&#8230;]]></description>
				<content:encoded><![CDATA[<p>Oracle has updated the <a href="http://www.oracle.com/us/sun/038563.pdf">Sun Acquisition FAQ</a>. The FAQ now has Oracle&#8217;s plans for MySQL, Java, Virtualization, NetBeans, Glassfish, OpenOffice, Open Source and other things.</p>
<p>Below are the relevant pieces from that document.</p>
<p><strong>What are Oracle’s plans for the GlassFish Enterprise (Java<br />
EE) Server after the transaction closes?</strong><br />
Oracle plans to continue evolving GlassFish Enterprise Server, delivering<br />
it as the open source reference implementation (RI) of the Java Enterprise<br />
Edition (Java EE) specifications, and actively supporting the large GlassFish<br />
community.  Additionally, Oracle plans to invest in aligning common<br />
infrastructure components and innovations from Oracle WebLogic Server<br />
and GlassFish Enterprise Server to benefit both Oracle WebLogic Server and<br />
GlassFish Enterprise Server customers.</p>
<p><strong>What are Oracle’s plans for NetBeans?</strong><br />
Oracle has a strong track record of demonstrating commitment to choice for<br />
Java developers. As such, NetBeans is expected to provide an additional open<br />
source option and complement to the two free tools Oracle already offers for<br />
enterprise Java development: Oracle JDeveloper and Oracle Enterprise Pack for<br />
Eclipse. While Oracle JDeveloper remains Oracle’s strategic development tool<br />
for the broad portfolio of Oracle Fusion Middleware products and for Oracle’s<br />
next generation of enterprise applications, developers will be able to use<br />
whichever free tool they are most comfortable with for pure Java and Java EE<br />
development:  JDeveloper, Enterprise Pack for Eclipse, or NetBeans. </p>
<p><strong>What are Oracle’s plans for MySQL?</strong><br />
Oracle plans to spend more money developing MySQL than Sun does now.<br />
Oracle expects to continue to develop and provide the open source MySQL<br />
database after the transaction closes. Oracle plans to add MySQL to Oracle’s<br />
existing suite of database products, which already includes Berkeley DB, an<br />
open source database. Oracle also currently offers InnoDB, an open source<br />
transactional storage engine and the most important and popular transaction<br />
engine under MySQL. Oracle already distributes MySQL as part of our<br />
Enterprise Linux offering.</p>
<p><strong>What is Oracle’s plan for OpenOffice?</strong><br />
Oracle has a history of developing complete, integrated, and open products,<br />
making integration quicker and less costly for our customers. Based on the<br />
open ODF standard, OpenOffice is expected to create a compelling desktop<br />
integration bridge for our enterprise customers and offers consumers another<br />
choice on the desktop. After the transaction closes, Oracle plans to continue<br />
developing and supporting OpenOffice as open source. As before, some of<br />
the larger customers will ask for extra assurances, support, and enterprise<br />
tools. For these customers we expect to offer a typical commercial license<br />
option.</p>
<p><strong>How does Oracle support open source?</strong><br />
Oracle has long been committed to developing, supporting, and promoting<br />
open source. Oracle has been, and continues to be, committed to offering<br />
choice, flexibility, and a lower cost of computing for end users. Oracle<br />
has invested significant resources in developing, testing, optimizing and<br />
supporting open source technologies such as Linux, PHP, Apache, Eclipse,<br />
Berkeley DB, and InnoDB. Oracle continues to embrace and offer open source<br />
solutions as a viable choice for development and deployment. More information<br />
about Oracle’s support of open source can be found at<br />
oracle.com/opensource. </p>
<p><strong>Will Oracle continue Sun’s virtualization strategy?</strong><br />
Yes, Oracle plans to continue Sun’s “desktop to datacenter virtualization”<br />
strategy and integrate with Oracle’s virtualization products. By unifying<br />
management across desktop virtualization, server virtualization, storage<br />
virtualization, and network virtualization, Oracle and Sun provide<br />
comprehensive, flexible, eco-efficient solutions to maximize utilization,<br />
consolidate to reduce costs, increase productivity, and decrease management<br />
complexity. We expect to continue Sun’s desktop virtualization products:<br />
VDI, Secure Global Desktop, Sun Ray, and VirtualBox.</p>
<p><strong>Delivering increased investment and innovation in Java</strong><br />
Oracle plans to accelerate investment in the Java platform for the<br />
benefit of customers and the Java community. Java is one of the<br />
computer industry’s best-known brands and the Java platform is<br />
one of the industry’s most widely deployed technologies. Oracle has<br />
been a leader in the Java community since the inception of the Java<br />
programming language and already has the world’s largest investment<br />
in the Java platform, which provides the foundation for its Oracle<br />
Fusion Middleware products and its next-generation enterprise<br />
applications.<br />
Oracle plans to not only broaden and accelerate its own investment in the<br />
Java platform, but also plans to increase the commitment to the community<br />
that helps make Java an ubiquitous, innovative platform unified around<br />
open standards. </p>
<p>So what do you think, is there still a reason to fear what will happen to these technologies after this deal closes?</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/enterprisedev/appserver/jee/oracle-details-its-plans-for-mysql-java/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
	</channel>
</rss>
