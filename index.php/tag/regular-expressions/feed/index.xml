<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>regular expressions &#8211; LessthanDot</title>
	<atom:link href="/index.php/tag/regular-expressions/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>A Technical Community for IT Professionals</description>
	<lastBuildDate>Sat, 09 Mar 2019 12:50:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>How to search for data with underscores or brackets in SQL Server?</title>
		<link>/index.php/datamgmt/datadesign/how-to-search-for-data/</link>
		<comments>/index.php/datamgmt/datadesign/how-to-search-for-data/#comments</comments>
		<pubDate>Wed, 02 May 2012 14:07:00 +0000</pubDate>
		<dc:creator><![CDATA[SQLDenis]]></dc:creator>
				<category><![CDATA[Data Modelling and Design]]></category>
		<category><![CDATA[Database Programming]]></category>
		<category><![CDATA[Microsoft SQL Server]]></category>
		<category><![CDATA[Microsoft SQL Server Admin]]></category>
		<category><![CDATA[like]]></category>
		<category><![CDATA[regular expressions]]></category>
		<category><![CDATA[s ql server 2005]]></category>
		<category><![CDATA[sql server 2000]]></category>
		<category><![CDATA[sql server 2008]]></category>
		<category><![CDATA[sql server 2012]]></category>

		<guid isPermaLink="false">/index.php/2012/05/how-to-search-for-data/</guid>
		<description><![CDATA[You can search for data in your tables by using the LIKE operator. The LIKE operator determines whether a specific character string matches a specified pattern. A pattern can include regular characters and wildcard characters.

Here is what Book On Li&#8230;]]></description>
				<content:encoded><![CDATA[<p>You can search for data in your tables by using the LIKE operator. The LIKE operator determines whether a specific character string matches a specified pattern. A pattern can include regular characters and wildcard characters.</p>
<p>Here is what Books On Line has on the use of wild cards</p>
<div class="tables">
<table>
<tr>
<th>
<p>Wildcard character</p>
</th>
<th>
<p>Description</p>
</th>
<th>
<p>Example</p>
</th>
</tr>
<tr>
<td>
<p>%</p>
</td>
<td>
<p>Any string of zero or more characters.</p>
</td>
<td>
<p>WHERE title LIKE &#8216;%computer%&#8217; finds all book titles with the word &#8216;computer&#8217; anywhere in the book title.</p>
</td>
</tr>
<tr>
<td>
<p>_ (underscore)</p>
</td>
<td>
<p>Any single character.</p>
</td>
<td>
<p>WHERE au_fname LIKE &#8216;_ean&#8217; finds all four-letter first names that end with ean (Dean, Sean, and so on).</p>
</td>
</tr>
<tr>
<td>
<p>[ ]</p>
</td>
<td>
<p>Any single character within the specified range ([a-f]) or set ([abcdef]).</p>
</td>
<td>
<p>WHERE au_lname LIKE &#8216;[C-P]arsen&#8217; finds author last names ending with arsen and starting with any single character between C and P, for example Carsen, Larsen, Karsen, and so on. In range searches, the characters included in the range may vary depending on the sorting rules of the collation.</p>
</td>
</tr>
<tr>
<td>
<p>[^]</p>
</td>
<td>
<p>Any single character not within the specified range ([^a-f]) or set ([^abcdef]).</p>
</td>
<td>
<p>WHERE au_lname LIKE &#8216;de[^l]%&#8217; all author last names starting with de and where the following letter is not l.</p>
</td>
</tr>
</table></div>
<p>Let&#8217;s take a look at some examples, first create this table and insert some data.</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
7
8
9
</pre></td><td class="de1"><pre class="de1"><span class="kw1">CREATE</span> <span class="kw1">TABLE</span> TestLike <span class="br0">&#40;</span>SomeCol <span class="kw1">VARCHAR</span><span class="br0">&#40;</span><span class="nu0">200</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
GO
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'12345'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'abd23bbb'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'abc_bb'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'abc______bb'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'zzzz'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'z0z0z0z0z0'</span><span class="br0">&#41;</span>
<span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'bla'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">CREATE TABLE TestLike (SomeCol VARCHAR(200))
GO
INSERT TestLike VALUES ('12345')
INSERT TestLike VALUES ('abd23bbb')
INSERT TestLike VALUES ('abc_bb')
INSERT TestLike VALUES ('abc______bb')
INSERT TestLike VALUES ('zzzz')
INSERT TestLike VALUES ('z0z0z0z0z0')
INSERT TestLike VALUES ('bla')</pre></div></div>

<p>So what happens if you do the following</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%_%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%_%'</pre></div></div>

<p>output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
12345<br />
abd23bbb<br />
abc_bb<br />
abc______bb<br />
zzzz<br />
z0z0z0z0z0<br />
bla</p>
<p>You get back everything. This is because in a regular expression, the underscore means any single character. In order to search for an underscore, you need to put it in brackets</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%[_]%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%[_]%'</pre></div></div>

<p>output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
abc_bb<br />
abc______bb</p>
<p>Let&#8217;s take a look at another example, what if you want to search for the left bracket [?</p>
<p>First insert the following row</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
</pre></td><td class="de1"><pre class="de1"><span class="kw1">INSERT</span> TestLike <span class="kw1">VALUES</span> <span class="br0">&#40;</span><span class="st0">'2222[2222'</span><span class="br0">&#41;</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">INSERT TestLike VALUES ('2222[2222')</pre></div></div>

<p>Now when you do something like this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%[%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%[%'</pre></div></div>

<p>Nothing is returned. You can however put the left bracket in brackets</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%[[]%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%[[]%'</pre></div></div>

<p>output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
2222[2222</p>
<p>Brackets are also required for ranges. If you want to return all the rows where any of characters is 2 or 3, you can&#8217;t do this</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%2-3%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%2-3%'</pre></div></div>

<p>You can surround that with brackets</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%[2-3]%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%[2-3]%'</pre></div></div>

<p>output<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
12345<br />
abd23bbb<br />
2222[2222</p>
<p>You can of course also use OR</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%2%'</span>
<span class="sy0">OR</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%3%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%2%'
OR SomeCol LIKE '%3%'</pre></div></div>

<p>But what if you want to expand that to check for a range between 2 and 6</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
3
4
5
6
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%2%'</span>
<span class="sy0">OR</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%3%'</span>
<span class="sy0">OR</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%4%'</span>
<span class="sy0">OR</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%5%'</span>
<span class="sy0">OR</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%6%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%2%'
OR SomeCol LIKE '%3%'
OR SomeCol LIKE '%4%'
OR SomeCol LIKE '%5%'
OR SomeCol LIKE '%6%'</pre></div></div>

<p>This way is much cleaner in my opinion</p>

<div class="bwp-syntax-block clearfix">
<div class="bwp-syntax-toolbar"><div class="bwp-syntax-control"><a href="javascript:;" class="bwp-syntax-source-switch" title="View Source Code"></a></div></div>
<div class="bwp-syntax-wrapper clearfix bwp-syntax-simple"><table class="tsql"><thead><tr><td colspan="2"  class="head">T-SQL</td></tr></thead><tbody><tr class="li1"><td class="ln"><pre class="de1">1
2
</pre></td><td class="de1"><pre class="de1"><span class="kw1">SELECT</span> <span class="sy0">*</span> <span class="kw1">FROM</span> TestLike
<span class="kw1">where</span> SomeCol <span class="sy0">LIKE</span> <span class="st0">'%[2-6]%'</span></pre></td></tr></tbody></table></div>
<div class="bwp-syntax-source"><pre class="no-parse">SELECT * FROM TestLike
where SomeCol LIKE '%[2-6]%'</pre></div></div>

<p>That is it for this post, check out the related post <a href="/index.php/DataMgmt/DBProgramming/sql-server-does-support-regular-expressi">SQL Server does support regular expressions in check constraints, triggers are not always needed</a> which also shows some regular expressions</p>
]]></content:encoded>
			<wfw:commentRss>/index.php/datamgmt/datadesign/how-to-search-for-data/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
